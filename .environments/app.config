[resilient]

cafile=false

host={{FYRE_CLUSTER_DOMAIN}}
org=Test Organization
email={{FYRE_CLUSTER_USER_EMAIL}}
password={{FYRE_CLUSTER_USER_PASSWORD}}
#api_key_id={{FYRE_CLUSTER_API_KEY_ID}}
#api_key_secret={{FYRE_CLUSTER_API_KEY_SECRET}}

port=443

# Number of attempts to retry when connecting to Resilient. 0 = unlimited retries
#max_connection_retries=10

#stomp_timeout=120
#stomp_max_retries=3

# Optional parameters for stomp connections.....
# Please refer to IBM Support for additional settings to those outlined below
# format......     stomp_params=<param1=value1>,<,param2=value2>
#stomp_params=startupMaxReconnectAttempts=3,maxReconnectAttempts=10,initialReconnectDelay=20

# Directory containing additional components to load
# componentsdir=components
# Existing directory to write logs to, or set with $APP_LOG_DIR
logdir=/tmp
logfile=app.log
loglevel=INFO

# The number of Functions to run concurrently (within the range: 1 <= 50)
num_workers=10

# If your Resilient server uses a self-signed TLS certificate, or some
# other certificate that is not automatically trusted by your machine,
# you need to explicitly tell the Python scripts that it should be trusted.
# If you don't want to use a cert you can set cafile=false.
# To explicitly trust a site, download its certificate to a file, e.g:
#    mkdir -p ~/.resilient
#    openssl s_client -connect resilient.example.com:443 -showcerts < /dev/null 2> /dev/null | openssl x509 -outform PEM > ~/.resilient/cert.cer
# then specify the file (remove the '#' from the line below):
#cafile=~/.resilient/cert.cer
cafile=false

[integrations]
# Use this section to configure options for all Apps that use resilient-lib within this environment

# Proxy settings
#http_proxy=http://example.com:3000
#https_proxy=https://example.com:3000

# Global setting for API call timeouts, 30 seconds is the current default
#timeout=30
