# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_url_void"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_url_void package"""
    reload_params = {"package": u"fn_url_void",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"artifact_value"], 
                    "datatables": [], 
                    "message_destinations": [u"url_void_message_destination"], 
                    "functions": [u"url_void_retrive_information"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_url_void_retrive_information"], 
                    "actions": [u"Example: URL Void Retrive Information"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     artifact_value
    #   Message Destinations:
    #     url_void_message_destination
    #   Functions:
    #     url_void_retrive_information
    #   Workflows:
    #     example_url_void_retrive_information
    #   Rules:
    #     Example: URL Void Retrive Information


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogImI2MWQ2ODFjLWFlMjEt
NDEyYy1iYWEzLTY1NGEwMjk2M2IwYSIsICJkZXNjcmlwdGlvbiI6ICJDYWxscyBVUkwgVm9pZCBS
ZXJpdmUgSW5mb3JtYXRpb24gZnVuY3Rpb24gdG8gcmV0dXJuIGluZm9ybWF0aW9uIGJhc2VkIG9u
IGEgdXJsIGZyb20gdGhlIFVSTCBWb2lkIGRhdGFiYXNlLiIsICJvYmplY3RfdHlwZSI6ICJhcnRp
ZmFjdCIsICJleHBvcnRfa2V5IjogImV4YW1wbGVfdXJsX3ZvaWRfcmV0cml2ZV9pbmZvcm1hdGlv
biIsICJ3b3JrZmxvd19pZCI6IDEwMSwgImxhc3RfbW9kaWZpZWRfYnkiOiAiYWRtaW5AY28zc3lz
LmNvbSIsICJjb250ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5n
PVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMv
QlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9z
cGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9z
cGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3Bl
Yy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJt
LmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFc
IiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwi
IHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNz
IGlkPVwiZXhhbXBsZV91cmxfdm9pZF9yZXRyaXZlX2luZm9ybWF0aW9uXCIgaXNFeGVjdXRhYmxl
PVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBVUkwgVm9pZCBSZXRyaXZlIEluZm9ybWF0aW9uXCI+
PGRvY3VtZW50YXRpb24+Q2FsbHMgVVJMIFZvaWQgUmVyaXZlIEluZm9ybWF0aW9uIGZ1bmN0aW9u
IHRvIHJldHVybiBpbmZvcm1hdGlvbiBiYXNlZCBvbiBhIHVybCBmcm9tIHRoZSBVUkwgVm9pZCBk
YXRhYmFzZS48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFz
eG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzE0bXhkbWs8L291dGdvaW5nPjwvc3RhcnRFdmVu
dD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xbTdleGIzXCIgbmFtZT1cIlVSTCBWb2lk
IFJldHJpdmUgSW5mb3JtYXRpb25cIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVu
c2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cIjY4MDk4NzRjLTcxOWQtNGEw
Ny1iZTc4LWJkNzA4MWQyYmJiYlwiPntcImlucHV0c1wiOnt9LFwicHJlX3Byb2Nlc3Npbmdfc2Ny
aXB0XCI6XCJpbnB1dHMuYXJ0aWZhY3RfdmFsdWUgPSBhcnRpZmFjdC52YWx1ZVwifTwvcmVzaWxp
ZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18x
NG14ZG1rPC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzBvd3RwZWs8L291dGdvaW5n
Pjwvc2VydmljZVRhc2s+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xNG14ZG1rXCIg
c291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tf
MW03ZXhiM1wiLz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wNnN6amRjXCI+PGluY29taW5nPlNl
cXVlbmNlRmxvd18wb3d0cGVrPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9
XCJTZXF1ZW5jZUZsb3dfMG93dHBla1wiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFtN2V4YjNc
IiB0YXJnZXRSZWY9XCJFbmRFdmVudF8wNnN6amRjXCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRl
eHRBbm5vdGF0aW9uXzFreHhpeXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3Rl
eHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4
XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90
YXRpb25fMWt4eGl5dFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8wMDUy
Y2hxXCI+PHRleHQ+SW5wdXQgYXJ0aWZhY3QgdXJsPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFz
c29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMTN6N3UzYlwiIHNvdXJjZVJlZj1cIlNlcnZpY2VU
YXNrXzFtN2V4YjNcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8wMDUyY2hxXCIvPjx0ZXh0
QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzB5b20wMzZcIj48dGV4dD5SZXBvcnQgZnJv
bSBVUkwgVm9pZCBkYXRhYmFzZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBp
ZD1cIkFzc29jaWF0aW9uXzFoNzdoYzhcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xbTdleGIz
XCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMHlvbTAzNlwiLz48L3Byb2Nlc3M+PGJwbW5k
aTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1u
RWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFw
ZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVh
c3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYy
XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBc
IiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5v
dGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRp
b25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2lu
dCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndh
eXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2Jw
bW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNr
XzFtN2V4YjNcIiBpZD1cIlNlcnZpY2VUYXNrXzFtN2V4YjNfZGlcIj48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMzA0XCIgeT1cIjE2NlwiLz48L2JwbW5kaTpC
UE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xNG14
ZG1rXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMTRteGRta19kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwi
MTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50
IHg9XCIzMDRcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQ
TU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjI1MVwi
IHk9XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6
QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMDZzempkY1wiIGlkPVwiRW5kRXZlbnRf
MDZzempkY19kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1c
IjU0M1wiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9
XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI1NjFcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5MYWJl
bD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVl
bmNlRmxvd18wb3d0cGVrXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMG93dHBla19kaVwiPjxvbWdkaTp3
YXlwb2ludCB4PVwiNDA0XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9t
Z2RpOndheXBvaW50IHg9XCI1NDNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwi
Lz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIw
XCIgeD1cIjQ3My41XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBN
TkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8wMDUy
Y2hxXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8wMDUyY2hxX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjEzMFwiIHk9XCI3OFwiLz48L2JwbW5kaTpCUE1O
U2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzEzejd1M2Jc
IiBpZD1cIkFzc29jaWF0aW9uXzEzejd1M2JfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjMwNVwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTc1XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
MjAzXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMDhcIi8+PC9icG1uZGk6QlBNTkVk
Z2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8weW9tMDM2
XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8weW9tMDM2X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9
XCIzMFwiIHdpZHRoPVwiMTQ4XCIgeD1cIjUxMVwiIHk9XCI3OFwiLz48L2JwbW5kaTpCUE1OU2hh
cGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFoNzdoYzhcIiBp
ZD1cIkFzc29jaWF0aW9uXzFoNzdoYzhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQwNFwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTgyXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTU0
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMDhcIi8+PC9icG1uZGk6QlBNTkVkZ2U+
PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+Iiwg
IndvcmtmbG93X2lkIjogImV4YW1wbGVfdXJsX3ZvaWRfcmV0cml2ZV9pbmZvcm1hdGlvbiIsICJ2
ZXJzaW9uIjogMn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTQyMjYyNzkxNTM5LCAiY3JlYXRv
cl9pZCI6ICJhZG1pbkBjbzNzeXMuY29tIiwgImFjdGlvbnMiOiBbXSwgInByb2dyYW1tYXRpY19u
YW1lIjogImV4YW1wbGVfdXJsX3ZvaWRfcmV0cml2ZV9pbmZvcm1hdGlvbiIsICJuYW1lIjogIkV4
YW1wbGU6IFVSTCBWb2lkIFJldHJpdmUgSW5mb3JtYXRpb24ifV0sICJhY3Rpb25zIjogW3sibG9n
aWNfdHlwZSI6ICJhbGwiLCAibmFtZSI6ICJFeGFtcGxlOiBVUkwgVm9pZCBSZXRyaXZlIEluZm9y
bWF0aW9uIiwgInZpZXdfaXRlbXMiOiBbXSwgInR5cGUiOiAxLCAid29ya2Zsb3dzIjogWyJleGFt
cGxlX3VybF92b2lkX3JldHJpdmVfaW5mb3JtYXRpb24iXSwgIm9iamVjdF90eXBlIjogImFydGlm
YWN0IiwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6ICJmOTQ2NGU3My1mMTY3LTQ3
NTUtYTI0NC0xNGVkMGE5OGExN2MiLCAiYXV0b21hdGlvbnMiOiBbXSwgImV4cG9ydF9rZXkiOiAi
RXhhbXBsZTogVVJMIFZvaWQgUmV0cml2ZSBJbmZvcm1hdGlvbiIsICJjb25kaXRpb25zIjogW10s
ICJpZCI6IDEzNSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW119XSwgImxheW91dHMiOiBbXSwg
ImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJpZCI6IDM3LCAiaW5kdXN0cmllcyI6IG51bGws
ICJwaGFzZXMiOiBbXSwgImFjdGlvbl9vcmRlciI6IFtdLCAiZ2VvcyI6IG51bGwsICJsb2NhbGUi
OiBudWxsLCAic2VydmVyX3ZlcnNpb24iOiB7Im1ham9yIjogMzEsICJ2ZXJzaW9uIjogIjMxLjAu
NDI1NCIsICJidWlsZF9udW1iZXIiOiA0MjU0LCAibWlub3IiOiAwfSwgInRpbWVmcmFtZXMiOiBu
dWxsLCAid29ya3NwYWNlcyI6IFtdLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJmdW5jdGlvbnMi
OiBbeyJkaXNwbGF5X25hbWUiOiAiVVJMIFZvaWQgUmV0cml2ZSBJbmZvcm1hdGlvbiIsICJkZXNj
cmlwdGlvbiI6IHsiY29udGVudCI6ICJSZXRyaWV2ZXMgaW5mb3JtYXRpb24gb2YgYSBVUkwgZnJv
bSB0aGUgIFVSTCBWb2lkIGRhdGFiYXNlLiIsICJmb3JtYXQiOiAidGV4dCJ9LCAiY3JlYXRvciI6
IHsiZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJ0eXBlIjogInVzZXIiLCAi
aWQiOiAxLCAibmFtZSI6ICJhZG1pbkBjbzNzeXMuY29tIn0sICJ2aWV3X2l0ZW1zIjogW3sic2hv
d19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRl
ciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiYjA5ZTE4OTkt
NzQ1Mi00ZjRmLWJkZTEtMjNiMmZiY2NkOTA0IiwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJleHBv
cnRfa2V5IjogInVybF92b2lkX3JldHJpdmVfaW5mb3JtYXRpb24iLCAidXVpZCI6ICI2ODA5ODc0
Yy03MTlkLTRhMDctYmU3OC1iZDcwODFkMmJiYmIiLCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlz
cGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJ0eXBlIjogInVzZXIiLCAiaWQiOiAx
LCAibmFtZSI6ICJhZG1pbkBjbzNzeXMuY29tIn0sICJ2ZXJzaW9uIjogMSwgIndvcmtmbG93cyI6
IFt7ImRlc2NyaXB0aW9uIjogbnVsbCwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImFjdGlv
bnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTogVVJMIFZvaWQgUmV0cml2ZSBJbmZvcm1hdGlvbiIs
ICJ3b3JrZmxvd19pZCI6IDEwMSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfdXJsX3Zv
aWRfcmV0cml2ZV9pbmZvcm1hdGlvbiIsICJ1dWlkIjogbnVsbH1dLCAibGFzdF9tb2RpZmllZF90
aW1lIjogMTU0MjIxMjgyMDEyOSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJ1cmxfdm9pZF9tZXNz
YWdlX2Rlc3RpbmF0aW9uIiwgImlkIjogNjEsICJuYW1lIjogInVybF92b2lkX3JldHJpdmVfaW5m
b3JtYXRpb24ifV0sICJub3RpZmljYXRpb25zIjogbnVsbCwgInJlZ3VsYXRvcnMiOiBudWxsLCAi
aW5jaWRlbnRfdHlwZXMiOiBbeyJjcmVhdGVfZGF0ZSI6IDE1NDQ1NjQxNTc3OTYsICJkZXNjcmlw
dGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6
ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiaWQiOiAwLCAibmFtZSI6ICJD
dXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAidXBkYXRlX2RhdGUiOiAxNTQ0NTY0
MTU3Nzk2LCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAi
ZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlk
ZGVuIjogZmFsc2V9XSwgInNjcmlwdHMiOiBbXSwgInR5cGVzIjogW10sICJtZXNzYWdlX2Rlc3Rp
bmF0aW9ucyI6IFt7InV1aWQiOiAiYWUzMmU2ZGYtYjkyMi00NjZiLWIzMjctZmQ2MmUwYjYzOWE4
IiwgImV4cG9ydF9rZXkiOiAidXJsX3ZvaWRfbWVzc2FnZV9kZXN0aW5hdGlvbiIsICJuYW1lIjog
IlVSTCBWb2lkIE1lc3NhZ2UgRGVzdGluYXRpb24iLCAiZGVzdGluYXRpb25fdHlwZSI6IDAsICJw
cm9ncmFtbWF0aWNfbmFtZSI6ICJ1cmxfdm9pZF9tZXNzYWdlX2Rlc3RpbmF0aW9uIiwgImV4cGVj
dF9hY2siOiB0cnVlLCAidXNlcnMiOiBbImFkbWluQGNvM3N5cy5jb20iXX1dLCAiaW5jaWRlbnRf
YXJ0aWZhY3RfdHlwZXMiOiBbXSwgInJvbGVzIjogW10sICJmaWVsZHMiOiBbeyJvcGVyYXRpb25z
IjogW10sICJ0eXBlX2lkIjogMCwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJTaW11
bGF0aW9uIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFi
bGUiOiB0cnVlLCAiaWQiOiAzOCwgInJlYWRfb25seSI6IHRydWUsICJ1dWlkIjogImMzZjBlM2Vk
LTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5
cGUiOiAiYm9vbGVhbiIsICJ0b29sdGlwIjogIldoZXRoZXIgdGhlIGluY2lkZW50IGlzIGEgc2lt
dWxhdGlvbiBvciBhIHJlZ3VsYXIgaW5jaWRlbnQuICBUaGlzIGZpZWxkIGlzIHJlYWQtb25seS4i
LCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10s
ICJleHBvcnRfa2V5IjogImluY2lkZW50L2luY190cmFpbmluZyIsICJoaWRlX25vdGlmaWNhdGlv
biI6IGZhbHNlLCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAi
ZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0
aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0Ijog
ImFydGlmYWN0X3ZhbHVlIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwg
ImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiA5NywgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6
ICJiMDllMTg5OS03NDUyLTRmNGYtYmRlMS0yM2IyZmJjY2Q5MDQiLCAiY2hvc2VuIjogZmFsc2Us
ICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICIiLCAiaW50ZXJuYWwiOiBmYWxzZSwg
InJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9fZnVu
Y3Rpb24vYXJ0aWZhY3RfdmFsdWUiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNl
aG9sZGVyIjogIiIsICJuYW1lIjogImFydGlmYWN0X3ZhbHVlIiwgImRlcHJlY2F0ZWQiOiBmYWxz
ZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW119XSwgIm92
ZXJyaWRlcyI6IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTQyMjYyODA1MTk1fQ==
"""
    )