# (c) Copyright IBM Corp. 2010, 2019. All Rights Reserved.
# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_grpc_interface"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_grpc_interface package"""
    reload_params = {"package": u"fn_grpc_interface",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"grpc_channel", u"grpc_function", u"grpc_function_data"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_grpc"], 
                    "functions": [u"function_grpc"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_grpc_communication_interface"], 
                    "actions": [u"Example: GRPC Communication Interface"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     grpc_channel
    #     grpc_function
    #     grpc_function_data
    #   Message Destinations:
    #     fn_grpc
    #   Functions:
    #     function_grpc
    #   Workflows:
    #     example_grpc_communication_interface
    #   Rules:
    #     Example: GRPC Communication Interface


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMSwgImJ1aWxkX251bWJl
ciI6IDc2LCAidmVyc2lvbiI6ICIzMS4xLjc2In0sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAy
LCAiaWQiOiA2MiwgImV4cG9ydF9kYXRlIjogMTU1MDUxNTYwOTcxMywgImZpZWxkcyI6IFt7Imlk
IjogNTEsICJuYW1lIjogImluY190cmFpbmluZyIsICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAicHJl
Zml4IjogbnVsbCwgInR5cGVfaWQiOiAwLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNpZGVu
dCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBpcyBy
ZWFkLW9ubHkuIiwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJoaWRlX25vdGlmaWNhdGlvbiI6
IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxz
ZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiYzNm
MGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9w
ZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiB0cnVlLCAiY2hh
bmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5jaWRl
bnQvaW5jX3RyYWluaW5nIiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwg
eyJpZCI6IDE0NywgIm5hbWUiOiAiZ3JwY19mdW5jdGlvbiIsICJ0ZXh0IjogImdycGNfZnVuY3Rp
b24iLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiVGhpcyBmaWVs
ZHMgY29udGFpbnMgZGF0YSBmcm9tIC5wcm90byBmaWxlIGkuZSBwYWNrYWdlX25hbWUgOiBycGMg
ZnVuY3Rpb24gbmFtZShncnBjIHJlcXVlc3QgZnVuY3Rpb24pIGV4OiBoZWxsb3dvcmQgOiBTYXlI
ZWxsbyhIZWxsb1JlcXVlc3QpIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRl
eHQiLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJj
aG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtf
b3B0aW9uIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICJkMDk4NzhkYy1kMTFm
LTRlMmUtYjExMi1kNTNlNTg4MmUyNWYiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Bl
cm1zIjoge30sICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6
IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9ncnBj
X2Z1bmN0aW9uIiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6
IDE0MSwgIm5hbWUiOiAiZ3JwY19jaGFubmVsIiwgInRleHQiOiAiZ3JwY19jaGFubmVsIiwgInBy
ZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjogInRoaXMgZmllbGQgY29udGFp
biB0aGUgY2hhbm5lbCBpbmZvIG9mIHRoZSBHUlBDIFNlcnZlciBSdW5uaW5nIGV4Omhvc3RJUDpQ
b3J0IiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAicmVxdWlyZWQi
OiAiYWx3YXlzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwg
ImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2Us
ICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICIzM2JmN2M0MS0xZjQ1LTRkMmMtYjkxNS05MTE0
NTNkYjFkNWUiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1
ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3Rl
eHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9ncnBjX2NoYW5uZWwiLCAidGVt
cGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMTQ4LCAibmFtZSI6ICJn
cnBjX2Z1bmN0aW9uX2RhdGEiLCAidGV4dCI6ICJncnBjX2Z1bmN0aW9uX2RhdGEiLCAicHJlZml4
IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiQWRkaXRpb25hbCBkYXRhIEZpZWxk
cyB0byBzZW5kIGRhdGEgZnJvbSBjbGllbnQgdG8gc2VydmVyLiBkYXRhIGZvcm1hdCB3aWxsIGJl
IGluIGpzb24gYW5kIGtleSBzaG91bGQgbWF0Y2ggdGhlIHJlcXVlc3QgZnVuY3Rpb24gcGFyYW1l
dGVyLiIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImhpZGVfbm90
aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3Nl
cnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAi
dXVpZCI6ICI5ZGRkZGY2Mi02MGY3LTQ1MGEtYTlhYy0yZmRiODVlM2M0YTMiLCAib3BlcmF0aW9u
cyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6
IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9r
ZXkiOiAiX19mdW5jdGlvbi9ncnBjX2Z1bmN0aW9uX2RhdGEiLCAidGVtcGxhdGVzIjogW10sICJk
ZXByZWNhdGVkIjogZmFsc2V9XSwgImluY2lkZW50X3R5cGVzIjogW3sidXBkYXRlX2RhdGUiOiAx
NTUwNTE1NzkzMzg5LCAiY3JlYXRlX2RhdGUiOiAxNTUwNTE1NzkzMzg5LCAidXVpZCI6ICJiZmVl
YzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9t
aXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlv
biBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAo
aW50ZXJuYWwpIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lk
IjogbnVsbCwgImhpZGRlbiI6IGZhbHNlLCAiaWQiOiAwfV0sICJwaGFzZXMiOiBbXSwgImF1dG9t
YXRpY190YXNrcyI6IFtdLCAib3ZlcnJpZGVzIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6
IFt7Im5hbWUiOiAiZm5fZ3JwYyIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl9ncnBjIiwgImRl
c3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJ1c2VycyI6IFsibmthbmRo
YTFAaW4uaWJtLmNvbSJdLCAidXVpZCI6ICJiMDg3ZjMzYS0yMWM3LTRhOWMtYjYwNS0wMmM3MTk5
NzYzOTIiLCAiZXhwb3J0X2tleSI6ICJmbl9ncnBjIn1dLCAiYWN0aW9ucyI6IFt7ImlkIjogNTks
ICJuYW1lIjogIkV4YW1wbGU6IEdSUEMgQ29tbXVuaWNhdGlvbiBJbnRlcmZhY2UiLCAidHlwZSI6
IDEsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJjb25kaXRpb25zIjogW10sICJhdXRvbWF0
aW9ucyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgIndvcmtmbG93cyI6IFsiZXhh
bXBsZV9ncnBjX2NvbW11bmljYXRpb25faW50ZXJmYWNlIl0sICJ2aWV3X2l0ZW1zIjogW10sICJ0
aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAiZmI1OTM3MmQtMTcwMC00ZDNiLWIwMTkt
MGM2NTRmMGYxN2RiIiwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTogR1JQQyBDb21tdW5pY2F0aW9u
IEludGVyZmFjZSIsICJsb2dpY190eXBlIjogImFsbCJ9XSwgImxheW91dHMiOiBbXSwgIm5vdGlm
aWNhdGlvbnMiOiBudWxsLCAidGltZWZyYW1lcyI6IG51bGwsICJsb2NhbGUiOiBudWxsLCAiaW5k
dXN0cmllcyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwgImdlb3MiOiBudWxsLCAidGFza19v
cmRlciI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJ0eXBlcyI6IFtdLCAic2NyaXB0cyI6IFtd
LCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7IndvcmtmbG93
X2lkIjogNDQsICJuYW1lIjogIkV4YW1wbGU6IEdSUEMgQ29tbXVuaWNhdGlvbiBJbnRlcmZhY2Ui
LCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9ncnBjX2NvbW11bmljYXRpb25faW50ZXJm
YWNlIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImRlc2NyaXB0aW9uIjogIkNvbW11bmlj
YXRlIHdpdGggR1JQQyBTZXJ2ZXJzIiwgImNyZWF0b3JfaWQiOiAibmthbmRoYTFAaW4uaWJtLmNv
bSIsICJsYXN0X21vZGlmaWVkX2J5IjogIm5rYW5kaGExQGluLmlibS5jb20iLCAibGFzdF9tb2Rp
ZmllZF90aW1lIjogMTU1MDUxNTU5NDIwNiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9ncnBjX2Nv
bW11bmljYXRpb25faW50ZXJmYWNlIiwgInV1aWQiOiAiYjc2NWUzMTItNTU0Zi00M2U4LTlkNmIt
MzdlNDhkMDQ0NzY1IiwgImNvbnRlbnQiOiB7IndvcmtmbG93X2lkIjogImV4YW1wbGVfZ3JwY19j
b21tdW5pY2F0aW9uX2ludGVyZmFjZSIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVu
Y29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3Jn
L3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21n
Lm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21n
Lm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5v
cmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGll
bnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxT
Y2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0
YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxw
cm9jZXNzIGlkPVwiZXhhbXBsZV9ncnBjX2NvbW11bmljYXRpb25faW50ZXJmYWNlXCIgaXNFeGVj
dXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBHUlBDIENvbW11bmljYXRpb24gSW50ZXJm
YWNlXCI+PGRvY3VtZW50YXRpb24+Q29tbXVuaWNhdGUgd2l0aCBHUlBDIFNlcnZlcnM8L2RvY3Vt
ZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+
U2VxdWVuY2VGbG93XzE0a3NrZm08L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sg
aWQ9XCJTZXJ2aWNlVGFza18xbmZjZnRmXCIgbmFtZT1cIkdSUENcIiByZXNpbGllbnQ6dHlwZT1c
ImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1c
IjBmOTY5NjA4LWYyMmYtNGE2Yi1hNzQzLWFmMDFhMjFkNjkzY1wiPntcImlucHV0c1wiOntcIjMz
YmY3YzQxLTFmNDUtNGQyYy1iOTE1LTkxMTQ1M2RiMWQ1ZVwiOntcImlucHV0X3R5cGVcIjpcInN0
YXRpY1wiLFwic3RhdGljX2lucHV0XCI6e1wibXVsdGlzZWxlY3RfdmFsdWVcIjpbXSxcInRleHRf
dmFsdWVcIjpcImxvY2FsaG9zdDo1MDA1MVwifX0sXCJkMDk4NzhkYy1kMTFmLTRlMmUtYjExMi1k
NTNlNTg4MmUyNWZcIjp7XCJpbnB1dF90eXBlXCI6XCJzdGF0aWNcIixcInN0YXRpY19pbnB1dFwi
OntcIm11bHRpc2VsZWN0X3ZhbHVlXCI6W10sXCJ0ZXh0X3ZhbHVlXCI6XCJoZWxsb3dvcmQ6U2F5
SGVsbG8oSGVsbG9SZXF1ZXN0KVwifX0sXCI5ZGRkZGY2Mi02MGY3LTQ1MGEtYTlhYy0yZmRiODVl
M2M0YTNcIjp7XCJpbnB1dF90eXBlXCI6XCJzdGF0aWNcIixcInN0YXRpY19pbnB1dFwiOntcIm11
bHRpc2VsZWN0X3ZhbHVlXCI6W10sXCJ0ZXh0X3ZhbHVlXCI6XCJ7XFxcIm5hbWVcXFwiOlxcXCJS
ZXNpbGllbnQgU3lzdGVtXFxcIn1cIn19fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImRh
dGFfcmVjZWl2ZWQgPSByZXN1bHRzWydjb250ZW50J11cXG5zZXJ2ZXJfYWRkcmVzcyA9IHJlc3Vs
dHNbJ2NoYW5uZWwnXVxcbnJpY2hfdGV4dCA9IGhlbHBlci5jcmVhdGVSaWNoVGV4dChcXFwiJmx0
O3AmZ3Q7Jmx0O2ImZ3Q7Y2hhbm5lbCA6ICZsdDsvYiZndDt7fSZsdDsvcCZndDsmbHQ7cCZndDsm
bHQ7YiZndDt7fSZsdDsvYiZndDsmbHQ7L3AmZ3Q7XFxcIi5mb3JtYXQoc2VydmVyX2FkZHJlc3Ms
ZGF0YV9yZWNlaXZlZCkpXFxuaW5jaWRlbnQuYWRkTm90ZShyaWNoX3RleHQpXCIsXCJwcmVfcHJv
Y2Vzc2luZ19zY3JpcHRcIjpcImRpY3RfZGF0YSA9IHtcXFwibmFtZVxcXCI6c3RyKGFydGlmYWN0
LnZhbHVlKX1cXG5pbnB1dHMuZ3JwY19mdW5jdGlvbl9kYXRhID0gc3RyKGRpY3RfZGF0YSlcIn08
L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5j
ZUZsb3dfMTRrc2tmbTwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wdHV2NnR6PC9v
dXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMTRr
c2tmbVwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZp
Y2VUYXNrXzFuZmNmdGZcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMXVraHZ4cFwiPjxpbmNv
bWluZz5TZXF1ZW5jZUZsb3dfMHR1djZ0ejwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VG
bG93IGlkPVwiU2VxdWVuY2VGbG93XzB0dXY2dHpcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18x
bmZjZnRmXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMXVraHZ4cFwiLz48dGV4dEFubm90YXRpb24g
aWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBo
ZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25f
MXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRl
eHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9
XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmlu
ZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJT
dGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjEzMVwiIHk9XCIxODhcIi8+PGJw
bW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9
XCIxMjZcIiB5PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+
PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIg
aWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIz
MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+
PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1c
IkFzc29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE0NVwiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjIzXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTQ2XCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJw
bW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18xbmZjZnRmXCIgaWQ9XCJT
ZXJ2aWNlVGFza18xbmZjZnRmX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRo
PVwiMTAwXCIgeD1cIjMzOC4zMTg4Njk4Mjg0NTYxXCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1O
U2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xNGtza2Zt
XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMTRrc2tmbV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY3
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9
XCIzMzhcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5M
YWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEyXCIgd2lkdGg9XCI5MFwiIHg9XCIyMDcuNVwi
IHk9XCIxODVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6
QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMXVraHZ4cFwiIGlkPVwiRW5kRXZlbnRf
MXVraHZ4cF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1c
IjU3NS4zMTg4Njk4Mjg0NTYxXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjEyXCIgd2lkdGg9XCIwXCIgeD1cIjU5My4zMTg4Njk4Mjg0NTYxXCIg
eT1cIjIyOFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6
QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHR1djZ0elwiIGlkPVwiU2VxdWVu
Y2VGbG93XzB0dXY2dHpfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQzOFwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTc1XCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCIxMlwiIHdpZHRoPVwiMFwiIHg9XCI1MDYuNVwiIHk9XCIxODVcIi8+PC9i
cG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2Jw
bW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ2ZXJzaW9uIjogM30sICJhY3Rpb25z
IjogW119XSwgInJvbGVzIjogW10sICJ3b3Jrc3BhY2VzIjogW10sICJmdW5jdGlvbnMiOiBbeyJp
ZCI6IDM4LCAibmFtZSI6ICJmdW5jdGlvbl9ncnBjIiwgImRpc3BsYXlfbmFtZSI6ICJHUlBDIiwg
ImRlc2NyaXB0aW9uIjogeyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50IjogIkEgZnVuY3Rpb24g
dG8gY29tbXVuaWNhdGUgd2l0aCBHUlBDIFNlcnZlcnMgYmFzZWQgb24gdGhlIENvbW11bmljYXRp
b24gTWV0aG9kcyBTcGVjaWZpZWQuIn0sICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAiZm5fZ3JwYyIs
ICJleHBvcnRfa2V5IjogImZ1bmN0aW9uX2dycGMiLCAidXVpZCI6ICIwZjk2OTYwOC1mMjJmLTRh
NmItYTc0My1hZjAxYTIxZDY5M2MiLCAidmVyc2lvbiI6IDEsICJjcmVhdG9yIjogeyJpZCI6IDYs
ICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJua2FuZGhhMUBpbi5pYm0uY29tIiwgImRpc3BsYXlf
bmFtZSI6ICJOaXRpbiBLYW5kaGFyZSAifSwgImxhc3RfbW9kaWZpZWRfYnkiOiB7ImlkIjogNiwg
InR5cGUiOiAidXNlciIsICJuYW1lIjogIm5rYW5kaGExQGluLmlibS5jb20iLCAiZGlzcGxheV9u
YW1lIjogIk5pdGluIEthbmRoYXJlICJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU1MDUxNTQy
NjU0MSwgInZpZXdfaXRlbXMiOiBbeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxs
LCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJj
b250ZW50IjogIjMzYmY3YzQxLTFmNDUtNGQyYy1iOTE1LTkxMTQ1M2RiMWQ1ZSIsICJzaG93X2xp
bmtfaGVhZGVyIjogZmFsc2V9LCB7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGws
ICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNv
bnRlbnQiOiAiZDA5ODc4ZGMtZDExZi00ZTJlLWIxMTItZDUzZTU4ODJlMjVmIiwgInNob3dfbGlu
a19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwg
ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29u
dGVudCI6ICI5ZGRkZGY2Mi02MGY3LTQ1MGEtYTlhYy0yZmRiODVlM2M0YTMiLCAic2hvd19saW5r
X2hlYWRlciI6IGZhbHNlfV0sICJ3b3JrZmxvd3MiOiBbeyJ3b3JrZmxvd19pZCI6IDQ0LCAibmFt
ZSI6ICJFeGFtcGxlOiBHUlBDIENvbW11bmljYXRpb24gSW50ZXJmYWNlIiwgInByb2dyYW1tYXRp
Y19uYW1lIjogImV4YW1wbGVfZ3JwY19jb21tdW5pY2F0aW9uX2ludGVyZmFjZSIsICJvYmplY3Rf
dHlwZSI6ICJhcnRpZmFjdCIsICJkZXNjcmlwdGlvbiI6IG51bGwsICJ1dWlkIjogbnVsbCwgImFj
dGlvbnMiOiBbXX1dfV19
"""
    )