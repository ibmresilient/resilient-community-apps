# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_ldap_utilities"""

from __future__ import print_function
from resilient_circuits.util import *


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     ldap_search_attributes
    #     ldap_search_base
    #     ldap_search_filter
    #     ldap_search_param
    #   Message Destinations:
    #     ldap_messgage_destination
    #   Functions:
    #     ldap_utilities_search
    #   Workflows:
    #     example_ldap_search
    #   Rules:
    #     Example: LDAP Utilities: Search


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogImQyMTI0NDJiLTIwN2Qt
NDAxZS1iMDU4LTIwODYyMGIwYzU3ZiIsICJkZXNjcmlwdGlvbiI6ICJFeGFtcGxlIHdvcmtmbG93
IHdoaWNoIHJ1bnMgYSBwZXJzb24gcXVlcnkgYWdhaW5zdCBhbiBMREFQIHNlcnZlci4iLCAib2Jq
ZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX2xkYXBfc2VhcmNo
IiwgIndvcmtmbG93X2lkIjogNSwgImxhc3RfbW9kaWZpZWRfYnkiOiAiYWRtaW5AcmVzLmNvbSIs
ICJjb250ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRG
LThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8y
MDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQ
TU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RE
LzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8y
MDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9i
cG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxu
czp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdl
dE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwi
ZXhhbXBsZV9sZGFwX3NlYXJjaFwiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBs
ZTogTERBUCBVdGlsaXRpZXM6IFNlYXJjaFwiPjxkb2N1bWVudGF0aW9uPkV4YW1wbGUgd29ya2Zs
b3cgd2hpY2ggcnVucyBhIHBlcnNvbiBxdWVyeSBhZ2FpbnN0IGFuIExEQVAgc2VydmVyLjwvZG9j
dW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2lu
Zz5TZXF1ZW5jZUZsb3dfMG8weHFtMDwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxlbmRFdmVudCBp
ZD1cIkVuZEV2ZW50XzB3dWd1azFcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBjMXl6eTc8L2lu
Y29taW5nPjwvZW5kRXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMDZvZHI3dFwi
IG5hbWU9XCJMREFQIFV0aWxpdGllczogU2VhcmNoXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlv
blwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI1YjI0MDg4
Ni02Y2MxLTQ0ZDQtOTk3Yi02NTI0MDFmZGFmZjZcIj57XCJpbnB1dHNcIjp7fSxcInByZV9wcm9j
ZXNzaW5nX3NjcmlwdFwiOlwiIyMgIExEQVAgU2VhcmNoIFdvcmtmbG93IC0gcHJlLXByb2Nlc3Np
bmcgc2NyaXB0ICMjXFxuIyBpbnB1dHMubGRhcF9zZWFyY2hfYmFzZSA9IFxcXCJkYz1leGFtcGxl
LGRjPWNvbVxcXCJcXG4jIGlucHV0cy5sZGFwX3NlYXJjaF9maWx0ZXIgPSBcXFwiKCZhbXA7KG9i
amVjdENsYXNzPXBlcnNvbikodWlkPSVsZGFwX3BhcmFtJSkpXFxcIlxcbiMgaW5wdXRzLmxkYXBf
c2VhcmNoX2F0dHJpYnV0ZXMgPSBcXFwiY24sc24sbWFpbCx0ZWxlcGhvbmVOdW1iZXJcXFwiXFxu
IyBpbnB1dHMubGRhcF9zZWFyY2hfcGFyYW0gPSAgYXJ0aWZhY3QudmFsdWVcXG5cXG5pbnB1dHMu
bGRhcF9zZWFyY2hfYmFzZSA9IFxcXCJkYz1kZXYsZGM9Y28zc3lzLGRjPWNvbVxcXCJcXG5pbnB1
dHMubGRhcF9zZWFyY2hfYXR0cmlidXRlcyA9XFxcInVpZCxjbixzbixtYWlsLHRlbGVwaG9uZU51
bWJlcixwb3N0YWxDb2RlLG9iamVjdENsYXNzLGxhc3RMb2dvbixsb2dvbkNvdW50LG1lbWJlck9m
LHB3ZExhc3RTZXQsbW9iaWxlLHBlcnNvbmFsVGl0bGUsbWFuYWdlcixwb3N0YWxDb2RlLHBvc3Rh
bEFkZHJlc3Msd2hlbkNoYW5nZWQsd2hlbkNyZWF0ZWQsdXNlcldvcmtzdGF0aW9ucyxiYWRQd2RD
b3VudCxiYWRQYXNzd29yZFRpbWUsbmV0d29ya0FkZHJlc3MsZGVwYXJ0bWVudCxkZXNrdG9wUHJv
ZmlsZSxlbXBsb3llZUlELGNvbXBhbnksZGlyZWN0UmVwb3J0c1xcXCJcXG5pbnB1dHMubGRhcF9z
ZWFyY2hfZmlsdGVyID0gXFxcIigmYW1wOyhtYWlsPXt9KSlcXFwiLmZvcm1hdChhcnRpZmFjdC52
YWx1ZSlcXG5pbnB1dHMubGRhcF9zZWFyY2hfcGFyYW0gPSBhcnRpZmFjdC52YWx1ZVwiLFwicG9z
dF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiIyMgIExEQVAgc2VhcmNoIHdvcmtmbG93IC0gcG9zdCBw
cm9jZXNzaW5nIHNjcmlwdCAjI1xcbiMgRXhhbXBsZSBvZiBleHBlY3RlZCByZXN1bHRzIC0gT3Bl
bkxkYXBcXG5cXFwiXFxcIlxcXCJcXG4nZW50cmllcyc6IFt7XFxcImRuXFxcIjogXFxcInVpZD1u
ZXd0b24sZGM9ZXhhbXBsZSxkYz1jb21cXFwiLCBcXFwidGVsZXBob25lTnVtYmVyXFxcIjogW10s
IFxcXCJ1aWRcXFwiOiBbXFxcIm5ld3RvblxcXCJdLFxcbiAgICBcXFwibWFpbFxcXCI6IFtcXFwi
bmV3dG9uQGxkYXAuZm9ydW1zeXMuY29tXFxcIl0sIFxcXCJzblxcXCI6IFtcXFwiTmV3dG9uXFxc
Il0sIFxcXCJjblxcXCI6IFtcXFwiSXNhYWMgTmV3dG9uXFxcIl19LFxcbiAgICB7XFxcImRuXFxc
IjogXFxcInVpZD1laW5zdGVpbixkYz1leGFtcGxlLGRjPWNvbVxcXCIsIFxcXCJ0ZWxlcGhvbmVO
dW1iZXJcXFwiOiBbXFxcIjMxNC0xNTktMjY1M1xcXCJdLCBcXFwidWlkXFxcIjogW1xcXCJlaW5z
dGVpblxcXCJdLFxcbiAgICBcXFwibWFpbFxcXCI6IFtcXFwiZWluc3RlaW5AbGRhcC5mb3J1bXN5
cy5jb21cXFwiXSwgXFxcInNuXFxcIjogW1xcXCJFaW5zdGVpblxcXCJdLCBcXFwiY25cXFwiOiBb
XFxcIkFsYmVydCBFaW5zdGVpblxcXCJdfV1cXG5cXFwiXFxcIlxcXCJcXG4jIEV4YW1wbGUgb2Yg
ZXhwZWN0ZWQgcmVzdWx0cyAtIEFEXFxuXFxcIlxcXCJcXFwiXFxuICdlbnRyaWVzJzogW3t1J2Ru
JzogdSdDTj1Jc2FhYyBOZXd0b24sT1U9SUJNUmVzaWxpZW50LERDPWlibSxEQz1yZXNpbGllbnQs
REM9Y29tJywgXFxuICAgICAgICAgICAgICB1J3RlbGVwaG9uZU51bWJlcic6IHUnMzE0LTE1OS0y
NjUzJywgdSdjbic6IHUnSXNhYWMgTmV3dG9uJywgXFxuICAgICAgICAgICAgICB1J21haWwnOiB1
J2VpbnN0ZWluQHJlc2lsaWVudC5pYm0uY29tJywgdSdzbic6IHUnTmV3dG9uJ31dXFxuXFxcIlxc
XCJcXFwiXFxuIyAgR2xvYmFsc1xcbkVOVFJZX1RPX0RBVEFUQUJMRV9NQVAgPSB7XFxuICAgXFxc
InVpZFxcXCI6IFxcXCJ1aWRcXFwiLFxcbiAgIFxcXCJjblxcXCI6IFxcXCJmdWxsbmFtZVxcXCIs
XFxuICAgXFxcInNuXFxcIjogXFxcInN1cm5hbWVcXFwiLFxcbiAgIFxcXCJtYWlsXFxcIjogXFxc
ImVtYWlsX2FkZHJlc3NcXFwiLFxcbiAgIFxcXCJ0ZWxlcGhvbmVOdW1iZXJcXFwiOiBcXFwidGVs
ZXBob25lX251bWJlclxcXCJcXG59XFxuIyBQcm9jZXNzaW5nXFxuZm9yIGVudHJ5IGluIHJlc3Vs
dHMuZW50cmllczpcXG4gaWYgZW50cnkgaXMgTm9uZTpcXG4gICAgIGJyZWFrXFxuIGVsc2U6XFxu
ICAgICByb3cgPSBpbmNpZGVudC5hZGRSb3coXFxcImxkYXBfcXVlcnlfcmVzdWx0c1xcXCIpXFxu
IGZvciBrIGluIEVOVFJZX1RPX0RBVEFUQUJMRV9NQVA6XFxuICAgIGlmIGVudHJ5W2tdIGlzIE5v
bmU6XFxuICAgICAgICByb3dbRU5UUllfVE9fREFUQVRBQkxFX01BUFtrXV0gPSBcXFwiTi9BXFxc
IlxcbiAgICBlbHNlOlxcbiAgICAgICAgdHJ5OlxcbiAgICAgICAgICAgIGlmIGlzaW5zdGFuY2Uo
ZW50cnlba10sIHVuaWNvZGUpIG9yIGxlbihlbnRyeVtrXSkgPT0gMDpcXG4gICAgICAgICAgICAg
ICAgcm93W0VOVFJZX1RPX0RBVEFUQUJMRV9NQVBba11dID0gc3RyKGVudHJ5W2tdKVxcbiAgICAg
ICAgICAgIGVsc2U6XFxuICAgICAgICAgICAgICAgIHJvd1tFTlRSWV9UT19EQVRBVEFCTEVfTUFQ
W2tdXSA9IHN0cihlbnRyeVtrXVswXSlcXG4gICAgICAgIGV4Y2VwdCBJbmRleEVycm9yOlxcbiAg
ICAgICAgICAgIHJvd1tFTlRSWV9UT19EQVRBVEFCTEVfTUFQW2tdXSA9IFxcXCJOL0FcXFwiXFxu
XCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2Vx
dWVuY2VGbG93XzBvMHhxbTA8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMGMxeXp5
Nzwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93
XzBvMHhxbTBcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJT
ZXJ2aWNlVGFza18wNm9kcjd0XCIvPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMGMx
eXp5N1wiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzA2b2RyN3RcIiB0YXJnZXRSZWY9XCJFbmRF
dmVudF8wd3VndWsxXCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhp
eXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3RhdGlv
bj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwiU3Rh
cnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiLz48
L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRp
OkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48
YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwi
U3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRo
PVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1u
ZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhp
eXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlc
IiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVt
ZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwi
PjxvbWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIy
MjBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVu
dD1cIkVuZEV2ZW50XzB3dWd1azFcIiBpZD1cIkVuZEV2ZW50XzB3dWd1azFfZGlcIj48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI2MjFcIiB5PVwiMTg4XCIvPjxi
cG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4
PVwiNjM5XCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBl
PjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMDZvZHI3dFwiIGlk
PVwiU2VydmljZVRhc2tfMDZvZHI3dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3
aWR0aD1cIjEwMFwiIHg9XCIzNjVcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBt
bmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzBvMHhxbTBcIiBpZD1cIlNl
cXVlbmNlRmxvd18wbzB4cW0wX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjM2NVwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMjgxLjVcIiB5PVwiMTg0LjVc
Ii8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTkVkZ2Ug
YnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMGMxeXp5N1wiIGlkPVwiU2VxdWVuY2VGbG93XzBj
MXl6eTdfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQ2NVwiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNjIxXCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI1NDNcIiB5PVwiMTg0LjVcIi8+PC9icG1uZGk6QlBN
TkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1O
RGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX2xkYXBfc2Vh
cmNoIiwgInZlcnNpb24iOiA4fSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1MzExNjgyOTQwODIs
ICJjcmVhdG9yX2lkIjogImFkbWluQHJlcy5jb20iLCAiYWN0aW9ucyI6IFtdLCAicHJvZ3JhbW1h
dGljX25hbWUiOiAiZXhhbXBsZV9sZGFwX3NlYXJjaCIsICJuYW1lIjogIkV4YW1wbGU6IExEQVAg
VXRpbGl0aWVzOiBTZWFyY2gifV0sICJhY3Rpb25zIjogW3sibG9naWNfdHlwZSI6ICJhbGwiLCAi
bmFtZSI6ICJFeGFtcGxlOiBMREFQIFV0aWxpdGllczogU2VhcmNoIiwgInZpZXdfaXRlbXMiOiBb
XSwgInR5cGUiOiAxLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX2xkYXBfc2VhcmNoIl0sICJvYmpl
Y3RfdHlwZSI6ICJhcnRpZmFjdCIsICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAi
YTFhNWY4Y2UtYzVlZS00Njc1LWJjNTItY2Y1MGNlMzQ5ODA4IiwgImF1dG9tYXRpb25zIjogW10s
ICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IExEQVAgVXRpbGl0aWVzOiBTZWFyY2giLCAiY29uZGl0
aW9ucyI6IFtdLCAiaWQiOiAzMywgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW119XSwgImxheW91
dHMiOiBbXSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJpZCI6IDIsICJpbmR1c3RyaWVz
IjogbnVsbCwgInBoYXNlcyI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJnZW9zIjogbnVsbCwg
InNlcnZlcl92ZXJzaW9uIjogeyJtYWpvciI6IDMwLCAidmVyc2lvbiI6ICIzMC4xLjI1IiwgImJ1
aWxkX251bWJlciI6IDI1LCAibWlub3IiOiAxfSwgInRpbWVmcmFtZXMiOiBudWxsLCAid29ya3Nw
YWNlcyI6IFtdLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJmdW5jdGlvbnMiOiBbeyJkaXNwbGF5
X25hbWUiOiAiTERBUCBVdGlsaXRpZXM6IFNlYXJjaCIsICJkZXNjcmlwdGlvbiI6IHsiY29udGVu
dCI6ICJSZXNpbGllbnQgRnVuY3Rpb24gdG8gZG8gYSBzZWFyY2ggb3IgcXVlcnkgYWdhaW5zdCBh
biBMREFQIHNlcnZlci4iLCAiZm9ybWF0IjogInRleHQifSwgImNyZWF0b3IiOiB7ImRpc3BsYXlf
bmFtZSI6ICJTaGFuZSBDdXJ0aW4iLCAidHlwZSI6ICJ1c2VyIiwgImlkIjogMSwgIm5hbWUiOiAi
YWRtaW5AcmVzLmNvbSJ9LCAidmlld19pdGVtcyI6IFt7InNob3dfaWYiOiBudWxsLCAiZmllbGRf
dHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQi
OiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogImU3MmU0NjllLTM0MmUtNGVmOS04ODYzLWQ4NGRl
ZTI3NzU4YSIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90
eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6
ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiYTU1MGUwMTEtMzE4ZS00YjdjLWE0ZWUtN2VjMDEx
ZWUwNDQ3IiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5
cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50Ijog
ImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJkNDQ5YWE1My0yMGU4LTRhZjAtYmI2MS01MjVmNDIw
OGIwN2IiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlw
ZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAi
ZmllbGRfdXVpZCIsICJjb250ZW50IjogIjg0NmRmZjRmLTcxYjYtNGFiMi1iZmQzLWY5ZmYwMmUy
NDY0MSIsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAiZXhwb3J0X2tleSI6ICJsZGFwX3V0aWxpdGll
c19zZWFyY2giLCAidXVpZCI6ICI1YjI0MDg4Ni02Y2MxLTQ0ZDQtOTk3Yi02NTI0MDFmZGFmZjYi
LCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9uYW1lIjogIlNoYW5lIEN1cnRpbiIsICJ0
eXBlIjogInVzZXIiLCAiaWQiOiAxLCAibmFtZSI6ICJhZG1pbkByZXMuY29tIn0sICJ2ZXJzaW9u
IjogOSwgIndvcmtmbG93cyI6IFt7ImRlc2NyaXB0aW9uIjogbnVsbCwgIm9iamVjdF90eXBlIjog
ImFydGlmYWN0IiwgImFjdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTogTERBUCBTZWFyY2gg
LSBQZXJzb24iLCAid29ya2Zsb3dfaWQiOiAyLCAicHJvZ3JhbW1hdGljX25hbWUiOiAid2ZfbGRh
cF9zZWFyY2giLCAidXVpZCI6IG51bGx9LCB7ImRlc2NyaXB0aW9uIjogbnVsbCwgIm9iamVjdF90
eXBlIjogImFydGlmYWN0IiwgImFjdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTogTERBUCBV
dGlsaXRpZXM6IFNlYXJjaCIsICJ3b3JrZmxvd19pZCI6IDUsICJwcm9ncmFtbWF0aWNfbmFtZSI6
ICJleGFtcGxlX2xkYXBfc2VhcmNoIiwgInV1aWQiOiBudWxsfSwgeyJkZXNjcmlwdGlvbiI6IG51
bGwsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJhY3Rpb25zIjogW10sICJuYW1lIjogIkxE
QVAgQ29udGFpbm1lbnQgV29ya2Zsb3ciLCAid29ya2Zsb3dfaWQiOiAzLCAicHJvZ3JhbW1hdGlj
X25hbWUiOiAibGRhcF9jb250YWlubWVudF93b3JrZmxvdyIsICJ1dWlkIjogbnVsbH0sIHsiZGVz
Y3JpcHRpb24iOiBudWxsLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiYWN0aW9ucyI6IFtd
LCAibmFtZSI6ICJMREFQIE5ldyBQYXNzd29yZCIsICJ3b3JrZmxvd19pZCI6IDQsICJwcm9ncmFt
bWF0aWNfbmFtZSI6ICJsZGFwX25ld19wYXNzd29yZCIsICJ1dWlkIjogbnVsbH1dLCAibGFzdF9t
b2RpZmllZF90aW1lIjogMTUzMTE2ODk1ODQzNCwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJsZGFw
X21lc3NnYWdlX2Rlc3RpbmF0aW9uIiwgImlkIjogMiwgIm5hbWUiOiAibGRhcF91dGlsaXRpZXNf
c2VhcmNoIn1dLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwgImlu
Y2lkZW50X3R5cGVzIjogW3siY3JlYXRlX2RhdGUiOiAxNTMxMjIyNTE1NzAyLCAiZGVzY3JpcHRp
b24iOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAi
Q3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImlkIjogMCwgIm5hbWUiOiAiQ3Vz
dG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgInVwZGF0ZV9kYXRlIjogMTUzMTIyMjUx
NTcwMiwgInV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4LWFkMzktNGEwMDA0MDQ0YWEwIiwgImVu
YWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVsbCwgImhpZGRl
biI6IGZhbHNlfV0sICJzY3JpcHRzIjogW10sICJ0eXBlcyI6IFtdLCAibWVzc2FnZV9kZXN0aW5h
dGlvbnMiOiBbeyJ1dWlkIjogIjI1M2Q1ZGYxLTJmODQtNGJlMi05N2NiLTFjNDNjYWRhNWEzMiIs
ICJleHBvcnRfa2V5IjogImxkYXBfbWVzc2dhZ2VfZGVzdGluYXRpb24iLCAibmFtZSI6ICJMREFQ
IE1lc3NnYWdlIERlc3RpbmF0aW9uIiwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAicHJvZ3JhbW1h
dGljX25hbWUiOiAibGRhcF9tZXNzZ2FnZV9kZXN0aW5hdGlvbiIsICJleHBlY3RfYWNrIjogdHJ1
ZSwgInVzZXJzIjogWyJhZG1pbkByZXMuY29tIl19XSwgImluY2lkZW50X2FydGlmYWN0X3R5cGVz
IjogW10sICJyb2xlcyI6IFtdLCAiZmllbGRzIjogW3sib3BlcmF0aW9ucyI6IFtdLCAicmVhZF9v
bmx5IjogdHJ1ZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwgInRlbXBsYXRlcyI6IFtdLCAidHlw
ZV9pZCI6IDAsICJjaG9zZW4iOiBmYWxzZSwgInRleHQiOiAiU2ltdWxhdGlvbiIsICJkZWZhdWx0
X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQvaW5jX3Ry
YWluaW5nIiwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRlbnQgaXMgYSBzaW11bGF0aW9u
IG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQgaXMgcmVhZC1vbmx5LiIsICJyaWNo
X3RleHQiOiBmYWxzZSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAicHJlZml4IjogbnVsbCwgImlu
dGVybmFsIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW5w
dXRfdHlwZSI6ICJib29sZWFuIiwgImNoYW5nZWFibGUiOiB0cnVlLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgImlkIjogMTE1LCAidXVpZCI6ICJjM2YwZTNlZC0yMWUxLTRkNTMtYWZmYi1m
ZTVjYTMzMDhjY2EifSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRp
b25fcGVybXMiOiB7fSwgInRleHQiOiAibGRhcF9zZWFyY2hfcGFyYW0iLCAiYmxhbmtfb3B0aW9u
IjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDE4OSwg
InJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICI4NDZkZmY0Zi03MWI2LTRhYjItYmZkMy1mOWZm
MDJlMjQ2NDEiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRp
cCI6ICJQYXJhbWV0ZXIgdXNlZCBpbiBMREFQIHNlYXJjaCIsICJpbnRlcm5hbCI6IGZhbHNlLCAi
cmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5j
dGlvbi9sZGFwX3NlYXJjaF9wYXJhbSIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxh
Y2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAibGRhcF9zZWFyY2hfcGFyYW0iLCAiZGVmYXVsdF9jaG9z
ZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAi
dHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImxkYXBfc2VhcmNo
X2F0dHJpYnV0ZXMiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hh
bmdlYWJsZSI6IHRydWUsICJpZCI6IDE5MCwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJk
NDQ5YWE1My0yMGU4LTRhZjAtYmI2MS01MjVmNDIwOGIwN2IiLCAiY2hvc2VuIjogZmFsc2UsICJp
bnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJBIHNpbmdsZSBhdHRyaWJ1dGUgb3IgYSBs
aXN0IG9mIGF0dHJpYnV0ZXMgdG8gYmUgcmV0dXJuZWQgYnkgdGhlIExEQVAgc2VhcmNoICIsICJp
bnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4
cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9sZGFwX3NlYXJjaF9hdHRyaWJ1dGVzIiwgImhpZGVfbm90
aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJsZGFwX3NlYXJj
aF9hdHRyaWJ1dGVzIiwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVz
IjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJt
cyI6IHt9LCAidGV4dCI6ICJsZGFwX3NlYXJjaF9iYXNlIiwgImJsYW5rX29wdGlvbiI6IGZhbHNl
LCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAxODgsICJyZWFkX29u
bHkiOiBmYWxzZSwgInV1aWQiOiAiZTcyZTQ2OWUtMzQyZS00ZWY5LTg4NjMtZDg0ZGVlMjc3NThh
IiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAiOiAiVGhl
IGJhc2Ugb2YgdGhlIExEQVAgc2VhcmNoIHJlcXVlc3QuIiwgImludGVybmFsIjogZmFsc2UsICJy
aWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0
aW9uL2xkYXBfc2VhcmNoX2Jhc2UiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNl
aG9sZGVyIjogIiIsICJuYW1lIjogImxkYXBfc2VhcmNoX2Jhc2UiLCAiZGVmYXVsdF9jaG9zZW5f
Ynlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlw
ZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImxkYXBfc2VhcmNoX2Zp
bHRlciIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxl
IjogdHJ1ZSwgImlkIjogMTg3LCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogImE1NTBlMDEx
LTMxOGUtNGI3Yy1hNGVlLTdlYzAxMWVlMDQ0NyIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5
cGUiOiAidGV4dGFyZWEiLCAidG9vbHRpcCI6ICJUaGUgZmlsdGVyIG9mIHRoZSBMREFQIHNlYXJj
aCByZXF1ZXN0IiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBs
YXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2xkYXBfc2VhcmNoX2ZpbHRlciIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAi
bGRhcF9zZWFyY2hfZmlsdGVyIiwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAi
dmFsdWVzIjogW119XSwgIm92ZXJyaWRlcyI6IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTMxMTY5MzMz
NzYwfQ==
"""
    )
