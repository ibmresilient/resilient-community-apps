# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_useragentanalysis"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_useragentanalysis package"""
    reload_params = {"package": u"fn_useragentanalysis",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"user_agent_string"], 
                    "datatables": [], 
                    "message_destinations": [u"useragentanalysis_fn"], 
                    "functions": [u"fn_useragentanalysis"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"user_agent_workflow"], 
                    "actions": [u"Example: User Agent Analysis"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     user_agent_string
    #   Message Destinations:
    #     useragentanalysis_fn
    #   Functions:
    #     fn_useragentanalysis
    #   Workflows:
    #     user_agent_workflow
    #   Rules:
    #     Example: User Agent Analysis


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogImYxYmVjYmZkLWJhMjUt
NGIzZC1iYTY5LWFlNDk4NTQ5NTkzYiIsICJkZXNjcmlwdGlvbiI6ICIiLCAib2JqZWN0X3R5cGUi
OiAiYXJ0aWZhY3QiLCAiZXhwb3J0X2tleSI6ICJ1c2VyX2FnZW50X3dvcmtmbG93IiwgIndvcmtm
bG93X2lkIjogMjQsICJsYXN0X21vZGlmaWVkX2J5IjogImFAZXhhbXBsZS5jb20iLCAiY29udGVu
dCI6IHsieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/Pjxk
ZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQv
TU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAw
NTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUy
NC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQv
RElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHht
bG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwi
aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3Bh
Y2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cInVzZXJfYWdl
bnRfd29ya2Zsb3dcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IFVzZXIg
QWdlbnQgV29ya2Zsb3dcIj48ZG9jdW1lbnRhdGlvbi8+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzB6c21xY3M8L291dGdvaW5nPjwv
c3RhcnRFdmVudD48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wdGliOHR4XCI+PGluY29taW5nPlNl
cXVlbmNlRmxvd18wNnVtaThhPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1c
IlNlcnZpY2VUYXNrXzFqZzBsbHVcIiBuYW1lPVwiVXNlciBBZ2VudCBBbmFseXNpc1wiIHJlc2ls
aWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5j
dGlvbiB1dWlkPVwiZTM2M2ZiNTktOTRjMC00MGUzLThlODctMWVkNjNhNGM4MTJlXCI+e1wiaW5w
dXRzXCI6e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJ1c2VyX2FnZW50X2FuYWx5c2lz
ID0gc3RyKHJlc3VsdHMudXNlcl9hZ2VudF9hbmFseXNpcylcXG5pbmNpZGVudC5hZGROb3RlKHVc
XFwiQXJ0aWZhY3Q6IHt9XFxcXG5cXFxcbnt9XFxcIi5mb3JtYXQoYXJ0aWZhY3QudmFsdWUsIHVz
ZXJfYWdlbnRfYW5hbHlzaXMpKVxcblxcbiMgVE9ETyBhZGQgZXhhbXBsZSBwYXlsb2FkXFxuI3sn
dXNlcl9hZ2VudF9zdHJpbmcnOiAnXFxcIk1vemlsbGEvNS4wIChNYWNpbnRvc2g7IEludGVsIE1h
YyBPUyBYIDEwXzlfNSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hy
b21lLzY0LjAuMzI4Mi4xNDAgU2FmYXJpLzUzNy4zNlxcXCInLCAnc291cmNlX2FwaV91cmwnOiAn
aHR0cHM6Ly9hcGkud2hhdGlzbXlicm93c2VyLmNvbS9hcGkvdjIvdXNlcl9hZ2VudF9wYXJzZScs
ICd1c2VyX2FnZW50X2FuYWx5c2lzJzogJ3tcXFwicGFyc2VcXFwiOiB7XFxcInVzZXJfYWdlbnRc
XFwiOiBcXFwiXFxcXFxcXFxcXFwiTW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9T
IFggMTBfOV81KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUv
NjQuMC4zMjgyLjE0MCBTYWZhcmkvNTM3LjM2XFxcXFxcXFxcXFwiXFxcIiwgXFxcInNvZnR3YXJl
X25hbWVcXFwiOiBcXFwiQ2hyb21lXFxcIiwgXFxcIm9wZXJhdGluZ19zeXN0ZW1cXFwiOiBcXFwi
TWFjIE9TIFggKE1hdmVyaWNrcylcXFwiLCBcXFwic29mdHdhcmVfdmVyc2lvblxcXCI6IFxcXCI2
NFxcXCIsIFxcXCJvcGVyYXRpbmdfc3lzdGVtX25hbWVcXFwiOiBcXFwiTWFjIE9TIFhcXFwiLCBc
XFwib3BlcmF0aW5nX3N5c3RlbV92ZXJzaW9uX2Z1bGxcXFwiOiBbXFxcIjEwXFxcIiwgXFxcIjlc
XFwiLCBcXFwiNVxcXCJdLCBcXFwic29mdHdhcmVfbmFtZV9jb2RlXFxcIjogXFxcImNocm9tZVxc
XCIsIFxcXCJzaW1wbGVfb3BlcmF0aW5nX3BsYXRmb3JtX3N0cmluZ1xcXCI6IG51bGwsIFxcXCJv
cGVyYXRpbmdfc3lzdGVtX3ZlcnNpb25cXFwiOiBcXFwiTWF2ZXJpY2tzXFxcIiwgXFxcInNpbXBs
ZV9zdWJfZGVzY3JpcHRpb25fc3RyaW5nXFxcIjogbnVsbCwgXFxcImlzX2FidXNpdmVcXFwiOiBm
YWxzZSwgXFxcIm9wZXJhdGluZ19zeXN0ZW1fZmxhdm91cl9jb2RlXFxcIjogbnVsbCwgXFxcInNv
ZnR3YXJlX3ZlcnNpb25fZnVsbFxcXCI6IFtcXFwiNjRcXFwiLCBcXFwiMFxcXCIsIFxcXCIzMjgy
XFxcIiwgXFxcIjE0MFxcXCJdLCBcXFwic2ltcGxlX3NvZnR3YXJlX3N0cmluZ1xcXCI6IFxcXCJD
aHJvbWUgNjQgb24gTWFjIE9TIFggKE1hdmVyaWNrcylcXFwiLCBcXFwib3BlcmF0aW5nX3N5c3Rl
bV9mbGF2b3VyXFxcIjogbnVsbCwgXFxcIm9wZXJhdGluZ19zeXN0ZW1fbmFtZV9jb2RlXFxcIjog
XFxcIm1hYy1vcy14XFxcIiwgXFxcInNvZnR3YXJlXFxcIjogXFxcIkNocm9tZSA2NFxcXCJ9LCBc
XFwicmVzdWx0XFxcIjoge1xcXCJtZXNzYWdlXFxcIjogXFxcIlRoZSB1c2VyIGFnZW50IHdhcyBw
YXJzZWQgc3VjY2Vzc2Z1bGx5LlxcXCIsIFxcXCJjb2RlXFxcIjogXFxcInN1Y2Nlc3NcXFwiLCBc
XFwibWVzc2FnZV9jb2RlXFxcIjogXFxcInVzZXJfYWdlbnRfcGFyc2VkXFxcIn19J31cXG5cXG5c
IixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLnVzZXJfYWdlbnRfc3RyaW5nID0g
YXJ0aWZhY3QudmFsdWVcIixcInJlc3VsdF9uYW1lXCI6XCJcIn08L3Jlc2lsaWVudDpmdW5jdGlv
bj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMHpzbXFjczwvaW5j
b21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wNnVtaThhPC9vdXRnb2luZz48L3NlcnZpY2VU
YXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMHpzbXFjc1wiIHNvdXJjZVJlZj1c
IlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzFqZzBsbHVcIi8+
PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wNnVtaThhXCIgc291cmNlUmVmPVwiU2Vy
dmljZVRhc2tfMWpnMGxsdVwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzB0aWI4dHhcIi8+PHRleHRB
bm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIg
d29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFz
c29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJn
ZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRl
eHRBbm5vdGF0aW9uXzBmZmk2MHhcIj48dGV4dD5PdXRwdXQgY3JlYXRlcyBhIE5vdGU8L3RleHQ+
PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wdzluZGpmXCIg
c291cmNlUmVmPVwiU2VydmljZVRhc2tfMWpnMGxsdVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0
aW9uXzBmZmk2MHhcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlh
Z3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1c
IkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2OVwiIHk9XCIxNzVcIi8+PGJwbW5kaTpCUE1O
TGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNjRcIiB5
PVwiMjEwXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRo
PVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0
aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE3NlwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjA3XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8wdGliOHR4XCIgaWQ9XCJFbmRFdmVudF8wdGli
OHR4X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNjIw
XCIgeT1cIjE3NVwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEz
XCIgd2lkdGg9XCIwXCIgeD1cIjYzOFwiIHk9XCIyMTRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VU
YXNrXzFqZzBsbHVcIiBpZD1cIlNlcnZpY2VUYXNrXzFqZzBsbHVfZGlcIj48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMzM3XCIgeT1cIjE1M1wiLz48L2JwbW5k
aTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18w
enNtcWNzXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMHpzbXFjc19kaVwiPjxvbWdkaTp3YXlwb2ludCB4
PVwiMjA1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxOTNcIi8+PG9tZ2RpOndheXBv
aW50IHg9XCIyNjhcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE5M1wiLz48b21nZGk6
d2F5cG9pbnQgeD1cIjI2OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTkzXCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiMzM3XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxOTNc
Ii8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwi
OTBcIiB4PVwiMjM4XCIgeT1cIjE4Ni41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpC
UE1ORWRnZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzA2dW1p
OGFcIiBpZD1cIlNlcXVlbmNlRmxvd18wNnVtaThhX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0
MzdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE5M1wiLz48b21nZGk6d2F5cG9pbnQg
eD1cIjYyMFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTkzXCIvPjxicG1uZGk6QlBN
TkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNTI4LjVc
IiB5PVwiMTcxXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRp
OkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzBmZmk2MHhcIiBpZD1cIlRl
eHRBbm5vdGF0aW9uXzBmZmk2MHhfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjQyXCIgd2lk
dGg9XCIxMzJcIiB4PVwiMzk1XCIgeT1cIjUyXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRp
OkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMHc5bmRqZlwiIGlkPVwiQXNzb2Np
YXRpb25fMHc5bmRqZl9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDEyXCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIxNTNcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0NDhcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjk0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQ
TU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ3b3JrZmxvd19p
ZCI6ICJ1c2VyX2FnZW50X3dvcmtmbG93IiwgInZlcnNpb24iOiA2fSwgImxhc3RfbW9kaWZpZWRf
dGltZSI6IDE1NTIxMzk3MDg2ODMsICJjcmVhdG9yX2lkIjogImFAZXhhbXBsZS5jb20iLCAiYWN0
aW9ucyI6IFtdLCAicHJvZ3JhbW1hdGljX25hbWUiOiAidXNlcl9hZ2VudF93b3JrZmxvdyIsICJu
YW1lIjogIkV4YW1wbGU6IFVzZXIgQWdlbnQgV29ya2Zsb3cifV0sICJhY3Rpb25zIjogW3sibG9n
aWNfdHlwZSI6ICJhbGwiLCAibmFtZSI6ICJFeGFtcGxlOiBVc2VyIEFnZW50IEFuYWx5c2lzIiwg
InZpZXdfaXRlbXMiOiBbXSwgInR5cGUiOiAxLCAid29ya2Zsb3dzIjogWyJ1c2VyX2FnZW50X3dv
cmtmbG93Il0sICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJ0aW1lb3V0X3NlY29uZHMiOiA4
NjQwMCwgInV1aWQiOiAiYmE3ODY0YjAtZDBjOS00NTZhLThkNTktZjdjMTY2Yzg4OTkxIiwgImF1
dG9tYXRpb25zIjogW10sICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFVzZXIgQWdlbnQgQW5hbHlz
aXMiLCAiY29uZGl0aW9ucyI6IFt7InR5cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IG51bGws
ICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5cGUiLCAibWV0aG9kIjogImluIiwgInZhbHVlIjog
WyJTdHJpbmciLCAiSFRUUCBSZXF1ZXN0IEhlYWRlciIsICJVc2VyIEFnZW50Il19XSwgImlkIjog
MzYsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdfV0sICJsYXlvdXRzIjogW10sICJleHBvcnRf
Zm9ybWF0X3ZlcnNpb24iOiAyLCAiaWQiOiA5LCAiaW5kdXN0cmllcyI6IG51bGwsICJwaGFzZXMi
OiBbXSwgImFjdGlvbl9vcmRlciI6IFtdLCAiZ2VvcyI6IG51bGwsICJsb2NhbGUiOiBudWxsLCAi
c2VydmVyX3ZlcnNpb24iOiB7Im1ham9yIjogMzEsICJ2ZXJzaW9uIjogIjMxLjAuNDI1NCIsICJi
dWlsZF9udW1iZXIiOiA0MjU0LCAibWlub3IiOiAwfSwgInRpbWVmcmFtZXMiOiBudWxsLCAid29y
a3NwYWNlcyI6IFtdLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJmdW5jdGlvbnMiOiBbeyJkaXNw
bGF5X25hbWUiOiAiVXNlciBBZ2VudCBBbmFseXNpcyIsICJkZXNjcmlwdGlvbiI6IHsiY29udGVu
dCI6ICJmdW5jdGlvbiB0byBwYXJzZSBhbmQgdG8gcHJvdmlkZSBhbmFseXNpcyBvbiB1c2VyIGFn
ZW50IHN0cmluZ3MiLCAiZm9ybWF0IjogInRleHQifSwgImNyZWF0b3IiOiB7ImRpc3BsYXlfbmFt
ZSI6ICJhYmxlIGJhY2tlciIsICJ0eXBlIjogInVzZXIiLCAiaWQiOiAzLCAibmFtZSI6ICJhQGV4
YW1wbGUuY29tIn0sICJ2aWV3X2l0ZW1zIjogW3sic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBl
IjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJm
aWVsZF91dWlkIiwgImNvbnRlbnQiOiAiY2I0MmE2YmEtYjZkNC00ZWVkLTgzOGYtNWM4YjYwYmI2
YjMzIiwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJleHBvcnRfa2V5IjogImZuX3VzZXJhZ2VudGFu
YWx5c2lzIiwgInV1aWQiOiAiZTM2M2ZiNTktOTRjMC00MGUzLThlODctMWVkNjNhNGM4MTJlIiwg
Imxhc3RfbW9kaWZpZWRfYnkiOiB7ImRpc3BsYXlfbmFtZSI6ICJhYmxlIGJhY2tlciIsICJ0eXBl
IjogInVzZXIiLCAiaWQiOiAzLCAibmFtZSI6ICJhQGV4YW1wbGUuY29tIn0sICJ2ZXJzaW9uIjog
MiwgIndvcmtmbG93cyI6IFt7ImRlc2NyaXB0aW9uIjogbnVsbCwgIm9iamVjdF90eXBlIjogImFy
dGlmYWN0IiwgImFjdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTogVXNlciBBZ2VudCBXb3Jr
ZmxvdyIsICJ3b3JrZmxvd19pZCI6IDI0LCAicHJvZ3JhbW1hdGljX25hbWUiOiAidXNlcl9hZ2Vu
dF93b3JrZmxvdyIsICJ1dWlkIjogbnVsbH1dLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU1MjA3
MDIxNTIwNywgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJ1c2VyYWdlbnRhbmFseXNpc19mbiIsICJp
ZCI6IDE2LCAibmFtZSI6ICJmbl91c2VyYWdlbnRhbmFseXNpcyJ9XSwgIm5vdGlmaWNhdGlvbnMi
OiBudWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJpbmNpZGVudF90eXBlcyI6IFt7ImNyZWF0ZV9k
YXRlIjogMTU1MjEzOTc1OTk3NCwgImRlc2NyaXB0aW9uIjogIkN1c3RvbWl6YXRpb24gUGFja2Fn
ZXMgKGludGVybmFsKSIsICJleHBvcnRfa2V5IjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGlu
dGVybmFsKSIsICJpZCI6IDAsICJuYW1lIjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVy
bmFsKSIsICJ1cGRhdGVfZGF0ZSI6IDE1NTIxMzk3NTk5NzQsICJ1dWlkIjogImJmZWVjMmQ0LTM3
NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJlbmFibGVkIjogZmFsc2UsICJzeXN0ZW0iOiBm
YWxzZSwgInBhcmVudF9pZCI6IG51bGwsICJoaWRkZW4iOiBmYWxzZX1dLCAic2NyaXB0cyI6IFtd
LCAidHlwZXMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3sidXVpZCI6ICJhY2MyOTM1
NS0yMWM4LTQwNmMtODU4Mi1kZDRlNWFjMWNhOTkiLCAiZXhwb3J0X2tleSI6ICJ1c2VyYWdlbnRh
bmFseXNpc19mbiIsICJuYW1lIjogInVzZXJhZ2VudGFuYWx5c2lzX2ZuIiwgImRlc3RpbmF0aW9u
X3R5cGUiOiAwLCAicHJvZ3JhbW1hdGljX25hbWUiOiAidXNlcmFnZW50YW5hbHlzaXNfZm4iLCAi
ZXhwZWN0X2FjayI6IHRydWUsICJ1c2VycyI6IFsiYUBleGFtcGxlLmNvbSJdfV0sICJpbmNpZGVu
dF9hcnRpZmFjdF90eXBlcyI6IFtdLCAicm9sZXMiOiBbXSwgImZpZWxkcyI6IFt7Im9wZXJhdGlv
bnMiOiBbXSwgInR5cGVfaWQiOiAwLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogIlNp
bXVsYXRpb24iLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdl
YWJsZSI6IHRydWUsICJpZCI6IDUxLCAicmVhZF9vbmx5IjogdHJ1ZSwgInV1aWQiOiAiYzNmMGUz
ZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRf
dHlwZSI6ICJib29sZWFuIiwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRlbnQgaXMgYSBz
aW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQgaXMgcmVhZC1vbmx5
LiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBb
XSwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQvaW5jX3RyYWluaW5nIiwgImhpZGVfbm90aWZpY2F0
aW9uIjogZmFsc2UsICJuYW1lIjogImluY190cmFpbmluZyIsICJkZXByZWNhdGVkIjogZmFsc2Us
ICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfSwgeyJvcGVy
YXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQi
OiAidXNlcl9hZ2VudF9zdHJpbmciLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBu
dWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDIzMSwgInJlYWRfb25seSI6IGZhbHNlLCAi
dXVpZCI6ICJjYjQyYTZiYS1iNmQ0LTRlZWQtODM4Zi01YzhiNjBiYjZiMzMiLCAiY2hvc2VuIjog
ZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJTb2Z0d2FyZSAoYSBzb2Z0
d2FyZSBhZ2VudCkgdGhhdCBpcyBhY3Rpbmcgb24gYmVoYWxmIG9mIGEgdXNlci4iLCAiaW50ZXJu
YWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRf
a2V5IjogIl9fZnVuY3Rpb24vdXNlcl9hZ2VudF9zdHJpbmciLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgInBsYWNlaG9sZGVyIjogImhlbGxvIiwgIm5hbWUiOiAidXNlcl9hZ2VudF9zdHJp
bmciLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJ2YWx1ZXMiOiBbXX1dLCAib3ZlcnJpZGVzIjogW10sICJleHBvcnRfZGF0ZSI6IDE1NTIx
Mzk3MjUxNDN9
"""
    )