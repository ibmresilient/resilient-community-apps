# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_cve_search"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_cve_search package"""
    reload_params = {"package": u"fn_cve_search",
                    "incident_fields": [], 
                    "action_fields": [u"cve_id", u"cve_published_date_from", u"cve_published_date_to", u"cve_search_criteria", u"product", u"vendor"], 
                    "function_params": [u"cve_id", u"cve_product", u"cve_published_date_from", u"cve_published_date_to", u"cve_search_criteria", u"cve_search_data", u"cve_vendor"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_cve"], 
                    "functions": [u"function_cve"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_cve_search"], 
                    "actions": [u"Example : CVE Search"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     cve_id
    #     cve_published_date_from
    #     cve_published_date_to
    #     cve_search_criteria
    #     product
    #     vendor
    #   Function inputs:
    #     cve_id
    #     cve_product
    #     cve_published_date_from
    #     cve_published_date_to
    #     cve_search_criteria
    #     cve_search_data
    #     cve_vendor
    #   Message Destinations:
    #     fn_cve
    #   Functions:
    #     function_cve
    #   Workflows:
    #     example_cve_search
    #   Rules:
    #     Example : CVE Search


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMSwgImJ1aWxkX251bWJl
ciI6IDc2LCAidmVyc2lvbiI6ICIzMS4xLjc2In0sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAy
LCAiaWQiOiA0OCwgImV4cG9ydF9kYXRlIjogMTU0OTg5MTU0OTI3MywgImZpZWxkcyI6IFt7Imlk
IjogNTEsICJuYW1lIjogImluY190cmFpbmluZyIsICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAicHJl
Zml4IjogbnVsbCwgInR5cGVfaWQiOiAwLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNpZGVu
dCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBpcyBy
ZWFkLW9ubHkuIiwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJoaWRlX25vdGlmaWNhdGlvbiI6
IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxz
ZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiYzNm
MGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9w
ZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiB0cnVlLCAiY2hh
bmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5jaWRl
bnQvaW5jX3RyYWluaW5nIiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwg
eyJpZCI6IDIwOSwgIm5hbWUiOiAiY3ZlX3B1Ymxpc2hlZF9kYXRlX2Zyb20iLCAidGV4dCI6ICJD
VkUgUHVibGlzaGVkIERhdGUgRnJvbSIsICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJ0eXBlX2lk
IjogNiwgInRvb2x0aXAiOiAiU2VsZWN0IENWRSBQdWJsaXNoZWQgRGF0ZSAgTm90ZSA6IHNlbGVj
dGluZyBkYXRlIHJhbmdlIGxpbWl0cyBzZWFyY2ggdG8gc3BlY2lmaWVkIHJhbmdlIG9mIGRhdGVz
IiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogImRhdGVwaWNrZXIiLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2Us
ICJ1dWlkIjogIjVmYWU5ZTc5LTExMTgtNDE5NS1iZWRiLWVjYzQwYzQyYTY3OSIsICJvcGVyYXRp
b25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5
IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0
X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL2N2ZV9wdWJsaXNoZWRfZGF0ZV9mcm9tIiwgInRlbXBs
YXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDIwOCwgIm5hbWUiOiAiY3Zl
X2lkIiwgInRleHQiOiAiQ1ZFIElEIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwgInR5cGVfaWQi
OiA2LCAidG9vbHRpcCI6ICJTcGVjaWZpYyBDVkUgSUQgdG8gc2VhcmNoIHRoZSBkYXRhIGZyb20g
Q1ZFIERhdGFiYXNlIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAi
aGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9z
ZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjog
ZmFsc2UsICJ1dWlkIjogIjllZTdjODNjLTBmMjEtNDYxZC04MTRkLTlkZjRiOWMwYzE1NiIsICJv
cGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVh
ZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAi
ZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL2N2ZV9pZCIsICJ0ZW1wbGF0ZXMiOiBbXSwg
ImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQiOiAyMTEsICJuYW1lIjogImN2ZV9wdWJsaXNoZWRf
ZGF0ZV90byIsICJ0ZXh0IjogIkNWRSBQdWJsaXNoZWQgRGF0ZSBUbyIsICJwcmVmaXgiOiAicHJv
cGVydGllcyIsICJ0eXBlX2lkIjogNiwgInRvb2x0aXAiOiAiRW5kIGRhdGUgcmFuZ2UgdG8gc2Vh
cmNoIGN2ZSBkYXRhIE5vdGUgOiBzZWxlY3RpbmcgZGF0ZSByYW5nZSBsaW1pdHMgc2VhcmNoIHRv
IHNwZWNpZmllZCByYW5nZSBvZiBkYXRlcyIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlw
ZSI6ICJkYXRlcGlja2VyIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjog
ZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICJhMTRmZTM2OC1jNjQxLTQ3ZjMtOTAx
Yi0yZWQ5MjgyMTMzYmIiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30s
ICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJy
aWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9jdmVfcHVi
bGlzaGVkX2RhdGVfdG8iLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7
ImlkIjogMjA1LCAibmFtZSI6ICJjdmVfc2VhcmNoX2NyaXRlcmlhIiwgInRleHQiOiAiQ1ZFIFNl
YXJjaCBDcml0ZXJpYSIsICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJ0eXBlX2lkIjogNiwgInRv
b2x0aXAiOiAiQ1ZFIFNlYXJjaCBDcml0ZXJpYSBpLmUgQnJvd3NlKEZvciBWZW5kb3JzKSxTZWFy
Y2goRm9yIFNwZWNpZmljIFByb2R1Y3QgZnJvbSBWZW5kb3IpLENWRSBJRChnZXQgY3ZlIHBlciBj
dmUgaWQpLExhc3QgMzAgQ1ZFUyhnZXQgbGFzdCAzMCBjdmVzIGluY2x1ZGluZyBDQVBFQyBDV0Ug
YW5kIENQRSBFeHBhbnNhdGlvbiksIENWRSBEQiBJbmZvKGdldCBpbmZvcm1hdGlvbiBhYm91dCBj
dXJyZW50IGN2ZSBkYXRhYmFzZSkiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAi
c2VsZWN0IiwgInJlcXVpcmVkIjogImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNl
LCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJs
YW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiNmI3ZjMwMmEt
MDc4NS00Yjc1LWE2NjYtYzNlNjNiODA3NWNlIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlv
bl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW3sidmFsdWUiOiAxNTUsICJsYWJlbCI6ICJCcm93c2Ui
LCAiZW5hYmxlZCI6IHRydWUsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiNWRjM2VjYzQt
MTcyZS00OGE5LTk3OTgtYzg1MjEyN2M5M2IyIiwgImhpZGRlbiI6IGZhbHNlLCAiZGVmYXVsdCI6
IHRydWV9LCB7InZhbHVlIjogMTU2LCAibGFiZWwiOiAiU2VhcmNoIiwgImVuYWJsZWQiOiB0cnVl
LCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjRiNDJmODYzLTkwY2ItNDUxNy1hZDY3LTRk
NWIzZTJhZTM4OCIsICJoaWRkZW4iOiBmYWxzZSwgImRlZmF1bHQiOiBmYWxzZX0sIHsidmFsdWUi
OiAxNTcsICJsYWJlbCI6ICJTcGVjaWZpYyBDVkUgSUQiLCAiZW5hYmxlZCI6IHRydWUsICJwcm9w
ZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiOTUxNTI2MTEtYTYyOC00NmJjLWE0MjYtNTBjZDQyYzc3
MzQzIiwgImhpZGRlbiI6IGZhbHNlLCAiZGVmYXVsdCI6IGZhbHNlfSwgeyJ2YWx1ZSI6IDE1OCwg
ImxhYmVsIjogIkxhc3QgMzAgQ1ZFUyIsICJlbmFibGVkIjogdHJ1ZSwgInByb3BlcnRpZXMiOiBu
dWxsLCAidXVpZCI6ICIxYzgzZmNkNi0wYTY5LTQ2ODQtOGRlNy02ZjI2MzcxZjFlNTAiLCAiaGlk
ZGVuIjogZmFsc2UsICJkZWZhdWx0IjogZmFsc2V9LCB7InZhbHVlIjogMTU5LCAibGFiZWwiOiAi
Q1ZFIERCIEluZm8iLCAiZW5hYmxlZCI6IHRydWUsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQi
OiAiZWJjZWJlNzYtM2JjMC00YTY5LTkxZTktZjBmZTBjNjRlY2QxIiwgImhpZGRlbiI6IGZhbHNl
LCAiZGVmYXVsdCI6IGZhbHNlfV0sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0
cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRpb24v
Y3ZlX3NlYXJjaF9jcml0ZXJpYSIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxz
ZX0sIHsiaWQiOiAyMDcsICJuYW1lIjogInByb2R1Y3QiLCAidGV4dCI6ICJQcm9kdWN0IiwgInBy
ZWZpeCI6ICJwcm9wZXJ0aWVzIiwgInR5cGVfaWQiOiA2LCAidG9vbHRpcCI6ICJOYW1lIG9mIHRo
ZSBQcm9kdWN0IHRvIFNlYXJjaCBpbiBDVkUgRGF0YWJhc2UiLCAicGxhY2Vob2xkZXIiOiAiIiwg
ImlucHV0X3R5cGUiOiAidGV4dCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2Vu
IjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlv
biI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiZjVjMDZiZGYtYTQxZS00MWE5
LWI5MmEtMGFjMDU3MjY2NDMzIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6
IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVl
LCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRpb24vcHJv
ZHVjdCIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQiOiAyMDYs
ICJuYW1lIjogInZlbmRvciIsICJ0ZXh0IjogIlZlbmRvciIsICJwcmVmaXgiOiAicHJvcGVydGll
cyIsICJ0eXBlX2lkIjogNiwgInRvb2x0aXAiOiAiQSB2ZW5kb3IgbmFtZSB0byBicm93c2UgZm9y
IGN2ZSdzIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2Us
ICJ1dWlkIjogImIzNTJkNjVlLWQ4ZjktNDVjYS04MWFlLTVmYmE5YzJkY2MwZiIsICJvcGVyYXRp
b25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5
IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0
X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL3ZlbmRvciIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJl
Y2F0ZWQiOiBmYWxzZX0sIHsiaWQiOiAyMTksICJuYW1lIjogImN2ZV92ZW5kb3IiLCAidGV4dCI6
ICJjdmVfdmVuZG9yIiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjog
ImEgdmVuZG9yIG5hbWUgdG8gYnJvd3NlIGZvciBjdmUiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlu
cHV0X3R5cGUiOiAidGV4dCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjog
ZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiZjFhNWM3OTAtZmFhNC00YWE4LWJi
NDItNGYxNzQ5MWZmODQ1IiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9
LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAi
cmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vY3ZlX3ZlbmRvciIs
ICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQiOiAyMjAsICJuYW1l
IjogImN2ZV9wcm9kdWN0IiwgInRleHQiOiAiY3ZlX3Byb2R1Y3QiLCAicHJlZml4IjogbnVsbCwg
InR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiTmFtZSBvZiB0aGUgUHJvZHVjdCB0byBTZWFyY2gg
aW4gQ1ZFIERhdGFiYXNlIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQi
LCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9j
aG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFs
IjogZmFsc2UsICJ1dWlkIjogIjRhZTU5MjEzLWJlMzctNGUwNy1hN2VhLTBjNDA5M2FkZTczMCIs
ICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAi
cmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2N2ZV9wcm9kdWN0IiwgInRlbXBsYXRlcyI6IFtd
LCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDIxOCwgIm5hbWUiOiAiY3ZlX3NlYXJjaF9j
cml0ZXJpYSIsICJ0ZXh0IjogImN2ZV9zZWFyY2hfY3JpdGVyaWEiLCAicHJlZml4IjogbnVsbCwg
InR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiQ1ZFIFNlYXJjaCBDcml0ZXJpYSBpLmUgQnJvd3Nl
KEZvciBWZW5kb3JzKSxTZWFyY2goRm9yIFNwZWNpZmljIFByb2R1Y3QgZnJvbSBWZW5kb3IpLENW
RSBJRChnZXQgY3ZlIHBlciBjdmUgaWQpLExhc3QgMzAgQ1ZFUyhnZXQgbGFzdCAzMCBjdmVzIGlu
Y2x1ZGluZyBDQVBFQyBDV0UgYW5kIENQRSBFeHBhbnNhdGlvbiksIENWRSBEQiBJbmZvKGdldCBp
bmZvcm1hdGlvbiBhYm91dCBjdXJyZW50IGN2ZSBkYXRhYmFzZSkiLCAicGxhY2Vob2xkZXIiOiAi
IiwgImlucHV0X3R5cGUiOiAidGV4dCIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2Vy
dmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1
dWlkIjogIjk4NjUxNDFhLTI0YWQtNDY2Mi05MjAzLWZlN2Y0NTQ3YTRmOSIsICJvcGVyYXRpb25z
IjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5Ijog
ZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tl
eSI6ICJfX2Z1bmN0aW9uL2N2ZV9zZWFyY2hfY3JpdGVyaWEiLCAidGVtcGxhdGVzIjogW10sICJk
ZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMjIzLCAibmFtZSI6ICJjdmVfaWQiLCAidGV4dCI6
ICJjdmVfaWQiLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiQ1ZF
IElEIiwgInBsYWNlaG9sZGVyIjogIkNWRS0yMDA4LTM5NDkiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0
IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRf
Y2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJpbnRlcm5h
bCI6IGZhbHNlLCAidXVpZCI6ICJiNmY2MjcxMC1mMTcyLTQ2ODctYjY5Yi00ODA2MjIwYTJkNTIi
LCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbXSwg
InJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxz
ZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9jdmVfaWQiLCAidGVtcGxhdGVzIjogW10sICJk
ZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMjIxLCAibmFtZSI6ICJjdmVfcHVibGlzaGVkX2Rh
dGVfZnJvbSIsICJ0ZXh0IjogImN2ZV9wdWJsaXNoZWRfZGF0ZV9mcm9tIiwgInByZWZpeCI6IG51
bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjogIlNlbGVjdCBDVkUgUHVibGlzaGVkIERhdGUi
LCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAiZGF0ZXBpY2tlciIsICJoaWRlX25v
dGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9z
ZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwg
InV1aWQiOiAiMTEyNTQ4ZTgtYTRmOC00OTA2LWJkMmYtYTc5ZGM2ZDQ2ZGE1IiwgIm9wZXJhdGlv
bnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHki
OiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRf
a2V5IjogIl9fZnVuY3Rpb24vY3ZlX3B1Ymxpc2hlZF9kYXRlX2Zyb20iLCAidGVtcGxhdGVzIjog
W10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMjAxLCAibmFtZSI6ICJjdmVfc2VhcmNo
X2RhdGEiLCAidGV4dCI6ICJjdmVfc2VhcmNoX2RhdGEiLCAicHJlZml4IjogbnVsbCwgInR5cGVf
aWQiOiAxMSwgInRvb2x0aXAiOiAiQSBhcnRpZmFjdCBkYXRhIHRvIHNlYXJjaCBmb3IgY3ZlIiwg
InBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAicmVxdWlyZWQiOiAiYWx3
YXlzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1
bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJpbnRl
cm5hbCI6IGZhbHNlLCAidXVpZCI6ICJhOGU1ZTg2OC03YTZhLTQxM2ItYjYxOS00YjQ4NDlkMGRk
MWUiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMiOiBb
XSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBm
YWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9jdmVfc2VhcmNoX2RhdGEiLCAidGVtcGxh
dGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMjIyLCAibmFtZSI6ICJjdmVf
cHVibGlzaGVkX2RhdGVfdG8iLCAidGV4dCI6ICJjdmVfcHVibGlzaGVkX2RhdGVfdG8iLCAicHJl
Zml4IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiRW5kIGRhdGUgcmFuZ2UgdG8g
c2VhcmNoIGN2ZSBkYXRhIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogImRhdGVw
aWNrZXIiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVm
YXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImlu
dGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjU5ZDhkZWIwLTc3MjEtNDI4YS04MmRkLWZhNDg2MmNl
YzFhOSIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6
IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6
IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2N2ZV9wdWJsaXNoZWRfZGF0ZV90byIs
ICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX1dLCAiaW5jaWRlbnRfdHlwZXMi
OiBbeyJ1cGRhdGVfZGF0ZSI6IDE1NDk4OTIyMDc5MDEsICJjcmVhdGVfZGF0ZSI6IDE1NDk4OTIy
MDc5MDEsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJk
ZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0
X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0
b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVt
IjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwg
InBoYXNlcyI6IFtdLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJvdmVycmlkZXMiOiBbXSwgIm1l
c3NhZ2VfZGVzdGluYXRpb25zIjogW3sibmFtZSI6ICJmbl9jdmUiLCAicHJvZ3JhbW1hdGljX25h
bWUiOiAiZm5fY3ZlIiwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUs
ICJ1c2VycyI6IFsibmthbmRoYTFAaW4uaWJtLmNvbSJdLCAidXVpZCI6ICI2OGZkOGVhZS1hY2Fh
LTQ4MmItODc5MC1mMjQ0ZWIzOWM1ZjUiLCAiZXhwb3J0X2tleSI6ICJmbl9jdmUifV0sICJhY3Rp
b25zIjogW3siaWQiOiA1MSwgIm5hbWUiOiAiRXhhbXBsZSA6IENWRSBTZWFyY2giLCAidHlwZSI6
IDEsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJjb25kaXRpb25zIjogW10sICJhdXRvbWF0
aW9ucyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbImZuX2N2ZSJdLCAid29ya2Zsb3dz
IjogWyJleGFtcGxlX2N2ZV9zZWFyY2giXSwgInZpZXdfaXRlbXMiOiBbeyJzdGVwX2xhYmVsIjog
bnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5
cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJjb250ZW50IjogIjZiN2YzMDJhLTA3ODUtNGI3NS1h
NjY2LWMzZTYzYjgwNzVjZSIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9LCB7InN0ZXBfbGFi
ZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmll
bGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgImNvbnRlbnQiOiAiYjM1MmQ2NWUtZDhmOS00
NWNhLTgxYWUtNWZiYTljMmRjYzBmIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsic3Rl
cF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIs
ICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAiY29udGVudCI6ICJmNWMwNmJkZi1h
NDFlLTQxYTktYjkyYS0wYWMwNTcyNjY0MzMiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfSwg
eyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91
dWlkIiwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJjb250ZW50IjogIjllZTdj
ODNjLTBmMjEtNDYxZC04MTRkLTlkZjRiOWMwYzE1NiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFs
c2V9LCB7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZp
ZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgImNvbnRlbnQiOiAi
NWZhZTllNzktMTExOC00MTk1LWJlZGItZWNjNDBjNDJhNjc5IiwgInNob3dfbGlua19oZWFkZXIi
OiBmYWxzZX0sIHsic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQi
OiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAiY29udGVu
dCI6ICJhMTRmZTM2OC1jNjQxLTQ3ZjMtOTAxYi0yZWQ5MjgyMTMzYmIiLCAic2hvd19saW5rX2hl
YWRlciI6IGZhbHNlfV0sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAiN2Q2YTQ4
YjctYmU2Yi00ZmQ4LThmMjAtMGQ4M2MwOWI0NWIxIiwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZSA6
IENWRSBTZWFyY2giLCAibG9naWNfdHlwZSI6ICJhbGwifV0sICJsYXlvdXRzIjogW10sICJub3Rp
ZmljYXRpb25zIjogbnVsbCwgInRpbWVmcmFtZXMiOiBudWxsLCAibG9jYWxlIjogbnVsbCwgImlu
ZHVzdHJpZXMiOiBudWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJnZW9zIjogbnVsbCwgInRhc2tf
b3JkZXIiOiBbXSwgImFjdGlvbl9vcmRlciI6IFtdLCAidHlwZXMiOiBbXSwgInNjcmlwdHMiOiBb
XSwgImluY2lkZW50X2FydGlmYWN0X3R5cGVzIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ3b3JrZmxv
d19pZCI6IDM1LCAibmFtZSI6ICJFeGFtcGxlIDogQ1ZFIFNlYXJjaCIsICJwcm9ncmFtbWF0aWNf
bmFtZSI6ICJleGFtcGxlX2N2ZV9zZWFyY2giLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAi
ZGVzY3JpcHRpb24iOiAiU2VhcmNoIERhdGEgZm9yIENvbW1vbiBWdWxuZXJhYmlsaXR5IGZyb20g
Q1ZFIERhdGFiYXNlIiwgImNyZWF0b3JfaWQiOiAibmthbmRoYTFAaW4uaWJtLmNvbSIsICJsYXN0
X21vZGlmaWVkX2J5IjogIm5rYW5kaGExQGluLmlibS5jb20iLCAibGFzdF9tb2RpZmllZF90aW1l
IjogMTU0OTY0Mjk4MzUyNiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9jdmVfc2VhcmNoIiwgInV1
aWQiOiAiYjU2MzMwMWItMjgzMy00ZTFkLWFmYzgtZjVlNmI2YzcyMDEyIiwgImNvbnRlbnQiOiB7
IndvcmtmbG93X2lkIjogImV4YW1wbGVfY3ZlX3NlYXJjaCIsICJ4bWwiOiAiPD94bWwgdmVyc2lv
bj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0
dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0
dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRw
Oi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0
dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5v
cmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hN
TFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5v
cmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9jdmVfc2VhcmNoXCIgaXNFeGVjdXRhYmxl
PVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlIDogQ1ZFIFNlYXJjaFwiPjxkb2N1bWVudGF0aW9uPlNl
YXJjaCBEYXRhIGZvciBDb21tb24gVnVsbmVyYWJpbGl0eSBmcm9tIENWRSBEYXRhYmFzZTwvZG9j
dW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2lu
Zz5TZXF1ZW5jZUZsb3dfMWQxMmRiZjwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFz
ayBpZD1cIlNlcnZpY2VUYXNrXzBwMjFubWpcIiBuYW1lPVwiQ1ZFXCIgcmVzaWxpZW50OnR5cGU9
XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9
XCI0MTc2ZjY3Yy1iN2E4LTQ5NTctYmViMy04YTI3NjNiNTMxMjdcIj57XCJpbnB1dHNcIjp7fSxc
InBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcIlxcbiNnbG9iYWxzXFxuRU5UUllfVE9fREFUQVRB
QkxFX01BUCA9IHtcXG4gICAgIFxcXCJjdmVcXFwiOiBcXFwiY3ZlX2lkXFxcIixcXG4gICAgIFxc
XCJwdWJkdGVcXFwiOiBcXFwicHVibGlzaGVkX2RhdGVcXFwiLFxcbiAgICAgXFxcInN1bVxcXCI6
IFxcXCJzdW1tYXJ5XFxcIixcXG4gICAgIFxcXCJyZWZcXFwiOiBcXFwicmVmZXJlbmNlc1xcXCIs
XFxuICAgICBcXFwidmNcXFwiOiBcXFwidnVsbmVyYWJpbGl0eV9jb25maWd1cmF0aW9uXFxcIixc
XG4gICAgIFxcXCJ2YzJcXFwiOiBcXFwidnVsbmVyYWJsZV9jb25maWd1cmF0aW9uX2NwZV8yXzJc
XFwiXFxufVxcblxcbmFwaV9jYWxsX3R5cGUgPSByZXN1bHRzWydhcGlfY2FsbCddXFxub3V0cHV0
X2RhdGEgPSByZXN1bHRzWydjb250ZW50J11cXG5hcGlfY2FsbF90eXBlX3RleHQgPSBcXFwiJmx0
O3AmZ3Q7Jmx0O2ImZ3Q7YXBpIGNhbGwgdHlwZSA6Jmx0Oy9iJmd0OyB7fSZsdDsvcCZndDtcXFwi
XFxuYnJvd3NlX3JpY2hfdGV4dCA9IFxcXCImbHQ7cCZndDsmbHQ7YiZndDt7fSZhbXA7ZW5zcDom
YW1wO2Vuc3AmbHQ7L2ImZ3Q7e30mYW1wO2Vuc3AmYW1wO2Vuc3AmbHQ7L3AmZ3Q7XFxcIlxcbnJp
Y2hfdGV4dF90bXAgPSBcXFwiXFxcIlxcbiNBZGRpbmcgQnJvd3NlIGRhdGEgYW5kIERhdGFiYXNl
IGluZm9ybWF0aW9uIE5vdGVzIFNlY3Rpb25cXG5pZiBhcGlfY2FsbF90eXBlIGluIFsnYnJvd3Nl
JywnZGInXTpcXG4gICAgIGFwaV9jYWxsX3R5cGVfdGV4dCA9IGFwaV9jYWxsX3R5cGVfdGV4dC5m
b3JtYXQoYXBpX2NhbGxfdHlwZSlcXG4gICAgIGJyb3dzZV9yaWNoX3RleHRfZmluYWwgPSBcXFwi
XFxcIlxcbiAgICAgI2lmIGFwaV9jYWxsX3R5cGUgPT0gJ2Jyb3dzZSc6XFxuICAgICBmb3IgeCBp
biBvdXRwdXRfZGF0YTpcXG4gICAgICAgICAgZm9yIGtleV9kYXRhLHZhbHVlX2RhdGEgaW4geC5p
dGVtcygpOlxcbiAgICAgICAgICAgICAgIHRleHQgPSBicm93c2VfcmljaF90ZXh0LmZvcm1hdChr
ZXlfZGF0YSx2YWx1ZV9kYXRhKVxcbiAgICAgICAgICAgICAgIGFwaV9jYWxsX3R5cGVfdGV4dCAr
PSB0ZXh0XFxuICAgICBicm93c2VfcmljaF90ZXh0X2ZpbmFsID0gaGVscGVyLmNyZWF0ZVJpY2hU
ZXh0KGFwaV9jYWxsX3R5cGVfdGV4dClcXG4gICAgIGluY2lkZW50LmFkZE5vdGUoYnJvd3NlX3Jp
Y2hfdGV4dF9maW5hbClcXG5lbGlmIGFwaV9jYWxsX3R5cGUgaW4gWydzZWFyY2gnLCdjdmUnLCds
YXN0J106XFxuICAgICAjQWRkaW5nIGRhdGEgdG8gdGFibGVcXG4gICAgIHJlZl9saW5rX3RleHQg
PSBcXFwiXFxcIlxcbiAgICAgaWYgb3V0cHV0X2RhdGE6XFxuICAgICAgICAgIGZvciBkaWN0X2Vs
ZW1lbnQgaW4gb3V0cHV0X2RhdGE6XFxuICAgICAgICAgICAgICAgcmljaF90ZXh0X3RtcCA9IFxc
XCJcXFwiXFxuICAgICAgICAgICAgICAgdGFibGVfcm93X29iamVjdCA9IGluY2lkZW50LmFkZFJv
dyhcXFwiY3ZlX2RhdGFcXFwiKVxcbiAgICAgICAgICAgICAgIGZvciBrZXlfZGF0YSx2YWx1ZV9k
YXRhIGluIGRpY3RfZWxlbWVudC5pdGVtcygpOlxcbiAgICAgICAgICAgICAgICAgICAgaWYga2V5
X2RhdGEgPT0gJ1B1Ymxpc2hlZCc6XFxuICAgICAgICAgICAgICAgICAgICAgICAgIHRhYmxlX3Jv
d19vYmplY3RbRU5UUllfVE9fREFUQVRBQkxFX01BUFtcXFwicHViZHRlXFxcIl1dID0gaW50KHZh
bHVlX2RhdGEpXFxuICAgICAgICAgICAgICAgICAgICBlbGlmIGtleV9kYXRhID09ICdpZCc6XFxu
ICAgICAgICAgICAgICAgICAgICAgICAgIHRhYmxlX3Jvd19vYmplY3RbRU5UUllfVE9fREFUQVRB
QkxFX01BUFtcXFwiY3ZlXFxcIl1dID0gdmFsdWVfZGF0YVxcbiAgICAgICAgICAgICAgICAgICAg
ZWxpZiBrZXlfZGF0YSA9PSAnc3VtbWFyeSc6XFxuICAgICAgICAgICAgICAgICAgICAgICAgIHRh
YmxlX3Jvd19vYmplY3RbRU5UUllfVE9fREFUQVRBQkxFX01BUFtcXFwic3VtXFxcIl1dID0gdmFs
dWVfZGF0YVxcbiAgICAgICAgICAgICAgICAgICAgZWxpZiBrZXlfZGF0YSA9PSAncmVmZXJlbmNl
cyc6XFxuICAgICAgICAgICAgICAgICAgICAgICAgIGZvciBsaW5rX3VybCBpbiB2YWx1ZV9kYXRh
OlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZl9saW5rX3RleHQgKz0gJyZsdDtw
Jmd0OyZsdDthIGhyZWY9XFxcInswfVxcXCImZ3Q7ezB9Jmx0Oy9hJmd0OyZsdDsvcCZndDsnLmZv
cm1hdChsaW5rX3VybClcXG4gICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVfcm93X29iamVj
dFtFTlRSWV9UT19EQVRBVEFCTEVfTUFQW1xcXCJyZWZcXFwiXV0gPSByZWZfbGlua190ZXh0XFxu
ICAgICAgICAgICAgICAgICAgICBlbGlmIGtleV9kYXRhID09ICd2dWxuZXJhYmxlX2NvbmZpZ3Vy
YXRpb24nOlxcbiAgICAgICAgICAgICAgICAgICAgICAgICBpZiB2YWx1ZV9kYXRhOlxcbiAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgIGZvciB2Y19jb2xsZWN0aW9uIGluIHZhbHVlX2RhdGE6
XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBpc2luc3RhbmNlKHZjX2Nv
bGxlY3Rpb24sZGljdCk6XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
IGZvciBrZXlfZGF0YSx2YWx1ZV9kYXRhIGluIHZjX2NvbGxlY3Rpb24uaXRlbXMoKTpcXG4gICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0ID0gYnJvd3NlX3Jp
Y2hfdGV4dC5mb3JtYXQoa2V5X2RhdGEsdmFsdWVfZGF0YSkgICAgIFxcbiAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpY2hfdGV4dF90bXAgKz0gdGV4dFxcbiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZTpcXG4gICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgcmljaF90ZXh0X3RtcCArPSBcXFwiJmx0O3AmZ3Q7e30m
bHQ7L3AmZ3Q7XFxcIi5mb3JtYXQodmNfY29sbGVjdGlvbilcXG4gICAgICAgICAgICAgICAgICAg
ICAgICAgZWxzZTpcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByaWNoX3RleHRfdG1w
ID0gXFxcIk5vIERhdGFcXFwiXFxuICAgICAgICAgICAgICAgICAgICAgICAgIHRhYmxlX3Jvd19v
YmplY3RbRU5UUllfVE9fREFUQVRBQkxFX01BUFtcXFwidmNcXFwiXV0gPSByaWNoX3RleHRfdG1w
XFxuICAgICAgICAgICAgICAgICAgICBlbGlmIGtleV9kYXRhID09ICd2dWxuZXJhYmxlX2NvbmZp
Z3VyYXRpb25fY3BlXzJfMic6XFxuICAgICAgICAgICAgICAgICAgICAgICAgIHJpY2hfdGV4dF90
bXBfMiA9ICcnXFxuICAgICAgICAgICAgICAgICAgICAgICAgIGlmIHZhbHVlX2RhdGE6XFxuICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIHZjX2NvbGxlY3Rpb24gaW4gdmFsdWVfZGF0
YTpcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpY2hfdGV4dF90bXBfMiAr
PSBcXFwiJmx0O3AmZ3Q7e30mbHQ7L3AmZ3Q7XFxcIi5mb3JtYXQodmNfY29sbGVjdGlvbilcXG4g
ICAgICAgICAgICAgICAgICAgICAgICAgZWxzZTpcXG4gICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICByaWNoX3RleHRfdG1wXzIgPSBcXFwiTm8gRGF0YVxcXCJcXG4gICAgICAgICAgICAgICAg
ICAgICAgICAgdGFibGVfcm93X29iamVjdFtFTlRSWV9UT19EQVRBVEFCTEVfTUFQW1xcXCJ2YzJc
XFwiXV0gPSByaWNoX3RleHRfdG1wXzJcXG4gICAgIGVsc2U6XFxuICAgICAgICAgIGluY2lkZW50
LmFkZE5vdGUoXFxcIlRoZXJlIGlzIE5vIERhdGEgUmV0dXJuZWQgRnJvbSBTZWFyY2guLi4hXFxc
IilcIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLmN2ZV9zZWFyY2hfZGF0YSA9
IGFydGlmYWN0LnZhbHVlXFxuaW5wdXRzLmN2ZV9zZWFyY2hfY3JpdGVyaWEgPSBydWxlLnByb3Bl
cnRpZXMuY3ZlX3NlYXJjaF9jcml0ZXJpYVxcbmlucHV0cy5jdmVfaWQgPSBydWxlLnByb3BlcnRp
ZXMuY3ZlX2lkXFxuaW5wdXRzLmN2ZV92ZW5kb3IgPSBydWxlLnByb3BlcnRpZXMudmVuZG9yXFxu
aW5wdXRzLmN2ZV9wcm9kdWN0ID0gcnVsZS5wcm9wZXJ0aWVzLnByb2R1Y3RcXG5pbnB1dHMuY3Zl
X3B1Ymxpc2hlZF9kYXRlX2Zyb20gPSBydWxlLnByb3BlcnRpZXMuY3ZlX3B1Ymxpc2hlZF9kYXRl
X2Zyb21cXG5pbnB1dHMuY3ZlX3B1Ymxpc2hlZF9kYXRlX3RvID0gcnVsZS5wcm9wZXJ0aWVzLmN2
ZV9wdWJsaXNoZWRfZGF0ZV90b1wiLFwicmVzdWx0X25hbWVcIjpcIlwifTwvcmVzaWxpZW50OmZ1
bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18xZDEyZGJm
PC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzE4YXJ2cnk8L291dGdvaW5nPjwvc2Vy
dmljZVRhc2s+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xZDEyZGJmXCIgc291cmNl
UmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMHAyMW5t
alwiLz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wcmo2bnlnXCI+PGluY29taW5nPlNlcXVlbmNl
Rmxvd18xOGFydnJ5PC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1
ZW5jZUZsb3dfMThhcnZyeVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzBwMjFubWpcIiB0YXJn
ZXRSZWY9XCJFbmRFdmVudF8wcmo2bnlnXCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5v
dGF0aW9uXzFreHhpeXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90
ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291
cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25f
MWt4eGl5dFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xaXN0ZXBvXCI+
PHRleHQ+PCFbQ0RBVEFbXG5UaGlzIENWRSBTZWFyY2ggZnVuY3Rpb24gaXMgaW50ZW5kZWQgdG8g
c2VhcmNoIFZ1bG5lcmFiaWxpdHkgZGF0YSBmcm9tIENWRSBkYXRhYmFzZS5ieSB1c2luZyBSRVNU
ZnVsbCBBUEksIGFuZCBkaWZmZXJlbnRcdTAwYTAgc2VhcmNoaW5nIG1ldGhvZHMgbGlrZSBzZWFy
Y2ggb24gc3BlY2lmaWMgdmVuZG9yIGFuZCBwcm9kdWN0IHZ1bG5lcmFiaWxpdHkgQ1ZFIElEIGV0
Yy5cblxuUmV0dXJucyBWdWxuZXJhYmlsaXR5IGRhdGEgYXMgcGVyIGdpdmVuIHNlYXJjaCBpbnB1
dCBwYXJhbWV0ZXJzLlxuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlk
PVwiQXNzb2NpYXRpb25fMTExYzh4clwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzBwMjFubWpc
IiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xaXN0ZXBvXCIvPjwvcHJvY2Vzcz48YnBtbmRp
OkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5F
bGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFz
eG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJc
IiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwi
IHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90
YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlv
bl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50
IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5
cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBt
bmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tf
MHAyMW5talwiIGlkPVwiU2VydmljZVRhc2tfMHAyMW5tal9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIzNTlcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQ
TU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFkMTJk
YmZcIiBpZD1cIlNlcXVlbmNlRmxvd18xZDEyZGJmX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIx
OThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQg
eD1cIjM1OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBN
TkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTJcIiB3aWR0aD1cIjBcIiB4PVwiMjc4LjVc
IiB5PVwiMTg1XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRp
OkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzByajZueWdcIiBpZD1cIkVuZEV2ZW50
XzByajZueWdfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9
XCI2ODhcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMTJcIiB3aWR0aD1cIjBcIiB4PVwiNzA2XCIgeT1cIjIyOFwiLz48L2JwbW5kaTpCUE1OTGFi
ZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1
ZW5jZUZsb3dfMThhcnZyeVwiIGlkPVwiU2VxdWVuY2VGbG93XzE4YXJ2cnlfZGlcIj48b21nZGk6
d2F5cG9pbnQgeD1cIjQ1OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiNjg4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZc
Ii8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxMlwiIHdpZHRoPVwi
MFwiIHg9XCI1NzMuNVwiIHk9XCIxODVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQ
TU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWlz
dGVwb1wiIGlkPVwiVGV4dEFubm90YXRpb25fMWlzdGVwb19kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiOTFcIiB3aWR0aD1cIjU2MVwiIHg9XCIzNzBcIiB5PVwiMzRcIi8+PC9icG1uZGk6QlBN
TlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xMTFjOHhy
XCIgaWQ9XCJBc3NvY2lhdGlvbl8xMTFjOHhyX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0NTlc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE4MFwiLz48b21nZGk6d2F5cG9pbnQgeD1c
IjU2N1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTI1XCIvPjwvYnBtbmRpOkJQTU5F
ZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25z
PiIsICJ2ZXJzaW9uIjogOTN9LCAiYWN0aW9ucyI6IFtdfV0sICJyb2xlcyI6IFtdLCAid29ya3Nw
YWNlcyI6IFtdLCAiZnVuY3Rpb25zIjogW3siaWQiOiAzMCwgIm5hbWUiOiAiZnVuY3Rpb25fY3Zl
IiwgImRpc3BsYXlfbmFtZSI6ICJDVkUiLCAiZGVzY3JpcHRpb24iOiB7ImZvcm1hdCI6ICJ0ZXh0
IiwgImNvbnRlbnQiOiAiQSBGdW5jdGlvbiB0byBTZWFyY2ggIENvbW1vbiBWdWxuZXJhYmlsaXR5
IEV4cG9zdXJlcyBEYXRhIGZyb20gaHR0cHM6Ly9jdmUuY2lyY2wubHUgRGF0YSBCYXNlLiJ9LCAi
ZGVzdGluYXRpb25faGFuZGxlIjogImZuX2N2ZSIsICJleHBvcnRfa2V5IjogImZ1bmN0aW9uX2N2
ZSIsICJ1dWlkIjogIjQxNzZmNjdjLWI3YTgtNDk1Ny1iZWIzLThhMjc2M2I1MzEyNyIsICJ2ZXJz
aW9uIjogMTAsICJjcmVhdG9yIjogeyJpZCI6IDYsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJu
a2FuZGhhMUBpbi5pYm0uY29tIiwgImRpc3BsYXlfbmFtZSI6ICJOaXRpbiBLYW5kaGFyZSAifSwg
Imxhc3RfbW9kaWZpZWRfYnkiOiB7ImlkIjogNiwgInR5cGUiOiAidXNlciIsICJuYW1lIjogIm5r
YW5kaGExQGluLmlibS5jb20iLCAiZGlzcGxheV9uYW1lIjogIk5pdGluIEthbmRoYXJlICJ9LCAi
bGFzdF9tb2RpZmllZF90aW1lIjogMTU0OTY0Mjc0NjAyOSwgInZpZXdfaXRlbXMiOiBbeyJzdGVw
X2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwg
ImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogImE4ZTVlODY4LTdhNmEtNDEz
Yi1iNjE5LTRiNDg0OWQwZGQxZSIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9LCB7InN0ZXBf
bGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAi
ZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiOTg2NTE0MWEtMjRhZC00NjYy
LTkyMDMtZmU3ZjQ1NDdhNGY5IiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9s
YWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJm
aWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICJiNmY2MjcxMC1mMTcyLTQ2ODct
YjY5Yi00ODA2MjIwYTJkNTIiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfSwgeyJzdGVwX2xh
YmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZp
ZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogImYxYTVjNzkwLWZhYTQtNGFhOC1i
YjQyLTRmMTc0OTFmZjg0NSIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9LCB7InN0ZXBfbGFi
ZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmll
bGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiNGFlNTkyMTMtYmUzNy00ZTA3LWE3
ZWEtMGM0MDkzYWRlNzMwIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9sYWJl
bCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVs
ZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICIxMTI1NDhlOC1hNGY4LTQ5MDYtYmQy
Zi1hNzlkYzZkNDZkYTUiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfSwgeyJzdGVwX2xhYmVs
IjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxk
X3R5cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogIjU5ZDhkZWIwLTc3MjEtNDI4YS04MmRk
LWZhNDg2MmNlYzFhOSIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9XSwgIndvcmtmbG93cyI6
IFt7IndvcmtmbG93X2lkIjogMzUsICJuYW1lIjogIkV4YW1wbGUgOiBDVkUgU2VhcmNoIiwgInBy
b2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfY3ZlX3NlYXJjaCIsICJvYmplY3RfdHlwZSI6ICJh
cnRpZmFjdCIsICJkZXNjcmlwdGlvbiI6IG51bGwsICJ1dWlkIjogbnVsbCwgImFjdGlvbnMiOiBb
XX1dfV19
"""
    )