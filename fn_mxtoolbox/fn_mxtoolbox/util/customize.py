# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_mxtoolbox"""

try:
    from resilient import ImportDefinition
except ImportError:
    # Support Apps running on resilient-circuits < v35.0.195
    from resilient_circuits.util import ImportDefinition


def codegen_reload_data():
    """
    Parameters required reload codegen for the fn_mxtoolbox package
    """
    return {
        "package": u"fn_mxtoolbox",
        "message_destinations": [u"fn_mxtoolbox"],
        "functions": [u"fn_mxtoolbox"],
        "workflows": [u"example_mxtoolbox_mx_query"],
        "actions": [u"Example: MXToolbox MX query"],
        "incident_fields": [],
        "incident_artifact_types": [],
        "datatables": [],
        "automatic_tasks": [],
        "scripts": []
    }


def customization_data(client=None):
    """
    Returns a Generator of ImportDefinitions (Customizations).
    Install them using `resilient-circuits customize`

    Contents:
    - Message Destinations:
        - fn_mxtoolbox
    - Functions:
        - fn_mxtoolbox
    - Workflows:
        - example_mxtoolbox_mx_query
    - Rules:
        - Example: MXToolbox MX query
    """

    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFt7ImV2YWx1YXRpb25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFj
dC50eXBlIiwgIm1ldGhvZCI6ICJlcXVhbHMiLCAidHlwZSI6IG51bGwsICJ2YWx1ZSI6ICJETlMg
TmFtZSJ9XSwgImVuYWJsZWQiOiB0cnVlLCAiZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBNWFRvb2xi
b3ggTVggcXVlcnkiLCAiaWQiOiAyNSwgImxvZ2ljX3R5cGUiOiAiYWxsIiwgIm1lc3NhZ2VfZGVz
dGluYXRpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6IE1YVG9vbGJveCBNWCBxdWVyeSIsICJv
YmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJ0YWdzIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4
NjQwMCwgInR5cGUiOiAxLCAidXVpZCI6ICJkMjA5NTc2Zi0xZTAzLTQ2YWYtYTI5Ni04NDFkZGE3
MDU0NmYiLCAidmlld19pdGVtcyI6IFtdLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX214dG9vbGJv
eF9teF9xdWVyeSJdfV0sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImV4cG9ydF9kYXRlIjogMTU5
NDkzMzk1NDE2OCwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJmaWVsZHMiOiBbeyJhbGxv
d19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0
ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0
X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9r
ZXkiOiAiX19mdW5jdGlvbi9teF9jb21tYW5kIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2Us
ICJpZCI6IDIzNSwgImlucHV0X3R5cGUiOiAic2VsZWN0IiwgImludGVybmFsIjogZmFsc2UsICJp
c190cmFja2VkIjogZmFsc2UsICJuYW1lIjogIm14X2NvbW1hbmQiLCAib3BlcmF0aW9uX3Blcm1z
Ijoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogbnVs
bCwgInJlYWRfb25seSI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInJpY2hfdGV4dCI6
IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm14X2NvbW1hbmQi
LCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6IDExLCAidXVpZCI6ICJjYTg4NDkzZC1hOWE3LTRh
NGEtOGFmOC1iM2NkZjA5ODljOTkiLCAidmFsdWVzIjogW3siZGVmYXVsdCI6IHRydWUsICJlbmFi
bGVkIjogdHJ1ZSwgImhpZGRlbiI6IGZhbHNlLCAibGFiZWwiOiAibXgiLCAicHJvcGVydGllcyI6
IG51bGwsICJ1dWlkIjogIjI2N2Y0MjBiLWRjY2EtNDc0MC05ZDU0LTkzM2QwM2JjYThiNyIsICJ2
YWx1ZSI6IDk3fSwgeyJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRlbiI6
IGZhbHNlLCAibGFiZWwiOiAiYSIsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiNDNhY2Rl
MDQtMzNhMS00MDUwLWIxZjAtMzZiYjA3OWMyZmVhIiwgInZhbHVlIjogOTh9LCB7ImRlZmF1bHQi
OiBmYWxzZSwgImVuYWJsZWQiOiB0cnVlLCAiaGlkZGVuIjogZmFsc2UsICJsYWJlbCI6ICJkbnMi
LCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjczYjQxNmVmLTY2ZWQtNDRkOC1iY2U5LTE1
MDZhY2Y0MmUwYiIsICJ2YWx1ZSI6IDk5fSwgeyJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjog
dHJ1ZSwgImhpZGRlbiI6IGZhbHNlLCAibGFiZWwiOiAic3BmIiwgInByb3BlcnRpZXMiOiBudWxs
LCAidXVpZCI6ICI0MGI0NjExOC03M2ZiLTQwODYtOGU2ZC1iN2JlMDljZDE1MWIiLCAidmFsdWUi
OiAxMDB9LCB7ImRlZmF1bHQiOiBmYWxzZSwgImVuYWJsZWQiOiB0cnVlLCAiaGlkZGVuIjogZmFs
c2UsICJsYWJlbCI6ICJ0eHQiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogImQ0ZWU2ZWFk
LTIxOGEtNGI3NC04NTJkLWMyZDI1NDA2ZjRhZCIsICJ2YWx1ZSI6IDEwMX0sIHsiZGVmYXVsdCI6
IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjogInNvYSIs
ICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiMmYyZmFjMTUtNWM2OC00NDY2LWEzYzUtZGVh
YmFmOWE0ZjgyIiwgInZhbHVlIjogMTAyfSwgeyJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjog
dHJ1ZSwgImhpZGRlbiI6IGZhbHNlLCAibGFiZWwiOiAicHRyIiwgInByb3BlcnRpZXMiOiBudWxs
LCAidXVpZCI6ICJmZWE2Mjg0MS1jOWE2LTRkNjAtODJlZC1mNmU2Y2M5YmNiM2QiLCAidmFsdWUi
OiAxMDN9LCB7ImRlZmF1bHQiOiBmYWxzZSwgImVuYWJsZWQiOiB0cnVlLCAiaGlkZGVuIjogZmFs
c2UsICJsYWJlbCI6ICJibGFja2xpc3QiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogImRh
ODUzNTY3LWNhODctNGYwMS04ZmEwLTE4MzYyY2JiNTk0MCIsICJ2YWx1ZSI6IDEwNH0sIHsiZGVm
YXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjog
InNtdHAiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjlmMjk3ZWZkLThmMGItNGYyZC04
NDRlLWMyNTdmNDllYzAxMSIsICJ2YWx1ZSI6IDEwNX0sIHsiZGVmYXVsdCI6IGZhbHNlLCAiZW5h
YmxlZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjogInRjcCIsICJwcm9wZXJ0aWVz
IjogbnVsbCwgInV1aWQiOiAiMzNlMmY2MDgtYTRhNC00OWYxLWFiYmQtYmE5N2E0MzUyYmQ0Iiwg
InZhbHVlIjogMTA2fSwgeyJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRl
biI6IGZhbHNlLCAibGFiZWwiOiAiaHR0cCIsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAi
ZTU3OTM2ODQtMzhjNS00ZjM1LTkwYzUtNmYwZGQ5MGNlYmFjIiwgInZhbHVlIjogMTA3fSwgeyJk
ZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRlbiI6IGZhbHNlLCAibGFiZWwi
OiAiaHR0cHMiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjViOGE0OGM0LTQ2OTctNDM2
ZS1hMDRlLWM2OTJiN2ZiZTkwNiIsICJ2YWx1ZSI6IDEwOH0sIHsiZGVmYXVsdCI6IGZhbHNlLCAi
ZW5hYmxlZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjogInBpbmciLCAicHJvcGVy
dGllcyI6IG51bGwsICJ1dWlkIjogImU4ZTJhMDk5LWUxZTktNDgwZi04YTA1LWNhYzA1N2MwMmJk
ZiIsICJ2YWx1ZSI6IDEwOX0sIHsiZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJo
aWRkZW4iOiBmYWxzZSwgImxhYmVsIjogInRyYWNlIiwgInByb3BlcnRpZXMiOiBudWxsLCAidXVp
ZCI6ICI0MGVmN2M5Zi02Y2U5LTQzOWQtODc0YS03OWRhOWVlZDkzZGEiLCAidmFsdWUiOiAxMTB9
XX0sIHsiYWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2Us
ICJjYWxjdWxhdGVkIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNl
LCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2Us
ICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vbXhfcGFyYW0xIiwgImhpZGVfbm90aWZpY2F0aW9u
IjogZmFsc2UsICJpZCI6IDIzMywgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZh
bHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJteF9wYXJhbTEiLCAib3BlcmF0aW9u
X3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4
IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjog
W10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAibXhfcGFyYW0xIiwgInRvb2x0aXAiOiAiIiwg
InR5cGVfaWQiOiAxMSwgInV1aWQiOiAiYjNmN2RlZjEtZWJlMy00OGYzLTlkNzgtNDdlYWViYTc4
NjNiIiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFu
a19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVl
LCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRl
cHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9teF9hcmd1bWVudCIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAyMzQsICJpbnB1dF90eXBlIjogInRl
eHQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAibXhf
YXJndW1lbnQiLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFj
ZWhvbGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmVxdWly
ZWQiOiAiYWx3YXlzIiwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVz
IjogW10sICJ0ZXh0IjogIm14X2FyZ3VtZW50IiwgInRvb2x0aXAiOiAiQXJndW1lbnQgaXMgc3Bl
Y2lmaWMgdG8gdGhlIGNvbW1hbmQgc2VsZWN0aW9uIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAi
MDEzYjc2NGQtOTA5Zi00MGJlLThhNjUtYmY4Mjc4NDE4YjYxIiwgInZhbHVlcyI6IFtdfSwgeyJl
eHBvcnRfa2V5IjogImluY2lkZW50L2ludGVybmFsX2N1c3RvbWl6YXRpb25zX2ZpZWxkIiwgImlk
IjogMCwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IHRydWUsICJuYW1lIjogImlu
dGVybmFsX2N1c3RvbWl6YXRpb25zX2ZpZWxkIiwgInJlYWRfb25seSI6IHRydWUsICJ0ZXh0Ijog
IkN1c3RvbWl6YXRpb25zIEZpZWxkIChpbnRlcm5hbCkiLCAidHlwZV9pZCI6IDAsICJ1dWlkIjog
ImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMSJ9XSwgImZ1bmN0aW9ucyI6IFt7
ImNyZWF0b3IiOiB7ImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQgU3lzYWRtaW4iLCAiaWQiOiAz
LCAibmFtZSI6ICJhQGEuY29tIiwgInR5cGUiOiAidXNlciJ9LCAiZGVzY3JpcHRpb24iOiB7ImZv
cm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAiTXhUb29sYm94IGZ1bmN0aW9uIG1ha2VzIGFuIE14
VG9vbEJveCBBUEkgcmVxdWVzdCB0byBleGVjdXRlIGFuIE1YIGNvbW1hbmQgYW5kIHJldHVybnMg
dGhlIHJlc3VsdHMuIn0sICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAiZm5fbXh0b29sYm94IiwgImRp
c3BsYXlfbmFtZSI6ICJNWFRvb2xib3giLCAiZXhwb3J0X2tleSI6ICJmbl9teHRvb2xib3giLCAi
aWQiOiAxMCwgImxhc3RfbW9kaWZpZWRfYnkiOiB7ImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQg
U3lzYWRtaW4iLCAiaWQiOiAzLCAibmFtZSI6ICJhQGEuY29tIiwgInR5cGUiOiAidXNlciJ9LCAi
bGFzdF9tb2RpZmllZF90aW1lIjogMTU5NDkzMzgxOTQxNSwgIm5hbWUiOiAiZm5fbXh0b29sYm94
IiwgInRhZ3MiOiBbXSwgInV1aWQiOiAiZDQ3MmNiOTYtMWU1NS00YmI4LWFhY2QtZTc4NDAyZDEw
MWIwIiwgInZlcnNpb24iOiAxLCAidmlld19pdGVtcyI6IFt7ImNvbnRlbnQiOiAiY2E4ODQ5M2Qt
YTlhNy00YTRhLThhZjgtYjNjZGYwOTg5Yzk5IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJm
aWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVh
ZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsiY29udGVudCI6ICIwMTNiNzY0ZC05
MDlmLTQwYmUtOGE2NS1iZjgyNzg0MThiNjEiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZp
ZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFk
ZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJjb250ZW50IjogImIzZjdkZWYxLWVi
ZTMtNDhmMy05ZDc4LTQ3ZWFlYmE3ODYzYiIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmll
bGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRl
ciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMi
OiBbXSwgImRlc2NyaXB0aW9uIjogbnVsbCwgIm5hbWUiOiAiRXhhbXBsZTogTVhUb29sYm94IE1Y
IHF1ZXJ5IiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInByb2dyYW1tYXRpY19uYW1lIjog
ImV4YW1wbGVfbXh0b29sYm94X214X3F1ZXJ5IiwgInRhZ3MiOiBbXSwgInV1aWQiOiBudWxsLCAi
d29ya2Zsb3dfaWQiOiAxMX1dfV0sICJnZW9zIjogbnVsbCwgImdyb3VwcyI6IG51bGwsICJpZCI6
IDIsICJpbmJvdW5kX21haWxib3hlcyI6IG51bGwsICJpbmNpZGVudF9hcnRpZmFjdF90eXBlcyI6
IFtdLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1OTQ5MzM5NTMyODQsICJj
cmVhdGVfZGF0ZSI6IDE1OTQ5MzM5NTMyODQsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1h
ZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2Vz
IChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRl
cm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZW5h
YmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlkZGVu
IjogZmFsc2UsICJpZCI6IDB9XSwgImluZHVzdHJpZXMiOiBudWxsLCAibGF5b3V0cyI6IFtdLCAi
bG9jYWxlIjogbnVsbCwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3siYXBpX2tleXMiOiBbXSwg
ImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJleHBvcnRfa2V5Ijog
ImZuX214dG9vbGJveCIsICJuYW1lIjogImZuX214dG9vbGJveCIsICJwcm9ncmFtbWF0aWNfbmFt
ZSI6ICJmbl9teHRvb2xib3giLCAidGFncyI6IFtdLCAidXNlcnMiOiBbImFAYS5jb20iXSwgInV1
aWQiOiAiNjdiZWM2NjAtYTliNi00MzU4LThiNjktMDYyYzQyYTE3M2ZiIn1dLCAibm90aWZpY2F0
aW9ucyI6IG51bGwsICJvdmVycmlkZXMiOiBbXSwgInBoYXNlcyI6IFtdLCAicmVndWxhdG9ycyI6
IG51bGwsICJyb2xlcyI6IFtdLCAic2NyaXB0cyI6IFtdLCAic2VydmVyX3ZlcnNpb24iOiB7ImJ1
aWxkX251bWJlciI6IDU0NDUsICJtYWpvciI6IDM1LCAibWlub3IiOiAwLCAidmVyc2lvbiI6ICIz
NS4wLjU0NDUifSwgInRhZ3MiOiBbXSwgInRhc2tfb3JkZXIiOiBbXSwgInRpbWVmcmFtZXMiOiBu
dWxsLCAidHlwZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImNvbnRlbnQi
OiB7InZlcnNpb24iOiAxLCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9teHRvb2xib3hfbXhfcXVl
cnkiLCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/Pjxk
ZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQv
TU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAw
NTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUy
NC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQv
RElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHht
bG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwi
aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3Bh
Y2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVf
bXh0b29sYm94X214X3F1ZXJ5XCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxl
OiBNWFRvb2xib3ggTVggcXVlcnlcIj48ZG9jdW1lbnRhdGlvbj5RdWVyeSBNWCByZWNvcmQuIENy
ZWF0ZSBhIG5vdGUgY29udGFpbmluZyB0aGUgUmVwb3J0aW5nIE5hbWUgU2VydmVyIGFuZCBhbiBh
cnRpZmFjdCBmb3IgZWFjaCBJUCBhZGRyZXNzLjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBp
ZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMXJsb3B3cTwv
b3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzFoN3o1
dXFcIiBuYW1lPVwiTVhUb29sYm94XCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRl
bnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCJkNDcyY2I5Ni0xZTU1LTRi
YjgtYWFjZC1lNzg0MDJkMTAxYjBcIj57XCJpbnB1dHNcIjp7XCJjYTg4NDkzZC1hOWE3LTRhNGEt
OGFmOC1iM2NkZjA5ODljOTlcIjp7XCJpbnB1dF90eXBlXCI6XCJzdGF0aWNcIixcInN0YXRpY19p
bnB1dFwiOntcIm11bHRpc2VsZWN0X3ZhbHVlXCI6W10sXCJzZWxlY3RfdmFsdWVcIjpcIjI2N2Y0
MjBiLWRjY2EtNDc0MC05ZDU0LTkzM2QwM2JjYThiN1wifX19LFwicG9zdF9wcm9jZXNzaW5nX3Nj
cmlwdFwiOlwiIyBQdXQgdGhlIFJlcG9ydGluZ05hbWVTZXJ2ZXIgaW4gYSBub3RlXFxuY29udGVu
dCA9IHUnTXhUb29sYm94IE1YIFF1ZXJ5IFJlc3VsdDogUmVwb3J0aW5nIE5hbWUgU2VydmVyOiB7
fVxcXFxuJy5mb3JtYXQocmVzdWx0c1sndmFsdWUnXVsnUmVwb3J0aW5nTmFtZVNlcnZlciddKVxc
bm5vdGUgPSBoZWxwZXIuY3JlYXRlUGxhaW5UZXh0KGNvbnRlbnQpXFxuaW5jaWRlbnQuYWRkTm90
ZShub3RlKVxcblxcbiMgQ3JlYXRlIGFydGlmYWN0cyBmb3IgZWFjaCBJUCBBZGRyZXNzXFxuZm9y
IGluZm8gaW4gcmVzdWx0c1sndmFsdWUnXVsnSW5mb3JtYXRpb24nXTpcXG4gIGluY2lkZW50LmFk
ZEFydGlmYWN0KCdJUCBBZGRyZXNzJywgaW5mb1snSVAgQWRkcmVzcyddLCBpbmZvWydIb3N0bmFt
ZSddKVxcblxcblxcbiN7XFxuIyAgIFxcXCJVSURcXFwiOiBudWxsLFxcbiMgICBcXFwiQ29tbWFu
ZFxcXCI6IFxcXCJteFxcXCIsXFxuIyAgIFxcXCJJc1RyYW5zaXRpb25lZFxcXCI6IGZhbHNlLFxc
biMgICBcXFwiQ29tbWFuZEFyZ3VtZW50XFxcIjogXFxcImdtYWlsLmNvbVxcXCIsXFxuIyAgIFxc
XCJUaW1lUmVjb3JkZWRcXFwiOiBcXFwiMjAxOC0xMC0zMVQwNzoyOTozNS4zMzQyMjAxLTA1OjAw
XFxcIixcXG4jICAgXFxcIlJlcG9ydGluZ05hbWVTZXJ2ZXJcXFwiOiBcXFwibnMxLmdvb2dsZS5j
b21cXFwiLFxcbiMgICBcXFwiVGltZVRvQ29tcGxldGVcXFwiOiBcXFwiMzc3XFxcIixcXG4jICAg
XFxcIlJlbGF0ZWRJUFxcXCI6IG51bGwsXFxuIyAgIFxcXCJJc0VuZHBvaW50XFxcIjogZmFsc2Us
XFxuIyAgIFxcXCJIYXNTdWJzY3JpcHRpb25zXFxcIjogZmFsc2UsXFxuIyAgIFxcXCJGYWlsZWRc
XFwiOiBbXSxcXG4jICAgXFxcIldhcm5pbmdzXFxcIjogW10sXFxuIyAgIFxcXCJQYXNzZWRcXFwi
OiBbXFxuIyAgICAge1xcbiMgICAgICAgXFxcIklEXFxcIjogNDQxLFxcbiMgICAgICAgXFxcIk5h
bWVcXFwiOiBcXFwiRE1BUkMgUmVjb3JkIFB1Ymxpc2hlZFxcXCIsXFxuIyAgICAgICBcXFwiSW5m
b1xcXCI6IFxcXCJETUFSQyBSZWNvcmQgZm91bmRcXFwiLFxcbiMgICAgICAgXFxcIlVybFxcXCI6
IFxcXCJodHRwczovL2xvb2t1cC5teHRvb2xib3guY29tL1Byb2JsZW0vbXgvRE1BUkMtUmVjb3Jk
LVB1Ymxpc2hlZD9wYWdlPXByb2JfbXgmYW1wO3Nob3dsb2dpbj0xJmFtcDtoaWRldG9jPTEmYW1w
O2FjdGlvbj1teDpnbWFpbC5jb21cXFwiLFxcbiMgICAgICAgXFxcIlB1YmxpY0Rlc2NyaXB0aW9u
XFxcIjogbnVsbCxcXG4jICAgICAgIFxcXCJJc0V4Y2x1ZGVkQnlVc2VyXFxcIjogZmFsc2VcXG4j
ICAgICB9LFxcbiMgICAgIHtcXG4jICAgICAgIFxcXCJJRFxcXCI6IDUwNixcXG4jICAgICAgIFxc
XCJOYW1lXFxcIjogXFxcIkROUyBSZWNvcmQgUHVibGlzaGVkXFxcIixcXG4jICAgICAgIFxcXCJJ
bmZvXFxcIjogXFxcIkROUyBSZWNvcmQgZm91bmRcXFwiLFxcbiMgICAgICAgXFxcIlVybFxcXCI6
IFxcXCJodHRwczovL2xvb2t1cC5teHRvb2xib3guY29tL1Byb2JsZW0vbXgvRE5TLVJlY29yZC1Q
dWJsaXNoZWQ/cGFnZT1wcm9iX214JmFtcDtzaG93bG9naW49MSZhbXA7aGlkZXRvYz0xJmFtcDth
Y3Rpb249bXg6Z21haWwuY29tXFxcIixcXG4jICAgICAgIFxcXCJQdWJsaWNEZXNjcmlwdGlvblxc
XCI6IG51bGwsXFxuIyAgICAgICBcXFwiSXNFeGNsdWRlZEJ5VXNlclxcXCI6IGZhbHNlXFxuIyAg
ICAgfVxcbiMgICBdLFxcbiMgICBcXFwiVGltZW91dHNcXFwiOiBbXSxcXG4jICAgXFxcIkVycm9y
c1xcXCI6IFtdLFxcbiMgICBcXFwiSW5mb3JtYXRpb25cXFwiOiBbXFxuIyAgICAge1xcbiMgICAg
ICAgXFxcIlByZWZcXFwiOiBcXFwiNVxcXCIsXFxuIyAgICAgICBcXFwiSG9zdG5hbWVcXFwiOiBc
XFwiZ21haWwtc210cC1pbi5sLmdvb2dsZS5jb21cXFwiLFxcbiMgICAgICAgXFxcIklQIEFkZHJl
c3NcXFwiOiBcXFwiMTczLjE5NC4yMDUuMjdcXFwiLFxcbiMgICAgICAgXFxcIlRUTFxcXCI6IFxc
XCI2MCBtaW5cXFwiXFxuIyAgICAgfSxcXG4jICAgICB7XFxuIyAgICAgICBcXFwiUHJlZlxcXCI6
IFxcXCI1XFxcIixcXG4jICAgICAgIFxcXCJIb3N0bmFtZVxcXCI6IFxcXCJnbWFpbC1zbXRwLWlu
LmwuZ29vZ2xlLmNvbVxcXCIsXFxuIyAgICAgICBcXFwiSVAgQWRkcmVzc1xcXCI6IFxcXCIyNjA3
OmY4YjA6NDAwZDpjMDI6OjFiXFxcIixcXG4jICAgICAgIFxcXCJUVExcXFwiOiBcXFwiNjAgbWlu
XFxcIlxcbiMgICAgIH0sXFxuIyAgICAge1xcbiMgICAgICAgXFxcIlByZWZcXFwiOiBcXFwiMTBc
XFwiLFxcbiMgICAgICAgXFxcIkhvc3RuYW1lXFxcIjogXFxcImFsdDEuZ21haWwtc210cC1pbi5s
Lmdvb2dsZS5jb21cXFwiLFxcbiMgICAgICAgXFxcIklQIEFkZHJlc3NcXFwiOiBcXFwiNjQuMjMz
LjE5MC4yN1xcXCIsXFxuIyAgICAgICBcXFwiVFRMXFxcIjogXFxcIjYwIG1pblxcXCJcXG4jICAg
ICB9LFxcbiMgICAgIHtcXG4jICAgICAgIFxcXCJQcmVmXFxcIjogXFxcIjEwXFxcIixcXG4jICAg
ICAgIFxcXCJIb3N0bmFtZVxcXCI6IFxcXCJhbHQxLmdtYWlsLXNtdHAtaW4ubC5nb29nbGUuY29t
XFxcIixcXG4jICAgICAgIFxcXCJJUCBBZGRyZXNzXFxcIjogXFxcIjI4MDA6M2YwOjQwMDM6YzAx
OjoxYVxcXCIsXFxuIyAgICAgICBcXFwiVFRMXFxcIjogXFxcIjYwIG1pblxcXCJcXG4jICAgICB9
LFxcbiMgICAgIHtcXG4jICAgICAgIFxcXCJQcmVmXFxcIjogXFxcIjIwXFxcIixcXG4jICAgICAg
IFxcXCJIb3N0bmFtZVxcXCI6IFxcXCJhbHQyLmdtYWlsLXNtdHAtaW4ubC5nb29nbGUuY29tXFxc
IixcXG4jICAgICAgIFxcXCJJUCBBZGRyZXNzXFxcIjogXFxcIjc0LjEyNS4xOTMuMjdcXFwiLFxc
biMgICAgICAgXFxcIlRUTFxcXCI6IFxcXCI2MCBtaW5cXFwiXFxuIyAgICAgfSxcXG4jICAgICB7
XFxuIyAgICAgICBcXFwiUHJlZlxcXCI6IFxcXCIyMFxcXCIsXFxuIyAgICAgICBcXFwiSG9zdG5h
bWVcXFwiOiBcXFwiYWx0Mi5nbWFpbC1zbXRwLWluLmwuZ29vZ2xlLmNvbVxcXCIsXFxuIyAgICAg
ICBcXFwiSVAgQWRkcmVzc1xcXCI6IFxcXCIyYTAwOjE0NTA6NDAwYjpjMDE6OjFhXFxcIixcXG4j
ICAgICAgIFxcXCJUVExcXFwiOiBcXFwiNjAgbWluXFxcIlxcbiMgICAgIH0sXFxuIyAgICAge1xc
biMgICAgICAgXFxcIlByZWZcXFwiOiBcXFwiMzBcXFwiLFxcbiMgICAgICAgXFxcIkhvc3RuYW1l
XFxcIjogXFxcImFsdDMuZ21haWwtc210cC1pbi5sLmdvb2dsZS5jb21cXFwiLFxcbiMgICAgICAg
XFxcIklQIEFkZHJlc3NcXFwiOiBcXFwiNjYuMTAyLjEuMjdcXFwiLFxcbiMgICAgICAgXFxcIlRU
TFxcXCI6IFxcXCI2MCBtaW5cXFwiXFxuIyAgICAgfSxcXG4jICAgICB7XFxuIyAgICAgICBcXFwi
UHJlZlxcXCI6IFxcXCIzMFxcXCIsXFxuIyAgICAgICBcXFwiSG9zdG5hbWVcXFwiOiBcXFwiYWx0
My5nbWFpbC1zbXRwLWluLmwuZ29vZ2xlLmNvbVxcXCIsXFxuIyAgICAgICBcXFwiSVAgQWRkcmVz
c1xcXCI6IFxcXCIyYTAwOjE0NTA6NDAwYzpjMDY6OjFhXFxcIixcXG4jICAgICAgIFxcXCJUVExc
XFwiOiBcXFwiNjAgbWluXFxcIlxcbiMgICAgIH0sXFxuIyAgICAge1xcbiMgICAgICAgXFxcIlBy
ZWZcXFwiOiBcXFwiNDBcXFwiLFxcbiMgICAgICAgXFxcIkhvc3RuYW1lXFxcIjogXFxcImFsdDQu
Z21haWwtc210cC1pbi5sLmdvb2dsZS5jb21cXFwiLFxcbiMgICAgICAgXFxcIklQIEFkZHJlc3Nc
XFwiOiBcXFwiNzQuMTI1LjEyOC4yN1xcXCIsXFxuIyAgICAgICBcXFwiVFRMXFxcIjogXFxcIjYw
IG1pblxcXCJcXG4jICAgICB9LFxcbiMgICAgIHtcXG4jICAgICAgIFxcXCJQcmVmXFxcIjogXFxc
IjQwXFxcIixcXG4jICAgICAgIFxcXCJIb3N0bmFtZVxcXCI6IFxcXCJhbHQ0LmdtYWlsLXNtdHAt
aW4ubC5nb29nbGUuY29tXFxcIixcXG4jICAgICAgIFxcXCJJUCBBZGRyZXNzXFxcIjogXFxcIjJh
MDA6MTQ1MDo0MDEzOmMwMjo6MWFcXFwiLFxcbiMgICAgICAgXFxcIlRUTFxcXCI6IFxcXCI2MCBt
aW5cXFwiXFxuIyAgICAgfVxcbiMgICBdLFxcbiMgICBcXFwiTXVsdGlJbmZvcm1hdGlvblxcXCI6
IFtdLFxcbiMgICBcXFwiSXNCcnV0ZUZvcmNlXFxcIjogZmFsc2UsXFxuIyAgIFxcXCJUcmFuc2Ny
aXB0XFxcIjogW1xcbiMgICAgIHtcXG4jICAgICAgIFxcXCJUaW1lU3RhbXBcXFwiOiBcXFwiXFxc
XHJcXFxcbkxvb2t1cFNlcnZlcnYyIDM3N21zXFxcXHJcXFxcblxcXCIsXFxuIyAgICAgICBcXFwi
RGVwdGhcXFwiOiBcXFwiMVxcXCIsXFxuIyAgICAgICBcXFwiU2VydmVyTmFtZVxcXCI6IFxcXCJt
Lmd0bGQtc2VydmVycy5uZXRcXFwiLFxcbiMgICAgICAgXFxcIlNlcnZlcklQXFxcIjogXFxcIjE5
Mi41NS44My4zMFxcXCIsXFxuIyAgICAgICBcXFwiQXV0aG9yaXRhdGl2ZVxcXCI6IFxcXCJOT04t
QVVUSFxcXCIsXFxuIyAgICAgICBcXFwiRWxhcHNlZFRpbWVcXFwiOiBcXFwiNjIgbXNcXFwiLFxc
biMgICAgICAgXFxcIlJlc3VsdFxcXCI6IFxcXCJSZWNlaXZlZCA0IFJlZmVycmFscyAsIHJjb2Rl
PU5PX0VSUk9SXFxcIixcXG4jICAgICAgIFxcXCJRdWVzdGlvblxcXCI6IFxcXCJcXFwiLFxcbiMg
ICAgICAgXFxcIkFuc3dlcnNcXFwiOiBcXFwiZ21haWwuY29tLlxcXFx0MTcyODAwXFxcXHRJTlxc
XFx0TlNcXFxcdG5zMi5nb29nbGUuY29tLGdtYWlsLmNvbS5cXFxcdDE3MjgwMFxcXFx0SU5cXFxc
dE5TXFxcXHRuczEuZ29vZ2xlLmNvbSxnbWFpbC5jb20uXFxcXHQxNzI4MDBcXFxcdElOXFxcXHRO
U1xcXFx0bnMzLmdvb2dsZS5jb20sZ21haWwuY29tLlxcXFx0MTcyODAwXFxcXHRJTlxcXFx0TlNc
XFxcdG5zNC5nb29nbGUuY29tLFxcXCJcXG4jICAgICB9LFxcbiMgICAgIHtcXG4jICAgICAgIFxc
XCJUaW1lU3RhbXBcXFwiOiBcXFwiXFxcIixcXG4jICAgICAgIFxcXCJEZXB0aFxcXCI6IFxcXCIy
XFxcIixcXG4jICAgICAgIFxcXCJTZXJ2ZXJOYW1lXFxcIjogXFxcIm5zMS5nb29nbGUuY29tXFxc
IixcXG4jICAgICAgIFxcXCJTZXJ2ZXJJUFxcXCI6IFxcXCIyMTYuMjM5LjMyLjEwXFxcIixcXG4j
ICAgICAgIFxcXCJBdXRob3JpdGF0aXZlXFxcIjogXFxcIkFVVEhcXFwiLFxcbiMgICAgICAgXFxc
IkVsYXBzZWRUaW1lXFxcIjogXFxcIjE1IG1zXFxcIixcXG4jICAgICAgIFxcXCJSZXN1bHRcXFwi
OiBcXFwiUmVjZWl2ZWQgNSBBbnN3ZXJzICwgcmNvZGU9Tk9fRVJST1JcXFwiLFxcbiMgICAgICAg
XFxcIlF1ZXN0aW9uXFxcIjogXFxcIlxcXCIsXFxuIyAgICAgICBcXFwiQW5zd2Vyc1xcXCI6IFxc
XCJnbWFpbC5jb20uXFxcXHQzNjAwXFxcXHRJTlxcXFx0TVhcXFxcdDIwIGFsdDIuZ21haWwtc210
cC1pbi5sLmdvb2dsZS5jb20sZ21haWwuY29tLlxcXFx0MzYwMFxcXFx0SU5cXFxcdE1YXFxcXHQ0
MCBhbHQ0LmdtYWlsLXNtdHAtaW4ubC5nb29nbGUuY29tLGdtYWlsLmNvbS5cXFxcdDM2MDBcXFxc
dElOXFxcXHRNWFxcXFx0MTAgYWx0MS5nbWFpbC1zbXRwLWluLmwuZ29vZ2xlLmNvbSxnbWFpbC5j
b20uXFxcXHQzNjAwXFxcXHRJTlxcXFx0TVhcXFxcdDMwIGFsdDMuZ21haWwtc210cC1pbi5sLmdv
b2dsZS5jb20sZ21haWwuY29tLlxcXFx0MzYwMFxcXFx0SU5cXFxcdE1YXFxcXHQ1IGdtYWlsLXNt
dHAtaW4ubC5nb29nbGUuY29tLFxcXCJcXG4jICAgICB9XFxuIyAgIF0sXFxuIyAgIFxcXCJNeFJl
cFxcXCI6IDAsXFxuIyAgIFxcXCJFbWFpbFNlcnZpY2VQcm92aWRlclxcXCI6IFxcXCJHb29nbGVc
XFwiLFxcbiMgICBcXFwiRG5zU2VydmljZVByb3ZpZGVyXFxcIjogbnVsbCxcXG4jICAgXFxcIlJl
bGF0ZWRMb29rdXBzXFxcIjogW1xcbiMgICAgIHtcXG4jICAgICAgIFxcXCJOYW1lXFxcIjogXFxc
ImRucyBsb29rdXBcXFwiLFxcbiMgICAgICAgXFxcIlVSTFxcXCI6IFxcXCJodHRwczovL2xvb2t1
cC5teHRvb2xib3guY29tL2FwaS92MS9sb29rdXAvYS9nbWFpbC5jb21cXFwiLFxcbiMgICAgICAg
XFxcIkNvbW1hbmRcXFwiOiBcXFwiYVxcXCIsXFxuIyAgICAgICBcXFwiQ29tbWFuZEFyZ3VtZW50
XFxcIjogXFxcImdtYWlsLmNvbVxcXCJcXG4jICAgICB9LFxcbiMgICAgIHtcXG4jICAgICAgIFxc
XCJOYW1lXFxcIjogXFxcImRucyBjaGVja1xcXCIsXFxuIyAgICAgICBcXFwiVVJMXFxcIjogXFxc
Imh0dHBzOi8vbG9va3VwLm14dG9vbGJveC5jb20vYXBpL3YxL2xvb2t1cC9kbnMvZ21haWwuY29t
XFxcIixcXG4jICAgICAgIFxcXCJDb21tYW5kXFxcIjogXFxcImRuc1xcXCIsXFxuIyAgICAgICBc
XFwiQ29tbWFuZEFyZ3VtZW50XFxcIjogXFxcImdtYWlsLmNvbVxcXCJcXG4jICAgICB9LFxcbiMg
ICAgIHtcXG4jICAgICAgIFxcXCJOYW1lXFxcIjogXFxcInNwZiBsb29rdXBcXFwiLFxcbiMgICAg
ICAgXFxcIlVSTFxcXCI6IFxcXCJodHRwczovL2xvb2t1cC5teHRvb2xib3guY29tL2FwaS92MS9s
b29rdXAvc3BmL2dtYWlsLmNvbVxcXCIsXFxuIyAgICAgICBcXFwiQ29tbWFuZFxcXCI6IFxcXCJz
cGZcXFwiLFxcbiMgICAgICAgXFxcIkNvbW1hbmRBcmd1bWVudFxcXCI6IFxcXCJnbWFpbC5jb21c
XFwiXFxuIyAgICAgfSxcXG4jICAgICB7XFxuIyAgICAgICBcXFwiTmFtZVxcXCI6IFxcXCJkbnMg
cHJvcGFnYXRpb25cXFwiLFxcbiMgICAgICAgXFxcIlVSTFxcXCI6IFxcXCJodHRwczovL2xvb2t1
cC5teHRvb2xib3guY29tL2FwaS92MS9sb29rdXAvbXgvZ21haWwuY29tOmFsbFxcXCIsXFxuIyAg
ICAgICBcXFwiQ29tbWFuZFxcXCI6IFxcXCJteFxcXCIsXFxuIyAgICAgICBcXFwiQ29tbWFuZEFy
Z3VtZW50XFxcIjogXFxcImdtYWlsLmNvbTphbGxcXFwiXFxuIyAgICAgfVxcbiMgICBdXFxuIyB9
XCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5teF9hcmd1bWVudCA9IGFydGlm
YWN0LnZhbHVlXFxuaW5wdXRzLm14X3BhcmFtMSA9IE5vbmVcIixcInJlc3VsdF9uYW1lXCI6XCJc
In08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1
ZW5jZUZsb3dfMXJsb3B3cTwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wbHM5anln
PC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3df
MXJsb3B3cVwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNl
cnZpY2VUYXNrXzFoN3o1dXFcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMHljOGkwbFwiPjxp
bmNvbWluZz5TZXF1ZW5jZUZsb3dfMGxzOWp5ZzwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVu
Y2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBsczlqeWdcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFz
a18xaDd6NXVxXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMHljOGkwbFwiLz48dGV4dEFubm90YXRp
b24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxv
dyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRp
b25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1c
IlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90
YXRpb25fMGVuMmNoNFwiPjx0ZXh0PjwhW0NEQVRBW0lucHV0OiBNeFRvb2xib3ggbXggY29tbWFu
ZDsgYXJ0aWZhY3QgdmFsdWUgaXMgYXJndW1lbnQgdG8gbXggY29tbWFuZDtcbl1dPjwvdGV4dD48
L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzA2N3hoY2pcIiBz
b3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xaDd6NXVxXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRp
b25fMGVuMmNoNFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8wZGdmaXk1
XCI+PHRleHQ+PCFbQ0RBVEFbUmVzdWx0czogSW5jaWRlbnQgbm90ZSBjcmVhdGVkIGNvbnRhaW5p
bmcgUmVwb3J0aW5nIE5hbWUgU2VydmVyO1xuQXJ0aWZhY3RzIGNyZWF0ZWQgZm9yIGVhY2ggSVAg
QWRkcmVzc1xuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNz
b2NpYXRpb25fMTV2Zmt4dlwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFoN3o1dXFcIiB0YXJn
ZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8wZGdmaXk1XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5E
aWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50
PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5F
bGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlc
Ij48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIzMDNcIiB5PVwi
MTY1XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRo
PVwiOTBcIiB4PVwiMjk4XCIgeT1cIjIwMFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6
QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25f
MWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCIxODdcIiB5PVwiMjU3XCIvPjwvYnBtbmRp
OkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMXNl
dWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwi
MzEwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxOTdcIi8+PG9tZ2RpOndheXBvaW50
IHg9XCIyNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1N1wiLz48L2JwbW5kaTpC
UE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzFoN3o1
dXFcIiBpZD1cIlNlcnZpY2VUYXNrXzFoN3o1dXFfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiNDQ3XCIgeT1cIjE0M1wiLz48L2JwbW5kaTpCUE1OU2hh
cGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xcmxvcHdxXCIg
aWQ9XCJTZXF1ZW5jZUZsb3dfMXJsb3B3cV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzM5XCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxODNcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0
NDdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE4M1wiLz48YnBtbmRpOkJQTU5MYWJl
bD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEyXCIgd2lkdGg9XCI5MFwiIHg9XCIzNDhcIiB5PVwi
MTYyXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5T
aGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzB5YzhpMGxcIiBpZD1cIkVuZEV2ZW50XzB5Yzhp
MGxfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI2NDVc
IiB5PVwiMTY1XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTJc
IiB3aWR0aD1cIjBcIiB4PVwiNjYzXCIgeT1cIjIwNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZs
b3dfMGxzOWp5Z1wiIGlkPVwiU2VxdWVuY2VGbG93XzBsczlqeWdfZGlcIj48b21nZGk6d2F5cG9p
bnQgeD1cIjU0N1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTgzXCIvPjxvbWdkaTp3
YXlwb2ludCB4PVwiNjQ1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxODNcIi8+PGJw
bW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxMlwiIHdpZHRoPVwiOTBcIiB4
PVwiNTUxXCIgeT1cIjE2MlwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+
PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8wZW4yY2g0XCIg
aWQ9XCJUZXh0QW5ub3RhdGlvbl8wZW4yY2g0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIz
NVwiIHdpZHRoPVwiMjQxXCIgeD1cIjExM1wiIHk9XCI1NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+
PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzA2N3hoY2pcIiBpZD1c
IkFzc29jaWF0aW9uXzA2N3hoY2pfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQ0N1wiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTYyXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjc1XCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI5MVwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBt
bmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzBkZ2ZpeTVcIiBpZD1c
IlRleHRBbm5vdGF0aW9uXzBkZ2ZpeTVfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIg
d2lkdGg9XCIyOTNcIiB4PVwiNTk2XCIgeT1cIjU5XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBt
bmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMTV2Zmt4dlwiIGlkPVwiQXNz
b2NpYXRpb25fMTV2Zmt4dl9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNTQ3XCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIxNjFcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI3MDlcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjg5XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRp
OkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiJ9LCAiY29udGVu
dF92ZXJzaW9uIjogMSwgImNyZWF0b3JfaWQiOiAiYUBhLmNvbSIsICJkZXNjcmlwdGlvbiI6ICJR
dWVyeSBNWCByZWNvcmQuIENyZWF0ZSBhIG5vdGUgY29udGFpbmluZyB0aGUgUmVwb3J0aW5nIE5h
bWUgU2VydmVyIGFuZCBhbiBhcnRpZmFjdCBmb3IgZWFjaCBJUCBhZGRyZXNzLiIsICJleHBvcnRf
a2V5IjogImV4YW1wbGVfbXh0b29sYm94X214X3F1ZXJ5IiwgImxhc3RfbW9kaWZpZWRfYnkiOiAi
YUBhLmNvbSIsICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTk0OTMzODE5NjA3LCAibmFtZSI6ICJF
eGFtcGxlOiBNWFRvb2xib3ggTVggcXVlcnkiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAi
cHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9teHRvb2xib3hfbXhfcXVlcnkiLCAidGFncyI6
IFtdLCAidXVpZCI6ICIzNGQyMmFkYy03ODg0LTQ3NjEtOThmOS00YjI5MmU1MzY0OGEiLCAid29y
a2Zsb3dfaWQiOiAxMX1dLCAid29ya3NwYWNlcyI6IFtdfQ==
""")
