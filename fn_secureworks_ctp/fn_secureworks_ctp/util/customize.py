# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_secureworks_ctp"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_secureworks_ctp package"""
    reload_params = {"package": u"fn_secureworks_ctp",
                    "incident_fields": [u"scwx_ctp_close_code", u"scwx_ctp_date_created", u"scwx_ctp_grouping_type", u"scwx_ctp_priority", u"scwx_ctp_request_type", u"scwx_ctp_ticket_id", u"scwx_ctp_ticket_type"], 
                    "action_fields": [], 
                    "function_params": [u"incident_id"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_secureworks_ctp"], 
                    "functions": [u"secureworks_ctp_close_ticket"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_secureworks_close_ticket"], 
                    "actions": [u"Secureworks CTP Close Ticket"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Incident fields:
    #     scwx_ctp_close_code
    #     scwx_ctp_date_created
    #     scwx_ctp_grouping_type
    #     scwx_ctp_priority
    #     scwx_ctp_request_type
    #     scwx_ctp_ticket_id
    #     scwx_ctp_ticket_type
    #   Function inputs:
    #     incident_id
    #   Message Destinations:
    #     fn_secureworks_ctp
    #   Functions:
    #     secureworks_ctp_close_ticket
    #   Workflows:
    #     example_secureworks_close_ticket
    #   Rules:
    #     Secureworks CTP Close Ticket


    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFt7ImV2YWx1YXRpb25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJpbmNpZGVu
dC5wbGFuX3N0YXR1cyIsICJtZXRob2QiOiAiY2hhbmdlZF90byIsICJ0eXBlIjogbnVsbCwgInZh
bHVlIjogIkNsb3NlZCJ9LCB7ImV2YWx1YXRpb25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJp
bmNpZGVudC5wcm9wZXJ0aWVzLnNjd3hfY3RwX3RpY2tldF9pZCIsICJtZXRob2QiOiAiaGFzX2Ff
dmFsdWUiLCAidHlwZSI6IG51bGwsICJ2YWx1ZSI6IG51bGx9XSwgImVuYWJsZWQiOiB0cnVlLCAi
ZXhwb3J0X2tleSI6ICJTZWN1cmV3b3JrcyBDVFAgQ2xvc2UgVGlja2V0IiwgImlkIjogODEsICJs
b2dpY190eXBlIjogImFsbCIsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFsiZm5fc2VjdXJld29y
a3NfY3RwIl0sICJuYW1lIjogIlNlY3VyZXdvcmtzIENUUCBDbG9zZSBUaWNrZXQiLCAib2JqZWN0
X3R5cGUiOiAiaW5jaWRlbnQiLCAidGFncyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAs
ICJ0eXBlIjogMCwgInV1aWQiOiAiY2RkZGIwMzEtMjFhYi00YzY1LTk1YWQtYTQxMzU5ZGZiNmQw
IiwgInZpZXdfaXRlbXMiOiBbXSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV9zZWN1cmV3b3Jrc19j
bG9zZV90aWNrZXQiXX1dLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJleHBvcnRfZGF0ZSI6IDE1
ODUyNDQ5OTc5NjYsICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAyLCAiZmllbGRzIjogW3siYWxs
b3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxh
dGVkIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVs
dF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRf
a2V5IjogIl9fZnVuY3Rpb24vaW5jaWRlbnRfaWQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxz
ZSwgImlkIjogMjE1LCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAiaW50ZXJuYWwiOiBmYWxzZSwg
ImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAiaW5jaWRlbnRfaWQiLCAib3BlcmF0aW9uX3Bl
cm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4Ijog
bnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInJpY2hfdGV4
dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogImluY2lkZW50
X2lkIiwgInRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiMGRkMWMyZTEtOTVj
OS00NDRjLTg2ODgtMjY5ZGVhNmZiN2YxIiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0
X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxz
ZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5j
aWRlbnQvc2N3eF9jdHBfdGlja2V0X2lkIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJp
ZCI6IDM0OCwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNfdHJh
Y2tlZCI6IGZhbHNlLCAibmFtZSI6ICJzY3d4X2N0cF90aWNrZXRfaWQiLCAib3BlcmF0aW9uX3Bl
cm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4Ijog
InByb3BlcnRpZXMiLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRh
Z3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJTZWN1cmV3b3JrcyBDVFAgdGlja2V0
SWQiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6IDAsICJ1dWlkIjogIjVmZThiNjJkLTBhZTUt
NDk5OS1iYmRjLTU0MWE3M2ZjOWVjZSIsICJ2YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVmYXVsdF92
YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2Us
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogImluY2lk
ZW50L3Njd3hfY3RwX2RhdGVfY3JlYXRlZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
aWQiOiAzNDksICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgImlzX3Ry
YWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAic2N3eF9jdHBfZGF0ZV9jcmVhdGVkIiwgIm9wZXJhdGlv
bl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZp
eCI6ICJwcm9wZXJ0aWVzIiwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2Us
ICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAiU2VjdXJld29ya3MgQ1RQIGRh
dGVDcmVhdGVkIiwgInRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAwLCAidXVpZCI6ICJmNmU3ODY3
Ny1lMWMyLTRlNGQtOTcwNS1mYTAyMmEwZDAzZmUiLCAidmFsdWVzIjogW119LCB7ImFsbG93X2Rl
ZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6
IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hv
c2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6
ICJpbmNpZGVudC9zY3d4X2N0cF9yZXF1ZXN0X3R5cGUiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBm
YWxzZSwgImlkIjogMzUyLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2Us
ICJpc190cmFja2VkIjogZmFsc2UsICJuYW1lIjogInNjd3hfY3RwX3JlcXVlc3RfdHlwZSIsICJv
cGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIs
ICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6
IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIlNlY3VyZXdvcmtz
IENUUCByZXF1ZXN0VHlwZSIsICJ0b29sdGlwIjogIiIsICJ0eXBlX2lkIjogMCwgInV1aWQiOiAi
NTViZTU4ODItZWVhYS00NGY1LThlNGUtNWU2ZmYxOTkwMDhmIiwgInZhbHVlcyI6IFtdfSwgeyJh
bGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1
bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZh
dWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9y
dF9rZXkiOiAiaW5jaWRlbnQvc2N3eF9jdHBfY2xvc2VfY29kZSIsICJoaWRlX25vdGlmaWNhdGlv
biI6IGZhbHNlLCAiaWQiOiAzNTQsICJpbnB1dF90eXBlIjogInNlbGVjdCIsICJpbnRlcm5hbCI6
IGZhbHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJzY3d4X2N0cF9jbG9zZV9jb2Rl
IiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIi
OiAiIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwgInJlYWRfb25seSI6IGZhbHNlLCAicmVxdWly
ZWQiOiAiY2xvc2UiLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMi
OiBbXSwgInRleHQiOiAiU2VjdXJld29ya3MgQ1RQIENsb3NlIENvZGUiLCAidG9vbHRpcCI6ICIi
LCAidHlwZV9pZCI6IDAsICJ1dWlkIjogIjVmZmY0ZWQ2LTMxN2YtNDdhZi04ZjM1LTc2Zjk4N2Jm
N2EzZiIsICJ2YWx1ZXMiOiBbeyJkZWZhdWx0IjogdHJ1ZSwgImVuYWJsZWQiOiB0cnVlLCAiaGlk
ZGVuIjogZmFsc2UsICJsYWJlbCI6ICJDb25maXJtZWQgU2VjdXJpdHkgSW5jaWRlbnQiLCAicHJv
cGVydGllcyI6IG51bGwsICJ1dWlkIjogIjNkMjEzYzBlLWMyOGItNDljMy1hNzcxLTE2ZDg0M2Q2
NThjZiIsICJ2YWx1ZSI6IDIwMn0sIHsiZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUs
ICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjogIkR1cGxpY2F0ZSIsICJwcm9wZXJ0aWVzIjogbnVs
bCwgInV1aWQiOiAiZmVlOTMwMzctNjBkMi00ZDk4LWEyMmMtNmYxYWEwMmY1Yjg5IiwgInZhbHVl
IjogMjAzfSwgeyJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRlbiI6IGZh
bHNlLCAibGFiZWwiOiAiSW5jaWRlbnQgTWlzaWRlbnRpZmllZCIsICJwcm9wZXJ0aWVzIjogbnVs
bCwgInV1aWQiOiAiNDk1YmVhM2YtMjU5ZS00OTc2LWE3ZjYtYjUwMWUzYTBhZWVlIiwgInZhbHVl
IjogMjA0fSwgeyJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRlbiI6IGZh
bHNlLCAibGFiZWwiOiAiSW5jb25jbHVzaXZlIiwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6
ICI3NDUyM2Q3ZS1lZDg0LTQyYzgtYTEzNS01M2QyM2QzMmVmZGYiLCAidmFsdWUiOiAyMDV9LCB7
ImRlZmF1bHQiOiBmYWxzZSwgImVuYWJsZWQiOiB0cnVlLCAiaGlkZGVuIjogZmFsc2UsICJsYWJl
bCI6ICJOb3QgQWN0aW9uYWJsZSIsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiMWVjODhm
YmYtZmQ3NC00YTJiLWE1MTYtYjE0NmEzNjM0YzFmIiwgInZhbHVlIjogMjA2fSwgeyJkZWZhdWx0
IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRlbiI6IGZhbHNlLCAibGFiZWwiOiAiTm90
IFZ1bG5lcmFibGUiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogImM4YmViYWZhLWIzYjEt
NDY3NC05MGE4LTQzZWFjMjIxNDY4MSIsICJ2YWx1ZSI6IDIwN30sIHsiZGVmYXVsdCI6IGZhbHNl
LCAiZW5hYmxlZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjogIlRocmVhdCBNaXRp
Z2F0ZWQiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogImIzZGFiYzVhLTI5ODEtNDMzYy1i
M2Q2LTE4MTQ1Mzk4ZjM5ZSIsICJ2YWx1ZSI6IDIwOH1dfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVl
IjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNo
YW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2
ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQv
c2N3eF9jdHBfcHJpb3JpdHkiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogMzUz
LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJpc190cmFja2VkIjog
ZmFsc2UsICJuYW1lIjogInNjd3hfY3RwX3ByaW9yaXR5IiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9
LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6ICJwcm9wZXJ0
aWVzIiwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10s
ICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAiU2VjdXJld29ya3MgQ1RQIHByaW9yaXR5IiwgInRv
b2x0aXAiOiAiIiwgInR5cGVfaWQiOiAwLCAidXVpZCI6ICJkYWMxZTAxNi00ZTMxLTQ5YjUtYTQx
Ni03YTJmYjRjMTQwNGYiLCAidmFsdWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBm
YWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdl
YWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6
IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9zY3d4
X2N0cF9ncm91cGluZ190eXBlIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDM1
MSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNfdHJhY2tlZCI6
IGZhbHNlLCAibmFtZSI6ICJzY3d4X2N0cF9ncm91cGluZ190eXBlIiwgIm9wZXJhdGlvbl9wZXJt
cyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6ICJw
cm9wZXJ0aWVzIiwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdz
IjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAiU2VjdXJld29ya3MgQ1RQIGdyb3VwaW5n
VHlwZSIsICJ0b29sdGlwIjogIiIsICJ0eXBlX2lkIjogMCwgInV1aWQiOiAiYjg3YjQwYmUtN2Fh
MC00NjQyLWJkODEtMmQwYjQ3NGYwMTQ5IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0
X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxz
ZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5j
aWRlbnQvc2N3eF9jdHBfdGlja2V0X3R5cGUiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwg
ImlkIjogMzUwLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJpc190
cmFja2VkIjogZmFsc2UsICJuYW1lIjogInNjd3hfY3RwX3RpY2tldF90eXBlIiwgIm9wZXJhdGlv
bl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZp
eCI6ICJwcm9wZXJ0aWVzIiwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2Us
ICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAiU2VjdXJld29ya3MgQ1RQIHRp
Y2tldFR5cGUiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6IDAsICJ1dWlkIjogImUwZWM5N2Zl
LTQ2ZTgtNGM5OS1iMzNiLWRlMjgwN2I3NWZmMSIsICJ2YWx1ZXMiOiBbXX1dLCAiZnVuY3Rpb25z
IjogW3siY3JlYXRvciI6IHsiZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJp
ZCI6IDMsICJuYW1lIjogImFAYS5jb20iLCAidHlwZSI6ICJ1c2VyIn0sICJkZXNjcmlwdGlvbiI6
IHsiZm9ybWF0IjogInRleHQiLCAiY29udGVudCI6ICJDbG9zZSBhIFNlY3VyZXdvcmtzIENUUCBp
biBhbiBpbmNpZGVudCB0aGF0IGhhcyBhIFNlY3VyZXdvcmtzIENUUCB0aWNrZXQgYXNzb2NpYXRl
ZCB3aXRoIGl0LiJ9LCAiZGVzdGluYXRpb25faGFuZGxlIjogImZuX3NlY3VyZXdvcmtzX2N0cCIs
ICJkaXNwbGF5X25hbWUiOiAiU2VjdXJld29ya3MgQ1RQIENsb3NlIFRpY2tldCIsICJleHBvcnRf
a2V5IjogInNlY3VyZXdvcmtzX2N0cF9jbG9zZV90aWNrZXQiLCAiaWQiOiA2NiwgImxhc3RfbW9k
aWZpZWRfYnkiOiB7ImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQgU3lzYWRtaW4iLCAiaWQiOiAz
LCAibmFtZSI6ICJhQGEuY29tIiwgInR5cGUiOiAidXNlciJ9LCAibGFzdF9tb2RpZmllZF90aW1l
IjogMTU4NTI0MzY2MzAyOCwgIm5hbWUiOiAic2VjdXJld29ya3NfY3RwX2Nsb3NlX3RpY2tldCIs
ICJ0YWdzIjogW10sICJ1dWlkIjogIjhkNzdkNGM2LWIwMjctNDMwMC1hNTE3LTY3NzUyZjQ5OWMz
ZiIsICJ2ZXJzaW9uIjogMSwgInZpZXdfaXRlbXMiOiBbeyJjb250ZW50IjogIjBkZDFjMmUxLTk1
YzktNDQ0Yy04Njg4LTI2OWRlYTZmYjdmMSIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmll
bGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRl
ciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMi
OiBbXSwgImRlc2NyaXB0aW9uIjogbnVsbCwgIm5hbWUiOiAiRXhhbXBsZTogU2VjdXJld29ya3Mg
Q2xvc2UgVGlja2V0IiwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgInByb2dyYW1tYXRpY19u
YW1lIjogImV4YW1wbGVfc2VjdXJld29ya3NfY2xvc2VfdGlja2V0IiwgInRhZ3MiOiBbXSwgInV1
aWQiOiBudWxsLCAid29ya2Zsb3dfaWQiOiA2N31dfV0sICJnZW9zIjogbnVsbCwgImdyb3VwcyI6
IG51bGwsICJpZCI6IDE2LCAiaW5ib3VuZF9tYWlsYm94ZXMiOiBudWxsLCAiaW5jaWRlbnRfYXJ0
aWZhY3RfdHlwZXMiOiBbXSwgImluY2lkZW50X3R5cGVzIjogW3sidXBkYXRlX2RhdGUiOiAxNTg1
MzE4ODM5MTM3LCAiY3JlYXRlX2RhdGUiOiAxNTg1MzE4ODM5MTM3LCAidXVpZCI6ICJiZmVlYzJk
NC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXph
dGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQ
YWNrYWdlcyAoaW50ZXJuYWwpIiwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50
ZXJuYWwpIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjog
bnVsbCwgImhpZGRlbiI6IGZhbHNlLCAiaWQiOiAwfV0sICJpbmR1c3RyaWVzIjogbnVsbCwgImxh
eW91dHMiOiBbXSwgImxvY2FsZSI6IG51bGwsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7ImFw
aV9rZXlzIjogW10sICJkZXN0aW5hdGlvbl90eXBlIjogMCwgImV4cGVjdF9hY2siOiB0cnVlLCAi
ZXhwb3J0X2tleSI6ICJmbl9zZWN1cmV3b3Jrc19jdHAiLCAibmFtZSI6ICJmbl9zZWN1cmV3b3Jr
c19jdHAiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZm5fc2VjdXJld29ya3NfY3RwIiwgInRhZ3Mi
OiBbXSwgInVzZXJzIjogWyJhQGEuY29tIl0sICJ1dWlkIjogIjNhMmRjODdkLTkyNjUtNDJjNy1h
ZjY1LTNkZjBmZWY1ZmFlZSJ9XSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAib3ZlcnJpZGVzIjog
W10sICJwaGFzZXMiOiBbXSwgInJlZ3VsYXRvcnMiOiBudWxsLCAicm9sZXMiOiBbXSwgInNjcmlw
dHMiOiBbXSwgInNlcnZlcl92ZXJzaW9uIjogeyJidWlsZF9udW1iZXIiOiAzMiwgIm1ham9yIjog
MzUsICJtaW5vciI6IDIsICJ2ZXJzaW9uIjogIjM1LjIuMzIifSwgInRhZ3MiOiBbXSwgInRhc2tf
b3JkZXIiOiBbXSwgInRpbWVmcmFtZXMiOiBudWxsLCAidHlwZXMiOiBbXSwgIndvcmtmbG93cyI6
IFt7ImFjdGlvbnMiOiBbXSwgImNvbnRlbnQiOiB7InZlcnNpb24iOiAyLCAid29ya2Zsb3dfaWQi
OiAiZXhhbXBsZV9zZWN1cmV3b3Jrc19jbG9zZV90aWNrZXQiLCAieG1sIjogIjw/eG1sIHZlcnNp
b249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJo
dHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJo
dHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0
cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJo
dHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMu
b3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9Y
TUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEu
b3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVfc2VjdXJld29ya3NfY2xvc2VfdGlja2V0
XCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBTZWN1cmV3b3JrcyBDbG9z
ZSBUaWNrZXRcIj48ZG9jdW1lbnRhdGlvbj5DbG9zZSBhIFNlY3VyZXdvcmtzIENUUCB0aWNrZXQg
YW5kIHdyaXRlIGEgbm90ZSB0byB0aGUgYXNzb2NpYXRlZCBpbmNpZGVudC48L2RvY3VtZW50YXRp
b24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIi8+PHNlcnZpY2VUYXNrIGlk
PVwiU2VydmljZVRhc2tfMDh5N3NyMFwiIG5hbWU9XCJTZWN1cmV3b3JrcyBDVFAgQ2xvc2UgVGlj
a2V0XCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVz
aWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI4ZDc3ZDRjNi1iMDI3LTQzMDAtYTUxNy02Nzc1MmY0OTlj
M2ZcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcIm5vdGVUZXh0
ID0gdVxcXCJTZWN1cmV3b3JrcyB0aWNrZXQgY2xvc2VkXFxcIlxcbmluY2lkZW50LmFkZE5vdGUo
bm90ZVRleHQpXCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5pbmNpZGVudF9p
ZCA9IGluY2lkZW50LmlkXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50
cz48L3NlcnZpY2VUYXNrPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhp
eXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3RhdGlv
bj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwiU3Rh
cnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiLz48
L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRp
OkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48
YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwi
U3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRo
PVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1u
ZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhp
eXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlc
IiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVt
ZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwi
PjxvbWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIy
MjBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVu
dD1cIlNlcnZpY2VUYXNrXzA4eTdzcjBcIiBpZD1cIlNlcnZpY2VUYXNrXzA4eTdzcjBfZGlcIj48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiNDI5XCIgeT1cIjE2
NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5E
aWFncmFtPjwvZGVmaW5pdGlvbnM+In0sICJjb250ZW50X3ZlcnNpb24iOiAyLCAiY3JlYXRvcl9p
ZCI6ICJhQGEuY29tIiwgImRlc2NyaXB0aW9uIjogIkNsb3NlIGEgU2VjdXJld29ya3MgQ1RQIHRp
Y2tldCBhbmQgd3JpdGUgYSBub3RlIHRvIHRoZSBhc3NvY2lhdGVkIGluY2lkZW50LiIsICJleHBv
cnRfa2V5IjogImV4YW1wbGVfc2VjdXJld29ya3NfY2xvc2VfdGlja2V0IiwgImxhc3RfbW9kaWZp
ZWRfYnkiOiAiYUBhLmNvbSIsICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTg1MjQ0NjYwODU0LCAi
bmFtZSI6ICJFeGFtcGxlOiBTZWN1cmV3b3JrcyBDbG9zZSBUaWNrZXQiLCAib2JqZWN0X3R5cGUi
OiAiaW5jaWRlbnQiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9zZWN1cmV3b3Jrc19j
bG9zZV90aWNrZXQiLCAidGFncyI6IFtdLCAidXVpZCI6ICI4MjM1ODMzMy1lNDkxLTRhYzEtOGM3
MC0yMjNmZGQwOTgxOGYiLCAid29ya2Zsb3dfaWQiOiA2N31dLCAid29ya3NwYWNlcyI6IFtdfQ==
"""
    )