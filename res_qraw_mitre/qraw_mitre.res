{"action_order": [], "actions": [{"automations": [], "conditions": [], "enabled": true, "export_key": "Map rule to MITRE tactic", "id": 272, "logic_type": "all", "message_destinations": [], "name": "Map rule to MITRE tactic", "object_type": "qradar_reference_set", "tags": [], "timeout_seconds": 86400, "type": 1, "uuid": "a8667541-9d0e-4027-81d8-e10af81bff87", "view_items": [], "workflows": ["qradar_advisor_map_rule_to_tactic"]}, {"automations": [], "conditions": [], "enabled": true, "export_key": "QRadar Advisor Offense Analysis with MITRE", "id": 273, "logic_type": "all", "message_destinations": [], "name": "QRadar Advisor Offense Analysis with MITRE", "object_type": "incident", "tags": [], "timeout_seconds": 86400, "type": 1, "uuid": "2dab6400-6a55-4fe0-a44b-b2b902cf850e", "view_items": [], "workflows": ["qradar_advisor_offense_analysis_mitre"]}], "apps": [], "automatic_tasks": [], "export_date": 1664128030995, "export_format_version": 2, "export_type": null, "fields": [{"export_key": "incident/internal_customizations_field", "id": 0, "input_type": "text", "internal": true, "name": "internal_customizations_field", "read_only": true, "text": "Customizations Field (internal)", "type_id": 0, "uuid": "bfeec2d4-3770-11e8-ad39-4a0004044aa1"}], "functions": [], "geos": null, "groups": null, "id": 26, "inbound_destinations": [], "inbound_mailboxes": null, "incident_artifact_types": [], "incident_types": [{"update_date": 1664129020974, "create_date": 1664129020974, "uuid": "bfeec2d4-3770-11e8-ad39-4a0004044aa0", "description": "Customization Packages (internal)", "export_key": "Customization Packages (internal)", "name": "Customization Packages (internal)", "enabled": false, "system": false, "parent_id": null, "hidden": false, "id": 0}], "industries": null, "layouts": [], "locale": null, "message_destinations": [], "notifications": null, "overrides": [], "phases": [], "playbooks": [], "regulators": null, "roles": [], "scripts": [], "server_version": {"build_number": 7583, "major": 44, "minor": 0, "version": "44.0.7583"}, "tags": [], "task_order": [], "timeframes": null, "types": [], "workflows": [{"actions": [], "content": {"version": 14, "workflow_id": "qradar_advisor_offense_analysis_mitre", "xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><definitions xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:omgdc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:omgdi=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:resilient=\"http://resilient.ibm.com/bpmn\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" targetNamespace=\"http://www.camunda.org/test\"><process id=\"qradar_advisor_offense_analysis_mitre\" isExecutable=\"true\" name=\"Example of QRadar Advisor Offense Analysis with MITRE\"><documentation><![CDATA[Performs an offense analysis in QRadar Advisor. Results will populate a Data Table, create a Task, and generate a STIX representation in Notes.\nQRAW returns MITRE ATT&CK tactic information about the given offense. MITRE integration is called to get tactic information. Result published in a data table.]]></documentation><startEvent id=\"StartEvent_155asxm\"><outgoing>SequenceFlow_1ofd2ct</outgoing></startEvent><serviceTask id=\"ServiceTask_0l3ao75\" name=\"QRadar Advisor Offense Analysis\" resilient:type=\"function\"><extensionElements><resilient:function uuid=\"744e9c8b-f00f-4a71-9ae6-c3dde388d6fa\">{\"inputs\":{\"48819fe4-2c70-488a-9996-9581a81d886a\":{\"input_type\":\"static\",\"static_input\":{\"multiselect_value\":[],\"select_value\":\"bee62681-b35f-4ff8-9c4f-52489e6920cf\"}},\"eb4d07be-006d-41d9-9392-ed22cefff172\":{\"input_type\":\"static\",\"static_input\":{\"boolean_value\":true,\"multiselect_value\":[]}}},\"pre_processing_script\":\"#\\n# This sample workflow uses the custom field (qradar_id) to perform \\n# an offense analysis in QRadar Advisor\\n#\\ninputs.qradar_offense_id = incident.properties.qradar_id\",\"pre_processing_script_language\":\"python\",\"result_name\":\"qraw_offense_insights\"}</resilient:function></extensionElements><incoming>SequenceFlow_1ofd2ct</incoming><outgoing>SequenceFlow_0s00a23</outgoing></serviceTask><sequenceFlow id=\"SequenceFlow_1ofd2ct\" sourceRef=\"StartEvent_155asxm\" targetRef=\"ServiceTask_0l3ao75\"/><serviceTask id=\"ServiceTask_0er8nnp\" name=\"MITRE Tactic Information\" resilient:type=\"function\"><extensionElements><resilient:function uuid=\"669947ce-ee8d-45f4-b0bc-778c278cfaea\">{\"inputs\":{},\"post_processing_script\":\"\\\"\\\"\\\" Example of data returned in ResultPayload's content\\n{\\n  \\\"mitre_tactics\\\": [\\n    {\\n      \\n      \\\"name\\\": String,\\n      \\\"id\\\": String,\\n      \\\"ref\\\": \\\"String\\\",\\n      \\\"collection\\\": \\\"String\\\", \\n      \\\"mitre_techniques\\\": [\\n        {\\n          \\\"name\\\": \\\"String\\\", \\n          \\\"description\\\": \\\"String\\\",\\n          \\\"external_references\\\": [{\\\"url\\\": \\\"String\\\"}],\\n          \\\"x_mitre_detection\\\": \\\"String\\\",\\n          \\\"id\\\": \\\"String\\\",\\n          \\\"collection\\\": \\\"String\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\\n\\\"\\\"\\\"\\n# Read result from QRAW to get confidence information\\ninsights = workflow.properties.qraw_offense_insights.insights\\nmitre_tactics = insights[\\\"tactics\\\"]\\n\\ntactic_confidence = {}\\nif mitre_tactics is not None:\\n  for tactic in mitre_tactics:\\n    tactic_confidence[tactic[\\\"tactic_id\\\"]] = tactic[\\\"confidence\\\"]\\n    \\ntactics = results.content[\\\"mitre_tactics\\\"]\\n\\nfor tactic in tactics:\\n  #\\n  # MITRE ATTACK of Incident Datatable\\n  #\\n  tactic_row = incident.addRow(\\\"mitre_attack_of_incident\\\")\\n  tactic_row[\\\"collection\\\"] = tactic[\\\"collection\\\"]\\n  tactic_row[\\\"attack_tactic\\\"] = tactic[\\\"name\\\"]\\n  tactic_row[\\\"tactic_code\\\"] = tactic[\\\"id\\\"]\\n  url_html = '&lt;a href=\\\"' + tactic[\\\"ref\\\"] + '\\\"&gt;' + tactic[\\\"ref\\\"] + '&lt;/a&gt;&lt;br&gt;'\\n  tactic_row[\\\"reference\\\"] = helper.createRichText(url_html)\\n  tactic_row[\\\"confidence\\\"] = str(tactic_confidence.get(tactic[\\\"name\\\"], \\\"\\\"))\\n  #\\n  # MITRE ATT&amp;CK techniques Datatable\\n  #\\n  techs = tactic[\\\"mitre_techniques\\\"]\\n  for att_tech in techs:\\n    tech_row = incident.addRow(\\\"mitre_attack_techniques\\\")\\n    tech_row[\\\"collection\\\"] = tactic[\\\"collection\\\"]\\n    tech_row[\\\"tactic\\\"] = tactic[\\\"name\\\"]\\n\\n    tech_row[\\\"technique_name\\\"] = att_tech[\\\"name\\\"]\\n    tech_row[\\\"technique_description\\\"] = helper.createRichText(att_tech[\\\"description\\\"])\\n    refs = att_tech[\\\"external_references\\\"]\\n    ref_html = \\\"\\\"\\n    for ref in refs:\\n      url = ref[\\\"url\\\"]\\n      \\n      https_str = \\\"https://\\\"\\n      http_str = \\\"http://\\\"\\n\\n      start_pos = url.find(https_str)\\n\\n      if start_pos != -1:\\n        start_pos = start_pos + len(https_str)\\n      else:\\n        # try http://\\n        start_pos = url.find(http_str)\\n        if start_pos != -1:\\n          start_pos = start_pos + len(http_str)\\n        else:\\n          start_pos = 0 \\n\\n      end_pos = url.find('/', start_pos)\\n      if end_pos == 0:\\n        # We don't know how to extract\\n        display_str = url\\n      elif end_pos == -1:\\n        display_str = url[start_pos:]\\n      else:\\n        display_str = url[start_pos:end_pos]\\n      \\n      ref_html = ref_html + '&lt;a href=\\\"' + ref[\\\"url\\\"] + '\\\"&gt;' + display_str + '&lt;/a&gt;&lt;br&gt;'\\n    tech_row[\\\"references\\\"] = helper.createRichText(ref_html)\\n    tech_row[\\\"detection\\\"] = helper.createRichText(att_tech[\\\"x_mitre_detection\\\"])\\n    tech_row[\\\"technique_id\\\"] = att_tech[\\\"id\\\"]\\n\",\"post_processing_script_language\":\"python\",\"pre_processing_script\":\"insights = workflow.properties.qraw_offense_insights.insights\\n\\ntactics = insights[\\\"tactics\\\"]\\n\\nmitre_tactic_names = []\\nif tactics is not None:\\n  for tactic in tactics:\\n    #\\n    # Note, even though QRAW calls it tactic_id, it is more a tactic name\\n    #\\n    mitre_tactic_names.append(tactic[\\\"tactic_id\\\"])\\n#\\n# QRadar Advisor might return more than one tactics for a given offense. Include them inputs\\n# a comma separated string\\n#\\ninputs.mitre_tactic_name = \\\", \\\".join(mitre_tactic_names)\",\"result_name\":\"\"}</resilient:function></extensionElements><incoming>SequenceFlow_0s00a23</incoming><outgoing>SequenceFlow_0xjpndv</outgoing></serviceTask><sequenceFlow id=\"SequenceFlow_0s00a23\" sourceRef=\"ServiceTask_0l3ao75\" targetRef=\"ServiceTask_0er8nnp\"/><endEvent id=\"EndEvent_1ci3iqv\"><incoming>SequenceFlow_0xjpndv</incoming></endEvent><sequenceFlow id=\"SequenceFlow_0xjpndv\" sourceRef=\"ServiceTask_0er8nnp\" targetRef=\"EndEvent_1ci3iqv\"/><textAnnotation id=\"TextAnnotation_1kxxiyt\"><text>Start your workflow here</text></textAnnotation><association id=\"Association_1seuj48\" sourceRef=\"StartEvent_155asxm\" targetRef=\"TextAnnotation_1kxxiyt\"/><textAnnotation id=\"TextAnnotation_02mdunq\"><text><![CDATA[Inputs: \n qradar_offense_id \nqradar_advisor_result_stage \nqradar_analysis_restart_if_existed]]></text></textAnnotation><association id=\"Association_0x6nbfp\" sourceRef=\"ServiceTask_0l3ao75\" targetRef=\"TextAnnotation_02mdunq\"/><textAnnotation id=\"TextAnnotation_04ul2oz\"><text><![CDATA[Outputs:\nresults.observables\n results.note \nresults.insights\nresults.insights.tactics\n results.stix\n]]></text></textAnnotation><association id=\"Association_1ehcz3i\" sourceRef=\"ServiceTask_0l3ao75\" targetRef=\"TextAnnotation_04ul2oz\"/><textAnnotation id=\"TextAnnotation_1tjc57e\"><text><![CDATA[Inputs:\nMITRE tactic name(s)\nMITRE tactic id(s)\n]]></text></textAnnotation><association id=\"Association_1668csu\" sourceRef=\"ServiceTask_0er8nnp\" targetRef=\"TextAnnotation_1tjc57e\"/><textAnnotation id=\"TextAnnotation_0br22rs\"><text><![CDATA[Outputs:\nresults.mitre_tactics\n]]></text></textAnnotation><association id=\"Association_1ukydem\" sourceRef=\"ServiceTask_0er8nnp\" targetRef=\"TextAnnotation_0br22rs\"/></process><bpmndi:BPMNDiagram id=\"BPMNDiagram_1\"><bpmndi:BPMNPlane bpmnElement=\"undefined\" id=\"BPMNPlane_1\"><bpmndi:BPMNShape bpmnElement=\"StartEvent_155asxm\" id=\"StartEvent_155asxm_di\"><omgdc:Bounds height=\"36\" width=\"36\" x=\"237\" y=\"143\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"0\" width=\"90\" x=\"232\" y=\"178\"/></bpmndi:BPMNLabel></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_1kxxiyt\" id=\"TextAnnotation_1kxxiyt_di\"><omgdc:Bounds height=\"30\" width=\"100\" x=\"99\" y=\"254\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_1seuj48\" id=\"Association_1seuj48_di\"><omgdi:waypoint x=\"241\" xsi:type=\"omgdc:Point\" y=\"171\"/><omgdi:waypoint x=\"161\" xsi:type=\"omgdc:Point\" y=\"254\"/></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"ServiceTask_0l3ao75\" id=\"ServiceTask_0l3ao75_di\"><omgdc:Bounds height=\"80\" width=\"100\" x=\"361\" y=\"121\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_1ofd2ct\" id=\"SequenceFlow_1ofd2ct_di\"><omgdi:waypoint x=\"273\" xsi:type=\"omgdc:Point\" y=\"161\"/><omgdi:waypoint x=\"361\" xsi:type=\"omgdc:Point\" y=\"161\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"317\" y=\"139\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_02mdunq\" id=\"TextAnnotation_02mdunq_di\"><omgdc:Bounds height=\"74\" width=\"219\" x=\"182\" y=\"-9\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_0x6nbfp\" id=\"Association_0x6nbfp_di\"><omgdi:waypoint x=\"375\" xsi:type=\"omgdc:Point\" y=\"121\"/><omgdi:waypoint x=\"324\" xsi:type=\"omgdc:Point\" y=\"65\"/></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_04ul2oz\" id=\"TextAnnotation_04ul2oz_di\"><omgdc:Bounds height=\"98\" width=\"155\" x=\"512\" y=\"-16\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_1ehcz3i\" id=\"Association_1ehcz3i_di\"><omgdi:waypoint x=\"458\" xsi:type=\"omgdc:Point\" y=\"128\"/><omgdi:waypoint x=\"522\" xsi:type=\"omgdc:Point\" y=\"82\"/></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"ServiceTask_0er8nnp\" id=\"ServiceTask_0er8nnp_di\"><omgdc:Bounds height=\"80\" width=\"100\" x=\"659.0506787330316\" y=\"121\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_0s00a23\" id=\"SequenceFlow_0s00a23_di\"><omgdi:waypoint x=\"461\" xsi:type=\"omgdc:Point\" y=\"161\"/><omgdi:waypoint x=\"659\" xsi:type=\"omgdc:Point\" y=\"161\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"560\" y=\"139\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_1tjc57e\" id=\"TextAnnotation_1tjc57e_di\"><omgdc:Bounds height=\"71\" width=\"166\" x=\"487\" y=\"260\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_1668csu\" id=\"Association_1668csu_di\"><omgdi:waypoint x=\"668\" xsi:type=\"omgdc:Point\" y=\"200\"/><omgdi:waypoint x=\"607\" xsi:type=\"omgdc:Point\" y=\"260\"/></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_0br22rs\" id=\"TextAnnotation_0br22rs_di\"><omgdc:Bounds height=\"74\" width=\"139\" x=\"798\" y=\"257\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_1ukydem\" id=\"Association_1ukydem_di\"><omgdi:waypoint x=\"752\" xsi:type=\"omgdc:Point\" y=\"198\"/><omgdi:waypoint x=\"823\" xsi:type=\"omgdc:Point\" y=\"257\"/></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"EndEvent_1ci3iqv\" id=\"EndEvent_1ci3iqv_di\"><omgdc:Bounds height=\"36\" width=\"36\" x=\"906.5004557885142\" y=\"143\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"924.5004557885142\" y=\"182\"/></bpmndi:BPMNLabel></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_0xjpndv\" id=\"SequenceFlow_0xjpndv_di\"><omgdi:waypoint x=\"759\" xsi:type=\"omgdc:Point\" y=\"161\"/><omgdi:waypoint x=\"907\" xsi:type=\"omgdc:Point\" y=\"161\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"833\" y=\"139\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge></bpmndi:BPMNPlane></bpmndi:BPMNDiagram></definitions>"}, "content_version": 14, "description": "Performs an offense analysis in QRadar Advisor. Results will populate a Data Table, create a Task, and generate a STIX representation in Notes.\nQRAW returns MITRE ATT&CK tactic information about the given offense. MITRE integration is called to get tactic information. Result published in a data table.", "export_key": "qradar_advisor_offense_analysis_mitre", "last_modified_by": "admin@example.com", "last_modified_time": 1664125679238, "name": "Example of QRadar Advisor Offense Analysis with MITRE", "object_type": "incident", "programmatic_name": "qradar_advisor_offense_analysis_mitre", "tags": [], "uuid": "5adcd70e-8a27-4025-ba54-d7ca672e9320", "workflow_id": 221}, {"actions": [], "content": {"version": 3, "workflow_id": "qradar_advisor_map_rule_to_tactic", "xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><definitions xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:omgdc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:omgdi=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:resilient=\"http://resilient.ibm.com/bpmn\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" targetNamespace=\"http://www.camunda.org/test\"><process id=\"qradar_advisor_map_rule_to_tactic\" isExecutable=\"true\" name=\"Example of mapping QRadar rule to tactic\"><documentation><![CDATA[Map a QRadar rule to MITRE ATT&CK tactic using QRAW]]></documentation><startEvent id=\"StartEvent_155asxm\"><outgoing>SequenceFlow_1vffano</outgoing></startEvent><serviceTask id=\"ServiceTask_1pzn8wl\" name=\"QRadar Advisor Map Rule\" resilient:type=\"function\"><extensionElements><resilient:function uuid=\"f1dbf8b7-a5ed-45e4-b788-4edc49830993\">{\"inputs\":{},\"post_processing_script_language\":\"python3\",\"pre_processing_script\":\"inputs.qradar_rule_name = row.source\",\"pre_processing_script_language\":\"python\",\"result_name\":\"qraw_rule_map\"}</resilient:function></extensionElements><incoming>SequenceFlow_1vffano</incoming><outgoing>SequenceFlow_03oh0n5</outgoing></serviceTask><sequenceFlow id=\"SequenceFlow_1vffano\" sourceRef=\"StartEvent_155asxm\" targetRef=\"ServiceTask_1pzn8wl\"/><serviceTask id=\"ServiceTask_157vqta\" name=\"MITRE Tactic Information\" resilient:type=\"function\"><extensionElements><resilient:function uuid=\"669947ce-ee8d-45f4-b0bc-778c278cfaea\">{\"inputs\":{},\"post_processing_script\":\"\\\"\\\"\\\" Example of data returned in ResultPayload's content\\n{\\n  \\\"mitre_tactics\\\": [\\n    {\\n      \\n      \\\"name\\\": String,\\n      \\\"id\\\": String,\\n      \\\"ref\\\": \\\"String\\\",\\n      \\\"collection\\\": \\\"String\\\", \\n      \\\"mitre_techniques\\\": [\\n        {\\n          \\\"name\\\": \\\"String\\\", \\n          \\\"description\\\": \\\"String\\\",\\n          \\\"external_references\\\": [{\\\"url\\\": \\\"String\\\"}],\\n          \\\"x_mitre_detection\\\": \\\"String\\\",\\n          \\\"id\\\": \\\"String\\\",\\n          \\\"collection\\\": \\\"String\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\\n\\\"\\\"\\\"\\n# Read result from QRAW to get confidence information\\nmapping = workflow.properties.qraw_rule_map.tactics[\\\"mapping\\\"]\\ntactic_names = mapping.keys()\\n\\ntactic_confidence = {}\\nif tactic_names is not None:\\n  for t_name in tactic_names:\\n    tactic_confidence[t_name] = mapping[t_name][\\\"confidence\\\"]\\n    \\ntactics = results.content[\\\"mitre_tactics\\\"]\\n\\nfor tactic in tactics:\\n  #\\n  # MITRE ATTACK of Incident Datatable\\n  #\\n  tactic_row = incident.addRow(\\\"mitre_attack_of_incident\\\")\\n  tactic_row[\\\"collection\\\"] = tactic[\\\"collection\\\"]\\n  tactic_row[\\\"attack_tactic\\\"] = tactic[\\\"name\\\"]\\n  tactic_row[\\\"tactic_code\\\"] = tactic[\\\"id\\\"]\\n  url_html = '&lt;a href=\\\"' + tactic[\\\"ref\\\"] + '\\\"&gt;' + tactic[\\\"ref\\\"] + '&lt;/a&gt;&lt;br&gt;'\\n  tactic_row[\\\"reference\\\"] = helper.createRichText(url_html)\\n  tactic_row[\\\"confidence\\\"] = str(tactic_confidence.get(tactic[\\\"name\\\"], \\\"\\\"))\\n  #\\n  # MITRE ATT&amp;CK techniques Datatable\\n  #\\n  techs = tactic[\\\"mitre_techniques\\\"]\\n  for att_tech in techs:\\n    tech_row = incident.addRow(\\\"mitre_attack_techniques\\\")\\n    tech_row[\\\"collection\\\"] = tactic[\\\"collection\\\"]\\n    tech_row[\\\"tactic\\\"] = tactic[\\\"name\\\"]\\n\\n    tech_row[\\\"technique_name\\\"] = att_tech[\\\"name\\\"]\\n    tech_row[\\\"technique_description\\\"] = helper.createRichText(att_tech[\\\"description\\\"])\\n    refs = att_tech[\\\"external_references\\\"]\\n    ref_html = \\\"\\\"\\n    for ref in refs:\\n      url = ref[\\\"url\\\"]\\n      \\n      https_str = \\\"https://\\\"\\n      http_str = \\\"http://\\\"\\n\\n      start_pos = url.find(https_str)\\n\\n      if start_pos != -1:\\n        start_pos = start_pos + len(https_str)\\n      else:\\n        # try http://\\n        start_pos = url.find(http_str)\\n        if start_pos != -1:\\n          start_pos = start_pos + len(http_str)\\n        else:\\n          start_pos = 0 \\n\\n      end_pos = url.find('/', start_pos)\\n      if end_pos == 0:\\n        # We don't know how to extract\\n        display_str = url\\n      elif end_pos == -1:\\n        display_str = url[start_pos:]\\n      else:\\n        display_str = url[start_pos:end_pos]\\n      \\n      ref_html = ref_html + '&lt;a href=\\\"' + ref[\\\"url\\\"] + '\\\"&gt;' + display_str + '&lt;/a&gt;&lt;br&gt;'\\n    tech_row[\\\"references\\\"] = helper.createRichText(ref_html)\\n    tech_row[\\\"detection\\\"] = helper.createRichText(att_tech[\\\"x_mitre_detection\\\"])\\n    tech_row[\\\"technique_id\\\"] = att_tech[\\\"id\\\"]\\n\",\"post_processing_script_language\":\"python\",\"pre_processing_script\":\"\\\"\\\"\\\"\\nSample data from QRaw:\\n  {\\n    u'id': u'SYSTEM-1458', \\n    u'has_ibm_default': True, \\n    u'mapping': {\\n                  u'Privilege Escalation': {\\n                                              u'user_override': False, \\n                                              u'confidence': u'high', \\n                                              u'ibm_default': True, \\n                                              u'enabled': True, \\n                                              u'techniques': {}\\n                  }, \\n                  u'Execution': {\\n                                  u'user_override': False, \\n                                  u'confidence': u'high', \\n                                  u'ibm_default': True, \\n                                  u'enabled': True, \\n                                  u'techniques': {}\\n                  }, \\n                  u'Initial Access': {\\n                                  u'user_override': False, \\n                                  u'confidence': u'high', \\n                                  u'ibm_default': True, \\n                                  u'enabled': True, \\n                                  u'techniques': {}\\n                  }\\n    }\\n  }\\n\\\"\\\"\\\"\\ntactics = workflow.properties.qraw_rule_map.tactics\\n\\nmapping = tactics[\\\"mapping\\\"]\\n\\natt_tactics = \\\", \\\".join(mapping.keys())\\ninputs.mitre_tactic_name = att_tactics\",\"pre_processing_script_language\":\"python\"}</resilient:function></extensionElements><incoming>SequenceFlow_03oh0n5</incoming><outgoing>SequenceFlow_06z09po</outgoing></serviceTask><sequenceFlow id=\"SequenceFlow_03oh0n5\" sourceRef=\"ServiceTask_1pzn8wl\" targetRef=\"ServiceTask_157vqta\"/><endEvent id=\"EndEvent_0oillnw\"><incoming>SequenceFlow_06z09po</incoming></endEvent><sequenceFlow id=\"SequenceFlow_06z09po\" sourceRef=\"ServiceTask_157vqta\" targetRef=\"EndEvent_0oillnw\"/><textAnnotation id=\"TextAnnotation_1kxxiyt\"><text>Start your workflow here</text></textAnnotation><association id=\"Association_1seuj48\" sourceRef=\"StartEvent_155asxm\" targetRef=\"TextAnnotation_1kxxiyt\"/><textAnnotation id=\"TextAnnotation_1xogoap\"><text><![CDATA[Input from datatable row about QRadar rule, call QRadar Advisor to map it to MITRE ATT&CK tactic(s)\n]]></text></textAnnotation><association id=\"Association_1h4fot7\" sourceRef=\"ServiceTask_1pzn8wl\" targetRef=\"TextAnnotation_1xogoap\"/><textAnnotation id=\"TextAnnotation_0jogne1\"><text><![CDATA[QRadar Advisor returns tactics\n]]></text></textAnnotation><association id=\"Association_16frvmr\" sourceRef=\"ServiceTask_1pzn8wl\" targetRef=\"TextAnnotation_0jogne1\"/><textAnnotation id=\"TextAnnotation_08lmhu7\"><text><![CDATA[Use tactic(s) returned by QRadar Advisor to look for more information about it.\n]]></text></textAnnotation><association id=\"Association_1ic24kl\" sourceRef=\"ServiceTask_157vqta\" targetRef=\"TextAnnotation_08lmhu7\"/><textAnnotation id=\"TextAnnotation_0dl4bu8\"><text><![CDATA[MITRE Integration returns information about tactics and techniques. Populate datatable(s)\n]]></text></textAnnotation><association id=\"Association_1sj7mmr\" sourceRef=\"ServiceTask_157vqta\" targetRef=\"TextAnnotation_0dl4bu8\"/></process><bpmndi:BPMNDiagram id=\"BPMNDiagram_1\"><bpmndi:BPMNPlane bpmnElement=\"undefined\" id=\"BPMNPlane_1\"><bpmndi:BPMNShape bpmnElement=\"StartEvent_155asxm\" id=\"StartEvent_155asxm_di\"><omgdc:Bounds height=\"36\" width=\"36\" x=\"187\" y=\"179\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"0\" width=\"90\" x=\"182\" y=\"214\"/></bpmndi:BPMNLabel></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_1kxxiyt\" id=\"TextAnnotation_1kxxiyt_di\"><omgdc:Bounds height=\"30\" width=\"100\" x=\"99\" y=\"254\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_1seuj48\" id=\"Association_1seuj48_di\"><omgdi:waypoint x=\"192\" xsi:type=\"omgdc:Point\" y=\"209\"/><omgdi:waypoint x=\"157\" xsi:type=\"omgdc:Point\" y=\"254\"/></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"ServiceTask_1pzn8wl\" id=\"ServiceTask_1pzn8wl_di\"><omgdc:Bounds height=\"80\" width=\"100\" x=\"314\" y=\"157\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_1vffano\" id=\"SequenceFlow_1vffano_di\"><omgdi:waypoint x=\"223\" xsi:type=\"omgdc:Point\" y=\"197\"/><omgdi:waypoint x=\"314\" xsi:type=\"omgdc:Point\" y=\"197\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"268.5\" y=\"175\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"ServiceTask_157vqta\" id=\"ServiceTask_157vqta_di\"><omgdc:Bounds height=\"80\" width=\"100\" x=\"583\" y=\"158\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_03oh0n5\" id=\"SequenceFlow_03oh0n5_di\"><omgdi:waypoint x=\"414\" xsi:type=\"omgdc:Point\" y=\"197\"/><omgdi:waypoint x=\"583\" xsi:type=\"omgdc:Point\" y=\"198\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"90\" x=\"453.5\" y=\"176\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"EndEvent_0oillnw\" id=\"EndEvent_0oillnw_di\"><omgdc:Bounds height=\"36\" width=\"36\" x=\"789.9547038327526\" y=\"179\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"807.9547038327526\" y=\"218\"/></bpmndi:BPMNLabel></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_06z09po\" id=\"SequenceFlow_06z09po_di\"><omgdi:waypoint x=\"683\" xsi:type=\"omgdc:Point\" y=\"198\"/><omgdi:waypoint x=\"790\" xsi:type=\"omgdc:Point\" y=\"197\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"90\" x=\"691.5\" y=\"176\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_1xogoap\" id=\"TextAnnotation_1xogoap_di\"><omgdc:Bounds height=\"83\" width=\"108\" x=\"147\" y=\"7\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_1h4fot7\" id=\"Association_1h4fot7_di\"><omgdi:waypoint x=\"322\" xsi:type=\"omgdc:Point\" y=\"159\"/><omgdi:waypoint x=\"248\" xsi:type=\"omgdc:Point\" y=\"90\"/></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_0jogne1\" id=\"TextAnnotation_0jogne1_di\"><omgdc:Bounds height=\"47\" width=\"109\" x=\"437\" y=\"10\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_16frvmr\" id=\"Association_16frvmr_di\"><omgdi:waypoint x=\"395\" xsi:type=\"omgdc:Point\" y=\"157\"/><omgdi:waypoint x=\"474\" xsi:type=\"omgdc:Point\" y=\"57\"/></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_08lmhu7\" id=\"TextAnnotation_08lmhu7_di\"><omgdc:Bounds height=\"104\" width=\"130\" x=\"450\" y=\"300\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_1ic24kl\" id=\"Association_1ic24kl_di\"><omgdi:waypoint x=\"602\" xsi:type=\"omgdc:Point\" y=\"238\"/><omgdi:waypoint x=\"555\" xsi:type=\"omgdc:Point\" y=\"300\"/></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_0dl4bu8\" id=\"TextAnnotation_0dl4bu8_di\"><omgdc:Bounds height=\"130\" width=\"106\" x=\"710\" y=\"287\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_1sj7mmr\" id=\"Association_1sj7mmr_di\"><omgdi:waypoint x=\"667\" xsi:type=\"omgdc:Point\" y=\"238\"/><omgdi:waypoint x=\"710\" xsi:type=\"omgdc:Point\" y=\"290\"/></bpmndi:BPMNEdge></bpmndi:BPMNPlane></bpmndi:BPMNDiagram></definitions>"}, "content_version": 3, "description": "Map a QRadar rule to MITRE ATT&CK tactic using QRAW", "export_key": "qradar_advisor_map_rule_to_tactic", "last_modified_by": "admin@example.com", "last_modified_time": 1664125529972, "name": "Example of mapping QRadar rule to tactic", "object_type": "qradar_reference_set", "programmatic_name": "qradar_advisor_map_rule_to_tactic", "tags": [], "uuid": "cf368ebb-9e75-45ed-8c3c-b26476624ad7", "workflow_id": 220}], "workspaces": []}