# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_resilient_ml"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_resilient_ml package"""
    reload_params = {"package": u"fn_resilient_ml",
                    "incident_fields": [], 
                    "action_fields": [u"number_top_similar_incidents"], 
                    "function_params": [u"nlp_search_string", u"number_incidents", u"search_incident_id"], 
                    "datatables": [u"nlp_similar_incidents"], 
                    "message_destinations": [u"resilient_ml"], 
                    "functions": [u"resilient_nlp_search"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"resilient_nlp_search"], 
                    "actions": [u"NLP Search"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     number_top_similar_incidents
    #   Function inputs:
    #     nlp_search_string
    #     number_incidents
    #     search_incident_id
    #   DataTables:
    #     nlp_similar_incidents
    #   Message Destinations:
    #     resilient_ml
    #   Functions:
    #     resilient_nlp_search
    #   Workflows:
    #     resilient_nlp_search
    #   Rules:
    #     NLP Search


    yield ImportDefinition(u"""
eyJyb2xlcyI6IFtdLCAibG9jYWxlIjogbnVsbCwgImFjdGlvbl9vcmRlciI6IFtdLCAibWVzc2Fn
ZV9kZXN0aW5hdGlvbnMiOiBbeyJwcm9ncmFtbWF0aWNfbmFtZSI6ICJyZXNpbGllbnRfbWwiLCAi
dXVpZCI6ICI4ZGExYWM0OC01ZmZmLTQ5MDktOGE5My0xZjZiMWMwOWE1NjUiLCAiZXhwb3J0X2tl
eSI6ICJyZXNpbGllbnRfbWwiLCAidXNlcnMiOiBbIm1hc3RlckBleGFtcGxlLmNvbSJdLCAiZXhw
ZWN0X2FjayI6IHRydWUsICJuYW1lIjogInJlc2lsaWVudF9tbCIsICJkZXN0aW5hdGlvbl90eXBl
IjogMH1dLCAibGF5b3V0cyI6IFtdLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJkZXNjcmlwdGlvbiI6
ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAidXVpZCI6ICJiZmVlYzJkNC0z
NzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9u
IFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiY3JlYXRlX2RhdGUiOiAxNTc5MTA0OTAzODkyLCAicGFy
ZW50X2lkIjogbnVsbCwgImVuYWJsZWQiOiBmYWxzZSwgImlkIjogMCwgImhpZGRlbiI6IGZhbHNl
LCAidXBkYXRlX2RhdGUiOiAxNTc5MTA0OTAzODkyLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBh
Y2thZ2VzIChpbnRlcm5hbCkiLCAic3lzdGVtIjogZmFsc2V9XSwgInNjcmlwdHMiOiBbXSwgImlu
ZHVzdHJpZXMiOiBudWxsLCAiZXhwb3J0X2RhdGUiOiAxNTc5MTA0MjQxNzQ0LCAiYWN0aW9ucyI6
IFt7Im5hbWUiOiAiTkxQIFNlYXJjaCIsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAidmll
d19pdGVtcyI6IFt7InN0ZXBfbGFiZWwiOiBudWxsLCAiY29udGVudCI6ICJGaW5kIHRvcCBpbmNp
ZGVudHMgc2ltaWxhciB0byB0aGlzIG9uZSwgYmFzZWQgb24gbmFtZSBhbmQgZGVzY3JpcHRpb24g
dXNpbmcgTkxQLiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwg
ImZpZWxkX3R5cGUiOiBudWxsLCAiZWxlbWVudCI6ICJodG1sIn0sIHsic3RlcF9sYWJlbCI6IG51
bGwsICJjb250ZW50IjogImU1YmY2YjVmLWUyNWUtNDJjMS04ODQzLTJmYWI1Y2NiYjAzNiIsICJz
aG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImZpZWxkX3R5cGUiOiAi
YWN0aW9uaW52b2NhdGlvbiIsICJlbGVtZW50IjogImZpZWxkX3V1aWQifSwgeyJzdGVwX2xhYmVs
IjogbnVsbCwgImNvbnRlbnQiOiAiPGEgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmlibS5jb20vUmVz
aWxpZW50L3Jlc2lsaWVudC1jb21tdW5pdHktYXBwcy9ibG9iL25scF9lcGljL2ZuX3Jlc2lsaWVu
dF9tbC9kb2MvaGVscC5tZFwiPiBIZWxwPC9hPiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlu
a19oZWFkZXIiOiBmYWxzZSwgImZpZWxkX3R5cGUiOiBudWxsLCAiZWxlbWVudCI6ICJodG1sIn1d
LCAiaWQiOiAxNCwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAibG9naWNf
dHlwZSI6ICJhbGwiLCAiYXV0b21hdGlvbnMiOiBbXSwgInV1aWQiOiAiYjAzOWFhNDctZDAzMy00
YTU2LWJjNjgtZWZiZjIyMTNmNjgwIiwgImV4cG9ydF9rZXkiOiAiTkxQIFNlYXJjaCIsICJ3b3Jr
Zmxvd3MiOiBbInJlc2lsaWVudF9ubHBfc2VhcmNoIl0sICJjb25kaXRpb25zIjogW10sICJ0aW1l
b3V0X3NlY29uZHMiOiA4NjQwMH1dLCAid29ya2Zsb3dzIjogW3siZGVzY3JpcHRpb24iOiAiR2l2
ZW4gYW4gaW5jaWRlbnQsIHVzZSBpdHMgbmFtZSwgZGVzY3JpcHRpb24sIGFydGlmYWN0IGRlc2Ny
aXB0aW9uLCBhbmQgcmVzb2x1dGlvbiBzdW1tYXJ5IHRvIGRvIG5scCBzZWFyY2gsIGluIG9yZGVy
IHRvIGZpbmQgc2ltaWxhciBpbmNpZGVudHMuIiwgInByb2dyYW1tYXRpY19uYW1lIjogInJlc2ls
aWVudF9ubHBfc2VhcmNoIiwgIm5hbWUiOiAiRXhhbXBsZSBvZiBOTFAgc2VhcmNoIiwgIndvcmtm
bG93X2lkIjogMSwgInV1aWQiOiAiM2FhOWQ3NGMtYWQyNy00ZWViLTgxZWItM2U3NzU0MTNmMjk3
IiwgImxhc3RfbW9kaWZpZWRfYnkiOiAibWFzdGVyQGV4YW1wbGUuY29tIiwgIm9iamVjdF90eXBl
IjogImluY2lkZW50IiwgImV4cG9ydF9rZXkiOiAicmVzaWxpZW50X25scF9zZWFyY2giLCAiYWN0
aW9ucyI6IFtdLCAiY29udGVudCI6IHsidmVyc2lvbiI6IDYsICJ4bWwiOiAiPD94bWwgdmVyc2lv
bj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0
dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0
dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRw
Oi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0
dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5v
cmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hN
TFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5v
cmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwicmVzaWxpZW50X25scF9zZWFyY2hcIiBpc0V4ZWN1dGFi
bGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGUgb2YgTkxQIHNlYXJjaFwiPjxkb2N1bWVudGF0aW9u
PkdpdmVuIGFuIGluY2lkZW50LCB1c2UgaXRzIG5hbWUsIGRlc2NyaXB0aW9uLCBhcnRpZmFjdCBk
ZXNjcmlwdGlvbiwgYW5kIHJlc29sdXRpb24gc3VtbWFyeSB0byBkbyBubHAgc2VhcmNoLCBpbiBv
cmRlciB0byBmaW5kIHNpbWlsYXIgaW5jaWRlbnRzLjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVu
dCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMHdnNDl0
bjwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzFh
YXZzZDlcIiBuYW1lPVwiUmVzaWxpZW50IE5MUCBzZWFyY2hcIiByZXNpbGllbnQ6dHlwZT1cImZ1
bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cIjQ4
Nzk2MGEzLThhMTItNDljMS1iODUyLTEzOWE2MDMxMTJlNlwiPntcImlucHV0c1wiOntcImFmOWEz
NzllLWE0OGItNDdkZC05OGZiLTczYmEzNjg4YWQ5YVwiOntcImlucHV0X3R5cGVcIjpcInN0YXRp
Y1wiLFwic3RhdGljX2lucHV0XCI6e1wibXVsdGlzZWxlY3RfdmFsdWVcIjpbXSxcIm51bWJlcl92
YWx1ZVwiOjV9fX0sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJcXG5mb3IgaW5jIGluIHJl
c3VsdHMuaW5jaWRlbnRzOlxcbiAgaW5jX3JvdyA9IGluY2lkZW50LmFkZFJvdyhcXFwibmxwX3Np
bWlsYXJfaW5jaWRlbnRzXFxcIilcXG4gIGluY19yb3dbXFxcImluY2lkZW50X2lkXFxcIl0gPSBo
ZWxwZXIuY3JlYXRlUmljaFRleHQoaW5jW1xcXCJpbmNfbGlua1xcXCJdKVxcbiAgaW5jX3Jvd1tc
XFwic2ltaWxhcml0eVxcXCJdID0gc3RyKGluY1tcXFwic2ltaWxhcml0eVxcXCJdKVxcbiAgaW5j
X3Jvd1tcXFwia2V5d29yZHNcXFwiXSA9IGluY1tcXFwia2V5d29yZHNcXFwiXVwiLFwicHJlX3By
b2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuc2VhcmNoX2luY2lkZW50X2lkID0gaW5jaWRlbnQu
aWRcXG5pZiBydWxlLnByb3BlcnRpZXMubnVtYmVyX3RvcF9zaW1pbGFyX2luY2lkZW50cyAmZ3Q7
IDA6XFxuICBpbnB1dHMubnVtYmVyX2luY2lkZW50cyA9IHJ1bGUucHJvcGVydGllcy5udW1iZXJf
dG9wX3NpbWlsYXJfaW5jaWRlbnRzXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25F
bGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzB3ZzQ5dG48L2luY29taW5nPjxvdXRnb2lu
Zz5TZXF1ZW5jZUZsb3dfMTF2ejV0Zjwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VG
bG93IGlkPVwiU2VxdWVuY2VGbG93XzB3ZzQ5dG5cIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1
NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18xYWF2c2Q5XCIvPjxlbmRFdmVudCBpZD1c
IkVuZEV2ZW50XzA3cXh6bDhcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzExdno1dGY8L2luY29t
aW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xMXZ6NXRmXCIg
c291cmNlUmVmPVwiU2VydmljZVRhc2tfMWFhdnNkOVwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzA3
cXh6bDhcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0
ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3Nv
Y2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0ZXh0QW5u
b3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzBiM3J5bHBcIj48dGV4dD48IVtDREFUQVtJbnB1
dDpcbjEuIEluY2lkZW50IElEXG4yLiBOdW1iZXIgb2YgaW5jaWRlbnRzIHRvIHJldHVyblxuXV0+
PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMGpo
MGo1cVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFhYXZzZDlcIiB0YXJnZXRSZWY9XCJUZXh0
QW5ub3RhdGlvbl8wYjNyeWxwXCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9u
XzExdHdtaG1cIj48dGV4dD48IVtDREFUQVtSZXR1cm46XG5TaW1pbGFyIGluY2lkZW50cyByYW5r
ZWQgYnkgc2ltaWxhcml0eVxuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9u
IGlkPVwiQXNzb2NpYXRpb25fMDE5bGc4aVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFhYXZz
ZDlcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xMXR3bWhtXCIvPjwvcHJvY2Vzcz48YnBt
bmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJw
bW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNo
YXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1
NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIy
NDJcIiB5PVwiMTYxXCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MFwiIHdpZHRoPVwiOTBcIiB4PVwiMjM3XCIgeT1cIjE5NlwiLz48L2JwbW5kaTpCUE1OTGFiZWw+
PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFu
bm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+
PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lh
dGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBv
aW50IHg9XCIyNDVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE4OFwiLz48b21nZGk6
d2F5cG9pbnQgeD1cIjE2NFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwv
YnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRh
c2tfMWFhdnNkOVwiIGlkPVwiU2VydmljZVRhc2tfMWFhdnNkOV9kaVwiPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCI0MDBcIiB5PVwiMTM5XCIvPjwvYnBtbmRp
OkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzB3
ZzQ5dG5cIiBpZD1cIlNlcXVlbmNlRmxvd18wd2c0OXRuX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9
XCIyNzhcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE3OVwiLz48b21nZGk6d2F5cG9p
bnQgeD1cIjQwMFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTc5XCIvPjxicG1uZGk6
QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMzM5
XCIgeT1cIjE1N1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5k
aTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8wN3F4emw4XCIgaWQ9XCJFbmRFdmVu
dF8wN3F4emw4X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4
PVwiNjY3XCIgeT1cIjE2MVwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjY4NVwiIHk9XCIyMDBcIi8+PC9icG1uZGk6QlBNTkxh
YmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2Vx
dWVuY2VGbG93XzExdno1dGZcIiBpZD1cIlNlcXVlbmNlRmxvd18xMXZ6NXRmX2RpXCI+PG9tZ2Rp
OndheXBvaW50IHg9XCI1MDBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE3OVwiLz48
b21nZGk6d2F5cG9pbnQgeD1cIjY2N1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTc5
XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1c
IjBcIiB4PVwiNTgzLjVcIiB5PVwiMTU3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpC
UE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzBi
M3J5bHBcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzBiM3J5bHBfZGlcIj48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjcxXCIgd2lkdGg9XCIyMTlcIiB4PVwiMjAwXCIgeT1cIi0xM1wiLz48L2JwbW5kaTpC
UE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzBqaDBq
NXFcIiBpZD1cIkFzc29jaWF0aW9uXzBqaDBqNXFfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQx
NFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTM5XCIvPjxvbWdkaTp3YXlwb2ludCB4
PVwiMzQxXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI1OFwiLz48L2JwbW5kaTpCUE1O
RWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzExdHdt
aG1cIiBpZD1cIlRleHRBbm5vdGF0aW9uXzExdHdtaG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjgwXCIgd2lkdGg9XCIyMzlcIiB4PVwiNTMwXCIgeT1cIi0xN1wiLz48L2JwbW5kaTpCUE1O
U2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzAxOWxnOGlc
IiBpZD1cIkFzc29jaWF0aW9uXzAxOWxnOGlfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQ5NVwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTQ0XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
NTk5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI2M1wiLz48L2JwbW5kaTpCUE1ORWRn
ZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4i
LCAid29ya2Zsb3dfaWQiOiAicmVzaWxpZW50X25scF9zZWFyY2gifSwgImNyZWF0b3JfaWQiOiAi
bWFzdGVyQGV4YW1wbGUuY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NzkwMDk4OTMxNDR9
XSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAidHlwZXMiOiBbeyJzY3JpcHRzIjogW10sICJkaXNw
bGF5X25hbWUiOiAiTkxQIFNpbWlsYXIgSW5jaWRlbnRzIiwgInR5cGVfbmFtZSI6ICJubHBfc2lt
aWxhcl9pbmNpZGVudHMiLCAidXVpZCI6ICI3NTc0Njk0Yy04N2Y3LTQ5MzAtOTFiZi0xMjFhMzg0
NTQ3NzgiLCAiaWQiOiBudWxsLCAiZm9yX2FjdGlvbnMiOiBmYWxzZSwgInByb3BlcnRpZXMiOiB7
ImNhbl9kZXN0cm95IjogZmFsc2UsICJjYW5fY3JlYXRlIjogZmFsc2UsICJmb3Jfd2hvIjogW119
LCAiYWN0aW9ucyI6IFtdLCAiZXhwb3J0X2tleSI6ICJubHBfc2ltaWxhcl9pbmNpZGVudHMiLCAi
dHlwZV9pZCI6IDgsICJmb3Jfbm90aWZpY2F0aW9ucyI6IGZhbHNlLCAiZmllbGRzIjogeyJrZXl3
b3JkcyI6IHsiY2FsY3VsYXRlZCI6IGZhbHNlLCAibmFtZSI6ICJrZXl3b3JkcyIsICJkZWZhdWx0
X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgIm9yZGVyIjogMiwgImNoYW5nZWFibGUiOiB0cnVl
LCAidmFsdWVzIjogW10sICJvcGVyYXRpb25zIjogW10sICJpbnRlcm5hbCI6IGZhbHNlLCAiYmxh
bmtfb3B0aW9uIjogdHJ1ZSwgImV4cG9ydF9rZXkiOiAibmxwX3NpbWlsYXJfaW5jaWRlbnRzL2tl
eXdvcmRzIiwgInR5cGVfaWQiOiAxMDAwLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBy
ZWZpeCI6IG51bGwsICJwbGFjZWhvbGRlciI6ICIiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAicmlj
aF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImlkIjogMTU2LCAiY2hvc2VuIjogdHJ1
ZSwgInV1aWQiOiAiNzIzODAxM2QtZmYwYS00ZGVlLWJkMWEtMDMyNDg5NjYxZTUzIiwgInRvb2x0
aXAiOiAia2V5d29yZHMgaWRlbnRpZmllZCBieSBOTFAiLCAidGV4dCI6ICJLZXl3b3JkcyIsICJ3
aWR0aCI6IDUxLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJpbnB1dF90eXBlIjogInRleHQiLCAi
cmVhZF9vbmx5IjogZmFsc2V9LCAic2ltaWxhcml0eSI6IHsiY2FsY3VsYXRlZCI6IGZhbHNlLCAi
bmFtZSI6ICJzaW1pbGFyaXR5IiwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAi
b3JkZXIiOiAxLCAiY2hhbmdlYWJsZSI6IHRydWUsICJ2YWx1ZXMiOiBbXSwgIm9wZXJhdGlvbnMi
OiBbXSwgImludGVybmFsIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImV4cG9ydF9r
ZXkiOiAibmxwX3NpbWlsYXJfaW5jaWRlbnRzL3NpbWlsYXJpdHkiLCAidHlwZV9pZCI6IDEwMDAs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgInBsYWNlaG9sZGVy
IjogIiIsICJkZXByZWNhdGVkIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRl
cyI6IFtdLCAiaWQiOiAxNTUsICJjaG9zZW4iOiBmYWxzZSwgInV1aWQiOiAiZjg4ZmRhOTQtZDcw
Yy00NTQ0LWI0MzUtY2QyYzc0ODBiMDMxIiwgInRvb2x0aXAiOiAiIiwgInRleHQiOiAiU2ltaWxh
cml0eSIsICJ3aWR0aCI6IDY0LCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJpbnB1dF90eXBlIjog
InRleHQiLCAicmVhZF9vbmx5IjogZmFsc2V9LCAiaW5jaWRlbnRfaWQiOiB7ImNhbGN1bGF0ZWQi
OiBmYWxzZSwgIm5hbWUiOiAiaW5jaWRlbnRfaWQiLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVy
IjogZmFsc2UsICJvcmRlciI6IDAsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInZhbHVlcyI6IFtdLCAi
b3BlcmF0aW9ucyI6IFtdLCAiaW50ZXJuYWwiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNl
LCAiZXhwb3J0X2tleSI6ICJubHBfc2ltaWxhcl9pbmNpZGVudHMvaW5jaWRlbnRfaWQiLCAidHlw
ZV9pZCI6IDEwMDAsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwg
InBsYWNlaG9sZGVyIjogIiIsICJkZXByZWNhdGVkIjogZmFsc2UsICJyaWNoX3RleHQiOiB0cnVl
LCAidGVtcGxhdGVzIjogW10sICJpZCI6IDE1NCwgImNob3NlbiI6IGZhbHNlLCAidXVpZCI6ICI2
ZWIzMTUzZi1kMmE3LTQxMmUtOTE2YS1kNGM4YThiMTJiOWMiLCAidG9vbHRpcCI6ICJsaW5rIHRv
IHNpbWlsYXIgaW5jaWRlbnQiLCAidGV4dCI6ICJJbmNpZGVudCBJRCIsICJ3aWR0aCI6IDY3Niwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0YXJlYSIsICJyZWFkX29u
bHkiOiBmYWxzZX19LCAiZm9yX3dvcmtmbG93cyI6IGZhbHNlLCAiZm9yX2N1c3RvbV9maWVsZHMi
OiBmYWxzZSwgInBhcmVudF90eXBlcyI6IFsiaW5jaWRlbnQiXX1dLCAidGltZWZyYW1lcyI6IG51
bGwsICJmdW5jdGlvbnMiOiBbeyJkZXNjcmlwdGlvbiI6IHsiZm9ybWF0IjogInRleHQiLCAiY29u
dGVudCI6ICIifSwgIm5hbWUiOiAicmVzaWxpZW50X25scF9zZWFyY2giLCAiZGlzcGxheV9uYW1l
IjogIlJlc2lsaWVudCBOTFAgc2VhcmNoIiwgIndvcmtmbG93cyI6IFt7ImRlc2NyaXB0aW9uIjog
bnVsbCwgImFjdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZSBvZiBOTFAgc2VhcmNoIiwgIndv
cmtmbG93X2lkIjogMSwgInByb2dyYW1tYXRpY19uYW1lIjogInJlc2lsaWVudF9ubHBfc2VhcmNo
IiwgInV1aWQiOiBudWxsLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQifV0sICJjcmVhdG9yIjog
eyJpZCI6IDIsICJuYW1lIjogIm1hc3RlckBleGFtcGxlLmNvbSIsICJkaXNwbGF5X25hbWUiOiAi
bWFzdGVyZmlyc3QgbWFzdGVybGFzdCIsICJ0eXBlIjogInVzZXIifSwgInZpZXdfaXRlbXMiOiBb
eyJzdGVwX2xhYmVsIjogbnVsbCwgImNvbnRlbnQiOiAiOTgwMjA0YTYtM2Y0My00MGQ5LWI3MjAt
NzIxMzUyMWNkZjc3IiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNl
LCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCJ9LCB7
InN0ZXBfbGFiZWwiOiBudWxsLCAiY29udGVudCI6ICI5NDMzNDNhZi0xMTI2LTQ3NmQtYWFkNi0z
Y2Y5YzZlODVhMGMiLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2Us
ICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIn0sIHsi
c3RlcF9sYWJlbCI6IG51bGwsICJjb250ZW50IjogImFmOWEzNzllLWE0OGItNDdkZC05OGZiLTcz
YmEzNjg4YWQ5YSIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwg
ImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJlbGVtZW50IjogImZpZWxkX3V1aWQifV0sICJp
ZCI6IDEsICJsYXN0X21vZGlmaWVkX2J5IjogeyJpZCI6IDIsICJuYW1lIjogIm1hc3RlckBleGFt
cGxlLmNvbSIsICJkaXNwbGF5X25hbWUiOiAibWFzdGVyZmlyc3QgbWFzdGVybGFzdCIsICJ0eXBl
IjogInVzZXIifSwgInV1aWQiOiAiNDg3OTYwYTMtOGExMi00OWMxLWI4NTItMTM5YTYwMzExMmU2
IiwgImV4cG9ydF9rZXkiOiAicmVzaWxpZW50X25scF9zZWFyY2giLCAidmVyc2lvbiI6IDMsICJs
YXN0X21vZGlmaWVkX3RpbWUiOiAxNTc5MTA0MDk0NDAzLCAiZGVzdGluYXRpb25faGFuZGxlIjog
InJlc2lsaWVudF9tbCJ9XSwgInRhc2tfb3JkZXIiOiBbXSwgIm92ZXJyaWRlcyI6IFtdLCAiZ2Vv
cyI6IG51bGwsICJpbmNpZGVudF9hcnRpZmFjdF90eXBlcyI6IFtdLCAic2VydmVyX3ZlcnNpb24i
OiB7InZlcnNpb24iOiAiMzIuMy4xMiIsICJtaW5vciI6IDMsICJidWlsZF9udW1iZXIiOiAxMiwg
Im1ham9yIjogMzJ9LCAicmVndWxhdG9ycyI6IG51bGwsICJwaGFzZXMiOiBbXSwgImV4cG9ydF9m
b3JtYXRfdmVyc2lvbiI6IDIsICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImlkIjogMywgImZpZWxk
cyI6IFt7ImNhbGN1bGF0ZWQiOiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwgImRlZmF1
bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJ2YWx1ZXMi
OiBbXSwgIm9wZXJhdGlvbnMiOiBbXSwgImludGVybmFsIjogZmFsc2UsICJibGFua19vcHRpb24i
OiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQvaW5jX3RyYWluaW5nIiwgInR5cGVfaWQi
OiAwLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNpZGVudCBpcyBhIHNpbXVsYXRpb24gb3Ig
YSByZWd1bGFyIGluY2lkZW50LiBUaGlzIGZpZWxkIGlzIHJlYWQtb25seS4iLCAicHJlZml4Ijog
bnVsbCwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJy
aWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiaWQiOiA2MCwgImNob3NlbiI6IGZh
bHNlLCAidXVpZCI6ICJjM2YwZTNlZC0yMWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAidGV4
dCI6ICJTaW11bGF0aW9uIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAiaW5wdXRfdHlwZSI6ICJi
b29sZWFuIiwgInJlYWRfb25seSI6IHRydWV9LCB7ImNhbGN1bGF0ZWQiOiBmYWxzZSwgIm5hbWUi
OiAibnVtYmVyX3RvcF9zaW1pbGFyX2luY2lkZW50cyIsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2
ZXIiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAidmFsdWVzIjogW10sICJvcGVyYXRpb25z
IjogW10sICJpbnRlcm5hbCI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJleHBvcnRf
a2V5IjogImFjdGlvbmludm9jYXRpb24vbnVtYmVyX3RvcF9zaW1pbGFyX2luY2lkZW50cyIsICJ0
eXBlX2lkIjogNiwgInRvb2x0aXAiOiAiTnVtYmVyIG9mIHRvcCBzaW1pbGFyIGluY2lkZW50cyB0
byByZXR1ciIsICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJwbGFjZWhvbGRlciI6ICJkZWZhdWx0
IHZhbHVlIHNldCBpbiB3b3JrZmxvdyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiZGVw
cmVjYXRlZCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImlk
IjogMTUzLCAiY2hvc2VuIjogZmFsc2UsICJ1dWlkIjogImU1YmY2YjVmLWUyNWUtNDJjMS04ODQz
LTJmYWI1Y2NiYjAzNiIsICJ0ZXh0IjogIk51bWJlciBvZiBpbmNpZGVudHMiLCAib3BlcmF0aW9u
X3Blcm1zIjoge30sICJpbnB1dF90eXBlIjogIm51bWJlciIsICJyZWFkX29ubHkiOiBmYWxzZX0s
IHsiY2FsY3VsYXRlZCI6IGZhbHNlLCAibmFtZSI6ICJzZWFyY2hfaW5jaWRlbnRfaWQiLCAiZGVm
YXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInZhbHVl
cyI6IFtdLCAib3BlcmF0aW9ucyI6IFtdLCAiaW50ZXJuYWwiOiBmYWxzZSwgImJsYW5rX29wdGlv
biI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3NlYXJjaF9pbmNpZGVudF9pZCIs
ICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjogImluY2lkZW50IHRvIHNlYXJjaCB1c2luZyBOTFAi
LCAicHJlZml4IjogbnVsbCwgInBsYWNlaG9sZGVyIjogImluY2lkZW50IGlkIiwgImhpZGVfbm90
aWZpY2F0aW9uIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxz
ZSwgInRlbXBsYXRlcyI6IFtdLCAiaWQiOiAxNTIsICJjaG9zZW4iOiBmYWxzZSwgInV1aWQiOiAi
OTgwMjA0YTYtM2Y0My00MGQ5LWI3MjAtNzIxMzUyMWNkZjc3IiwgInRleHQiOiAic2VhcmNoX2lu
Y2lkZW50X2lkIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAiaW5wdXRfdHlwZSI6ICJudW1iZXIi
LCAicmVhZF9vbmx5IjogZmFsc2V9LCB7ImNhbGN1bGF0ZWQiOiBmYWxzZSwgIm5hbWUiOiAibmxw
X3NlYXJjaF9zdHJpbmciLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJjaGFu
Z2VhYmxlIjogdHJ1ZSwgInZhbHVlcyI6IFtdLCAib3BlcmF0aW9ucyI6IFtdLCAiaW50ZXJuYWwi
OiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9u
L25scF9zZWFyY2hfc3RyaW5nIiwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiVXNlIE5MUCB0
byBzZWFyY2ggdGhpcyBzdHJpbmciLCAicHJlZml4IjogbnVsbCwgInBsYWNlaG9sZGVyIjogInNl
YXJjaCBzdHJpbmciLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBm
YWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJpZCI6IDE1NywgImNo
b3NlbiI6IGZhbHNlLCAidXVpZCI6ICI5NDMzNDNhZi0xMTI2LTQ3NmQtYWFkNi0zY2Y5YzZlODVh
MGMiLCAidGV4dCI6ICJubHBfc2VhcmNoX3N0cmluZyIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwg
ImlucHV0X3R5cGUiOiAidGV4dCIsICJyZWFkX29ubHkiOiBmYWxzZX0sIHsiY2FsY3VsYXRlZCI6
IGZhbHNlLCAibmFtZSI6ICJudW1iZXJfaW5jaWRlbnRzIiwgImRlZmF1bHRfY2hvc2VuX2J5X3Nl
cnZlciI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJ2YWx1ZXMiOiBbXSwgIm9wZXJhdGlv
bnMiOiBbXSwgImludGVybmFsIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImV4cG9y
dF9rZXkiOiAiX19mdW5jdGlvbi9udW1iZXJfaW5jaWRlbnRzIiwgInR5cGVfaWQiOiAxMSwgInRv
b2x0aXAiOiAiTnVtYmVyIG9mIGluY2lkZW50cyB0byByZXR1cm4gZm9yIHRvcCBzaW1pbGFyaXR5
IiwgInByZWZpeCI6IG51bGwsICJwbGFjZWhvbGRlciI6ICJudW1iZXIgb2YgaW5jaWRlbnQgdG8g
cmV0dXJuIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2Us
ICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiaWQiOiAxNTEsICJjaG9zZW4i
OiBmYWxzZSwgInV1aWQiOiAiYWY5YTM3OWUtYTQ4Yi00N2RkLTk4ZmItNzNiYTM2ODhhZDlhIiwg
InRleHQiOiAibnVtYmVyX2luY2lkZW50cyIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgImlucHV0
X3R5cGUiOiAibnVtYmVyIiwgInJlYWRfb25seSI6IGZhbHNlfV0sICJ3b3Jrc3BhY2VzIjogW119
"""
    )