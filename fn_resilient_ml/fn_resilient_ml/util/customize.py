# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_resilient_ml"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_resilient_ml package"""
    reload_params = {"package": u"fn_resilient_ml",
                    "incident_fields": [], 
                    "action_fields": [u"nlp_string", u"number_top_similar_incidents"], 
                    "function_params": [u"nlp_search_string", u"number_incidents", u"search_incident_id"], 
                    "datatables": [u"nlp_similar_incidents"], 
                    "message_destinations": [u"resilient_ml"], 
                    "functions": [u"resilient_nlp_search"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"resilient_nlp_search"], 
                    "actions": [u"NLP Search", u"NLP String Search"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     nlp_string
    #     number_top_similar_incidents
    #   Function inputs:
    #     nlp_search_string
    #     number_incidents
    #     search_incident_id
    #   DataTables:
    #     nlp_similar_incidents
    #   Message Destinations:
    #     resilient_ml
    #   Functions:
    #     resilient_nlp_search
    #   Workflows:
    #     resilient_nlp_search
    #   Rules:
    #     NLP Search
    #     NLP String Search


    yield ImportDefinition(u"""
eyJsYXlvdXRzIjogW10sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImV4cG9ydF9kYXRlIjogMTU4
MDM5MTM1MzcxNCwgImdlb3MiOiBudWxsLCAiaW5kdXN0cmllcyI6IG51bGwsICJvdmVycmlkZXMi
OiBbXSwgImlkIjogOCwgInJvbGVzIjogW10sICJpbmNpZGVudF90eXBlcyI6IFt7InBhcmVudF9p
ZCI6IG51bGwsICJpZCI6IDAsICJ1cGRhdGVfZGF0ZSI6IDE1ODAzOTAzODcyNjIsICJkZXNjcmlw
dGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAic3lzdGVtIjogZmFs
c2UsICJoaWRkZW4iOiBmYWxzZSwgImNyZWF0ZV9kYXRlIjogMTU4MDM5MDM4NzI2MiwgImVuYWJs
ZWQiOiBmYWxzZSwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwg
InV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4LWFkMzktNGEwMDA0MDQ0YWEwIiwgImV4cG9ydF9r
ZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIn1dLCAidGFza19vcmRlciI6
IFtdLCAicGhhc2VzIjogW10sICJ3b3Jrc3BhY2VzIjogW10sICJ3b3JrZmxvd3MiOiBbeyJsYXN0
X21vZGlmaWVkX3RpbWUiOiAxNTgwMzkxMjUyNTI5LCAicHJvZ3JhbW1hdGljX25hbWUiOiAicmVz
aWxpZW50X25scF9zZWFyY2giLCAibGFzdF9tb2RpZmllZF9ieSI6ICJtYXN0ZXJAZXhhbXBsZS5j
b20iLCAidXVpZCI6ICIzYWE5ZDc0Yy1hZDI3LTRlZWItODFlYi0zZTc3NTQxM2YyOTciLCAid29y
a2Zsb3dfaWQiOiAxLCAiY29udGVudCI6IHsieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBl
bmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9y
Zy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9t
Zy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9t
Zy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcu
b3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxp
ZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1M
U2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5z
dGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48
cHJvY2VzcyBpZD1cInJlc2lsaWVudF9ubHBfc2VhcmNoXCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwi
IG5hbWU9XCJFeGFtcGxlIG9mIE5MUCBzZWFyY2hcIj48ZG9jdW1lbnRhdGlvbj5HaXZlbiBhbiBp
bmNpZGVudCwgdXNlIGl0cyBuYW1lLCBkZXNjcmlwdGlvbiwgYXJ0aWZhY3QgZGVzY3JpcHRpb24s
IGFuZCByZXNvbHV0aW9uIHN1bW1hcnkgdG8gZG8gbmxwIHNlYXJjaCwgaW4gb3JkZXIgdG8gZmlu
ZCBzaW1pbGFyIGluY2lkZW50cy48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFy
dEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzB3ZzQ5dG48L291dGdvaW5n
Pjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xYWF2c2Q5XCIgbmFt
ZT1cIlJlc2lsaWVudCBOTFAgc2VhcmNoXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxl
eHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI0ODc5NjBhMy04YTEy
LTQ5YzEtYjg1Mi0xMzlhNjAzMTEyZTZcIj57XCJpbnB1dHNcIjp7XCJhZjlhMzc5ZS1hNDhiLTQ3
ZGQtOThmYi03M2JhMzY4OGFkOWFcIjp7XCJpbnB1dF90eXBlXCI6XCJzdGF0aWNcIixcInN0YXRp
Y19pbnB1dFwiOntcIm11bHRpc2VsZWN0X3ZhbHVlXCI6W10sXCJudW1iZXJfdmFsdWVcIjo1fX19
LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiXFxuZm9yIGluYyBpbiByZXN1bHRzLmluY2lk
ZW50czpcXG4gIGluY19yb3cgPSBpbmNpZGVudC5hZGRSb3coXFxcIm5scF9zaW1pbGFyX2luY2lk
ZW50c1xcXCIpXFxuICBpbmNfcm93W1xcXCJpbmNpZGVudF9pZFxcXCJdID0gaGVscGVyLmNyZWF0
ZVJpY2hUZXh0KGluY1tcXFwiaW5jX2xpbmtcXFwiXSlcXG4gIGluY19yb3dbXFxcInNpbWlsYXJp
dHlcXFwiXSA9IHN0cihpbmNbXFxcInNpbWlsYXJpdHlcXFwiXSlcXG4gIGluY19yb3dbXFxcImtl
eXdvcmRzXFxcIl0gPSBpbmNbXFxcImtleXdvcmRzXFxcIl1cXG4gIGluY19yb3dbXFxcInNlYXJj
aF90aW1lXFxcIl0gPSByZXN1bHRzLnRpbWVcIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwi
I1xcbiMgVG8gZG8gYSBOTFAgc2VhcmNoLCB1c2VyIGNhbiBpbnB1dCBFSVRIRVIgYW4gaW5jaWRl
bnQgaWQgb3IgYSBzdHJpbmcuXFxuI1xcbiMgTk9URTogaWYgYm90aCBhcmUgZ2l2ZW4sIHRoZSBz
dHJpbmcgd2lsbCBiZSB1c2VkLlxcbiNcXG5cXG4jIHN1cHBvcnQgc2VhcmNoIHVzaW5nIGlucHV0
IHN0cmluZ1xcbmlmIHJ1bGUucHJvcGVydGllcy5ubHBfc3RyaW5nIGlzIG5vdCBOb25lIGFuZCBs
ZW4ocnVsZS5wcm9wZXJ0aWVzLm5scF9zdHJpbmcuY29udGVudCkgJmd0OyAwOlxcbiAgaW5wdXRz
Lm5scF9zZWFyY2hfc3RyaW5nID0gcnVsZS5wcm9wZXJ0aWVzLm5scF9zdHJpbmcuY29udGVudFxc
blxcbiMgc3VwcG9ydCBzZWFyY2ggdXNpbmcgYW4gaW5jaWRlbnQgaWQgIFxcbmlucHV0cy5zZWFy
Y2hfaW5jaWRlbnRfaWQgPSBpbmNpZGVudC5pZFxcblxcbiMgYWxsb3cgdXNlciB0byBzcGVjaWZ5
IGhvdyBtYW55IGluY2lkZW50cyB0byByZXR1cm5cXG5pZiBydWxlLnByb3BlcnRpZXMubnVtYmVy
X3RvcF9zaW1pbGFyX2luY2lkZW50cyAmZ3Q7IDA6XFxuICBpbnB1dHMubnVtYmVyX2luY2lkZW50
cyA9IHJ1bGUucHJvcGVydGllcy5udW1iZXJfdG9wX3NpbWlsYXJfaW5jaWRlbnRzXFxuICBcXG5c
In08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1
ZW5jZUZsb3dfMHdnNDl0bjwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xMXZ6NXRm
PC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3df
MHdnNDl0blwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNl
cnZpY2VUYXNrXzFhYXZzZDlcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMDdxeHpsOFwiPjxp
bmNvbWluZz5TZXF1ZW5jZUZsb3dfMTF2ejV0ZjwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVu
Y2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzExdno1dGZcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFz
a18xYWF2c2Q5XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMDdxeHpsOFwiLz48dGV4dEFubm90YXRp
b24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxv
dyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRp
b25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1c
IlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90
YXRpb25fMGIzcnlscFwiPjx0ZXh0PjwhW0NEQVRBW0lucHV0OlxuMS4gSW5jaWRlbnQgSURcbjIu
IE51bWJlciBvZiBpbmNpZGVudHMgdG8gcmV0dXJuXG5dXT48L3RleHQ+PC90ZXh0QW5ub3RhdGlv
bj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wamgwajVxXCIgc291cmNlUmVmPVwiU2Vy
dmljZVRhc2tfMWFhdnNkOVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzBiM3J5bHBcIi8+
PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMTF0d21obVwiPjx0ZXh0PjwhW0NE
QVRBW1JldHVybjpcblNpbWlsYXIgaW5jaWRlbnRzIHJhbmtlZCBieSBzaW1pbGFyaXR5XG5dXT48
L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wMTls
ZzhpXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWFhdnNkOVwiIHRhcmdldFJlZj1cIlRleHRB
bm5vdGF0aW9uXzExdHdtaG1cIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJC
UE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRc
IiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFy
dEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjI0MlwiIHk9XCIxNjFcIi8+PGJwbW5k
aTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIy
MzdcIiB5PVwiMTk2XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJw
bW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9
XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwi
IHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJw
bW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFz
c29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjI0NVwiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMTg4XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY0XCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5k
aTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18xYWF2c2Q5XCIgaWQ9XCJTZXJ2
aWNlVGFza18xYWF2c2Q5X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwi
MTAwXCIgeD1cIjQwMFwiIHk9XCIxMzlcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBN
TkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHdnNDl0blwiIGlkPVwiU2VxdWVuY2VG
bG93XzB3ZzQ5dG5fZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjI3OFwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMTc5XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDAwXCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIxNzlcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIzMzlcIiB5PVwiMTU3XCIvPjwvYnBtbmRp
OkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVu
dD1cIkVuZEV2ZW50XzA3cXh6bDhcIiBpZD1cIkVuZEV2ZW50XzA3cXh6bDhfZGlcIj48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI2NjdcIiB5PVwiMTYxXCIvPjxi
cG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4
PVwiNjg1XCIgeT1cIjIwMFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBl
PjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMTF2ejV0ZlwiIGlk
PVwiU2VxdWVuY2VGbG93XzExdno1dGZfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjUwMFwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTc5XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNjY3
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNzlcIi8+PGJwbW5kaTpCUE1OTGFiZWw+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI1ODMuNVwiIHk9XCIx
NTdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNo
YXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMGIzcnlscFwiIGlkPVwiVGV4dEFubm90
YXRpb25fMGIzcnlscF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNzFcIiB3aWR0aD1cIjIx
OVwiIHg9XCIyMDBcIiB5PVwiLTEzXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5F
ZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMGpoMGo1cVwiIGlkPVwiQXNzb2NpYXRpb25f
MGpoMGo1cV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDE0XCIgeHNpOnR5cGU9XCJvbWdkYzpQ
b2ludFwiIHk9XCIxMzlcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIzNDFcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjU4XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMTF0d21obVwiIGlkPVwiVGV4dEFubm90YXRp
b25fMTF0d21obV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjIzOVwi
IHg9XCI1MzBcIiB5PVwiLTE3XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdl
IGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMDE5bGc4aVwiIGlkPVwiQXNzb2NpYXRpb25fMDE5
bGc4aV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDk1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2lu
dFwiIHk9XCIxNDRcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1OTlcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjYzXCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48
L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ3b3JrZmxvd19pZCI6ICJyZXNp
bGllbnRfbmxwX3NlYXJjaCIsICJ2ZXJzaW9uIjogMTV9LCAiY3JlYXRvcl9pZCI6ICJtYXN0ZXJA
ZXhhbXBsZS5jb20iLCAiYWN0aW9ucyI6IFtdLCAiZGVzY3JpcHRpb24iOiAiR2l2ZW4gYW4gaW5j
aWRlbnQsIHVzZSBpdHMgbmFtZSwgZGVzY3JpcHRpb24sIGFydGlmYWN0IGRlc2NyaXB0aW9uLCBh
bmQgcmVzb2x1dGlvbiBzdW1tYXJ5IHRvIGRvIG5scCBzZWFyY2gsIGluIG9yZGVyIHRvIGZpbmQg
c2ltaWxhciBpbmNpZGVudHMuIiwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgIm5hbWUiOiAi
RXhhbXBsZSBvZiBOTFAgc2VhcmNoIiwgImV4cG9ydF9rZXkiOiAicmVzaWxpZW50X25scF9zZWFy
Y2gifV0sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7ImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAi
cHJvZ3JhbW1hdGljX25hbWUiOiAicmVzaWxpZW50X21sIiwgImV4cGVjdF9hY2siOiB0cnVlLCAi
bmFtZSI6ICJyZXNpbGllbnRfbWwiLCAidXVpZCI6ICI4ZGExYWM0OC01ZmZmLTQ5MDktOGE5My0x
ZjZiMWMwOWE1NjUiLCAidXNlcnMiOiBbIm1hc3RlckBleGFtcGxlLmNvbSJdLCAiZXhwb3J0X2tl
eSI6ICJyZXNpbGllbnRfbWwifV0sICJhY3Rpb25fb3JkZXIiOiBbXSwgImV4cG9ydF9mb3JtYXRf
dmVyc2lvbiI6IDIsICJyZWd1bGF0b3JzIjogbnVsbCwgImluY2lkZW50X2FydGlmYWN0X3R5cGVz
IjogW10sICJ0aW1lZnJhbWVzIjogbnVsbCwgImZ1bmN0aW9ucyI6IFt7Imxhc3RfbW9kaWZpZWRf
dGltZSI6IDE1NzkxMDQwOTQ0MDMsICJkZXNjcmlwdGlvbiI6IHsiZm9ybWF0IjogInRleHQiLCAi
Y29udGVudCI6ICIifSwgImNyZWF0b3IiOiB7InR5cGUiOiAidXNlciIsICJpZCI6IDIsICJuYW1l
IjogIm1hc3RlckBleGFtcGxlLmNvbSIsICJkaXNwbGF5X25hbWUiOiAibWFzdGVyZmlyc3QgbWFz
dGVybGFzdCJ9LCAidmVyc2lvbiI6IDMsICJsYXN0X21vZGlmaWVkX2J5IjogeyJ0eXBlIjogInVz
ZXIiLCAiaWQiOiAyLCAibmFtZSI6ICJtYXN0ZXJAZXhhbXBsZS5jb20iLCAiZGlzcGxheV9uYW1l
IjogIm1hc3RlcmZpcnN0IG1hc3Rlcmxhc3QifSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJyZXNp
bGllbnRfbWwiLCAidXVpZCI6ICI0ODc5NjBhMy04YTEyLTQ5YzEtYjg1Mi0xMzlhNjAzMTEyZTYi
LCAiaWQiOiAxLCAidmlld19pdGVtcyI6IFt7ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250
ZW50IjogIjk4MDIwNGE2LTNmNDMtNDBkOS1iNzIwLTcyMTM1MjFjZGY3NyIsICJzaG93X2xpbmtf
aGVhZGVyIjogZmFsc2UsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic3RlcF9sYWJlbCI6
IG51bGwsICJzaG93X2lmIjogbnVsbH0sIHsiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRl
bnQiOiAiOTQzMzQzYWYtMTEyNi00NzZkLWFhZDYtM2NmOWM2ZTg1YTBjIiwgInNob3dfbGlua19o
ZWFkZXIiOiBmYWxzZSwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzdGVwX2xhYmVsIjog
bnVsbCwgInNob3dfaWYiOiBudWxsfSwgeyJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVu
dCI6ICJhZjlhMzc5ZS1hNDhiLTQ3ZGQtOThmYi03M2JhMzY4OGFkOWEiLCAic2hvd19saW5rX2hl
YWRlciI6IGZhbHNlLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInN0ZXBfbGFiZWwiOiBu
dWxsLCAic2hvd19pZiI6IG51bGx9XSwgIndvcmtmbG93cyI6IFt7IndvcmtmbG93X2lkIjogMSwg
ImRlc2NyaXB0aW9uIjogbnVsbCwgImFjdGlvbnMiOiBbXSwgInByb2dyYW1tYXRpY19uYW1lIjog
InJlc2lsaWVudF9ubHBfc2VhcmNoIiwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgIm5hbWUi
OiAiRXhhbXBsZSBvZiBOTFAgc2VhcmNoIiwgInV1aWQiOiBudWxsfV0sICJkaXNwbGF5X25hbWUi
OiAiUmVzaWxpZW50IE5MUCBzZWFyY2giLCAibmFtZSI6ICJyZXNpbGllbnRfbmxwX3NlYXJjaCIs
ICJleHBvcnRfa2V5IjogInJlc2lsaWVudF9ubHBfc2VhcmNoIn1dLCAibG9jYWxlIjogbnVsbCwg
Im5vdGlmaWNhdGlvbnMiOiBudWxsLCAiZmllbGRzIjogW3siaW5wdXRfdHlwZSI6ICJib29sZWFu
IiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgIm9wZXJhdGlvbnMiOiBbXSwgInJpY2hfdGV4dCI6IGZh
bHNlLCAicHJlZml4IjogbnVsbCwgInRlbXBsYXRlcyI6IFtdLCAidXVpZCI6ICJjM2YwZTNlZC0y
MWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAiaWQiOiA2MCwgInR5cGVfaWQiOiAwLCAiY2hv
c2VuIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAi
Y2FsY3VsYXRlZCI6IGZhbHNlLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInRleHQiOiAi
U2ltdWxhdGlvbiIsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInRvb2x0aXAi
OiAiV2hldGhlciB0aGUgaW5jaWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNp
ZGVudC4gVGhpcyBmaWVsZCBpcyByZWFkLW9ubHkuIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAi
cmVhZF9vbmx5IjogdHJ1ZSwgInZhbHVlcyI6IFtdLCAiaW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUi
OiAiaW5jX3RyYWluaW5nIiwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQvaW5jX3RyYWluaW5nIn0s
IHsiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAib3BlcmF0aW9u
cyI6IFtdLCAicmljaF90ZXh0IjogZmFsc2UsICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJ0ZW1w
bGF0ZXMiOiBbXSwgInV1aWQiOiAiZTViZjZiNWYtZTI1ZS00MmMxLTg4NDMtMmZhYjVjY2JiMDM2
IiwgImlkIjogMTUzLCAidHlwZV9pZCI6IDYsICJjaG9zZW4iOiBmYWxzZSwgImJsYW5rX29wdGlv
biI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjYWxjdWxhdGVkIjogZmFsc2UsICJoaWRl
X25vdGlmaWNhdGlvbiI6IGZhbHNlLCAidGV4dCI6ICJOdW1iZXIgb2YgaW5jaWRlbnRzIiwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidG9vbHRpcCI6ICJOdW1iZXIgb2YgdG9w
IHNpbWlsYXIgaW5jaWRlbnRzIHRvIHJldHVyIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAicmVh
ZF9vbmx5IjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgImludGVybmFsIjogZmFsc2UsICJwbGFjZWhv
bGRlciI6ICJkZWZhdWx0IHZhbHVlIHNldCBpbiB3b3JrZmxvdyIsICJuYW1lIjogIm51bWJlcl90
b3Bfc2ltaWxhcl9pbmNpZGVudHMiLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL251
bWJlcl90b3Bfc2ltaWxhcl9pbmNpZGVudHMifSwgeyJpbnB1dF90eXBlIjogInRleHRhcmVhIiwg
ImRlcHJlY2F0ZWQiOiBmYWxzZSwgIm9wZXJhdGlvbnMiOiBbXSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAicHJlZml4IjogInByb3BlcnRpZXMiLCAidGVtcGxhdGVzIjogW10sICJ1dWlkIjogImFjOGVh
NjlkLTFmZGUtNGU2MC1iYmVmLTdkMzhkMTRmYTUxZSIsICJpZCI6IDE1OCwgInR5cGVfaWQiOiA2
LCAiY2hvc2VuIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0
cnVlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInRl
eHQiOiAiTkxQIFN0cmluZyIsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInRv
b2x0aXAiOiAic2VhcmNoIGZvciBpbmNpZGVudHMgd2l0aCBkZXNjcmlwdGlvbnMgc2ltaWxhciB0
byB0aGlzIHN0cmluZyIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInJlYWRfb25seSI6IGZhbHNl
LCAidmFsdWVzIjogW10sICJpbnRlcm5hbCI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5h
bWUiOiAibmxwX3N0cmluZyIsICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRpb24vbmxwX3N0
cmluZyJ9LCB7ImlucHV0X3R5cGUiOiAidGV4dCIsICJkZXByZWNhdGVkIjogZmFsc2UsICJvcGVy
YXRpb25zIjogW10sICJyaWNoX3RleHQiOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJ0ZW1wbGF0
ZXMiOiBbXSwgInV1aWQiOiAiOTQzMzQzYWYtMTEyNi00NzZkLWFhZDYtM2NmOWM2ZTg1YTBjIiwg
ImlkIjogMTU3LCAidHlwZV9pZCI6IDExLCAiY2hvc2VuIjogZmFsc2UsICJibGFua19vcHRpb24i
OiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgInRleHQiOiAibmxwX3NlYXJjaF9zdHJpbmciLCAiZGVmYXVs
dF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ0b29sdGlwIjogIlVzZSBOTFAgdG8gc2VhcmNo
IHRoaXMgc3RyaW5nIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAicmVhZF9vbmx5IjogZmFsc2Us
ICJ2YWx1ZXMiOiBbXSwgImludGVybmFsIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICJzZWFyY2gg
c3RyaW5nIiwgIm5hbWUiOiAibmxwX3NlYXJjaF9zdHJpbmciLCAiZXhwb3J0X2tleSI6ICJfX2Z1
bmN0aW9uL25scF9zZWFyY2hfc3RyaW5nIn0sIHsiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAiZGVw
cmVjYXRlZCI6IGZhbHNlLCAib3BlcmF0aW9ucyI6IFtdLCAicmljaF90ZXh0IjogZmFsc2UsICJw
cmVmaXgiOiBudWxsLCAidGVtcGxhdGVzIjogW10sICJ1dWlkIjogImFmOWEzNzllLWE0OGItNDdk
ZC05OGZiLTczYmEzNjg4YWQ5YSIsICJpZCI6IDE1MSwgInR5cGVfaWQiOiAxMSwgImNob3NlbiI6
IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNhbGN1
bGF0ZWQiOiBmYWxzZSwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJ0ZXh0IjogIm51bWJl
cl9pbmNpZGVudHMiLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ0b29sdGlw
IjogIk51bWJlciBvZiBpbmNpZGVudHMgdG8gcmV0dXJuIGZvciB0b3Agc2ltaWxhcml0eSIsICJv
cGVyYXRpb25fcGVybXMiOiB7fSwgInJlYWRfb25seSI6IGZhbHNlLCAidmFsdWVzIjogW10sICJp
bnRlcm5hbCI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAibnVtYmVyIG9mIGluY2lkZW50IHRvIHJl
dHVybiIsICJuYW1lIjogIm51bWJlcl9pbmNpZGVudHMiLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0
aW9uL251bWJlcl9pbmNpZGVudHMifSwgeyJpbnB1dF90eXBlIjogIm51bWJlciIsICJkZXByZWNh
dGVkIjogZmFsc2UsICJvcGVyYXRpb25zIjogW10sICJyaWNoX3RleHQiOiBmYWxzZSwgInByZWZp
eCI6IG51bGwsICJ0ZW1wbGF0ZXMiOiBbXSwgInV1aWQiOiAiOTgwMjA0YTYtM2Y0My00MGQ5LWI3
MjAtNzIxMzUyMWNkZjc3IiwgImlkIjogMTUyLCAidHlwZV9pZCI6IDExLCAiY2hvc2VuIjogZmFs
c2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2FsY3VsYXRl
ZCI6IGZhbHNlLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInRleHQiOiAic2VhcmNoX2lu
Y2lkZW50X2lkIiwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidG9vbHRpcCI6
ICJpbmNpZGVudCB0byBzZWFyY2ggdXNpbmcgTkxQIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAi
cmVhZF9vbmx5IjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgImludGVybmFsIjogZmFsc2UsICJwbGFj
ZWhvbGRlciI6ICJpbmNpZGVudCBpZCIsICJuYW1lIjogInNlYXJjaF9pbmNpZGVudF9pZCIsICJl
eHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vc2VhcmNoX2luY2lkZW50X2lkIn1dLCAic2NyaXB0cyI6
IFtdLCAidHlwZXMiOiBbeyJmb3Jfd29ya2Zsb3dzIjogZmFsc2UsICJ0eXBlX25hbWUiOiAibmxw
X3NpbWlsYXJfaW5jaWRlbnRzIiwgInR5cGVfaWQiOiA4LCAiZm9yX2N1c3RvbV9maWVsZHMiOiBm
YWxzZSwgInV1aWQiOiAiNzU3NDY5NGMtODdmNy00OTMwLTkxYmYtMTIxYTM4NDU0Nzc4IiwgImlk
IjogbnVsbCwgImZvcl9ub3RpZmljYXRpb25zIjogZmFsc2UsICJwYXJlbnRfdHlwZXMiOiBbImlu
Y2lkZW50Il0sICJmb3JfYWN0aW9ucyI6IGZhbHNlLCAic2NyaXB0cyI6IFtdLCAiYWN0aW9ucyI6
IFtdLCAicHJvcGVydGllcyI6IHsiZm9yX3dobyI6IFtdLCAiY2FuX2NyZWF0ZSI6IGZhbHNlLCAi
Y2FuX2Rlc3Ryb3kiOiBmYWxzZX0sICJkaXNwbGF5X25hbWUiOiAiTkxQIFNpbWlsYXIgSW5jaWRl
bnRzIiwgImZpZWxkcyI6IHsia2V5d29yZHMiOiB7ImlucHV0X3R5cGUiOiAidGV4dCIsICJkZXBy
ZWNhdGVkIjogZmFsc2UsICJvcGVyYXRpb25zIjogW10sICJyaWNoX3RleHQiOiBmYWxzZSwgInBy
ZWZpeCI6IG51bGwsICJ0ZW1wbGF0ZXMiOiBbXSwgInV1aWQiOiAiNzIzODAxM2QtZmYwYS00ZGVl
LWJkMWEtMDMyNDg5NjYxZTUzIiwgImlkIjogMTU2LCAidHlwZV9pZCI6IDEwMDAsICJjaG9zZW4i
OiB0cnVlLCAiYmxhbmtfb3B0aW9uIjogdHJ1ZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2FsY3Vs
YXRlZCI6IGZhbHNlLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInRleHQiOiAiS2V5d29y
ZHMiLCAib3JkZXIiOiAyLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ0b29s
dGlwIjogImtleXdvcmRzIGlkZW50aWZpZWQgYnkgTkxQIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9
LCAicmVhZF9vbmx5IjogZmFsc2UsICJ3aWR0aCI6IDUxLCAidmFsdWVzIjogW10sICJpbnRlcm5h
bCI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAia2V5d29yZHMiLCAiZXhwb3J0
X2tleSI6ICJubHBfc2ltaWxhcl9pbmNpZGVudHMva2V5d29yZHMifSwgImluY2lkZW50X2lkIjog
eyJpbnB1dF90eXBlIjogInRleHRhcmVhIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgIm9wZXJhdGlv
bnMiOiBbXSwgInJpY2hfdGV4dCI6IHRydWUsICJwcmVmaXgiOiBudWxsLCAidGVtcGxhdGVzIjog
W10sICJ1dWlkIjogIjZlYjMxNTNmLWQyYTctNDEyZS05MTZhLWQ0YzhhOGIxMmI5YyIsICJpZCI6
IDE1NCwgInR5cGVfaWQiOiAxMDAwLCAiY2hvc2VuIjogZmFsc2UsICJibGFua19vcHRpb24iOiBm
YWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgInRleHQiOiAiSW5jaWRlbnQgSUQiLCAib3JkZXIiOiAwLCAiZGVm
YXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ0b29sdGlwIjogImxpbmsgdG8gc2ltaWxh
ciBpbmNpZGVudCIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInJlYWRfb25seSI6IGZhbHNlLCAi
d2lkdGgiOiA2NzYsICJ2YWx1ZXMiOiBbXSwgImludGVybmFsIjogZmFsc2UsICJwbGFjZWhvbGRl
ciI6ICIiLCAibmFtZSI6ICJpbmNpZGVudF9pZCIsICJleHBvcnRfa2V5IjogIm5scF9zaW1pbGFy
X2luY2lkZW50cy9pbmNpZGVudF9pZCJ9LCAic2VhcmNoX3RpbWUiOiB7ImlucHV0X3R5cGUiOiAi
dGV4dCIsICJkZXByZWNhdGVkIjogZmFsc2UsICJvcGVyYXRpb25zIjogW10sICJyaWNoX3RleHQi
OiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJ0ZW1wbGF0ZXMiOiBbXSwgInV1aWQiOiAiYWMzZWRh
NzctOTdhYS00ZDNkLThmNTItODE3ZGY4MDg1ZTk4IiwgImlkIjogMTU5LCAidHlwZV9pZCI6IDEw
MDAsICJjaG9zZW4iOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6
IHRydWUsICJjYWxjdWxhdGVkIjogZmFsc2UsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
dGV4dCI6ICJTZWFyY2ggVGltZSIsICJvcmRlciI6IDMsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2
ZXIiOiBmYWxzZSwgInRvb2x0aXAiOiAiIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAicmVhZF9v
bmx5IjogZmFsc2UsICJ3aWR0aCI6IDM2LCAidmFsdWVzIjogW10sICJpbnRlcm5hbCI6IGZhbHNl
LCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAic2VhcmNoX3RpbWUiLCAiZXhwb3J0X2tleSI6
ICJubHBfc2ltaWxhcl9pbmNpZGVudHMvc2VhcmNoX3RpbWUifSwgInNpbWlsYXJpdHkiOiB7Imlu
cHV0X3R5cGUiOiAidGV4dCIsICJkZXByZWNhdGVkIjogZmFsc2UsICJvcGVyYXRpb25zIjogW10s
ICJyaWNoX3RleHQiOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJ0ZW1wbGF0ZXMiOiBbXSwgInV1
aWQiOiAiZjg4ZmRhOTQtZDcwYy00NTQ0LWI0MzUtY2QyYzc0ODBiMDMxIiwgImlkIjogMTU1LCAi
dHlwZV9pZCI6IDEwMDAsICJjaG9zZW4iOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAi
Y2hhbmdlYWJsZSI6IHRydWUsICJjYWxjdWxhdGVkIjogZmFsc2UsICJoaWRlX25vdGlmaWNhdGlv
biI6IGZhbHNlLCAidGV4dCI6ICJTaW1pbGFyaXR5IiwgIm9yZGVyIjogMSwgImRlZmF1bHRfY2hv
c2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidG9vbHRpcCI6ICIiLCAib3BlcmF0aW9uX3Blcm1zIjog
e30sICJyZWFkX29ubHkiOiBmYWxzZSwgIndpZHRoIjogNjQsICJ2YWx1ZXMiOiBbXSwgImludGVy
bmFsIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJzaW1pbGFyaXR5IiwgImV4
cG9ydF9rZXkiOiAibmxwX3NpbWlsYXJfaW5jaWRlbnRzL3NpbWlsYXJpdHkifX0sICJleHBvcnRf
a2V5IjogIm5scF9zaW1pbGFyX2luY2lkZW50cyJ9XSwgImFjdGlvbnMiOiBbeyJsb2dpY190eXBl
IjogImFsbCIsICJ0eXBlIjogMSwgInV1aWQiOiAiYjAzOWFhNDctZDAzMy00YTU2LWJjNjgtZWZi
ZjIyMTNmNjgwIiwgImNvbmRpdGlvbnMiOiBbXSwgInZpZXdfaXRlbXMiOiBbeyJlbGVtZW50Ijog
Imh0bWwiLCAiY29udGVudCI6ICJGaW5kIHRvcCBpbmNpZGVudHMgc2ltaWxhciB0byB0aGlzIG9u
ZSwgYmFzZWQgb24gbmFtZSBhbmQgZGVzY3JpcHRpb24gdXNpbmcgTkxQLiIsICJzaG93X2xpbmtf
aGVhZGVyIjogZmFsc2UsICJmaWVsZF90eXBlIjogbnVsbCwgInN0ZXBfbGFiZWwiOiBudWxsLCAi
c2hvd19pZiI6IG51bGx9LCB7ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogImU1
YmY2YjVmLWUyNWUtNDJjMS04ODQzLTJmYWI1Y2NiYjAzNiIsICJzaG93X2xpbmtfaGVhZGVyIjog
ZmFsc2UsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAic3RlcF9sYWJlbCI6IG51
bGwsICJzaG93X2lmIjogbnVsbH0sIHsiZWxlbWVudCI6ICJodG1sIiwgImNvbnRlbnQiOiAiPGEg
aHJlZj1cImh0dHBzOi8vZ2l0aHViLmlibS5jb20vUmVzaWxpZW50L3Jlc2lsaWVudC1jb21tdW5p
dHktYXBwcy9ibG9iL25scF9lcGljL2ZuX3Jlc2lsaWVudF9tbC9kb2MvaGVscC5tZFwiPiBIZWxw
PC9hPiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJmaWVsZF90eXBlIjogbnVsbCwgInN0
ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGx9XSwgIndvcmtmbG93cyI6IFsicmVzaWxp
ZW50X25scF9zZWFyY2giXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAiYXV0b21hdGlvbnMi
OiBbXSwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgImlkIjogMTQsICJuYW1lIjogIk5MUCBT
ZWFyY2giLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgImV4cG9ydF9rZXkiOiAiTkxQIFNl
YXJjaCJ9LCB7ImxvZ2ljX3R5cGUiOiAiYWxsIiwgInR5cGUiOiAxLCAidXVpZCI6ICJjNTZmODZi
ZS1iYzBjLTQ2YmYtOGI0Yy0xOTQyZWM5ODVjNGUiLCAiY29uZGl0aW9ucyI6IFtdLCAidmlld19p
dGVtcyI6IFt7ImVsZW1lbnQiOiAiaHRtbCIsICJjb250ZW50IjogIlNlYXJjaCBmb3IgaW5jaWRl
bnRzIHdpdGggZGVzY3JpcHRpb24gdG8gdGhlIGZvbGxvd2luZyBzdHJpbmcuIiwgInNob3dfbGlu
a19oZWFkZXIiOiBmYWxzZSwgImZpZWxkX3R5cGUiOiBudWxsLCAic3RlcF9sYWJlbCI6IG51bGws
ICJzaG93X2lmIjogbnVsbH0sIHsiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAi
YWM4ZWE2OWQtMWZkZS00ZTYwLWJiZWYtN2QzOGQxNGZhNTFlIiwgInNob3dfbGlua19oZWFkZXIi
OiBmYWxzZSwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJzdGVwX2xhYmVsIjog
bnVsbCwgInNob3dfaWYiOiBudWxsfSwgeyJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVu
dCI6ICJlNWJmNmI1Zi1lMjVlLTQyYzEtODg0My0yZmFiNWNjYmIwMzYiLCAic2hvd19saW5rX2hl
YWRlciI6IGZhbHNlLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInN0ZXBfbGFi
ZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGx9XSwgIndvcmtmbG93cyI6IFsicmVzaWxpZW50X25s
cF9zZWFyY2giXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAiYXV0b21hdGlvbnMiOiBbXSwg
Im9iamVjdF90eXBlIjogImluY2lkZW50IiwgImlkIjogMTUsICJuYW1lIjogIk5MUCBTdHJpbmcg
U2VhcmNoIiwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10sICJleHBvcnRfa2V5IjogIk5MUCBT
dHJpbmcgU2VhcmNoIn1dLCAic2VydmVyX3ZlcnNpb24iOiB7Im1pbm9yIjogMywgImJ1aWxkX251
bWJlciI6IDEyLCAibWFqb3IiOiAzMiwgInZlcnNpb24iOiAiMzIuMy4xMiJ9fQ==
"""
    )