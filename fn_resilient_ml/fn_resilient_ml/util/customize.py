# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_resilient_ml"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_resilient_ml package"""
    reload_params = {"package": u"fn_resilient_ml",
                    "incident_fields": [], 
                    "action_fields": [u"number_top_similar_incidents"], 
                    "function_params": [u"number_incidents", u"search_incident_id"], 
                    "datatables": [u"nlp_similar_incidents"], 
                    "message_destinations": [u"resilient_ml"], 
                    "functions": [u"resilient_nlp_search"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"resilient_nlp_search"], 
                    "actions": [u"NLP Search"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     number_top_similar_incidents
    #   Function inputs:
    #     number_incidents
    #     search_incident_id
    #   DataTables:
    #     nlp_similar_incidents
    #   Message Destinations:
    #     resilient_ml
    #   Functions:
    #     resilient_nlp_search
    #   Workflows:
    #     resilient_nlp_search
    #   Rules:
    #     NLP Search


    yield ImportDefinition(u"""
eyJpbmNpZGVudF9hcnRpZmFjdF90eXBlcyI6IFtdLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJh
Y3Rpb25zIjogW3sidHlwZSI6IDEsICJ3b3JrZmxvd3MiOiBbInJlc2lsaWVudF9ubHBfc2VhcmNo
Il0sICJleHBvcnRfa2V5IjogIk5MUCBTZWFyY2giLCAidXVpZCI6ICJiMDM5YWE0Ny1kMDMzLTRh
NTYtYmM2OC1lZmJmMjIxM2Y2ODAiLCAibmFtZSI6ICJOTFAgU2VhcmNoIiwgImF1dG9tYXRpb25z
IjogW10sICJpZCI6IDE0LCAidmlld19pdGVtcyI6IFt7ImNvbnRlbnQiOiAiRmluZCB0b3AgaW5j
aWRlbnRzIHNpbWlsYXIgdG8gdGhpcyBvbmUsIGJhc2VkIG9uIG5hbWUgYW5kIGRlc2NyaXB0aW9u
IHVzaW5nIE5MUC4iLCAic3RlcF9sYWJlbCI6IG51bGwsICJlbGVtZW50IjogImh0bWwiLCAic2hv
d19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxz
ZX0sIHsiY29udGVudCI6ICJlNWJmNmI1Zi1lMjVlLTQyYzEtODg0My0yZmFiNWNjYmIwMzYiLCAi
c3RlcF9sYWJlbCI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAic2hvd19pZiI6IG51
bGwsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAic2hvd19saW5rX2hlYWRlciI6
IGZhbHNlfSwgeyJjb250ZW50IjogIjxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5pYm0uY29tL1Jl
c2lsaWVudC9yZXNpbGllbnQtY29tbXVuaXR5LWFwcHMvYmxvYi9ubHBfZXBpYy9mbl9yZXNpbGll
bnRfbWwvZG9jL2hlbHAubWRcIj4gSGVscDwvYT4iLCAic3RlcF9sYWJlbCI6IG51bGwsICJlbGVt
ZW50IjogImh0bWwiLCAic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogbnVsbCwgInNob3df
bGlua19oZWFkZXIiOiBmYWxzZX1dLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgIm9iamVj
dF90eXBlIjogImluY2lkZW50IiwgImNvbmRpdGlvbnMiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6
IDg2NDAwLCAibG9naWNfdHlwZSI6ICJhbGwifV0sICJmdW5jdGlvbnMiOiBbeyJsYXN0X21vZGlm
aWVkX3RpbWUiOiAxNTcyMzU1MDQyODI0LCAidmlld19pdGVtcyI6IFt7ImNvbnRlbnQiOiAiOTgw
MjA0YTYtM2Y0My00MGQ5LWI3MjAtNzIxMzUyMWNkZjc3IiwgInN0ZXBfbGFiZWwiOiBudWxsLCAi
ZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgInNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJf
X2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsiY29udGVudCI6ICJhZjlh
Mzc5ZS1hNDhiLTQ3ZGQtOThmYi03M2JhMzY4OGFkOWEiLCAic3RlcF9sYWJlbCI6IG51bGwsICJl
bGVtZW50IjogImZpZWxkX3V1aWQiLCAic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9f
ZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfV0sICJleHBvcnRfa2V5IjogInJl
c2lsaWVudF9ubHBfc2VhcmNoIiwgInV1aWQiOiAiNDg3OTYwYTMtOGExMi00OWMxLWI4NTItMTM5
YTYwMzExMmU2IiwgIndvcmtmbG93cyI6IFt7ImRlc2NyaXB0aW9uIjogbnVsbCwgIm9iamVjdF90
eXBlIjogImluY2lkZW50IiwgImFjdGlvbnMiOiBbXSwgIndvcmtmbG93X2lkIjogMSwgIm5hbWUi
OiAiRXhhbXBsZSBvZiBOTFAgc2VhcmNoIiwgInByb2dyYW1tYXRpY19uYW1lIjogInJlc2lsaWVu
dF9ubHBfc2VhcmNoIiwgInV1aWQiOiBudWxsfV0sICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAicmVz
aWxpZW50X21sIiwgImlkIjogMSwgImRlc2NyaXB0aW9uIjogeyJjb250ZW50IjogIiIsICJmb3Jt
YXQiOiAidGV4dCJ9LCAiY3JlYXRvciI6IHsidHlwZSI6ICJ1c2VyIiwgIm5hbWUiOiAibWFzdGVy
QGV4YW1wbGUuY29tIiwgImRpc3BsYXlfbmFtZSI6ICJtYXN0ZXJmaXJzdCBtYXN0ZXJsYXN0Iiwg
ImlkIjogMn0sICJ2ZXJzaW9uIjogMiwgImxhc3RfbW9kaWZpZWRfYnkiOiB7InR5cGUiOiAidXNl
ciIsICJuYW1lIjogIm1hc3RlckBleGFtcGxlLmNvbSIsICJkaXNwbGF5X25hbWUiOiAibWFzdGVy
Zmlyc3QgbWFzdGVybGFzdCIsICJpZCI6IDJ9LCAibmFtZSI6ICJyZXNpbGllbnRfbmxwX3NlYXJj
aCIsICJkaXNwbGF5X25hbWUiOiAiUmVzaWxpZW50IE5MUCBzZWFyY2gifV0sICJ3b3JrZmxvd3Mi
OiBbeyJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTc5MDA5ODkzMTQ0LCAiZGVzY3JpcHRpb24iOiAi
R2l2ZW4gYW4gaW5jaWRlbnQsIHVzZSBpdHMgbmFtZSwgZGVzY3JpcHRpb24sIGFydGlmYWN0IGRl
c2NyaXB0aW9uLCBhbmQgcmVzb2x1dGlvbiBzdW1tYXJ5IHRvIGRvIG5scCBzZWFyY2gsIGluIG9y
ZGVyIHRvIGZpbmQgc2ltaWxhciBpbmNpZGVudHMuIiwgImV4cG9ydF9rZXkiOiAicmVzaWxpZW50
X25scF9zZWFyY2giLCAiYWN0aW9ucyI6IFtdLCAiY29udGVudCI6IHsieG1sIjogIjw/eG1sIHZl
cnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0
dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9
XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9
XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwi
aHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9
XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cu
dzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAw
MS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVu
ZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cInJlc2lsaWVudF9ubHBfc2VhcmNoXCIgaXNFeGVj
dXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlIG9mIE5MUCBzZWFyY2hcIj48ZG9jdW1lbnRh
dGlvbj5HaXZlbiBhbiBpbmNpZGVudCwgdXNlIGl0cyBuYW1lLCBkZXNjcmlwdGlvbiwgYXJ0aWZh
Y3QgZGVzY3JpcHRpb24sIGFuZCByZXNvbHV0aW9uIHN1bW1hcnkgdG8gZG8gbmxwIHNlYXJjaCwg
aW4gb3JkZXIgdG8gZmluZCBzaW1pbGFyIGluY2lkZW50cy48L2RvY3VtZW50YXRpb24+PHN0YXJ0
RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzB3
ZzQ5dG48L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFz
a18xYWF2c2Q5XCIgbmFtZT1cIlJlc2lsaWVudCBOTFAgc2VhcmNoXCIgcmVzaWxpZW50OnR5cGU9
XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9
XCI0ODc5NjBhMy04YTEyLTQ5YzEtYjg1Mi0xMzlhNjAzMTEyZTZcIj57XCJpbnB1dHNcIjp7XCJh
ZjlhMzc5ZS1hNDhiLTQ3ZGQtOThmYi03M2JhMzY4OGFkOWFcIjp7XCJpbnB1dF90eXBlXCI6XCJz
dGF0aWNcIixcInN0YXRpY19pbnB1dFwiOntcIm11bHRpc2VsZWN0X3ZhbHVlXCI6W10sXCJudW1i
ZXJfdmFsdWVcIjo1fX19LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiXFxuZm9yIGluYyBp
biByZXN1bHRzLmluY2lkZW50czpcXG4gIGluY19yb3cgPSBpbmNpZGVudC5hZGRSb3coXFxcIm5s
cF9zaW1pbGFyX2luY2lkZW50c1xcXCIpXFxuICBpbmNfcm93W1xcXCJpbmNpZGVudF9pZFxcXCJd
ID0gaGVscGVyLmNyZWF0ZVJpY2hUZXh0KGluY1tcXFwiaW5jX2xpbmtcXFwiXSlcXG4gIGluY19y
b3dbXFxcInNpbWlsYXJpdHlcXFwiXSA9IHN0cihpbmNbXFxcInNpbWlsYXJpdHlcXFwiXSlcXG4g
IGluY19yb3dbXFxcImtleXdvcmRzXFxcIl0gPSBpbmNbXFxcImtleXdvcmRzXFxcIl1cIixcInBy
ZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLnNlYXJjaF9pbmNpZGVudF9pZCA9IGluY2lk
ZW50LmlkXFxuaWYgcnVsZS5wcm9wZXJ0aWVzLm51bWJlcl90b3Bfc2ltaWxhcl9pbmNpZGVudHMg
Jmd0OyAwOlxcbiAgaW5wdXRzLm51bWJlcl9pbmNpZGVudHMgPSBydWxlLnByb3BlcnRpZXMubnVt
YmVyX3RvcF9zaW1pbGFyX2luY2lkZW50c1wifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5z
aW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18wd2c0OXRuPC9pbmNvbWluZz48b3V0
Z29pbmc+U2VxdWVuY2VGbG93XzExdno1dGY8L291dGdvaW5nPjwvc2VydmljZVRhc2s+PHNlcXVl
bmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wd2c0OXRuXCIgc291cmNlUmVmPVwiU3RhcnRFdmVu
dF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMWFhdnNkOVwiLz48ZW5kRXZlbnQg
aWQ9XCJFbmRFdmVudF8wN3F4emw4XCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18xMXZ6NXRmPC9p
bmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMTF2ejV0
ZlwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFhYXZzZDlcIiB0YXJnZXRSZWY9XCJFbmRFdmVu
dF8wN3F4emw4XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRc
Ij48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48
YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwiU3RhcnRF
dmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiLz48dGV4
dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8wYjNyeWxwXCI+PHRleHQ+PCFbQ0RBVEFb
SW5wdXQ6XG4xLiBJbmNpZGVudCBJRFxuMi4gTnVtYmVyIG9mIGluY2lkZW50cyB0byByZXR1cm5c
bl1dPjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9u
XzBqaDBqNXFcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xYWF2c2Q5XCIgdGFyZ2V0UmVmPVwi
VGV4dEFubm90YXRpb25fMGIzcnlscFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3Rh
dGlvbl8xMXR3bWhtXCI+PHRleHQ+PCFbQ0RBVEFbUmV0dXJuOlxuU2ltaWxhciBpbmNpZGVudHMg
cmFua2VkIGJ5IHNpbWlsYXJpdHlcbl1dPjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lh
dGlvbiBpZD1cIkFzc29jaWF0aW9uXzAxOWxnOGlcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18x
YWF2c2Q5XCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMTF0d21obVwiLz48L3Byb2Nlc3M+
PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFu
ZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQ
TU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVu
dF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4
PVwiMjQyXCIgeT1cIjE2MVwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjIzN1wiIHk9XCIxOTZcIi8+PC9icG1uZGk6QlBNTkxh
YmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRl
eHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0
XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNz
b2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3
YXlwb2ludCB4PVwiMjQ1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxODhcIi8+PG9t
Z2RpOndheXBvaW50IHg9XCIxNjRcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwi
Lz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZp
Y2VUYXNrXzFhYXZzZDlcIiBpZD1cIlNlcnZpY2VUYXNrXzFhYXZzZDlfZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiNDAwXCIgeT1cIjEzOVwiLz48L2Jw
bW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxv
d18wd2c0OXRuXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMHdnNDl0bl9kaVwiPjxvbWdkaTp3YXlwb2lu
dCB4PVwiMjc4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNzlcIi8+PG9tZ2RpOndh
eXBvaW50IHg9XCI0MDBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE3OVwiLz48YnBt
bmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1c
IjMzOVwiIHk9XCIxNTdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxi
cG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMDdxeHpsOFwiIGlkPVwiRW5k
RXZlbnRfMDdxeHpsOF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2
XCIgeD1cIjY2N1wiIHk9XCIxNjFcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI2ODVcIiB5PVwiMjAwXCIvPjwvYnBtbmRpOkJQ
TU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1c
IlNlcXVlbmNlRmxvd18xMXZ6NXRmXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMTF2ejV0Zl9kaVwiPjxv
bWdkaTp3YXlwb2ludCB4PVwiNTAwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNzlc
Ii8+PG9tZ2RpOndheXBvaW50IHg9XCI2NjdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjE3OVwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lk
dGg9XCIwXCIgeD1cIjU4My41XCIgeT1cIjE1N1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1u
ZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlv
bl8wYjNyeWxwXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8wYjNyeWxwX2RpXCI+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCI3MVwiIHdpZHRoPVwiMjE5XCIgeD1cIjIwMFwiIHk9XCItMTNcIi8+PC9icG1u
ZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8w
amgwajVxXCIgaWQ9XCJBc3NvY2lhdGlvbl8wamgwajVxX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9
XCI0MTRcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEzOVwiLz48b21nZGk6d2F5cG9p
bnQgeD1cIjM0MVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiNThcIi8+PC9icG1uZGk6
QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8x
MXR3bWhtXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xMXR3bWhtX2RpXCI+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMjM5XCIgeD1cIjUzMFwiIHk9XCItMTdcIi8+PC9icG1uZGk6
QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8wMTls
ZzhpXCIgaWQ9XCJBc3NvY2lhdGlvbl8wMTlsZzhpX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0
OTVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE0NFwiLz48b21nZGk6d2F5cG9pbnQg
eD1cIjU5OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiNjNcIi8+PC9icG1uZGk6QlBN
TkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlv
bnM+IiwgInZlcnNpb24iOiA2LCAid29ya2Zsb3dfaWQiOiAicmVzaWxpZW50X25scF9zZWFyY2gi
fSwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgIndvcmtmbG93X2lkIjogMSwgImNyZWF0b3Jf
aWQiOiAibWFzdGVyQGV4YW1wbGUuY29tIiwgImxhc3RfbW9kaWZpZWRfYnkiOiAibWFzdGVyQGV4
YW1wbGUuY29tIiwgIm5hbWUiOiAiRXhhbXBsZSBvZiBOTFAgc2VhcmNoIiwgInByb2dyYW1tYXRp
Y19uYW1lIjogInJlc2lsaWVudF9ubHBfc2VhcmNoIiwgInV1aWQiOiAiM2FhOWQ3NGMtYWQyNy00
ZWViLTgxZWItM2U3NzU0MTNmMjk3In1dLCAiZmllbGRzIjogW3siZGVwcmVjYXRlZCI6IGZhbHNl
LCAiaW5wdXRfdHlwZSI6ICJib29sZWFuIiwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQvaW5jX3Ry
YWluaW5nIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgImNoYW5n
ZWFibGUiOiB0cnVlLCAib3BlcmF0aW9ucyI6IFtdLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJp
bnRlcm5hbCI6IGZhbHNlLCAidGV4dCI6ICJTaW11bGF0aW9uIiwgImNhbGN1bGF0ZWQiOiBmYWxz
ZSwgImlkIjogNjAsICJyaWNoX3RleHQiOiBmYWxzZSwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUg
aW5jaWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gVGhpcyBmaWVs
ZCBpcyByZWFkLW9ubHkuIiwgInV1aWQiOiAiYzNmMGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2Ez
MzA4Y2NhIiwgImNob3NlbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgInRlbXBsYXRlcyI6IFtd
LCAidHlwZV9pZCI6IDAsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgIm9wZXJh
dGlvbl9wZXJtcyI6IHt9LCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAicmVhZF9vbmx5IjogdHJ1
ZX0sIHsiZGVwcmVjYXRlZCI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAiZXhwb3J0
X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL251bWJlcl90b3Bfc2ltaWxhcl9pbmNpZGVudHMiLCAi
aGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInZhbHVlcyI6IFtdLCAiY2hhbmdlYWJsZSI6IHRy
dWUsICJvcGVyYXRpb25zIjogW10sICJibGFua19vcHRpb24iOiBmYWxzZSwgInR5cGVfaWQiOiA2
LCAidGV4dCI6ICJOdW1iZXIgb2YgaW5jaWRlbnRzIiwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZl
ciI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiaWQiOiAxNTMsICJyaWNoX3RleHQiOiBm
YWxzZSwgInRvb2x0aXAiOiAiTnVtYmVyIG9mIHRvcCBzaW1pbGFyIGluY2lkZW50cyB0byByZXR1
ciIsICJ1dWlkIjogImU1YmY2YjVmLWUyNWUtNDJjMS04ODQzLTJmYWI1Y2NiYjAzNiIsICJjaG9z
ZW4iOiBmYWxzZSwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwgInRlbXBsYXRlcyI6IFtdLCAiaW50
ZXJuYWwiOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogImRlZmF1bHQgdmFsdWUgc2V0IGluIHdvcmtm
bG93IiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAibmFtZSI6ICJudW1iZXJfdG9wX3NpbWlsYXJf
aW5jaWRlbnRzIiwgInJlYWRfb25seSI6IGZhbHNlfSwgeyJkZXByZWNhdGVkIjogZmFsc2UsICJp
bnB1dF90eXBlIjogIm51bWJlciIsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vbnVtYmVyX2lu
Y2lkZW50cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAidmFsdWVzIjogW10sICJjaGFu
Z2VhYmxlIjogdHJ1ZSwgIm9wZXJhdGlvbnMiOiBbXSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAi
dHlwZV9pZCI6IDExLCAidGV4dCI6ICJudW1iZXJfaW5jaWRlbnRzIiwgImRlZmF1bHRfY2hvc2Vu
X2J5X3NlcnZlciI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiaWQiOiAxNTEsICJyaWNo
X3RleHQiOiBmYWxzZSwgInRvb2x0aXAiOiAiTnVtYmVyIG9mIGluY2lkZW50cyB0byByZXR1cm4g
Zm9yIHRvcCBzaW1pbGFyaXR5IiwgInV1aWQiOiAiYWY5YTM3OWUtYTQ4Yi00N2RkLTk4ZmItNzNi
YTM2ODhhZDlhIiwgImNob3NlbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgInRlbXBsYXRlcyI6
IFtdLCAiaW50ZXJuYWwiOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIm51bWJlciBvZiBpbmNpZGVu
dCB0byByZXR1cm4iLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJuYW1lIjogIm51bWJlcl9pbmNp
ZGVudHMiLCAicmVhZF9vbmx5IjogZmFsc2V9LCB7ImRlcHJlY2F0ZWQiOiBmYWxzZSwgImlucHV0
X3R5cGUiOiAibnVtYmVyIiwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9zZWFyY2hfaW5jaWRl
bnRfaWQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInZhbHVlcyI6IFtdLCAiY2hhbmdl
YWJsZSI6IHRydWUsICJvcGVyYXRpb25zIjogW10sICJibGFua19vcHRpb24iOiBmYWxzZSwgInR5
cGVfaWQiOiAxMSwgInRleHQiOiAic2VhcmNoX2luY2lkZW50X2lkIiwgImRlZmF1bHRfY2hvc2Vu
X2J5X3NlcnZlciI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiaWQiOiAxNTIsICJyaWNo
X3RleHQiOiBmYWxzZSwgInRvb2x0aXAiOiAiaW5jaWRlbnQgdG8gc2VhcmNoIHVzaW5nIE5MUCIs
ICJ1dWlkIjogIjk4MDIwNGE2LTNmNDMtNDBkOS1iNzIwLTcyMTM1MjFjZGY3NyIsICJjaG9zZW4i
OiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJ0ZW1wbGF0ZXMiOiBbXSwgImludGVybmFsIjogZmFs
c2UsICJwbGFjZWhvbGRlciI6ICJpbmNpZGVudCBpZCIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwg
Im5hbWUiOiAic2VhcmNoX2luY2lkZW50X2lkIiwgInJlYWRfb25seSI6IGZhbHNlfV0sICJhY3Rp
b25fb3JkZXIiOiBbXSwgImlkIjogMiwgInJvbGVzIjogW10sICJwaGFzZXMiOiBbXSwgInRhc2tf
b3JkZXIiOiBbXSwgIm92ZXJyaWRlcyI6IFtdLCAid29ya3NwYWNlcyI6IFtdLCAic2NyaXB0cyI6
IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTc5MDA5OTI3MDgyLCAiaW5kdXN0cmllcyI6IG51bGwsICJh
dXRvbWF0aWNfdGFza3MiOiBbXSwgImluY2lkZW50X3R5cGVzIjogW3siZGVzY3JpcHRpb24iOiAi
Q3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgInBhcmVudF9pZCI6IG51bGwsICJl
bmFibGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGlu
dGVybmFsKSIsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIs
ICJoaWRkZW4iOiBmYWxzZSwgImNyZWF0ZV9kYXRlIjogMTU3OTAxMDAyNDU1NCwgInVwZGF0ZV9k
YXRlIjogMTU3OTAxMDAyNDU1NCwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50
ZXJuYWwpIiwgInN5c3RlbSI6IGZhbHNlLCAiaWQiOiAwfV0sICJsYXlvdXRzIjogW10sICJsb2Nh
bGUiOiBudWxsLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbeyJleHBvcnRfa2V5IjogInJlc2ls
aWVudF9tbCIsICJ1dWlkIjogIjhkYTFhYzQ4LTVmZmYtNDkwOS04YTkzLTFmNmIxYzA5YTU2NSIs
ICJkZXN0aW5hdGlvbl90eXBlIjogMCwgInVzZXJzIjogWyJtYXN0ZXJAZXhhbXBsZS5jb20iXSwg
Im5hbWUiOiAicmVzaWxpZW50X21sIiwgInByb2dyYW1tYXRpY19uYW1lIjogInJlc2lsaWVudF9t
bCIsICJleHBlY3RfYWNrIjogdHJ1ZX1dLCAic2VydmVyX3ZlcnNpb24iOiB7Im1ham9yIjogMzIs
ICJtaW5vciI6IDMsICJidWlsZF9udW1iZXIiOiAxMiwgInZlcnNpb24iOiAiMzIuMy4xMiJ9LCAi
dGltZWZyYW1lcyI6IG51bGwsICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAyLCAicmVndWxhdG9y
cyI6IG51bGwsICJnZW9zIjogbnVsbCwgInR5cGVzIjogW3sicHJvcGVydGllcyI6IHsiY2FuX2Ny
ZWF0ZSI6IGZhbHNlLCAiY2FuX2Rlc3Ryb3kiOiBmYWxzZSwgImZvcl93aG8iOiBbXX0sICJleHBv
cnRfa2V5IjogIm5scF9zaW1pbGFyX2luY2lkZW50cyIsICJmaWVsZHMiOiB7ImluY2lkZW50X2lk
IjogeyJkZXByZWNhdGVkIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHRhcmVhIiwgImV4cG9y
dF9rZXkiOiAibmxwX3NpbWlsYXJfaW5jaWRlbnRzL2luY2lkZW50X2lkIiwgImhpZGVfbm90aWZp
Y2F0aW9uIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgImNoYW5nZWFibGUiOiB0cnVlLCAib3BlcmF0
aW9ucyI6IFtdLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJ0eXBlX2lkIjogMTAwMCwgInRleHQi
OiAiSW5jaWRlbnQgSUQiLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJjYWxj
dWxhdGVkIjogZmFsc2UsICJpZCI6IDE1NCwgInJpY2hfdGV4dCI6IHRydWUsICJ0b29sdGlwIjog
ImxpbmsgdG8gc2ltaWxhciBpbmNpZGVudCIsICJ1dWlkIjogIjZlYjMxNTNmLWQyYTctNDEyZS05
MTZhLWQ0YzhhOGIxMmI5YyIsICJjaG9zZW4iOiBmYWxzZSwgIm9yZGVyIjogMCwgIndpZHRoIjog
Njc2LCAicHJlZml4IjogbnVsbCwgInRlbXBsYXRlcyI6IFtdLCAiaW50ZXJuYWwiOiBmYWxzZSwg
InBsYWNlaG9sZGVyIjogIiIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm5hbWUiOiAiaW5jaWRl
bnRfaWQiLCAicmVhZF9vbmx5IjogZmFsc2V9LCAic2ltaWxhcml0eSI6IHsiZGVwcmVjYXRlZCI6
IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImV4cG9ydF9rZXkiOiAibmxwX3NpbWlsYXJf
aW5jaWRlbnRzL3NpbWlsYXJpdHkiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInZhbHVl
cyI6IFtdLCAiY2hhbmdlYWJsZSI6IHRydWUsICJvcGVyYXRpb25zIjogW10sICJibGFua19vcHRp
b24iOiBmYWxzZSwgInR5cGVfaWQiOiAxMDAwLCAidGV4dCI6ICJTaW1pbGFyaXR5IiwgImRlZmF1
bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiaWQiOiAx
NTUsICJyaWNoX3RleHQiOiBmYWxzZSwgInRvb2x0aXAiOiAiIiwgInV1aWQiOiAiZjg4ZmRhOTQt
ZDcwYy00NTQ0LWI0MzUtY2QyYzc0ODBiMDMxIiwgImNob3NlbiI6IGZhbHNlLCAib3JkZXIiOiAx
LCAid2lkdGgiOiA2NCwgInByZWZpeCI6IG51bGwsICJ0ZW1wbGF0ZXMiOiBbXSwgImludGVybmFs
IjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJuYW1l
IjogInNpbWlsYXJpdHkiLCAicmVhZF9vbmx5IjogZmFsc2V9LCAia2V5d29yZHMiOiB7ImRlcHJl
Y2F0ZWQiOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJleHBvcnRfa2V5IjogIm5scF9z
aW1pbGFyX2luY2lkZW50cy9rZXl3b3JkcyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
dmFsdWVzIjogW10sICJjaGFuZ2VhYmxlIjogdHJ1ZSwgIm9wZXJhdGlvbnMiOiBbXSwgImJsYW5r
X29wdGlvbiI6IHRydWUsICJ0eXBlX2lkIjogMTAwMCwgInRleHQiOiAiS2V5d29yZHMiLCAiZGVm
YXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJpZCI6
IDE1NiwgInJpY2hfdGV4dCI6IGZhbHNlLCAidG9vbHRpcCI6ICJrZXl3b3JkcyBpZGVudGlmaWVk
IGJ5IE5MUCIsICJ1dWlkIjogIjcyMzgwMTNkLWZmMGEtNGRlZS1iZDFhLTAzMjQ4OTY2MWU1MyIs
ICJjaG9zZW4iOiB0cnVlLCAib3JkZXIiOiAyLCAid2lkdGgiOiA1MSwgInByZWZpeCI6IG51bGws
ICJ0ZW1wbGF0ZXMiOiBbXSwgImludGVybmFsIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAi
b3BlcmF0aW9uX3Blcm1zIjoge30sICJuYW1lIjogImtleXdvcmRzIiwgInJlYWRfb25seSI6IGZh
bHNlfX0sICJ0eXBlX25hbWUiOiAibmxwX3NpbWlsYXJfaW5jaWRlbnRzIiwgInV1aWQiOiAiNzU3
NDY5NGMtODdmNy00OTMwLTkxYmYtMTIxYTM4NDU0Nzc4IiwgInNjcmlwdHMiOiBbXSwgImZvcl9j
dXN0b21fZmllbGRzIjogZmFsc2UsICJpZCI6IG51bGwsICJmb3Jfd29ya2Zsb3dzIjogZmFsc2Us
ICJmb3Jfbm90aWZpY2F0aW9ucyI6IGZhbHNlLCAiZm9yX2FjdGlvbnMiOiBmYWxzZSwgInR5cGVf
aWQiOiA4LCAicGFyZW50X3R5cGVzIjogWyJpbmNpZGVudCJdLCAiZGlzcGxheV9uYW1lIjogIk5M
UCBTaW1pbGFyIEluY2lkZW50cyIsICJhY3Rpb25zIjogW119XX0=
"""
    )