# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_resilient_ml"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_resilient_ml package"""
    reload_params = {"package": u"fn_resilient_ml",
                    "incident_fields": [], 
                    "action_fields": [u"nlp_string", u"number_top_similar_incidents"], 
                    "function_params": [u"nlp_search_string", u"number_incidents", u"search_incident_id"], 
                    "datatables": [u"nlp_similar_incidents"], 
                    "message_destinations": [u"resilient_ml"], 
                    "functions": [u"resilient_nlp_search"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"resilient_nlp_search"], 
                    "actions": [u"NLP Search", u"NLP String Search"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     nlp_string
    #     number_top_similar_incidents
    #   Function inputs:
    #     nlp_search_string
    #     number_incidents
    #     search_incident_id
    #   DataTables:
    #     nlp_similar_incidents
    #   Message Destinations:
    #     resilient_ml
    #   Functions:
    #     resilient_nlp_search
    #   Workflows:
    #     resilient_nlp_search
    #   Rules:
    #     NLP Search
    #     NLP String Search


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMiwgIm1pbm9yIjogMCwgImJ1aWxkX251bWJl
ciI6IDQ1MDIsICJ2ZXJzaW9uIjogIjMyLjAuNDUwMiJ9LCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9u
IjogMiwgImlkIjogNSwgImV4cG9ydF9kYXRlIjogMTU4NTY3Mjg2ODMyMywgImZpZWxkcyI6IFt7
ImlkIjogNDIxLCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAidGV4dCI6ICJTaW11bGF0aW9uIiwg
InByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMCwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5j
aWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gVGhpcyBmaWVsZCBp
cyByZWFkLW9ubHkuIiwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJoaWRlX25vdGlmaWNhdGlv
biI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAi
YzNmMGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgIm9wZXJhdGlvbnMiOiBbXSwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiB0cnVlLCAi
Y2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5j
aWRlbnQvaW5jX3RyYWluaW5nIiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNl
fSwgeyJpZCI6IDUxNywgIm5hbWUiOiAibmxwX3N0cmluZyIsICJ0ZXh0IjogIk5MUCBTdHJpbmci
LCAicHJlZml4IjogInByb3BlcnRpZXMiLCAidHlwZV9pZCI6IDYsICJ0b29sdGlwIjogInNlYXJj
aCBmb3IgaW5jaWRlbnRzIHdpdGggZGVzY3JpcHRpb25zIHNpbWlsYXIgdG8gdGhpcyBzdHJpbmci
LCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAidGV4dGFyZWEiLCAicmVxdWlyZWQi
OiAiYWx3YXlzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwg
ImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2Us
ICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICJhYzhlYTY5ZC0xZmRlLTRlNjAtYmJlZi03ZDM4
ZDE0ZmE1MWUiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1
ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3Rl
eHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9ubHBfc3RyaW5nIiwg
InRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDUxNiwgIm5hbWUi
OiAibnVtYmVyX3RvcF9zaW1pbGFyX2luY2lkZW50cyIsICJ0ZXh0IjogIk51bWJlciBvZiBpbmNp
ZGVudHMiLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAidHlwZV9pZCI6IDYsICJ0b29sdGlwIjog
Ik51bWJlciBvZiB0b3Agc2ltaWxhciBpbmNpZGVudHMgdG8gcmV0dXIiLCAicGxhY2Vob2xkZXIi
OiAiZGVmYXVsdCB2YWx1ZSBzZXQgaW4gd29ya2Zsb3ciLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIi
LCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9j
aG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFs
IjogZmFsc2UsICJ1dWlkIjogImU1YmY2YjVmLWUyNWUtNDJjMS04ODQzLTJmYWI1Y2NiYjAzNiIs
ICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAi
cmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL251bWJlcl90b3Bfc2ltaWxhcl9pbmNp
ZGVudHMiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogNTIw
LCAibmFtZSI6ICJudW1iZXJfaW5jaWRlbnRzIiwgInRleHQiOiAibnVtYmVyX2luY2lkZW50cyIs
ICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6ICJOdW1iZXIgb2YgaW5j
aWRlbnRzIHRvIHJldHVybiBmb3IgdG9wIHNpbWlsYXJpdHkiLCAicGxhY2Vob2xkZXIiOiAibnVt
YmVyIG9mIGluY2lkZW50IHRvIHJldHVybiIsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJoaWRl
X25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxz
ZSwgInV1aWQiOiAiYWY5YTM3OWUtYTQ4Yi00N2RkLTk4ZmItNzNiYTM2ODhhZDlhIiwgIm9wZXJh
dGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29u
bHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBv
cnRfa2V5IjogIl9fZnVuY3Rpb24vbnVtYmVyX2luY2lkZW50cyIsICJ0ZW1wbGF0ZXMiOiBbXSwg
ImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQiOiA1MTksICJuYW1lIjogIm5scF9zZWFyY2hfc3Ry
aW5nIiwgInRleHQiOiAibmxwX3NlYXJjaF9zdHJpbmciLCAicHJlZml4IjogbnVsbCwgInR5cGVf
aWQiOiAxMSwgInRvb2x0aXAiOiAiVXNlIE5MUCB0byBzZWFyY2ggdGhpcyBzdHJpbmciLCAicGxh
Y2Vob2xkZXIiOiAic2VhcmNoIHN0cmluZyIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2Us
ICJ1dWlkIjogIjk0MzM0M2FmLTExMjYtNDc2ZC1hYWQ2LTNjZjljNmU4NWEwYyIsICJvcGVyYXRp
b25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5
IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0
X2tleSI6ICJfX2Z1bmN0aW9uL25scF9zZWFyY2hfc3RyaW5nIiwgInRlbXBsYXRlcyI6IFtdLCAi
ZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDUxOCwgIm5hbWUiOiAic2VhcmNoX2luY2lkZW50
X2lkIiwgInRleHQiOiAic2VhcmNoX2luY2lkZW50X2lkIiwgInByZWZpeCI6IG51bGwsICJ0eXBl
X2lkIjogMTEsICJ0b29sdGlwIjogImluY2lkZW50IHRvIHNlYXJjaCB1c2luZyBOTFAiLCAicGxh
Y2Vob2xkZXIiOiAiaW5jaWRlbnQgaWQiLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2Us
ICJ1dWlkIjogIjk4MDIwNGE2LTNmNDMtNDBkOS1iNzIwLTcyMTM1MjFjZGY3NyIsICJvcGVyYXRp
b25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5
IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0
X2tleSI6ICJfX2Z1bmN0aW9uL3NlYXJjaF9pbmNpZGVudF9pZCIsICJ0ZW1wbGF0ZXMiOiBbXSwg
ImRlcHJlY2F0ZWQiOiBmYWxzZX1dLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6
IDE1ODU2NzI4NjkyNTYsICJjcmVhdGVfZGF0ZSI6IDE1ODU2NzI4NjkyNTYsICJ1dWlkIjogImJm
ZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0
b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0
aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2Vz
IChpbnRlcm5hbCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRf
aWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgInBoYXNlcyI6IFtdLCAiYXV0
b21hdGljX3Rhc2tzIjogW10sICJvdmVycmlkZXMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25z
IjogW3sibmFtZSI6ICJyZXNpbGllbnRfbWwiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAicmVzaWxp
ZW50X21sIiwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJ1c2Vy
cyI6IFtdLCAidXVpZCI6ICI4ZGExYWM0OC01ZmZmLTQ5MDktOGE5My0xZjZiMWMwOWE1NjUiLCAi
ZXhwb3J0X2tleSI6ICJyZXNpbGllbnRfbWwifV0sICJhY3Rpb25zIjogW3siaWQiOiA2MCwgIm5h
bWUiOiAiTkxQIFNlYXJjaCIsICJ0eXBlIjogMSwgIm9iamVjdF90eXBlIjogImluY2lkZW50Iiwg
ImNvbmRpdGlvbnMiOiBbXSwgImF1dG9tYXRpb25zIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9u
cyI6IFtdLCAid29ya2Zsb3dzIjogWyJyZXNpbGllbnRfbmxwX3NlYXJjaCJdLCAidmlld19pdGVt
cyI6IFt7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImh0
bWwiLCAiZmllbGRfdHlwZSI6IG51bGwsICJjb250ZW50IjogIkZpbmQgdG9wIGluY2lkZW50cyBz
aW1pbGFyIHRvIHRoaXMgb25lLCBiYXNlZCBvbiBuYW1lIGFuZCBkZXNjcmlwdGlvbiB1c2luZyBO
TFAuIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9sYWJlbCI6IG51bGwsICJz
aG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFj
dGlvbmludm9jYXRpb24iLCAiY29udGVudCI6ICJlNWJmNmI1Zi1lMjVlLTQyYzEtODg0My0yZmFi
NWNjYmIwMzYiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfSwgeyJzdGVwX2xhYmVsIjogbnVs
bCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJodG1sIiwgImZpZWxkX3R5cGUiOiBudWxs
LCAiY29udGVudCI6ICI8YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuaWJtLmNvbS9SZXNpbGllbnQv
cmVzaWxpZW50LWNvbW11bml0eS1hcHBzL2Jsb2IvbmxwX2VwaWMvZm5fcmVzaWxpZW50X21sL2Rv
Yy9oZWxwLm1kXCI+IEhlbHA8L2E+IiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX1dLCAidGlt
ZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImIwMzlhYTQ3LWQwMzMtNGE1Ni1iYzY4LWVm
YmYyMjEzZjY4MCIsICJleHBvcnRfa2V5IjogIk5MUCBTZWFyY2giLCAibG9naWNfdHlwZSI6ICJh
bGwifSwgeyJpZCI6IDYxLCAibmFtZSI6ICJOTFAgU3RyaW5nIFNlYXJjaCIsICJ0eXBlIjogMSwg
Im9iamVjdF90eXBlIjogImluY2lkZW50IiwgImNvbmRpdGlvbnMiOiBbXSwgImF1dG9tYXRpb25z
IjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAid29ya2Zsb3dzIjogWyJyZXNpbGll
bnRfbmxwX3NlYXJjaCJdLCAidmlld19pdGVtcyI6IFt7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hv
d19pZiI6IG51bGwsICJlbGVtZW50IjogImh0bWwiLCAiZmllbGRfdHlwZSI6IG51bGwsICJjb250
ZW50IjogIlNlYXJjaCBmb3IgaW5jaWRlbnRzIHdpdGggZGVzY3JpcHRpb24gc2ltaWxhciB0byB0
aGUgZm9sbG93aW5nIHN0cmluZy4iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfSwgeyJzdGVw
X2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwg
ImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJjb250ZW50IjogImFjOGVhNjlkLTFm
ZGUtNGU2MC1iYmVmLTdkMzhkMTRmYTUxZSIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9LCB7
InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1
aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgImNvbnRlbnQiOiAiZTViZjZi
NWYtZTI1ZS00MmMxLTg4NDMtMmZhYjVjY2JiMDM2IiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxz
ZX1dLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImM1NmY4NmJlLWJjMGMtNDZi
Zi04YjRjLTE5NDJlYzk4NWM0ZSIsICJleHBvcnRfa2V5IjogIk5MUCBTdHJpbmcgU2VhcmNoIiwg
ImxvZ2ljX3R5cGUiOiAiYWxsIn1dLCAibGF5b3V0cyI6IFtdLCAibm90aWZpY2F0aW9ucyI6IG51
bGwsICJ0aW1lZnJhbWVzIjogbnVsbCwgImxvY2FsZSI6IG51bGwsICJpbmR1c3RyaWVzIjogbnVs
bCwgInJlZ3VsYXRvcnMiOiBudWxsLCAiZ2VvcyI6IG51bGwsICJ0YXNrX29yZGVyIjogW10sICJh
Y3Rpb25fb3JkZXIiOiBbXSwgInR5cGVzIjogW3siaWQiOiBudWxsLCAidHlwZV9pZCI6IDgsICJ0
eXBlX25hbWUiOiAibmxwX3NpbWlsYXJfaW5jaWRlbnRzIiwgImZpZWxkcyI6IHsiaW5jaWRlbnRf
aWQiOiB7ImlkIjogNTE0LCAibmFtZSI6ICJpbmNpZGVudF9pZCIsICJ0ZXh0IjogIkluY2lkZW50
IElEIiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTAwMCwgInRvb2x0aXAiOiAibGluayB0
byBzaW1pbGFyIGluY2lkZW50IiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRl
eHRhcmVhIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJp
bnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICI2ZWIzMTUzZi1kMmE3LTQxMmUtOTE2YS1kNGM4YThi
MTJiOWMiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMi
OiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQi
OiB0cnVlLCAiZXhwb3J0X2tleSI6ICJubHBfc2ltaWxhcl9pbmNpZGVudHMvaW5jaWRlbnRfaWQi
LCAib3JkZXIiOiAwLCAid2lkdGgiOiA2NzYsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQi
OiBmYWxzZX0sICJrZXl3b3JkcyI6IHsiaWQiOiA1MTMsICJuYW1lIjogImtleXdvcmRzIiwgInRl
eHQiOiAiS2V5d29yZHMiLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMDAwLCAidG9vbHRp
cCI6ICJrZXl3b3JkcyBpZGVudGlmaWVkIGJ5IE5MUCIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5w
dXRfdHlwZSI6ICJ0ZXh0IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiB0
cnVlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiB0
cnVlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiNzIzODAxM2QtZmYwYS00ZGVlLWJkMWEt
MDMyNDg5NjYxZTUzIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAi
dmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmlj
aF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogIm5scF9zaW1pbGFyX2luY2lkZW50cy9rZXl3
b3JkcyIsICJvcmRlciI6IDIsICJ3aWR0aCI6IDUxLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNh
dGVkIjogZmFsc2V9LCAic2ltaWxhcml0eSI6IHsiaWQiOiA1MTUsICJuYW1lIjogInNpbWlsYXJp
dHkiLCAidGV4dCI6ICJTaW1pbGFyaXR5IiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTAw
MCwgInRvb2x0aXAiOiAiIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQi
LCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9j
aG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFs
IjogZmFsc2UsICJ1dWlkIjogImY4OGZkYTk0LWQ3MGMtNDU0NC1iNDM1LWNkMmM3NDgwYjAzMSIs
ICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAi
cmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAiZXhwb3J0X2tleSI6ICJubHBfc2ltaWxhcl9pbmNpZGVudHMvc2ltaWxhcml0eSIsICJvcmRl
ciI6IDEsICJ3aWR0aCI6IDY0LCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9
LCAic2VhcmNoX3RpbWUiOiB7ImlkIjogNTEyLCAibmFtZSI6ICJzZWFyY2hfdGltZSIsICJ0ZXh0
IjogIlNlYXJjaCBUaW1lIiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTAwMCwgInRvb2x0
aXAiOiAiIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2Us
ICJ1dWlkIjogImFjM2VkYTc3LTk3YWEtNGQzZC04ZjUyLTgxN2RmODA4NWU5OCIsICJvcGVyYXRp
b25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5
IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0
X2tleSI6ICJubHBfc2ltaWxhcl9pbmNpZGVudHMvc2VhcmNoX3RpbWUiLCAib3JkZXIiOiAzLCAi
d2lkdGgiOiAzNiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfX0sICJwcm9w
ZXJ0aWVzIjogeyJjYW5fY3JlYXRlIjogZmFsc2UsICJjYW5fZGVzdHJveSI6IGZhbHNlLCAiZm9y
X3dobyI6IFtdfSwgInBhcmVudF90eXBlcyI6IFsiaW5jaWRlbnQiXSwgImRpc3BsYXlfbmFtZSI6
ICJOTFAgU2ltaWxhciBJbmNpZGVudHMiLCAiZm9yX25vdGlmaWNhdGlvbnMiOiBmYWxzZSwgImZv
cl9hY3Rpb25zIjogZmFsc2UsICJmb3JfY3VzdG9tX2ZpZWxkcyI6IGZhbHNlLCAiZm9yX3dvcmtm
bG93cyI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJubHBfc2ltaWxhcl9pbmNpZGVudHMiLCAidXVp
ZCI6ICI2MTcyOGZkNC0xNzE4LTQ0NjYtYWE1NS00Y2FiYmUyOWQ3MmEiLCAiYWN0aW9ucyI6IFtd
LCAic2NyaXB0cyI6IFtdfV0sICJzY3JpcHRzIjogW10sICJpbmNpZGVudF9hcnRpZmFjdF90eXBl
cyI6IFtdLCAid29ya2Zsb3dzIjogW3sid29ya2Zsb3dfaWQiOiAxLCAibmFtZSI6ICJFeGFtcGxl
IG9mIE5MUCBzZWFyY2giLCAicHJvZ3JhbW1hdGljX25hbWUiOiAicmVzaWxpZW50X25scF9zZWFy
Y2giLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiZGVzY3JpcHRpb24iOiAiR2l2ZW4gYW4g
aW5jaWRlbnQsIHVzZSBpdHMgbmFtZSwgZGVzY3JpcHRpb24sIGFydGlmYWN0IGRlc2NyaXB0aW9u
LCBhbmQgcmVzb2x1dGlvbiBzdW1tYXJ5IHRvIGRvIG5scCBzZWFyY2gsIGluIG9yZGVyIHRvIGZp
bmQgc2ltaWxhciBpbmNpZGVudHMuIiwgImNyZWF0b3JfaWQiOiAibmxwQGV4YW1wbGUuY29tIiwg
Imxhc3RfbW9kaWZpZWRfYnkiOiAibmxwQGV4YW1wbGUuY29tIiwgImxhc3RfbW9kaWZpZWRfdGlt
ZSI6IDE1ODU1NzY2MjA1MjcsICJleHBvcnRfa2V5IjogInJlc2lsaWVudF9ubHBfc2VhcmNoIiwg
InV1aWQiOiAiM2FhOWQ3NGMtYWQyNy00ZWViLTgxZWItM2U3NzU0MTNmMjk3IiwgImNvbnRlbnQi
OiB7IndvcmtmbG93X2lkIjogInJlc2lsaWVudF9ubHBfc2VhcmNoIiwgInhtbCI6ICI8P3htbCB2
ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJo
dHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRp
PVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2Rj
PVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1c
Imh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50
PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3
LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIw
MDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11
bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJyZXNpbGllbnRfbmxwX3NlYXJjaFwiIGlzRXhl
Y3V0YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZSBvZiBOTFAgc2VhcmNoXCI+PGRvY3VtZW50
YXRpb24+R2l2ZW4gYW4gaW5jaWRlbnQsIHVzZSBpdHMgbmFtZSwgZGVzY3JpcHRpb24sIGFydGlm
YWN0IGRlc2NyaXB0aW9uLCBhbmQgcmVzb2x1dGlvbiBzdW1tYXJ5IHRvIGRvIG5scCBzZWFyY2gs
IGluIG9yZGVyIHRvIGZpbmQgc2ltaWxhciBpbmNpZGVudHMuPC9kb2N1bWVudGF0aW9uPjxzdGFy
dEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18w
d2c0OXRuPC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRh
c2tfMWFhdnNkOVwiIG5hbWU9XCJSZXNpbGllbnQgTkxQIHNlYXJjaFwiIHJlc2lsaWVudDp0eXBl
PVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlk
PVwiNDg3OTYwYTMtOGExMi00OWMxLWI4NTItMTM5YTYwMzExMmU2XCI+e1wiaW5wdXRzXCI6e1wi
YWY5YTM3OWUtYTQ4Yi00N2RkLTk4ZmItNzNiYTM2ODhhZDlhXCI6e1wiaW5wdXRfdHlwZVwiOlwi
c3RhdGljXCIsXCJzdGF0aWNfaW5wdXRcIjp7XCJtdWx0aXNlbGVjdF92YWx1ZVwiOltdLFwibnVt
YmVyX3ZhbHVlXCI6NX19fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcIlxcbmZvciBpbmMg
aW4gcmVzdWx0cy5pbmNpZGVudHM6XFxuICBpbmNfcm93ID0gaW5jaWRlbnQuYWRkUm93KFxcXCJu
bHBfc2ltaWxhcl9pbmNpZGVudHNcXFwiKVxcbiAgaW5jX3Jvd1tcXFwiaW5jaWRlbnRfaWRcXFwi
XSA9IGhlbHBlci5jcmVhdGVSaWNoVGV4dChpbmNbXFxcImluY19saW5rXFxcIl0pXFxuICBpbmNf
cm93W1xcXCJzaW1pbGFyaXR5XFxcIl0gPSBzdHIoaW5jW1xcXCJzaW1pbGFyaXR5XFxcIl0pXFxu
ICBpbmNfcm93W1xcXCJrZXl3b3Jkc1xcXCJdID0gaW5jW1xcXCJrZXl3b3Jkc1xcXCJdXFxuICBp
bmNfcm93W1xcXCJzZWFyY2hfdGltZVxcXCJdID0gcmVzdWx0cy50aW1lXCIsXCJwcmVfcHJvY2Vz
c2luZ19zY3JpcHRcIjpcIiNcXG4jIFRvIGRvIGEgTkxQIHNlYXJjaCwgdXNlciBjYW4gaW5wdXQg
RUlUSEVSIGFuIGluY2lkZW50IGlkIG9yIGEgc3RyaW5nLlxcbiNcXG4jIE5PVEU6IGlmIGJvdGgg
YXJlIGdpdmVuLCB0aGUgc3RyaW5nIHdpbGwgYmUgdXNlZC5cXG4jXFxuXFxuIyBzdXBwb3J0IHNl
YXJjaCB1c2luZyBpbnB1dCBzdHJpbmdcXG5pZiBydWxlLnByb3BlcnRpZXMubmxwX3N0cmluZyBp
cyBub3QgTm9uZSBhbmQgbGVuKHJ1bGUucHJvcGVydGllcy5ubHBfc3RyaW5nLmNvbnRlbnQpICZn
dDsgMDpcXG4gIGlucHV0cy5ubHBfc2VhcmNoX3N0cmluZyA9IHJ1bGUucHJvcGVydGllcy5ubHBf
c3RyaW5nLmNvbnRlbnRcXG5cXG4jIHN1cHBvcnQgc2VhcmNoIHVzaW5nIGFuIGluY2lkZW50IGlk
ICBcXG5pbnB1dHMuc2VhcmNoX2luY2lkZW50X2lkID0gaW5jaWRlbnQuaWRcXG5cXG4jIGFsbG93
IHVzZXIgdG8gc3BlY2lmeSBob3cgbWFueSBpbmNpZGVudHMgdG8gcmV0dXJuXFxuaWYgcnVsZS5w
cm9wZXJ0aWVzLm51bWJlcl90b3Bfc2ltaWxhcl9pbmNpZGVudHMgJmd0OyAwOlxcbiAgaW5wdXRz
Lm51bWJlcl9pbmNpZGVudHMgPSBydWxlLnByb3BlcnRpZXMubnVtYmVyX3RvcF9zaW1pbGFyX2lu
Y2lkZW50c1xcbiAgXFxuXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50
cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzB3ZzQ5dG48L2luY29taW5nPjxvdXRnb2luZz5TZXF1
ZW5jZUZsb3dfMTF2ejV0Zjwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlk
PVwiU2VxdWVuY2VGbG93XzB3ZzQ5dG5cIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1c
IiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18xYWF2c2Q5XCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2
ZW50XzA3cXh6bDhcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzExdno1dGY8L2luY29taW5nPjwv
ZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xMXZ6NXRmXCIgc291cmNl
UmVmPVwiU2VydmljZVRhc2tfMWFhdnNkOVwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzA3cXh6bDhc
Ii8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0
YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlv
biBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFz
eG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0ZXh0QW5ub3RhdGlv
biBpZD1cIlRleHRBbm5vdGF0aW9uXzBiM3J5bHBcIj48dGV4dD48IVtDREFUQVtJbnB1dDpcbjEu
IEluY2lkZW50IElEXG4yLiBOdW1iZXIgb2YgaW5jaWRlbnRzIHRvIHJldHVyblxuXV0+PC90ZXh0
PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMGpoMGo1cVwi
IHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFhYXZzZDlcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3Rh
dGlvbl8wYjNyeWxwXCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzExdHdt
aG1cIj48dGV4dD48IVtDREFUQVtSZXR1cm46XG5TaW1pbGFyIGluY2lkZW50cyByYW5rZWQgYnkg
c2ltaWxhcml0eVxuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwi
QXNzb2NpYXRpb25fMDE5bGc4aVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFhYXZzZDlcIiB0
YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xMXR3bWhtXCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQ
TU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVt
ZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJw
bW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1f
ZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIyNDJcIiB5
PVwiMTYxXCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdp
ZHRoPVwiOTBcIiB4PVwiMjM3XCIgeT1cIjE5NlwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1u
ZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRp
b25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1u
ZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8x
c2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9
XCIyNDVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE4OFwiLz48b21nZGk6d2F5cG9p
bnQgeD1cIjE2NFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRp
OkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMWFh
dnNkOVwiIGlkPVwiU2VydmljZVRhc2tfMWFhdnNkOV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCI0MDBcIiB5PVwiMTM5XCIvPjwvYnBtbmRpOkJQTU5T
aGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzB3ZzQ5dG5c
IiBpZD1cIlNlcXVlbmNlRmxvd18wd2c0OXRuX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIyNzhc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE3OVwiLz48b21nZGk6d2F5cG9pbnQgeD1c
IjQwMFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTc5XCIvPjxicG1uZGk6QlBNTkxh
YmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMzM5XCIgeT1c
IjE1N1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8wN3F4emw4XCIgaWQ9XCJFbmRFdmVudF8wN3F4
emw4X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNjY3
XCIgeT1cIjE2MVwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEz
XCIgd2lkdGg9XCIwXCIgeD1cIjY4NVwiIHk9XCIyMDBcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VG
bG93XzExdno1dGZcIiBpZD1cIlNlcXVlbmNlRmxvd18xMXZ6NXRmX2RpXCI+PG9tZ2RpOndheXBv
aW50IHg9XCI1MDBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE3OVwiLz48b21nZGk6
d2F5cG9pbnQgeD1cIjY2N1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTc5XCIvPjxi
cG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4
PVwiNTgzLjVcIiB5PVwiMTU3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRn
ZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzBiM3J5bHBc
IiBpZD1cIlRleHRBbm5vdGF0aW9uXzBiM3J5bHBfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjcxXCIgd2lkdGg9XCIyMTlcIiB4PVwiMjAwXCIgeT1cIi0xM1wiLz48L2JwbW5kaTpCUE1OU2hh
cGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzBqaDBqNXFcIiBp
ZD1cIkFzc29jaWF0aW9uXzBqaDBqNXFfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQxNFwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTM5XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzQx
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI1OFwiLz48L2JwbW5kaTpCUE1ORWRnZT48
YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzExdHdtaG1cIiBp
ZD1cIlRleHRBbm5vdGF0aW9uXzExdHdtaG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgw
XCIgd2lkdGg9XCIyMzlcIiB4PVwiNTMwXCIgeT1cIi0xN1wiLz48L2JwbW5kaTpCUE1OU2hhcGU+
PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzAxOWxnOGlcIiBpZD1c
IkFzc29jaWF0aW9uXzAxOWxnOGlfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQ5NVwiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTQ0XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTk5XCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI2M1wiLz48L2JwbW5kaTpCUE1ORWRnZT48L2Jw
bW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAidmVy
c2lvbiI6IDF9LCAiYWN0aW9ucyI6IFtdfV0sICJyb2xlcyI6IFtdLCAid29ya3NwYWNlcyI6IFtd
LCAiZnVuY3Rpb25zIjogW3siaWQiOiAzNCwgIm5hbWUiOiAicmVzaWxpZW50X25scF9zZWFyY2gi
LCAiZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBOTFAgc2VhcmNoIiwgImRlc2NyaXB0aW9uIjog
eyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50IjogIiJ9LCAiZGVzdGluYXRpb25faGFuZGxlIjog
InJlc2lsaWVudF9tbCIsICJleHBvcnRfa2V5IjogInJlc2lsaWVudF9ubHBfc2VhcmNoIiwgInV1
aWQiOiAiNDg3OTYwYTMtOGExMi00OWMxLWI4NTItMTM5YTYwMzExMmU2IiwgInZlcnNpb24iOiAx
LCAiY3JlYXRvciI6IHsiaWQiOiAxMTEsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJubHBAZXhh
bXBsZS5jb20iLCAiZGlzcGxheV9uYW1lIjogIk5MUCBVc2VyIn0sICJsYXN0X21vZGlmaWVkX2J5
IjogeyJpZCI6IDExMSwgInR5cGUiOiAidXNlciIsICJuYW1lIjogIm5scEBleGFtcGxlLmNvbSIs
ICJkaXNwbGF5X25hbWUiOiAiTkxQIFVzZXIifSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1ODU1
NzY2MjAwMzMsICJ2aWV3X2l0ZW1zIjogW3sic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjog
bnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24i
LCAiY29udGVudCI6ICI5ODAyMDRhNi0zZjQzLTQwZDktYjcyMC03MjEzNTIxY2RmNzciLCAic2hv
d19saW5rX2hlYWRlciI6IGZhbHNlfSwgeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBu
dWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIs
ICJjb250ZW50IjogIjk0MzM0M2FmLTExMjYtNDc2ZC1hYWQ2LTNjZjljNmU4NWEwYyIsICJzaG93
X2xpbmtfaGVhZGVyIjogZmFsc2V9LCB7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51
bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwg
ImNvbnRlbnQiOiAiYWY5YTM3OWUtYTQ4Yi00N2RkLTk4ZmItNzNiYTM2ODhhZDlhIiwgInNob3df
bGlua19oZWFkZXIiOiBmYWxzZX1dLCAid29ya2Zsb3dzIjogW3sid29ya2Zsb3dfaWQiOiAxLCAi
bmFtZSI6ICJFeGFtcGxlIG9mIE5MUCBzZWFyY2giLCAicHJvZ3JhbW1hdGljX25hbWUiOiAicmVz
aWxpZW50X25scF9zZWFyY2giLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiZGVzY3JpcHRp
b24iOiBudWxsLCAidXVpZCI6IG51bGwsICJhY3Rpb25zIjogW119XX1dfQ==
"""
    )