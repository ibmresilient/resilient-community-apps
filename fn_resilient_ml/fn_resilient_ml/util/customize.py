# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_resilient_ml"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_resilient_ml package"""
    reload_params = {"package": u"fn_resilient_ml",
                    "incident_fields": [], 
                    "action_fields": [u"nlp_string", u"number_top_similar_incidents"], 
                    "function_params": [u"nlp_search_string", u"number_incidents", u"search_incident_id"], 
                    "datatables": [u"nlp_similar_incidents"], 
                    "message_destinations": [u"resilient_ml"], 
                    "functions": [u"resilient_nlp_search"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"resilient_nlp_search"], 
                    "actions": [u"NLP Search", u"NLP String Search"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     nlp_string
    #     number_top_similar_incidents
    #   Function inputs:
    #     nlp_search_string
    #     number_incidents
    #     search_incident_id
    #   DataTables:
    #     nlp_similar_incidents
    #   Message Destinations:
    #     resilient_ml
    #   Functions:
    #     resilient_nlp_search
    #   Workflows:
    #     resilient_nlp_search
    #   Rules:
    #     NLP Search
    #     NLP String Search


    yield ImportDefinition(u"""
eyJpZCI6IDYsICJyZWd1bGF0b3JzIjogbnVsbCwgIndvcmtzcGFjZXMiOiBbXSwgIndvcmtmbG93
cyI6IFt7ImRlc2NyaXB0aW9uIjogIkdpdmVuIGFuIGluY2lkZW50LCB1c2UgaXRzIG5hbWUsIGRl
c2NyaXB0aW9uLCBhcnRpZmFjdCBkZXNjcmlwdGlvbiwgYW5kIHJlc29sdXRpb24gc3VtbWFyeSB0
byBkbyBubHAgc2VhcmNoLCBpbiBvcmRlciB0byBmaW5kIHNpbWlsYXIgaW5jaWRlbnRzLiIsICJu
YW1lIjogIkV4YW1wbGUgb2YgTkxQIHNlYXJjaCIsICJ1dWlkIjogIjNhYTlkNzRjLWFkMjctNGVl
Yi04MWViLTNlNzc1NDEzZjI5NyIsICJsYXN0X21vZGlmaWVkX2J5IjogIm1hc3RlckBleGFtcGxl
LmNvbSIsICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTc5MjA1NDg3MDQxLCAiY29udGVudCI6IHsi
d29ya2Zsb3dfaWQiOiAicmVzaWxpZW50X25scF9zZWFyY2giLCAieG1sIjogIjw/eG1sIHZlcnNp
b249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJo
dHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJo
dHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0
cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJo
dHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMu
b3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9Y
TUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEu
b3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cInJlc2lsaWVudF9ubHBfc2VhcmNoXCIgaXNFeGVjdXRh
YmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlIG9mIE5MUCBzZWFyY2hcIj48ZG9jdW1lbnRhdGlv
bj5HaXZlbiBhbiBpbmNpZGVudCwgdXNlIGl0cyBuYW1lLCBkZXNjcmlwdGlvbiwgYXJ0aWZhY3Qg
ZGVzY3JpcHRpb24sIGFuZCByZXNvbHV0aW9uIHN1bW1hcnkgdG8gZG8gbmxwIHNlYXJjaCwgaW4g
b3JkZXIgdG8gZmluZCBzaW1pbGFyIGluY2lkZW50cy48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZl
bnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzB3ZzQ5
dG48L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18x
YWF2c2Q5XCIgbmFtZT1cIlJlc2lsaWVudCBOTFAgc2VhcmNoXCIgcmVzaWxpZW50OnR5cGU9XCJm
dW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI0
ODc5NjBhMy04YTEyLTQ5YzEtYjg1Mi0xMzlhNjAzMTEyZTZcIj57XCJpbnB1dHNcIjp7XCJhZjlh
Mzc5ZS1hNDhiLTQ3ZGQtOThmYi03M2JhMzY4OGFkOWFcIjp7XCJpbnB1dF90eXBlXCI6XCJzdGF0
aWNcIixcInN0YXRpY19pbnB1dFwiOntcIm11bHRpc2VsZWN0X3ZhbHVlXCI6W10sXCJudW1iZXJf
dmFsdWVcIjo1fX19LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiXFxuZm9yIGluYyBpbiBy
ZXN1bHRzLmluY2lkZW50czpcXG4gIGluY19yb3cgPSBpbmNpZGVudC5hZGRSb3coXFxcIm5scF9z
aW1pbGFyX2luY2lkZW50c1xcXCIpXFxuICBpbmNfcm93W1xcXCJpbmNpZGVudF9pZFxcXCJdID0g
aGVscGVyLmNyZWF0ZVJpY2hUZXh0KGluY1tcXFwiaW5jX2xpbmtcXFwiXSlcXG4gIGluY19yb3db
XFxcInNpbWlsYXJpdHlcXFwiXSA9IHN0cihpbmNbXFxcInNpbWlsYXJpdHlcXFwiXSlcXG4gIGlu
Y19yb3dbXFxcImtleXdvcmRzXFxcIl0gPSBpbmNbXFxcImtleXdvcmRzXFxcIl1cIixcInByZV9w
cm9jZXNzaW5nX3NjcmlwdFwiOlwiI1xcbiMgVG8gZG8gYSBOTFAgc2VhcmNoLCB1c2VyIGNhbiBp
bnB1dCBFSVRIRVIgYW4gaW5jaWRlbnQgaWQgb3IgYSBzdHJpbmcuXFxuI1xcbiMgTk9URTogaWYg
Ym90aCBhcmUgZ2l2ZW4sIHRoZSBzdHJpbmcgd2lsbCBiZSB1c2VkLlxcbiNcXG5cXG4jIHN1cHBv
cnQgc2VhcmNoIHVzaW5nIGlucHV0IHN0cmluZ1xcbmlmIHJ1bGUucHJvcGVydGllcy5ubHBfc3Ry
aW5nIGlzIG5vdCBOb25lIGFuZCBsZW4ocnVsZS5wcm9wZXJ0aWVzLm5scF9zdHJpbmcuY29udGVu
dCkgJmd0OyAwOlxcbiAgaW5wdXRzLm5scF9zZWFyY2hfc3RyaW5nID0gcnVsZS5wcm9wZXJ0aWVz
Lm5scF9zdHJpbmcuY29udGVudFxcblxcbiMgc3VwcG9ydCBzZWFyY2ggdXNpbmcgYW4gaW5jaWRl
bnQgaWQgIFxcbmlucHV0cy5zZWFyY2hfaW5jaWRlbnRfaWQgPSBpbmNpZGVudC5pZFxcblxcbiMg
YWxsb3cgdXNlciB0byBzcGVjaWZ5IGhvdyBtYW55IGluY2lkZW50cyB0byByZXR1cm5cXG5pZiBy
dWxlLnByb3BlcnRpZXMubnVtYmVyX3RvcF9zaW1pbGFyX2luY2lkZW50cyAmZ3Q7IDA6XFxuICBp
bnB1dHMubnVtYmVyX2luY2lkZW50cyA9IHJ1bGUucHJvcGVydGllcy5udW1iZXJfdG9wX3NpbWls
YXJfaW5jaWRlbnRzXFxuICBcXG5cIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVs
ZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMHdnNDl0bjwvaW5jb21pbmc+PG91dGdvaW5n
PlNlcXVlbmNlRmxvd18xMXZ6NXRmPC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZs
b3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMHdnNDl0blwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1
YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzFhYXZzZDlcIi8+PGVuZEV2ZW50IGlkPVwi
RW5kRXZlbnRfMDdxeHpsOFwiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMTF2ejV0ZjwvaW5jb21p
bmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzExdno1dGZcIiBz
b3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xYWF2c2Q5XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMDdx
eHpsOFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRl
eHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29j
aWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRf
MTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5v
dGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMGIzcnlscFwiPjx0ZXh0PjwhW0NEQVRBW0lucHV0
OlxuMS4gSW5jaWRlbnQgSURcbjIuIE51bWJlciBvZiBpbmNpZGVudHMgdG8gcmV0dXJuXG5dXT48
L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wamgw
ajVxXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWFhdnNkOVwiIHRhcmdldFJlZj1cIlRleHRB
bm5vdGF0aW9uXzBiM3J5bHBcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25f
MTF0d21obVwiPjx0ZXh0PjwhW0NEQVRBW1JldHVybjpcblNpbWlsYXIgaW5jaWRlbnRzIHJhbmtl
ZCBieSBzaW1pbGFyaXR5XG5dXT48L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24g
aWQ9XCJBc3NvY2lhdGlvbl8wMTlsZzhpXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWFhdnNk
OVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzExdHdtaG1cIi8+PC9wcm9jZXNzPjxicG1u
ZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBt
bkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hh
cGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1
YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjI0
MlwiIHk9XCIxNjFcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIw
XCIgd2lkdGg9XCI5MFwiIHg9XCIyMzdcIiB5PVwiMTk2XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48
L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5u
b3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2Rj
OkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48
L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0
aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9p
bnQgeD1cIjI0NVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTg4XCIvPjxvbWdkaTp3
YXlwb2ludCB4PVwiMTY0XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9i
cG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFz
a18xYWF2c2Q5XCIgaWQ9XCJTZXJ2aWNlVGFza18xYWF2c2Q5X2RpXCI+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjQwMFwiIHk9XCIxMzlcIi8+PC9icG1uZGk6
QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHdn
NDl0blwiIGlkPVwiU2VxdWVuY2VGbG93XzB3ZzQ5dG5fZGlcIj48b21nZGk6d2F5cG9pbnQgeD1c
IjI3OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTc5XCIvPjxvbWdkaTp3YXlwb2lu
dCB4PVwiNDAwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNzlcIi8+PGJwbW5kaTpC
UE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIzMzlc
IiB5PVwiMTU3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRp
OkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzA3cXh6bDhcIiBpZD1cIkVuZEV2ZW50
XzA3cXh6bDhfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9
XCI2NjdcIiB5PVwiMTYxXCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNjg1XCIgeT1cIjIwMFwiLz48L2JwbW5kaTpCUE1OTGFi
ZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1
ZW5jZUZsb3dfMTF2ejV0ZlwiIGlkPVwiU2VxdWVuY2VGbG93XzExdno1dGZfZGlcIj48b21nZGk6
d2F5cG9pbnQgeD1cIjUwMFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTc5XCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiNjY3XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNzlc
Ii8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwi
MFwiIHg9XCI1ODMuNVwiIHk9XCIxNTdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQ
TU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMGIz
cnlscFwiIGlkPVwiVGV4dEFubm90YXRpb25fMGIzcnlscF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiNzFcIiB3aWR0aD1cIjIxOVwiIHg9XCIyMDBcIiB5PVwiLTEzXCIvPjwvYnBtbmRpOkJQ
TU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMGpoMGo1
cVwiIGlkPVwiQXNzb2NpYXRpb25fMGpoMGo1cV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDE0
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMzlcIi8+PG9tZ2RpOndheXBvaW50IHg9
XCIzNDFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjU4XCIvPjwvYnBtbmRpOkJQTU5F
ZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMTF0d21o
bVwiIGlkPVwiVGV4dEFubm90YXRpb25fMTF0d21obV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiODBcIiB3aWR0aD1cIjIzOVwiIHg9XCI1MzBcIiB5PVwiLTE3XCIvPjwvYnBtbmRpOkJQTU5T
aGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMDE5bGc4aVwi
IGlkPVwiQXNzb2NpYXRpb25fMDE5bGc4aV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDk1XCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNDRcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1
OTlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjYzXCIvPjwvYnBtbmRpOkJQTU5FZGdl
PjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIs
ICJ2ZXJzaW9uIjogMTN9LCAiY3JlYXRvcl9pZCI6ICJtYXN0ZXJAZXhhbXBsZS5jb20iLCAid29y
a2Zsb3dfaWQiOiAxLCAiZXhwb3J0X2tleSI6ICJyZXNpbGllbnRfbmxwX3NlYXJjaCIsICJwcm9n
cmFtbWF0aWNfbmFtZSI6ICJyZXNpbGllbnRfbmxwX3NlYXJjaCIsICJhY3Rpb25zIjogW10sICJv
YmplY3RfdHlwZSI6ICJpbmNpZGVudCJ9XSwgInRpbWVmcmFtZXMiOiBudWxsLCAib3ZlcnJpZGVz
IjogW10sICJzZXJ2ZXJfdmVyc2lvbiI6IHsiYnVpbGRfbnVtYmVyIjogMTIsICJtaW5vciI6IDMs
ICJtYWpvciI6IDMyLCAidmVyc2lvbiI6ICIzMi4zLjEyIn0sICJpbmNpZGVudF9hcnRpZmFjdF90
eXBlcyI6IFtdLCAic2NyaXB0cyI6IFtdLCAiYWN0aW9ucyI6IFt7ImlkIjogMTQsICJhdXRvbWF0
aW9ucyI6IFtdLCAiY29uZGl0aW9ucyI6IFtdLCAibmFtZSI6ICJOTFAgU2VhcmNoIiwgInV1aWQi
OiAiYjAzOWFhNDctZDAzMy00YTU2LWJjNjgtZWZiZjIyMTNmNjgwIiwgIndvcmtmbG93cyI6IFsi
cmVzaWxpZW50X25scF9zZWFyY2giXSwgInR5cGUiOiAxLCAidGltZW91dF9zZWNvbmRzIjogODY0
MDAsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAiZXhwb3J0X2tleSI6ICJOTFAgU2VhcmNo
IiwgInZpZXdfaXRlbXMiOiBbeyJjb250ZW50IjogIkZpbmQgdG9wIGluY2lkZW50cyBzaW1pbGFy
IHRvIHRoaXMgb25lLCBiYXNlZCBvbiBuYW1lIGFuZCBkZXNjcmlwdGlvbiB1c2luZyBOTFAuIiwg
InNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJo
dG1sIiwgInN0ZXBfbGFiZWwiOiBudWxsLCAiZmllbGRfdHlwZSI6IG51bGx9LCB7ImNvbnRlbnQi
OiAiZTViZjZiNWYtZTI1ZS00MmMxLTg4NDMtMmZhYjVjY2JiMDM2IiwgInNob3dfbGlua19oZWFk
ZXIiOiBmYWxzZSwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgInN0
ZXBfbGFiZWwiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIn0sIHsiY29u
dGVudCI6ICI8YSBocmVmPVwiaHR0cHM6Ly9naXRodWIuaWJtLmNvbS9SZXNpbGllbnQvcmVzaWxp
ZW50LWNvbW11bml0eS1hcHBzL2Jsb2IvbmxwX2VwaWMvZm5fcmVzaWxpZW50X21sL2RvYy9oZWxw
Lm1kXCI+IEhlbHA8L2E+IiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInNob3dfaWYiOiBu
dWxsLCAiZWxlbWVudCI6ICJodG1sIiwgInN0ZXBfbGFiZWwiOiBudWxsLCAiZmllbGRfdHlwZSI6
IG51bGx9XSwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgImxvZ2ljX3R5cGUiOiAiYWxsIn0s
IHsiaWQiOiAxNSwgImF1dG9tYXRpb25zIjogW10sICJjb25kaXRpb25zIjogW10sICJuYW1lIjog
Ik5MUCBTdHJpbmcgU2VhcmNoIiwgInV1aWQiOiAiYzU2Zjg2YmUtYmMwYy00NmJmLThiNGMtMTk0
MmVjOTg1YzRlIiwgIndvcmtmbG93cyI6IFsicmVzaWxpZW50X25scF9zZWFyY2giXSwgInR5cGUi
OiAxLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtd
LCAiZXhwb3J0X2tleSI6ICJOTFAgU3RyaW5nIFNlYXJjaCIsICJ2aWV3X2l0ZW1zIjogW3siY29u
dGVudCI6ICJTZWFyY2ggZm9yIGluY2lkZW50cyB3aXRoIGRlc2NyaXB0aW9uIHRvIHRoZSBmb2xs
b3dpbmcgc3RyaW5nLiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzaG93X2lmIjogbnVs
bCwgImVsZW1lbnQiOiAiaHRtbCIsICJzdGVwX2xhYmVsIjogbnVsbCwgImZpZWxkX3R5cGUiOiBu
dWxsfSwgeyJjb250ZW50IjogImFjOGVhNjlkLTFmZGUtNGU2MC1iYmVmLTdkMzhkMTRmYTUxZSIs
ICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAi
ZmllbGRfdXVpZCIsICJzdGVwX2xhYmVsIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52
b2NhdGlvbiJ9LCB7ImNvbnRlbnQiOiAiZTViZjZiNWYtZTI1ZS00MmMxLTg4NDMtMmZhYjVjY2Ji
MDM2IiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVu
dCI6ICJmaWVsZF91dWlkIiwgInN0ZXBfbGFiZWwiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJhY3Rp
b25pbnZvY2F0aW9uIn1dLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAibG9naWNfdHlwZSI6
ICJhbGwifV0sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImZpZWxkcyI6IFt7ImlkIjogNjAsICJj
aGFuZ2VhYmxlIjogdHJ1ZSwgInRleHQiOiAiU2ltdWxhdGlvbiIsICJyaWNoX3RleHQiOiBmYWxz
ZSwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEg
cmVndWxhciBpbmNpZGVudC4gVGhpcyBmaWVsZCBpcyByZWFkLW9ubHkuIiwgImNhbGN1bGF0ZWQi
OiBmYWxzZSwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2
ZXIiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQvaW5jX3RyYWluaW5nIiwgInR5cGVf
aWQiOiAwLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5n
IiwgInV1aWQiOiAiYzNmMGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgInRlbXBs
YXRlcyI6IFtdLCAib3BlcmF0aW9ucyI6IFtdLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVm
aXgiOiBudWxsLCAiY2hvc2VuIjogZmFsc2UsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgImRlcHJl
Y2F0ZWQiOiBmYWxzZSwgInJlYWRfb25seSI6IHRydWUsICJpbnRlcm5hbCI6IGZhbHNlLCAidmFs
dWVzIjogW119LCB7ImlkIjogMTUzLCAicGxhY2Vob2xkZXIiOiAiZGVmYXVsdCB2YWx1ZSBzZXQg
aW4gd29ya2Zsb3ciLCAiY2hhbmdlYWJsZSI6IHRydWUsICJ0ZXh0IjogIk51bWJlciBvZiBpbmNp
ZGVudHMiLCAicmljaF90ZXh0IjogZmFsc2UsICJ0b29sdGlwIjogIk51bWJlciBvZiB0b3Agc2lt
aWxhciBpbmNpZGVudHMgdG8gcmV0dXIiLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiaW5wdXRfdHlw
ZSI6ICJudW1iZXIiLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJleHBvcnRf
a2V5IjogImFjdGlvbmludm9jYXRpb24vbnVtYmVyX3RvcF9zaW1pbGFyX2luY2lkZW50cyIsICJ0
eXBlX2lkIjogNiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJuYW1lIjogIm51bWJlcl90
b3Bfc2ltaWxhcl9pbmNpZGVudHMiLCAidXVpZCI6ICJlNWJmNmI1Zi1lMjVlLTQyYzEtODg0My0y
ZmFiNWNjYmIwMzYiLCAidGVtcGxhdGVzIjogW10sICJvcGVyYXRpb25zIjogW10sICJibGFua19v
cHRpb24iOiBmYWxzZSwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwgImNob3NlbiI6IGZhbHNlLCAi
b3BlcmF0aW9uX3Blcm1zIjoge30sICJkZXByZWNhdGVkIjogZmFsc2UsICJyZWFkX29ubHkiOiBm
YWxzZSwgImludGVybmFsIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX0sIHsiaWQiOiAxNTgsICJwbGFj
ZWhvbGRlciI6ICIiLCAiY2hhbmdlYWJsZSI6IHRydWUsICJ0ZXh0IjogIk5MUCBTdHJpbmciLCAi
cmljaF90ZXh0IjogZmFsc2UsICJ0b29sdGlwIjogInNlYXJjaCBmb3IgaW5jaWRlbnRzIHdpdGgg
ZGVzY3JpcHRpb25zIHNpbWlsYXIgdG8gdGhpcyBzdHJpbmciLCAiY2FsY3VsYXRlZCI6IGZhbHNl
LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0YXJlYSIsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9ubHBfc3RyaW5nIiwgInR5cGVf
aWQiOiA2LCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgIm5hbWUiOiAibmxwX3N0cmluZyIs
ICJ1dWlkIjogImFjOGVhNjlkLTFmZGUtNGU2MC1iYmVmLTdkMzhkMTRmYTUxZSIsICJ0ZW1wbGF0
ZXMiOiBbXSwgIm9wZXJhdGlvbnMiOiBbXSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4
IjogInByb3BlcnRpZXMiLCAiY2hvc2VuIjogZmFsc2UsICJvcGVyYXRpb25fcGVybXMiOiB7fSwg
ImRlcHJlY2F0ZWQiOiBmYWxzZSwgInJlYWRfb25seSI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxz
ZSwgInZhbHVlcyI6IFtdfSwgeyJpZCI6IDE1MiwgInBsYWNlaG9sZGVyIjogImluY2lkZW50IGlk
IiwgImNoYW5nZWFibGUiOiB0cnVlLCAidGV4dCI6ICJzZWFyY2hfaW5jaWRlbnRfaWQiLCAicmlj
aF90ZXh0IjogZmFsc2UsICJ0b29sdGlwIjogImluY2lkZW50IHRvIHNlYXJjaCB1c2luZyBOTFAi
LCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAiZGVmYXVsdF9j
aG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vc2VhcmNo
X2luY2lkZW50X2lkIiwgInR5cGVfaWQiOiAxMSwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2Us
ICJuYW1lIjogInNlYXJjaF9pbmNpZGVudF9pZCIsICJ1dWlkIjogIjk4MDIwNGE2LTNmNDMtNDBk
OS1iNzIwLTcyMTM1MjFjZGY3NyIsICJ0ZW1wbGF0ZXMiOiBbXSwgIm9wZXJhdGlvbnMiOiBbXSwg
ImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNob3NlbiI6IGZhbHNlLCAi
b3BlcmF0aW9uX3Blcm1zIjoge30sICJkZXByZWNhdGVkIjogZmFsc2UsICJyZWFkX29ubHkiOiBm
YWxzZSwgImludGVybmFsIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX0sIHsiaWQiOiAxNTEsICJwbGFj
ZWhvbGRlciI6ICJudW1iZXIgb2YgaW5jaWRlbnQgdG8gcmV0dXJuIiwgImNoYW5nZWFibGUiOiB0
cnVlLCAidGV4dCI6ICJudW1iZXJfaW5jaWRlbnRzIiwgInJpY2hfdGV4dCI6IGZhbHNlLCAidG9v
bHRpcCI6ICJOdW1iZXIgb2YgaW5jaWRlbnRzIHRvIHJldHVybiBmb3IgdG9wIHNpbWlsYXJpdHki
LCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAiZGVmYXVsdF9j
aG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vbnVtYmVy
X2luY2lkZW50cyIsICJ0eXBlX2lkIjogMTEsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
bmFtZSI6ICJudW1iZXJfaW5jaWRlbnRzIiwgInV1aWQiOiAiYWY5YTM3OWUtYTQ4Yi00N2RkLTk4
ZmItNzNiYTM2ODhhZDlhIiwgInRlbXBsYXRlcyI6IFtdLCAib3BlcmF0aW9ucyI6IFtdLCAiYmxh
bmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hvc2VuIjogZmFsc2UsICJvcGVy
YXRpb25fcGVybXMiOiB7fSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgInJlYWRfb25seSI6IGZhbHNl
LCAiaW50ZXJuYWwiOiBmYWxzZSwgInZhbHVlcyI6IFtdfSwgeyJpZCI6IDE1NywgInBsYWNlaG9s
ZGVyIjogInNlYXJjaCBzdHJpbmciLCAiY2hhbmdlYWJsZSI6IHRydWUsICJ0ZXh0IjogIm5scF9z
ZWFyY2hfc3RyaW5nIiwgInJpY2hfdGV4dCI6IGZhbHNlLCAidG9vbHRpcCI6ICJVc2UgTkxQIHRv
IHNlYXJjaCB0aGlzIHN0cmluZyIsICJjYWxjdWxhdGVkIjogZmFsc2UsICJpbnB1dF90eXBlIjog
InRleHQiLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJleHBvcnRfa2V5Ijog
Il9fZnVuY3Rpb24vbmxwX3NlYXJjaF9zdHJpbmciLCAidHlwZV9pZCI6IDExLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgIm5hbWUiOiAibmxwX3NlYXJjaF9zdHJpbmciLCAidXVpZCI6ICI5
NDMzNDNhZi0xMTI2LTQ3NmQtYWFkNi0zY2Y5YzZlODVhMGMiLCAidGVtcGxhdGVzIjogW10sICJv
cGVyYXRpb25zIjogW10sICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJj
aG9zZW4iOiBmYWxzZSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAiZGVwcmVjYXRlZCI6IGZhbHNl
LCAicmVhZF9vbmx5IjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidmFsdWVzIjogW119XSwg
Imdlb3MiOiBudWxsLCAicm9sZXMiOiBbXSwgInR5cGVzIjogW3siaWQiOiBudWxsLCAidHlwZV9p
ZCI6IDgsICJmb3JfYWN0aW9ucyI6IGZhbHNlLCAiZm9yX25vdGlmaWNhdGlvbnMiOiBmYWxzZSwg
InBhcmVudF90eXBlcyI6IFsiaW5jaWRlbnQiXSwgInV1aWQiOiAiNzU3NDY5NGMtODdmNy00OTMw
LTkxYmYtMTIxYTM4NDU0Nzc4IiwgInR5cGVfbmFtZSI6ICJubHBfc2ltaWxhcl9pbmNpZGVudHMi
LCAiZm9yX3dvcmtmbG93cyI6IGZhbHNlLCAiZmllbGRzIjogeyJpbmNpZGVudF9pZCI6IHsiaWQi
OiAxNTQsICJwbGFjZWhvbGRlciI6ICIiLCAiY2hhbmdlYWJsZSI6IHRydWUsICJ0ZXh0IjogIklu
Y2lkZW50IElEIiwgInJpY2hfdGV4dCI6IHRydWUsICJvcmRlciI6IDAsICJ0b29sdGlwIjogImxp
bmsgdG8gc2ltaWxhciBpbmNpZGVudCIsICJjYWxjdWxhdGVkIjogZmFsc2UsICJpbnB1dF90eXBl
IjogInRleHRhcmVhIiwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZXhwb3J0
X2tleSI6ICJubHBfc2ltaWxhcl9pbmNpZGVudHMvaW5jaWRlbnRfaWQiLCAidHlwZV9pZCI6IDEw
MDAsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAibmFtZSI6ICJpbmNpZGVudF9pZCIsICJ1
dWlkIjogIjZlYjMxNTNmLWQyYTctNDEyZS05MTZhLWQ0YzhhOGIxMmI5YyIsICJ0ZW1wbGF0ZXMi
OiBbXSwgIndpZHRoIjogNjc2LCAib3BlcmF0aW9ucyI6IFtdLCAiYmxhbmtfb3B0aW9uIjogZmFs
c2UsICJwcmVmaXgiOiBudWxsLCAiY2hvc2VuIjogZmFsc2UsICJvcGVyYXRpb25fcGVybXMiOiB7
fSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgInJlYWRfb25seSI6IGZhbHNlLCAiaW50ZXJuYWwiOiBm
YWxzZSwgInZhbHVlcyI6IFtdfSwgImtleXdvcmRzIjogeyJpZCI6IDE1NiwgInBsYWNlaG9sZGVy
IjogIiIsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInRleHQiOiAiS2V5d29yZHMiLCAicmljaF90ZXh0
IjogZmFsc2UsICJvcmRlciI6IDIsICJ0b29sdGlwIjogImtleXdvcmRzIGlkZW50aWZpZWQgYnkg
TkxQIiwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJkZWZhdWx0
X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAibmxwX3NpbWlsYXJfaW5j
aWRlbnRzL2tleXdvcmRzIiwgInR5cGVfaWQiOiAxMDAwLCAiaGlkZV9ub3RpZmljYXRpb24iOiBm
YWxzZSwgIm5hbWUiOiAia2V5d29yZHMiLCAidXVpZCI6ICI3MjM4MDEzZC1mZjBhLTRkZWUtYmQx
YS0wMzI0ODk2NjFlNTMiLCAidGVtcGxhdGVzIjogW10sICJ3aWR0aCI6IDUxLCAib3BlcmF0aW9u
cyI6IFtdLCAiYmxhbmtfb3B0aW9uIjogdHJ1ZSwgInByZWZpeCI6IG51bGwsICJjaG9zZW4iOiB0
cnVlLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJkZXByZWNhdGVkIjogZmFsc2UsICJyZWFkX29u
bHkiOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX0sICJzaW1pbGFyaXR5
IjogeyJpZCI6IDE1NSwgInBsYWNlaG9sZGVyIjogIiIsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInRl
eHQiOiAiU2ltaWxhcml0eSIsICJyaWNoX3RleHQiOiBmYWxzZSwgIm9yZGVyIjogMSwgInRvb2x0
aXAiOiAiIiwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJkZWZh
dWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAibmxwX3NpbWlsYXJf
aW5jaWRlbnRzL3NpbWlsYXJpdHkiLCAidHlwZV9pZCI6IDEwMDAsICJoaWRlX25vdGlmaWNhdGlv
biI6IGZhbHNlLCAibmFtZSI6ICJzaW1pbGFyaXR5IiwgInV1aWQiOiAiZjg4ZmRhOTQtZDcwYy00
NTQ0LWI0MzUtY2QyYzc0ODBiMDMxIiwgInRlbXBsYXRlcyI6IFtdLCAid2lkdGgiOiA2NCwgIm9w
ZXJhdGlvbnMiOiBbXSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNo
b3NlbiI6IGZhbHNlLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJkZXByZWNhdGVkIjogZmFsc2Us
ICJyZWFkX29ubHkiOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX19LCAi
Zm9yX2N1c3RvbV9maWVsZHMiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAibmxwX3NpbWlsYXJfaW5j
aWRlbnRzIiwgImFjdGlvbnMiOiBbXSwgImRpc3BsYXlfbmFtZSI6ICJOTFAgU2ltaWxhciBJbmNp
ZGVudHMiLCAicHJvcGVydGllcyI6IHsiY2FuX2NyZWF0ZSI6IGZhbHNlLCAiY2FuX2Rlc3Ryb3ki
OiBmYWxzZSwgImZvcl93aG8iOiBbXX0sICJzY3JpcHRzIjogW119XSwgInBoYXNlcyI6IFtdLCAi
aW5jaWRlbnRfdHlwZXMiOiBbeyJoaWRkZW4iOiBmYWxzZSwgImRlc2NyaXB0aW9uIjogIkN1c3Rv
bWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJuYW1lIjogIkN1c3RvbWl6YXRpb24gUGFj
a2FnZXMgKGludGVybmFsKSIsICJzeXN0ZW0iOiBmYWxzZSwgInV1aWQiOiAiYmZlZWMyZDQtMzc3
MC0xMWU4LWFkMzktNGEwMDA0MDQ0YWEwIiwgImVuYWJsZWQiOiBmYWxzZSwgImNyZWF0ZV9kYXRl
IjogMTU3OTIwODE4NzUwNywgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAo
aW50ZXJuYWwpIiwgImlkIjogMCwgInBhcmVudF9pZCI6IG51bGwsICJ1cGRhdGVfZGF0ZSI6IDE1
NzkyMDgxODc1MDd9XSwgImFjdGlvbl9vcmRlciI6IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTc5MjA3
ODYyMzU4LCAiZnVuY3Rpb25zIjogW3siaWQiOiAxLCAiZGVzY3JpcHRpb24iOiB7ImNvbnRlbnQi
OiAiIiwgImZvcm1hdCI6ICJ0ZXh0In0sICJuYW1lIjogInJlc2lsaWVudF9ubHBfc2VhcmNoIiwg
InV1aWQiOiAiNDg3OTYwYTMtOGExMi00OWMxLWI4NTItMTM5YTYwMzExMmU2IiwgIndvcmtmbG93
cyI6IFt7ImRlc2NyaXB0aW9uIjogbnVsbCwgIm5hbWUiOiAiRXhhbXBsZSBvZiBOTFAgc2VhcmNo
IiwgInV1aWQiOiBudWxsLCAid29ya2Zsb3dfaWQiOiAxLCAicHJvZ3JhbW1hdGljX25hbWUiOiAi
cmVzaWxpZW50X25scF9zZWFyY2giLCAiYWN0aW9ucyI6IFtdLCAib2JqZWN0X3R5cGUiOiAiaW5j
aWRlbnQifV0sICJsYXN0X21vZGlmaWVkX2J5IjogeyJpZCI6IDIsICJuYW1lIjogIm1hc3RlckBl
eGFtcGxlLmNvbSIsICJkaXNwbGF5X25hbWUiOiAibWFzdGVyZmlyc3QgbWFzdGVybGFzdCIsICJ0
eXBlIjogInVzZXIifSwgImNyZWF0b3IiOiB7ImlkIjogMiwgIm5hbWUiOiAibWFzdGVyQGV4YW1w
bGUuY29tIiwgImRpc3BsYXlfbmFtZSI6ICJtYXN0ZXJmaXJzdCBtYXN0ZXJsYXN0IiwgInR5cGUi
OiAidXNlciJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU3OTEwNDA5NDQwMywgInZlcnNpb24i
OiAzLCAiZGVzdGluYXRpb25faGFuZGxlIjogInJlc2lsaWVudF9tbCIsICJleHBvcnRfa2V5Ijog
InJlc2lsaWVudF9ubHBfc2VhcmNoIiwgInZpZXdfaXRlbXMiOiBbeyJjb250ZW50IjogIjk4MDIw
NGE2LTNmNDMtNDBkOS1iNzIwLTcyMTM1MjFjZGY3NyIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFs
c2UsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJzdGVwX2xhYmVs
IjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiJ9LCB7ImNvbnRlbnQiOiAiOTQzMzQz
YWYtMTEyNi00NzZkLWFhZDYtM2NmOWM2ZTg1YTBjIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxz
ZSwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgInN0ZXBfbGFiZWwi
OiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIn0sIHsiY29udGVudCI6ICJhZjlhMzc5
ZS1hNDhiLTQ3ZGQtOThmYi03M2JhMzY4OGFkOWEiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNl
LCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAic3RlcF9sYWJlbCI6
IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24ifV0sICJkaXNwbGF5X25hbWUiOiAiUmVz
aWxpZW50IE5MUCBzZWFyY2gifV0sICJsYXlvdXRzIjogW10sICJleHBvcnRfZm9ybWF0X3ZlcnNp
b24iOiAyLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJ0YXNrX29yZGVyIjogW10sICJsb2NhbGUi
OiBudWxsLCAiaW5kdXN0cmllcyI6IG51bGwsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7ImV4
cGVjdF9hY2siOiB0cnVlLCAibmFtZSI6ICJyZXNpbGllbnRfbWwiLCAidXVpZCI6ICI4ZGExYWM0
OC01ZmZmLTQ5MDktOGE5My0xZjZiMWMwOWE1NjUiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAicmVz
aWxpZW50X21sIiwgInVzZXJzIjogWyJtYXN0ZXJAZXhhbXBsZS5jb20iXSwgImV4cG9ydF9rZXki
OiAicmVzaWxpZW50X21sIiwgImRlc3RpbmF0aW9uX3R5cGUiOiAwfV19
"""
    )