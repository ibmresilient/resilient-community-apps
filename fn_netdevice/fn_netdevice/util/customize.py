# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_netdevice"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_netdevice package"""
    reload_params = {"package": u"fn_netdevice",
                    "incident_fields": [], 
                    "action_fields": [u"config_commands", u"device_ids", u"send_command", u"use_textfsm_template"], 
                    "function_params": [u"netdevice_config_cmd", u"netdevice_ids", u"netdevice_send_cmd", u"netdevice_use_textfsm"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_netdevice"], 
                    "functions": [u"fn_netdevice"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_execute_netdevice_command"], 
                    "actions": [u"Example: Execution Netdevice Commands"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     config_commands
    #     device_ids
    #     send_command
    #     use_textfsm_template
    #   Function inputs:
    #     netdevice_config_cmd
    #     netdevice_ids
    #     netdevice_send_cmd
    #     netdevice_use_textfsm
    #   Message Destinations:
    #     fn_netdevice
    #   Functions:
    #     fn_netdevice
    #   Workflows:
    #     example_execute_netdevice_command
    #   Rules:
    #     Example: Execution Netdevice Commands


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMCwgImJ1aWxkX251bWJl
ciI6IDQyNTQsICJ2ZXJzaW9uIjogIjMxLjAuNDI1NCJ9LCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9u
IjogMiwgImlkIjogNiwgImV4cG9ydF9kYXRlIjogMTU2MDQ1MjkxNTQ2NywgImZpZWxkcyI6IFt7
ImlkIjogNTEsICJuYW1lIjogImluY190cmFpbmluZyIsICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAi
cHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAwLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNp
ZGVudCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBp
cyByZWFkLW9ubHkuIiwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJoaWRlX25vdGlmaWNhdGlv
biI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAi
YzNmMGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgIm9wZXJhdGlvbnMiOiBbXSwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiB0cnVlLCAi
Y2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5j
aWRlbnQvaW5jX3RyYWluaW5nIiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNl
fSwgeyJpZCI6IDEzMiwgIm5hbWUiOiAic2VuZF9jb21tYW5kIiwgInRleHQiOiAiU2VuZCBDb21t
YW5kIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwgInR5cGVfaWQiOiA2LCAidG9vbHRpcCI6ICIi
LCAicGxhY2Vob2xkZXIiOiAiU3BlY2lmeSBhIGNvbW1hbmQgdG8gZXhlY3V0ZSBvbiB0aGUgcmVt
b3RlIGRldmljZShzKSIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogImNl
MTIxNTQxLTMyNTQtNGZkZC1iNjEwLTE3MDM2OTcxNDQ5MCIsICJvcGVyYXRpb25zIjogW10sICJv
cGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJj
aGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rp
b25pbnZvY2F0aW9uL3NlbmRfY29tbWFuZCIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQi
OiBmYWxzZX0sIHsiaWQiOiAxMzQsICJuYW1lIjogImRldmljZV9pZHMiLCAidGV4dCI6ICJEZXZp
Y2UgSWRzIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwgInR5cGVfaWQiOiA2LCAidG9vbHRpcCI6
ICIiLCAicGxhY2Vob2xkZXIiOiAiU3BlY2lmeSBkZXZpY2VzIHRvIGNvbm5lY3Rpb24gdG8gc2Vw
YXJhdGVkIGJ5IGNvbW1hcyIsICJpbnB1dF90eXBlIjogInRleHQiLCAicmVxdWlyZWQiOiAiYWx3
YXlzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1
bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJpbnRl
cm5hbCI6IGZhbHNlLCAidXVpZCI6ICJjOTUyYTY1NC1iMjM4LTQwYmEtOTNkMy0xNmMzYTEyNDkx
OGUiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMiOiBb
XSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBm
YWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9kZXZpY2VfaWRzIiwgInRlbXBs
YXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDEzNiwgIm5hbWUiOiAidXNl
X3RleHRmc21fdGVtcGxhdGUiLCAidGV4dCI6ICJVc2UgVGV4dEZTTSBUZW1wbGF0ZSIsICJwcmVm
aXgiOiAicHJvcGVydGllcyIsICJ0eXBlX2lkIjogNiwgInRvb2x0aXAiOiAiUmV0dXJuIENTViBy
ZXN1bHRzIGJhc2VkIG9uIGEgdGV4dEZTTSB0ZW1wbGF0ZSIsICJwbGFjZWhvbGRlciI6ICIiLCAi
aW5wdXRfdHlwZSI6ICJib29sZWFuIiwgInJlcXVpcmVkIjogImFsd2F5cyIsICJoaWRlX25vdGlm
aWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2
ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IHRydWUsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVp
ZCI6ICI1ZTI4ZTUxNi03ZmZkLTQ5YzItOGZjNS0yNTA5ZTUwMmFmOGMiLCAib3BlcmF0aW9ucyI6
IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6IGZh
bHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXki
OiAiYWN0aW9uaW52b2NhdGlvbi91c2VfdGV4dGZzbV90ZW1wbGF0ZSIsICJ0ZW1wbGF0ZXMiOiBb
XSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQiOiAxMzMsICJuYW1lIjogImNvbmZpZ19jb21t
YW5kcyIsICJ0ZXh0IjogIkNvbmZpZyBDb21tYW5kcyIsICJwcmVmaXgiOiAicHJvcGVydGllcyIs
ICJ0eXBlX2lkIjogNiwgInRvb2x0aXAiOiAiIiwgInBsYWNlaG9sZGVyIjogIlNwZWNpZnkgbXVs
dGlwbGUgY29tbWFuZHMgb25lIHBlciBsaW5lIHRvIGV4ZWN1dGUiLCAiaW5wdXRfdHlwZSI6ICJ0
ZXh0YXJlYSIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJk
ZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAi
aW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiZWM4YjE0ZDMtYzY5OS00OWIwLWI1MmUtMzZiYzAy
ZmYzNWNjIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVz
IjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0
IjogZmFsc2UsICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRpb24vY29uZmlnX2NvbW1hbmRz
IiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDEyOSwgIm5h
bWUiOiAibmV0ZGV2aWNlX3NlbmRfY21kIiwgInRleHQiOiAibmV0ZGV2aWNlX3NlbmRfY21kIiwg
InByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjogIlNwZWNpZnkgYSBjb21t
YW5kIHRvIGV4ZWN1dGUgb24gcmVtb3RlIGRldmljZSIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5w
dXRfdHlwZSI6ICJ0ZXh0IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjog
ZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICJjMzM1NmJjMS0zNTIzLTQxOWItOWVk
Ni0wMzJkZTYzNTAxMjEiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30s
ICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJy
aWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9uZXRkZXZpY2Vfc2Vu
ZF9jbWQiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMTM1
LCAibmFtZSI6ICJuZXRkZXZpY2VfdXNlX3RleHRmc20iLCAidGV4dCI6ICJuZXRkZXZpY2VfdXNl
X3RleHRmc20iLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiUmV0
dXJuIHJlc3VsdHMgYmFzZWQgb24gYSB0ZXh0RlNNIHRlbXBsYXRlICIsICJwbGFjZWhvbGRlciI6
ICIiLCAiaW5wdXRfdHlwZSI6ICJib29sZWFuIiwgInJlcXVpcmVkIjogImFsd2F5cyIsICJoaWRl
X25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IHRydWUsICJpbnRlcm5hbCI6IGZhbHNl
LCAidXVpZCI6ICI3NDdmODM5Zi03MzUzLTQ5NDQtYTA0Yy1iMzIzYmMxM2M3MTciLCAib3BlcmF0
aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25s
eSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9y
dF9rZXkiOiAiX19mdW5jdGlvbi9uZXRkZXZpY2VfdXNlX3RleHRmc20iLCAidGVtcGxhdGVzIjog
W10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMTMxLCAibmFtZSI6ICJuZXRkZXZpY2Vf
aWRzIiwgInRleHQiOiAibmV0ZGV2aWNlX2lkcyIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6
IDExLCAidG9vbHRpcCI6ICJTcGVjaWZ5IGRldmljZSBuYW1lcyB3aXRoIGNvbW1hcyIsICJwbGFj
ZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInJlcXVpcmVkIjogImFsd2F5cyIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2No
b3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwi
OiBmYWxzZSwgInV1aWQiOiAiZWU0YzIxNzctZjExYS00NDEyLWJmYzktYWNmZjVjY2VmNjMzIiwg
Im9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJy
ZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2Us
ICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vbmV0ZGV2aWNlX2lkcyIsICJ0ZW1wbGF0ZXMiOiBb
XSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQiOiAxMzAsICJuYW1lIjogIm5ldGRldmljZV9j
b25maWdfY21kIiwgInRleHQiOiAibmV0ZGV2aWNlX2NvbmZpZ19jbWQiLCAicHJlZml4IjogbnVs
bCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAic2VwYXJhdGUgbXVsdGktbGluZSBpbnB1dCB3
aXRoIGNvbW1hcyIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImhp
ZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2Vu
X2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJpbnRlcm5hbCI6IGZh
bHNlLCAidXVpZCI6ICIyYmU3YTQ0Mi1jMGVkLTQwODAtYTg0YS1mMTZmZWJiMzY1ZDMiLCAib3Bl
cmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbXSwgInJlYWRf
b25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4
cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9uZXRkZXZpY2VfY29uZmlnX2NtZCIsICJ0ZW1wbGF0ZXMi
OiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX1dLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVf
ZGF0ZSI6IDE1NjA0NTI5MTYyMTUsICJjcmVhdGVfZGF0ZSI6IDE1NjA0NTI5MTYyMTUsICJ1dWlk
IjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6
ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0
b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBh
Y2thZ2VzIChpbnRlcm5hbCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJw
YXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgInBoYXNlcyI6IFtd
LCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJvdmVycmlkZXMiOiBbXSwgIm1lc3NhZ2VfZGVzdGlu
YXRpb25zIjogW3sibmFtZSI6ICJmbl9uZXRkZXZpY2UiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAi
Zm5fbmV0ZGV2aWNlIiwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUs
ICJ1c2VycyI6IFsiYUBleGFtcGxlLmNvbSJdLCAidXVpZCI6ICJkN2VmZjJjZS00MGExLTRkMTct
OGEzMS0yMmFjMjIyZDlmNGUiLCAiZXhwb3J0X2tleSI6ICJmbl9uZXRkZXZpY2UifV0sICJhY3Rp
b25zIjogW3siaWQiOiAyMCwgIm5hbWUiOiAiRXhhbXBsZTogRXhlY3V0aW9uIE5ldGRldmljZSBD
b21tYW5kcyIsICJ0eXBlIjogMSwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgImNvbmRpdGlv
bnMiOiBbXSwgImF1dG9tYXRpb25zIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAi
d29ya2Zsb3dzIjogWyJleGFtcGxlX2V4ZWN1dGVfbmV0ZGV2aWNlX2NvbW1hbmQiXSwgInZpZXdf
aXRlbXMiOiBbeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6
ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJjb250ZW50
IjogImM5NTJhNjU0LWIyMzgtNDBiYS05M2QzLTE2YzNhMTI0OTE4ZSIsICJzaG93X2xpbmtfaGVh
ZGVyIjogZmFsc2V9LCB7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVt
ZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgImNv
bnRlbnQiOiAiY2UxMjE1NDEtMzI1NC00ZmRkLWI2MTAtMTcwMzY5NzE0NDkwIiwgInNob3dfbGlu
a19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwg
ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24i
LCAiY29udGVudCI6ICJlYzhiMTRkMy1jNjk5LTQ5YjAtYjUyZS0zNmJjMDJmZjM1Y2MiLCAic2hv
d19saW5rX2hlYWRlciI6IGZhbHNlfSwgeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBu
dWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2Nh
dGlvbiIsICJjb250ZW50IjogIjVlMjhlNTE2LTdmZmQtNDljMi04ZmM1LTI1MDllNTAyYWY4YyIs
ICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9XSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAi
dXVpZCI6ICJjNDc1ZTdmZC01ZjhkLTRhODktYmUwNC05OTQ4OTRhM2I4ZDAiLCAiZXhwb3J0X2tl
eSI6ICJFeGFtcGxlOiBFeGVjdXRpb24gTmV0ZGV2aWNlIENvbW1hbmRzIiwgImxvZ2ljX3R5cGUi
OiAiYWxsIn1dLCAibGF5b3V0cyI6IFtdLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJ0aW1lZnJh
bWVzIjogbnVsbCwgImxvY2FsZSI6IG51bGwsICJpbmR1c3RyaWVzIjogbnVsbCwgInJlZ3VsYXRv
cnMiOiBudWxsLCAiZ2VvcyI6IG51bGwsICJ0YXNrX29yZGVyIjogW10sICJhY3Rpb25fb3JkZXIi
OiBbXSwgInR5cGVzIjogW10sICJzY3JpcHRzIjogW10sICJpbmNpZGVudF9hcnRpZmFjdF90eXBl
cyI6IFtdLCAid29ya2Zsb3dzIjogW3sid29ya2Zsb3dfaWQiOiAxLCAibmFtZSI6ICJFeGFtcGxl
OiBFeGVjdXRlIE5ldGRldmljZSBDb21tYW5kcyIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFt
cGxlX2V4ZWN1dGVfbmV0ZGV2aWNlX2NvbW1hbmQiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQi
LCAiZGVzY3JpcHRpb24iOiAiUGVyZm9ybSBhbiBvcGVyYXRpb24gb3IgYSBzZXJpZXMgb2Ygb3Bl
cmF0aW9ucyBhZ2FpbnN0IGEgZmlyZXdhbGwgZGV2aWNlIiwgImNyZWF0b3JfaWQiOiAiYUBleGFt
cGxlLmNvbSIsICJsYXN0X21vZGlmaWVkX2J5IjogImFAZXhhbXBsZS5jb20iLCAibGFzdF9tb2Rp
ZmllZF90aW1lIjogMTU2MDQzNTU1NTc0NiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9leGVjdXRl
X25ldGRldmljZV9jb21tYW5kIiwgInV1aWQiOiAiYjU0YzVjOWItZDcwOC00ODgzLWEyZGUtMGFj
N2QzNTVjMDBjIiwgImNvbnRlbnQiOiB7IndvcmtmbG93X2lkIjogImV4YW1wbGVfZXhlY3V0ZV9u
ZXRkZXZpY2VfY29tbWFuZCIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5n
PVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMv
QlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9z
cGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9z
cGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3Bl
Yy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJt
LmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFc
IiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwi
IHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNz
IGlkPVwiZXhhbXBsZV9leGVjdXRlX25ldGRldmljZV9jb21tYW5kXCIgaXNFeGVjdXRhYmxlPVwi
dHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBFeGVjdXRlIE5ldGRldmljZSBDb21tYW5kc1wiPjxkb2N1
bWVudGF0aW9uPlBlcmZvcm0gYW4gb3BlcmF0aW9uIG9yIGEgc2VyaWVzIG9mIG9wZXJhdGlvbnMg
YWdhaW5zdCBhIGZpcmV3YWxsIGRldmljZTwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1c
IlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMGhmbGw1bDwvb3V0
Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzB1bDJnNzhc
IiBuYW1lPVwiZm5fbmV0ZGV2aWNlXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRl
bnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCJlMWNjNTA0OS04YzIyLTQ4
ZTgtYTJjZi0zMDg2ZmFlNjBmYjRcIj57XCJpbnB1dHNcIjp7XCI3NDdmODM5Zi03MzUzLTQ5NDQt
YTA0Yy1iMzIzYmMxM2M3MTdcIjp7XCJpbnB1dF90eXBlXCI6XCJzdGF0aWNcIixcInN0YXRpY19p
bnB1dFwiOntcImJvb2xlYW5fdmFsdWVcIjp0cnVlLFwibXVsdGlzZWxlY3RfdmFsdWVcIjpbXX19
fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcIm5vdGUgPSB1XFxcIlxcXCJcXG5mb3IgaG9z
dCBpbiByZXN1bHRzWydjb250ZW50J106XFxuICBub3RlID0gbm90ZSArIHVcXFwiSG9zdDoge31c
XFxcblxcXCIuZm9ybWF0KGhvc3QpXFxuICBub3RlID0gbm90ZSArIHVcXFwiQ21kOiB7fVxcXFxu
UmVzdWx0OiB7fVxcXFxuXFxcIi5mb3JtYXQocmVzdWx0c1snY29udGVudCddW2hvc3RdWydzZW5k
X2NvbW1hbmQnXSwgcmVzdWx0c1snY29udGVudCddW2hvc3RdWydzZW5kX3Jlc3VsdCddKVxcbiAg
bm90ZSA9IG5vdGUgKyB1XFxcIkNvbmZpZyBDbWQ6IHt9XFxcXG5SZXN1bHQ6IHt9XFxcXG5cXFwi
LmZvcm1hdChyZXN1bHRzWydjb250ZW50J11baG9zdF1bJ2NvbmZpZ19jb21tYW5kJ10sIHJlc3Vs
dHNbJ2NvbnRlbnQnXVtob3N0XVsnY29uZmlnX3Jlc3VsdCddKVxcbiAgXFxuICBpZiByZXN1bHRz
Wydjb250ZW50J11baG9zdF1bJ3N0YXR1cyddID09ICdmYWlsdXJlJzpcXG4gICAgbm90ZSA9IG5v
dGUgKyB1XFxcIkZhaWx1cmU6IHt9XFxcXG5cXFwiLmZvcm1hdChyZXN1bHRzWydjb250ZW50J11b
aG9zdF1bJ3JlYXNvbiddKVxcbiAgICBcXG5ub3RlX3RleHQgPSBoZWxwZXIuY3JlYXRlUGxhaW5U
ZXh0KG5vdGUpXFxuaW5jaWRlbnQuYWRkTm90ZShub3RlX3RleHQpXCIsXCJwcmVfcHJvY2Vzc2lu
Z19zY3JpcHRcIjpcImlucHV0cy5uZXRkZXZpY2VfY29uZmlnX2NtZCA9IHJ1bGUucHJvcGVydGll
cy5jb25maWdfY29tbWFuZHMuY29udGVudFxcbmlucHV0cy5uZXRkZXZpY2VfaWRzID0gcnVsZS5w
cm9wZXJ0aWVzLmRldmljZV9pZHNcXG5pbnB1dHMubmV0ZGV2aWNlX3NlbmRfY21kID0gcnVsZS5w
cm9wZXJ0aWVzLnNlbmRfY29tbWFuZFxcbmlucHV0cy5uZXRkZXZpY2VfdXNlX3RleHRmc20gPSBy
dWxlLnByb3BlcnRpZXMudXNlX3RleHRmc21fdGVtcGxhdGVcIn08L3Jlc2lsaWVudDpmdW5jdGlv
bj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMGhmbGw1bDwvaW5j
b21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wbW1qbzVyPC9vdXRnb2luZz48L3NlcnZpY2VU
YXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMGhmbGw1bFwiIHNvdXJjZVJlZj1c
IlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzB1bDJnNzhcIi8+
PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMHR1NXV2alwiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3df
MG1tam81cjwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VG
bG93XzBtbWpvNXJcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wdWwyZzc4XCIgdGFyZ2V0UmVm
PVwiRW5kRXZlbnRfMHR1NXV2alwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlv
bl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFu
bm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJl
Zj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhp
eXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMG5oOTZueVwiPjx0ZXh0
PkdlbmVyYXRlIGEgbm90ZSB3aXRoIHRoZSByZXN1bHRzIGZyb20gdGhlIHJlbW92ZSBkZXZpY2Ug
b3BlcmF0aW9uczwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29j
aWF0aW9uXzA0cGVhajlcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wdWwyZzc4XCIgdGFyZ2V0
UmVmPVwiVGV4dEFubm90YXRpb25fMG5oOTZueVwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0
QW5ub3RhdGlvbl8xbWE2a2I1XCI+PHRleHQ+VXNlIGFjdGl2aXR5IGZpZWxkcyBmcm9tIHRoZSBy
dWxlIGFzIGlucHV0PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNz
b2NpYXRpb25fMTRhZmVmaVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzB1bDJnNzhcIiB0YXJn
ZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xbWE2a2I1XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5E
aWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50
PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5F
bGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlc
Ij48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwi
MTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRo
PVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6
QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25f
MWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6
QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1
ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIx
NjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQg
eD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQ
TU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMHVsMmc3
OFwiIGlkPVwiU2VydmljZVRhc2tfMHVsMmc3OF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
ODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIyNTlcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFw
ZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzBoZmxsNWxcIiBp
ZD1cIlNlcXVlbmNlRmxvd18waGZsbDVsX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4
c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI1
OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVs
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMjI4LjVcIiB5PVwi
MTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5T
aGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzB0dTV1dmpcIiBpZD1cIkVuZEV2ZW50XzB0dTV1
dmpfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI0MjJc
IiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNc
IiB3aWR0aD1cIjBcIiB4PVwiNDQwXCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZs
b3dfMG1tam81clwiIGlkPVwiU2VxdWVuY2VGbG93XzBtbWpvNXJfZGlcIj48b21nZGk6d2F5cG9p
bnQgeD1cIjM1OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3
YXlwb2ludCB4PVwiNDIyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJw
bW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9
XCIzOTAuNVwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdl
PjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMG5oOTZueVwi
IGlkPVwiVGV4dEFubm90YXRpb25fMG5oOTZueV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
NjlcIiB3aWR0aD1cIjIxN1wiIHg9XCIzNTNcIiB5PVwiNjdcIi8+PC9icG1uZGk6QlBNTlNoYXBl
PjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8wNHBlYWo5XCIgaWQ9
XCJBc3NvY2lhdGlvbl8wNHBlYWo5X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzNTdcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE3NFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQxMlwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTM2XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxi
cG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMW1hNmtiNVwiIGlk
PVwiVGV4dEFubm90YXRpb25fMW1hNmtiNV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNTdc
IiB3aWR0aD1cIjE1NlwiIHg9XCIxMzBcIiB5PVwiNzNcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xNGFmZWZpXCIgaWQ9XCJB
c3NvY2lhdGlvbl8xNGFmZWZpX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIyNzBcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE2NlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjIzNVwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTMwXCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBt
bmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ2ZXJz
aW9uIjogMjF9LCAiYWN0aW9ucyI6IFtdfV0sICJyb2xlcyI6IFtdLCAid29ya3NwYWNlcyI6IFtd
LCAiZnVuY3Rpb25zIjogW3siaWQiOiAxLCAibmFtZSI6ICJmbl9uZXRkZXZpY2UiLCAiZGlzcGxh
eV9uYW1lIjogImZuX25ldGRldmljZSIsICJkZXNjcmlwdGlvbiI6IHsiZm9ybWF0IjogInRleHQi
LCAiY29udGVudCI6ICJVc2UgTmV0bWlrbyB0byBhdHRhY2ggdG8gZGV2aWNlcyAoc3VjaCBhcyBm
aXJld2FsbHMpIGZvciBjb21tYW5kIGxpbmUgY29uZmlndXJhdGlvbiJ9LCAiZGVzdGluYXRpb25f
aGFuZGxlIjogImZuX25ldGRldmljZSIsICJleHBvcnRfa2V5IjogImZuX25ldGRldmljZSIsICJ1
dWlkIjogImUxY2M1MDQ5LThjMjItNDhlOC1hMmNmLTMwODZmYWU2MGZiNCIsICJ2ZXJzaW9uIjog
MywgImNyZWF0b3IiOiB7ImlkIjogMywgInR5cGUiOiAidXNlciIsICJuYW1lIjogImFAZXhhbXBs
ZS5jb20iLCAiZGlzcGxheV9uYW1lIjogImFibGUgYmFrZXIifSwgImxhc3RfbW9kaWZpZWRfYnki
OiB7ImlkIjogMywgInR5cGUiOiAidXNlciIsICJuYW1lIjogImFAZXhhbXBsZS5jb20iLCAiZGlz
cGxheV9uYW1lIjogImFibGUgYmFrZXIifSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NjA0MzU0
Mzk2MjgsICJ2aWV3X2l0ZW1zIjogW3sic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVs
bCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAi
Y29udGVudCI6ICJjMzM1NmJjMS0zNTIzLTQxOWItOWVkNi0wMzJkZTYzNTAxMjEiLCAic2hvd19s
aW5rX2hlYWRlciI6IGZhbHNlfSwgeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxs
LCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJj
b250ZW50IjogIjJiZTdhNDQyLWMwZWQtNDA4MC1hODRhLWYxNmZlYmIzNjVkMyIsICJzaG93X2xp
bmtfaGVhZGVyIjogZmFsc2V9LCB7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGws
ICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNv
bnRlbnQiOiAiZWU0YzIxNzctZjExYS00NDEyLWJmYzktYWNmZjVjY2VmNjMzIiwgInNob3dfbGlu
a19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwg
ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29u
dGVudCI6ICI3NDdmODM5Zi03MzUzLTQ5NDQtYTA0Yy1iMzIzYmMxM2M3MTciLCAic2hvd19saW5r
X2hlYWRlciI6IGZhbHNlfV0sICJ3b3JrZmxvd3MiOiBbeyJ3b3JrZmxvd19pZCI6IDEsICJuYW1l
IjogIkV4YW1wbGU6IEV4ZWN1dGUgTmV0ZGV2aWNlIENvbW1hbmRzIiwgInByb2dyYW1tYXRpY19u
YW1lIjogImV4YW1wbGVfZXhlY3V0ZV9uZXRkZXZpY2VfY29tbWFuZCIsICJvYmplY3RfdHlwZSI6
ICJpbmNpZGVudCIsICJkZXNjcmlwdGlvbiI6IG51bGwsICJ1dWlkIjogbnVsbCwgImFjdGlvbnMi
OiBbXX1dfV19
"""
    )