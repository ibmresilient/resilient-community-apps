# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_netdevice"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_netdevice package"""
    reload_params = {"package": u"fn_netdevice",
                    "incident_fields": [], 
                    "action_fields": [u"config_commands", u"device_ids", u"send_command", u"use_textfsm_template"], 
                    "function_params": [u"netdevice_config_cmd", u"netdevice_ids", u"netdevice_send_cmd", u"netdevice_use_textfsm"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_netdevice"], 
                    "functions": [u"fn_netdevice_config", u"fn_netdevice_query"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_execute_netdevice_command", u"example_execute_netdevice_configuration_commands"], 
                    "actions": [u"Example: Execute Netdevice Configuration Changes", u"Example: Execute Netdevice Queries"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     config_commands
    #     device_ids
    #     send_command
    #     use_textfsm_template
    #   Function inputs:
    #     netdevice_config_cmd
    #     netdevice_ids
    #     netdevice_send_cmd
    #     netdevice_use_textfsm
    #   Message Destinations:
    #     fn_netdevice
    #   Functions:
    #     fn_netdevice_config
    #     fn_netdevice_query
    #   Workflows:
    #     example_execute_netdevice_command
    #     example_execute_netdevice_configuration_commands
    #   Rules:
    #     Example: Execute Netdevice Configuration Changes
    #     Example: Execute Netdevice Queries


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMCwgImJ1aWxkX251bWJl
ciI6IDQyNTQsICJ2ZXJzaW9uIjogIjMxLjAuNDI1NCJ9LCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9u
IjogMiwgImlkIjogNiwgImV4cG9ydF9kYXRlIjogMTU2MTc0MjY5NTM3OSwgImZpZWxkcyI6IFt7
ImlkIjogNTEsICJuYW1lIjogImluY190cmFpbmluZyIsICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAi
cHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAwLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNp
ZGVudCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBp
cyByZWFkLW9ubHkuIiwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJoaWRlX25vdGlmaWNhdGlv
biI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAi
YzNmMGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgIm9wZXJhdGlvbnMiOiBbXSwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiB0cnVlLCAi
Y2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5j
aWRlbnQvaW5jX3RyYWluaW5nIiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNl
fSwgeyJpZCI6IDE4NCwgIm5hbWUiOiAiY29uZmlnX2NvbW1hbmRzIiwgInRleHQiOiAiQ29uZmln
IENvbW1hbmRzIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwgInR5cGVfaWQiOiA2LCAidG9vbHRp
cCI6ICIiLCAicGxhY2Vob2xkZXIiOiAiU3BlY2lmeSBtdWx0aXBsZSBjb21tYW5kcyBvbmUgcGVy
IGxpbmUgdG8gZXhlY3V0ZSIsICJpbnB1dF90eXBlIjogInRleHRhcmVhIiwgInJlcXVpcmVkIjog
ImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJk
ZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAi
aW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiZWM4YjE0ZDMtYzY5OS00OWIwLWI1MmUtMzZiYzAy
ZmYzNWNjIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVz
IjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0
IjogZmFsc2UsICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRpb24vY29uZmlnX2NvbW1hbmRz
IiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDE4MiwgIm5h
bWUiOiAiZGV2aWNlX2lkcyIsICJ0ZXh0IjogIkRldmljZSBJRHMiLCAicHJlZml4IjogInByb3Bl
cnRpZXMiLCAidHlwZV9pZCI6IDYsICJ0b29sdGlwIjogIiIsICJwbGFjZWhvbGRlciI6ICJEZXZp
Y2VzIHNlcGFyYXRlZCBieSBjb21tYXMiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInJlcXVpcmVk
IjogImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2Us
ICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNl
LCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiYzk1MmE2NTQtYjIzOC00MGJhLTkzZDMtMTZj
M2ExMjQ5MThlIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFs
dWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90
ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRpb24vZGV2aWNlX2lkcyIs
ICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQiOiAxODEsICJuYW1l
IjogInVzZV90ZXh0ZnNtX3RlbXBsYXRlIiwgInRleHQiOiAiVXNlIFRleHRGU00gVGVtcGxhdGUi
LCAicHJlZml4IjogInByb3BlcnRpZXMiLCAidHlwZV9pZCI6IDYsICJ0b29sdGlwIjogIlJldHVy
biBDU1YgcmVzdWx0cyBiYXNlZCBvbiBhIHRleHRGU00gdGVtcGxhdGUiLCAicGxhY2Vob2xkZXIi
OiAiIiwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlk
ZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5f
Ynlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiB0cnVlLCAiaW50ZXJuYWwiOiBmYWxz
ZSwgInV1aWQiOiAiNWUyOGU1MTYtN2ZmZC00OWMyLThmYzUtMjUwOWU1MDJhZjhjIiwgIm9wZXJh
dGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29u
bHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBv
cnRfa2V5IjogImFjdGlvbmludm9jYXRpb24vdXNlX3RleHRmc21fdGVtcGxhdGUiLCAidGVtcGxh
dGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMTgzLCAibmFtZSI6ICJzZW5k
X2NvbW1hbmQiLCAidGV4dCI6ICJRdWVyeSBDb21tYW5kIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVz
IiwgInR5cGVfaWQiOiA2LCAidG9vbHRpcCI6ICIiLCAicGxhY2Vob2xkZXIiOiAiQ29tbWFuZCBm
b3IgcmVtb3RlIGRldmljZShzKSBleGVjdXRpb24iLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInJl
cXVpcmVkIjogImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjog
ZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiY2UxMjE1NDEtMzI1NC00ZmRkLWI2
MTAtMTcwMzY5NzE0NDkwIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9
LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAi
cmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRpb24vc2VuZF9j
b21tYW5kIiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDE4
NSwgIm5hbWUiOiAibmV0ZGV2aWNlX3VzZV90ZXh0ZnNtIiwgInRleHQiOiAibmV0ZGV2aWNlX3Vz
ZV90ZXh0ZnNtIiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjogIlJl
dHVybiByZXN1bHRzIGJhc2VkIG9uIGEgdGV4dEZTTSB0ZW1wbGF0ZSAiLCAicGxhY2Vob2xkZXIi
OiAiIiwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlk
ZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5f
Ynlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiB0cnVlLCAiaW50ZXJuYWwiOiBmYWxz
ZSwgInV1aWQiOiAiNzQ3ZjgzOWYtNzM1My00OTQ0LWEwNGMtYjMyM2JjMTNjNzE3IiwgIm9wZXJh
dGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29u
bHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBv
cnRfa2V5IjogIl9fZnVuY3Rpb24vbmV0ZGV2aWNlX3VzZV90ZXh0ZnNtIiwgInRlbXBsYXRlcyI6
IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDE4NiwgIm5hbWUiOiAibmV0ZGV2aWNl
X2NvbmZpZ19jbWQiLCAidGV4dCI6ICJuZXRkZXZpY2VfY29uZmlnX2NtZCIsICJwcmVmaXgiOiBu
dWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6ICJzZXBhcmF0ZSBtdWx0aS1saW5lIGlucHV0
IHdpdGggY29tbWFzIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAi
aGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9z
ZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjog
ZmFsc2UsICJ1dWlkIjogIjJiZTdhNDQyLWMwZWQtNDA4MC1hODRhLWYxNmZlYmIzNjVkMyIsICJv
cGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVh
ZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAi
ZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL25ldGRldmljZV9jb25maWdfY21kIiwgInRlbXBsYXRl
cyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDE4OCwgIm5hbWUiOiAibmV0ZGV2
aWNlX2lkcyIsICJ0ZXh0IjogIm5ldGRldmljZV9pZHMiLCAicHJlZml4IjogbnVsbCwgInR5cGVf
aWQiOiAxMSwgInRvb2x0aXAiOiAiU3BlY2lmeSBkZXZpY2UgbmFtZXMgd2l0aCBjb21tYXMiLCAi
cGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAidGV4dCIsICJyZXF1aXJlZCI6ICJhbHdh
eXMiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVs
dF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVy
bmFsIjogZmFsc2UsICJ1dWlkIjogImVlNGMyMTc3LWYxMWEtNDQxMi1iZmM5LWFjZmY1Y2NlZjYz
MyIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtd
LCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL25ldGRldmljZV9pZHMiLCAidGVtcGxhdGVz
IjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMTg3LCAibmFtZSI6ICJuZXRkZXZp
Y2Vfc2VuZF9jbWQiLCAidGV4dCI6ICJuZXRkZXZpY2Vfc2VuZF9jbWQiLCAicHJlZml4IjogbnVs
bCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiU3BlY2lmeSBhIGNvbW1hbmQgdG8gZXhlY3V0
ZSBvbiByZW1vdGUgZGV2aWNlIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRl
eHQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVs
dF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVy
bmFsIjogZmFsc2UsICJ1dWlkIjogImMzMzU2YmMxLTM1MjMtNDE5Yi05ZWQ2LTAzMmRlNjM1MDEy
MSIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtd
LCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL25ldGRldmljZV9zZW5kX2NtZCIsICJ0ZW1w
bGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX1dLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1
cGRhdGVfZGF0ZSI6IDE1NjE3NDI2OTY5NTEsICJjcmVhdGVfZGF0ZSI6IDE1NjE3NDI2OTY5NTEs
ICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlw
dGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6
ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0
aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFs
c2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgInBoYXNl
cyI6IFtdLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJvdmVycmlkZXMiOiBbXSwgIm1lc3NhZ2Vf
ZGVzdGluYXRpb25zIjogW3sibmFtZSI6ICJmbl9uZXRkZXZpY2UiLCAicHJvZ3JhbW1hdGljX25h
bWUiOiAiZm5fbmV0ZGV2aWNlIiwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6
IHRydWUsICJ1c2VycyI6IFsiYUBleGFtcGxlLmNvbSJdLCAidXVpZCI6ICJkN2VmZjJjZS00MGEx
LTRkMTctOGEzMS0yMmFjMjIyZDlmNGUiLCAiZXhwb3J0X2tleSI6ICJmbl9uZXRkZXZpY2UifV0s
ICJhY3Rpb25zIjogW3siaWQiOiA0MCwgIm5hbWUiOiAiRXhhbXBsZTogRXhlY3V0ZSBOZXRkZXZp
Y2UgQ29uZmlndXJhdGlvbiBDaGFuZ2VzIiwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUiOiAiaW5j
aWRlbnQiLCAiY29uZGl0aW9ucyI6IFtdLCAiYXV0b21hdGlvbnMiOiBbXSwgIm1lc3NhZ2VfZGVz
dGluYXRpb25zIjogW10sICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfZXhlY3V0ZV9uZXRkZXZpY2Vf
Y29uZmlndXJhdGlvbl9jb21tYW5kcyJdLCAidmlld19pdGVtcyI6IFt7InN0ZXBfbGFiZWwiOiBu
dWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlw
ZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgImNvbnRlbnQiOiAiYzk1MmE2NTQtYjIzOC00MGJhLTkz
ZDMtMTZjM2ExMjQ5MThlIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9sYWJl
bCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVs
ZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAiY29udGVudCI6ICJlYzhiMTRkMy1jNjk5LTQ5
YjAtYjUyZS0zNmJjMDJmZjM1Y2MiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfV0sICJ0aW1l
b3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAiYzQ3NWU3ZmQtNWY4ZC00YTg5LWJlMDQtOTk0
ODk0YTNiOGQwIiwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTogRXhlY3V0ZSBOZXRkZXZpY2UgQ29u
ZmlndXJhdGlvbiBDaGFuZ2VzIiwgImxvZ2ljX3R5cGUiOiAiYWxsIn0sIHsiaWQiOiA0MSwgIm5h
bWUiOiAiRXhhbXBsZTogRXhlY3V0ZSBOZXRkZXZpY2UgUXVlcmllcyIsICJ0eXBlIjogMSwgIm9i
amVjdF90eXBlIjogImluY2lkZW50IiwgImNvbmRpdGlvbnMiOiBbXSwgImF1dG9tYXRpb25zIjog
W10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX2V4
ZWN1dGVfbmV0ZGV2aWNlX2NvbW1hbmQiXSwgInZpZXdfaXRlbXMiOiBbeyJzdGVwX2xhYmVsIjog
bnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5
cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJjb250ZW50IjogImM5NTJhNjU0LWIyMzgtNDBiYS05
M2QzLTE2YzNhMTI0OTE4ZSIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9LCB7InN0ZXBfbGFi
ZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmll
bGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgImNvbnRlbnQiOiAiY2UxMjE1NDEtMzI1NC00
ZmRkLWI2MTAtMTcwMzY5NzE0NDkwIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsic3Rl
cF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIs
ICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAiY29udGVudCI6ICI1ZTI4ZTUxNi03
ZmZkLTQ5YzItOGZjNS0yNTA5ZTUwMmFmOGMiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfV0s
ICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAiNGEyYTQ0ZjMtMWE1OS00ZmFhLTg4
MTctZTZjNWI0YWVjZTkyIiwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTogRXhlY3V0ZSBOZXRkZXZp
Y2UgUXVlcmllcyIsICJsb2dpY190eXBlIjogImFsbCJ9XSwgImxheW91dHMiOiBbXSwgIm5vdGlm
aWNhdGlvbnMiOiBudWxsLCAidGltZWZyYW1lcyI6IG51bGwsICJsb2NhbGUiOiBudWxsLCAiaW5k
dXN0cmllcyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwgImdlb3MiOiBudWxsLCAidGFza19v
cmRlciI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJ0eXBlcyI6IFtdLCAic2NyaXB0cyI6IFtd
LCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7IndvcmtmbG93
X2lkIjogMjEsICJuYW1lIjogIkV4YW1wbGU6IEV4ZWN1dGUgTmV0ZGV2aWNlIENvbmZpZ3VyYXRp
b24gQ29tbWFuZHMiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9leGVjdXRlX25ldGRl
dmljZV9jb25maWd1cmF0aW9uX2NvbW1hbmRzIiwgIm9iamVjdF90eXBlIjogImluY2lkZW50Iiwg
ImRlc2NyaXB0aW9uIjogIlBlcmZvcm0gYSBjb25maWd1cmF0aW9uIG9wZXJhdGlvbiBhZ2FpbnN0
IGEgZmlyZXdhbGwgZGV2aWNlIiwgImNyZWF0b3JfaWQiOiAiYUBleGFtcGxlLmNvbSIsICJsYXN0
X21vZGlmaWVkX2J5IjogImFAZXhhbXBsZS5jb20iLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU2
MTc0MjU5MTQ5MywgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9leGVjdXRlX25ldGRldmljZV9jb25m
aWd1cmF0aW9uX2NvbW1hbmRzIiwgInV1aWQiOiAiOWMwN2Y4YmUtOGYwMi00N2EzLTg5NzYtMzZj
NWVhNzc1N2U4IiwgImNvbnRlbnQiOiB7IndvcmtmbG93X2lkIjogImV4YW1wbGVfZXhlY3V0ZV9u
ZXRkZXZpY2VfY29uZmlndXJhdGlvbl9jb21tYW5kcyIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1c
IjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3
dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8v
d3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6
Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcv
MjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNj
aGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcv
dGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9leGVjdXRlX25ldGRldmljZV9jb25maWd1cmF0
aW9uX2NvbW1hbmRzXCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBFeGVj
dXRlIE5ldGRldmljZSBDb25maWd1cmF0aW9uIENvbW1hbmRzXCI+PGRvY3VtZW50YXRpb24+UGVy
Zm9ybSBhIGNvbmZpZ3VyYXRpb24gb3BlcmF0aW9uIGFnYWluc3QgYSBmaXJld2FsbCBkZXZpY2U8
L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0
Z29pbmc+U2VxdWVuY2VGbG93XzBhczNudTk8L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2Vydmlj
ZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xbHM4bWtoXCIgbmFtZT1cImZuX25ldGRldmljZV9jb25m
aWdcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNp
bGllbnQ6ZnVuY3Rpb24gdXVpZD1cIjliM2YzMWEwLTMxMjctNGNkMS05MmY4LTU5NDdkNzQ5MmYy
OFwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW1wb3J0IHJl
XFxuXFxucHAgPSAnKFxcXFxcXFxceDFiXFxcXFtcXFxcdypcXFxcZCooO1xcXFxkKikqbSknXFxu
XFxubm90ZSA9IHVcXFwiXFxcIlxcbmZvciBob3N0IGluIHJlc3VsdHNbJ2NvbnRlbnQnXTpcXG4g
IG5vdGUgPSBub3RlICsgdVxcXCJIb3N0OiB7fVxcXFxuXFxcIi5mb3JtYXQoaG9zdClcXG4gIG5v
dGUgPSBub3RlICsgdVxcXCJDb25maWcgQ21kOiB7fVxcXFxuUmVzdWx0OiB7fVxcXFxuXFxcIi5m
b3JtYXQocmVzdWx0c1snY29udGVudCddW2hvc3RdWydjb25maWdfY29tbWFuZCddLCByZS5zdWIo
cHAsICcnLCByZXN1bHRzWydjb250ZW50J11baG9zdF0uZ2V0KCdjb25maWdfcmVzdWx0JywgJycp
KSlcXG4gIFxcbiAgaWYgcmVzdWx0c1snY29udGVudCddW2hvc3RdWydzdGF0dXMnXSA9PSAnZmFp
bHVyZSc6XFxuICAgIG5vdGUgPSBub3RlICsgdVxcXCJGYWlsdXJlOiB7fVxcXFxuXFxcIi5mb3Jt
YXQocmVzdWx0c1snY29udGVudCddW2hvc3RdWydyZWFzb24nXSlcXG4gICAgXFxuICBub3RlID0g
bm90ZSArIFxcXCJcXFxcblxcXCJcXG4gICAgXFxubm90ZV90ZXh0ID0gaGVscGVyLmNyZWF0ZVBs
YWluVGV4dChub3RlKVxcbmluY2lkZW50LmFkZE5vdGUobm90ZV90ZXh0KVwiLFwicHJlX3Byb2Nl
c3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMubmV0ZGV2aWNlX2NvbmZpZ19jbWQgPSBydWxlLnByb3Bl
cnRpZXMuY29uZmlnX2NvbW1hbmRzLmNvbnRlbnRcXG5pbnB1dHMubmV0ZGV2aWNlX2lkcyA9IHJ1
bGUucHJvcGVydGllcy5kZXZpY2VfaWRzXFxuXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRl
bnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBhczNudTk8L2luY29taW5nPjxv
dXRnb2luZz5TZXF1ZW5jZUZsb3dfMHhyaG5iMTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2Vx
dWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBhczNudTlcIiBzb3VyY2VSZWY9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18xbHM4bWtoXCIvPjxlbmRFdmVu
dCBpZD1cIkVuZEV2ZW50XzAwYWZueHdcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzB4cmhuYjE8
L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18weHJo
bmIxXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWxzOG1raFwiIHRhcmdldFJlZj1cIkVuZEV2
ZW50XzAwYWZueHdcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5
dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9u
Pjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFy
dEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0
ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFkbWU1cmpcIj48dGV4dD48IVtDREFU
QVtHZW5lcmF0ZSBhIG5vdGUgd2l0aCB0aGUgcmVzdWx0cyBmcm9tIHRoZSByZW1vdmUgZGV2aWNl
IG9wZXJhdGlvbnNcblxuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlk
PVwiQXNzb2NpYXRpb25fMDhveXo5Y1wiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFsczhta2hc
IiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xZG1lNXJqXCIvPjx0ZXh0QW5ub3RhdGlvbiBp
ZD1cIlRleHRBbm5vdGF0aW9uXzExNTV4M3RcIj48dGV4dD5Vc2UgYWN0aXZpdHkgZmllbGRzIGZy
b20gdGhlIHJ1bGUgYXMgaW5wdXQ8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24g
aWQ9XCJBc3NvY2lhdGlvbl8xN3Zwc2E5XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWxzOG1r
aFwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzExNTV4M3RcIi8+PC9wcm9jZXNzPjxicG1u
ZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBt
bkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hh
cGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1
YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2
MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIw
XCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdcIiB5PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48
L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5u
b3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2Rj
OkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48
L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0
aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9p
bnQgeD1cIjE2OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3
YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9i
cG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFz
a18xbHM4bWtoXCIgaWQ9XCJTZXJ2aWNlVGFza18xbHM4bWtoX2RpXCI+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjI1OFwiIHk9XCIxNjZcIi8+PC9icG1uZGk6
QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMGFz
M251OVwiIGlkPVwiU2VxdWVuY2VGbG93XzBhczNudTlfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1c
IjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2lu
dCB4PVwiMjU4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpC
UE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyMjhc
IiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRp
OkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFkbWU1cmpcIiBpZD1cIlRl
eHRBbm5vdGF0aW9uXzFkbWU1cmpfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjUyXCIgd2lk
dGg9XCIxODFcIiB4PVwiMzU5XCIgeT1cIjU1XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRp
OkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMDhveXo5Y1wiIGlkPVwiQXNzb2Np
YXRpb25fMDhveXo5Y19kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzUxXCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIxNjlcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0MjBcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEwN1wiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQ
TU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzExNTV4M3RcIiBpZD1cIlRleHRB
bm5vdGF0aW9uXzExNTV4M3RfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjQ2XCIgd2lkdGg9
XCIxMjNcIiB4PVwiMTQ2XCIgeT1cIjY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQ
TU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMTd2cHNhOVwiIGlkPVwiQXNzb2NpYXRp
b25fMTd2cHNhOV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMjc0XCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIxNjZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIyMjhcIiB4c2k6dHlwZT1c
Im9tZ2RjOlBvaW50XCIgeT1cIjExMlwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5T
aGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzAwYWZueHdcIiBpZD1cIkVuZEV2ZW50XzAwYWZu
eHdfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI0MzJc
IiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNc
IiB3aWR0aD1cIjBcIiB4PVwiNDUwXCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZs
b3dfMHhyaG5iMVwiIGlkPVwiU2VxdWVuY2VGbG93XzB4cmhuYjFfZGlcIj48b21nZGk6d2F5cG9p
bnQgeD1cIjM1OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3
YXlwb2ludCB4PVwiNDMyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJw
bW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9
XCIzOTVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48
L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAi
dmVyc2lvbiI6IDN9LCAiYWN0aW9ucyI6IFtdfSwgeyJ3b3JrZmxvd19pZCI6IDIwLCAibmFtZSI6
ICJFeGFtcGxlOiBFeGVjdXRlIE5ldGRldmljZSBDb21tYW5kcyIsICJwcm9ncmFtbWF0aWNfbmFt
ZSI6ICJleGFtcGxlX2V4ZWN1dGVfbmV0ZGV2aWNlX2NvbW1hbmQiLCAib2JqZWN0X3R5cGUiOiAi
aW5jaWRlbnQiLCAiZGVzY3JpcHRpb24iOiAiUGVyZm9ybSBhIHF1ZXJ5IG9wZXJhdGlvbiBhZ2Fp
bnN0IGEgZmlyZXdhbGwgZGV2aWNlIiwgImNyZWF0b3JfaWQiOiAiYUBleGFtcGxlLmNvbSIsICJs
YXN0X21vZGlmaWVkX2J5IjogImFAZXhhbXBsZS5jb20iLCAibGFzdF9tb2RpZmllZF90aW1lIjog
MTU2MTc0MjIxOTc3MCwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9leGVjdXRlX25ldGRldmljZV9j
b21tYW5kIiwgInV1aWQiOiAiYjU0YzVjOWItZDcwOC00ODgzLWEyZGUtMGFjN2QzNTVjMDBjIiwg
ImNvbnRlbnQiOiB7IndvcmtmbG93X2lkIjogImV4YW1wbGVfZXhlY3V0ZV9uZXRkZXZpY2VfY29t
bWFuZCIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+
PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUy
NC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAx
MDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAw
NTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUy
NC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIg
eG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9
XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVz
cGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBs
ZV9leGVjdXRlX25ldGRldmljZV9jb21tYW5kXCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9
XCJFeGFtcGxlOiBFeGVjdXRlIE5ldGRldmljZSBDb21tYW5kc1wiPjxkb2N1bWVudGF0aW9uPlBl
cmZvcm0gYSBxdWVyeSBvcGVyYXRpb24gYWdhaW5zdCBhIGZpcmV3YWxsIGRldmljZTwvZG9jdW1l
bnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5T
ZXF1ZW5jZUZsb3dfMGhmbGw1bDwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBp
ZD1cIlNlcnZpY2VUYXNrXzB1bDJnNzhcIiBuYW1lPVwiZm5fbmV0ZGV2aWNlX3F1ZXJ5XCIgcmVz
aWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1
bmN0aW9uIHV1aWQ9XCJkY2U3ODhlYi1jY2MyLTQ1N2QtYTA5NS1jOWE4OTRmMDc4ZWZcIj57XCJp
bnB1dHNcIjp7XCI3NDdmODM5Zi03MzUzLTQ5NDQtYTA0Yy1iMzIzYmMxM2M3MTdcIjp7XCJpbnB1
dF90eXBlXCI6XCJzdGF0aWNcIixcInN0YXRpY19pbnB1dFwiOntcImJvb2xlYW5fdmFsdWVcIjpm
YWxzZSxcIm11bHRpc2VsZWN0X3ZhbHVlXCI6W119fX0sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0
XCI6XCJpbXBvcnQgcmVcXG5cXG5wcCA9ICcoXFxcXFxcXFx4MWJcXFxcW1xcXFx3KlxcXFxkKig7
XFxcXGQqKSptKSdcXG5cXG5ub3RlID0gdVxcXCJcXFwiXFxuZm9yIGhvc3QgaW4gcmVzdWx0c1sn
Y29udGVudCddOlxcbiAgbm90ZSA9IG5vdGUgKyB1XFxcIkhvc3Q6IHt9XFxcXG5cXFwiLmZvcm1h
dChob3N0KVxcbiAgaWYgcmVzdWx0c1snY29udGVudCddW2hvc3RdLmdldCgnc2VuZF9yZXN1bHQn
KSBhbmQgaXNpbnN0YW5jZShyZXN1bHRzWydjb250ZW50J11baG9zdF1bJ3NlbmRfcmVzdWx0J10s
IGxpc3QpOlxcbiAgICBub3RlID0gbm90ZSArIHVcXFwiQ21kOiB7fVxcXFxuUmVzdWx0OiB7fVxc
XFxuXFxcIi5mb3JtYXQocmVzdWx0c1snY29udGVudCddW2hvc3RdWydzZW5kX2NvbW1hbmQnXSwg
cmVzdWx0c1snY29udGVudCddW2hvc3RdWydzZW5kX3Jlc3VsdCddKVxcbiAgZWxzZTpcXG4gICAg
bm90ZSA9IG5vdGUgKyB1XFxcIkNtZDoge31cXFxcblJlc3VsdDoge31cXFxcblxcXCIuZm9ybWF0
KHJlc3VsdHNbJ2NvbnRlbnQnXVtob3N0XVsnc2VuZF9jb21tYW5kJ10sIHJlLnN1YihwcCwgJycs
IHJlc3VsdHNbJ2NvbnRlbnQnXVtob3N0XS5nZXQoJ3NlbmRfcmVzdWx0JywgJycpKSlcXG4gIFxc
biAgaWYgcmVzdWx0c1snY29udGVudCddW2hvc3RdWydzdGF0dXMnXSA9PSAnZmFpbHVyZSc6XFxu
ICAgIG5vdGUgPSBub3RlICsgdVxcXCJGYWlsdXJlOiB7fVxcXFxuXFxcIi5mb3JtYXQocmVzdWx0
c1snY29udGVudCddW2hvc3RdWydyZWFzb24nXSlcXG4gICAgXFxuICBub3RlID0gbm90ZSArIFxc
XCJcXFxcblxcXCJcXG4gICAgXFxubm90ZV90ZXh0ID0gaGVscGVyLmNyZWF0ZVBsYWluVGV4dChu
b3RlKVxcbmluY2lkZW50LmFkZE5vdGUobm90ZV90ZXh0KVwiLFwicHJlX3Byb2Nlc3Npbmdfc2Ny
aXB0XCI6XCJpbnB1dHMubmV0ZGV2aWNlX2lkcyA9IHJ1bGUucHJvcGVydGllcy5kZXZpY2VfaWRz
XFxuaW5wdXRzLm5ldGRldmljZV9zZW5kX2NtZCA9IHJ1bGUucHJvcGVydGllcy5zZW5kX2NvbW1h
bmRcXG5pbnB1dHMubmV0ZGV2aWNlX3VzZV90ZXh0ZnNtID0gcnVsZS5wcm9wZXJ0aWVzLnVzZV90
ZXh0ZnNtX3RlbXBsYXRlXCIsXCJyZXN1bHRfbmFtZVwiOlwiXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rp
b24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBoZmxsNWw8L2lu
Y29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMG1tam81cjwvb3V0Z29pbmc+PC9zZXJ2aWNl
VGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBoZmxsNWxcIiBzb3VyY2VSZWY9
XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wdWwyZzc4XCIv
PjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzB0dTV1dmpcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93
XzBtbWpvNXI8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNl
Rmxvd18wbW1qbzVyXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMHVsMmc3OFwiIHRhcmdldFJl
Zj1cIkVuZEV2ZW50XzB0dTV1dmpcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRp
b25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRB
bm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VS
ZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4
aXl0XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzBuaDk2bnlcIj48dGV4
dD5HZW5lcmF0ZSBhIG5vdGUgd2l0aCB0aGUgcmVzdWx0cyBmcm9tIHRoZSByZW1vdmUgZGV2aWNl
IG9wZXJhdGlvbnM8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3Nv
Y2lhdGlvbl8wNHBlYWo5XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMHVsMmc3OFwiIHRhcmdl
dFJlZj1cIlRleHRBbm5vdGF0aW9uXzBuaDk2bnlcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4
dEFubm90YXRpb25fMW1hNmtiNVwiPjx0ZXh0PlVzZSBhY3Rpdml0eSBmaWVsZHMgZnJvbSB0aGUg
cnVsZSBhcyBpbnB1dDwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFz
c29jaWF0aW9uXzE0YWZlZmlcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wdWwyZzc4XCIgdGFy
Z2V0UmVmPVwiVGV4dEFubm90YXRpb25fMW1hNmtiNVwiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1O
RGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVu
dD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1u
RWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2Rp
XCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1c
IjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0
aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRp
OkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9u
XzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwvYnBtbmRp
OkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMXNl
dWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwi
MTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndheXBvaW50
IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpC
UE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzB1bDJn
NzhcIiBpZD1cIlNlcnZpY2VUYXNrXzB1bDJnNzhfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMjU5XCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1OU2hh
cGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18waGZsbDVsXCIg
aWQ9XCJTZXF1ZW5jZUZsb3dfMGhmbGw1bF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTk4XCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIy
NTlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJl
bD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjIyOC41XCIgeT1c
IjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8wdHU1dXZqXCIgaWQ9XCJFbmRFdmVudF8wdHU1
dXZqX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNDIy
XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEz
XCIgd2lkdGg9XCIwXCIgeD1cIjQ0MFwiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VG
bG93XzBtbWpvNXJcIiBpZD1cIlNlcXVlbmNlRmxvd18wbW1qbzVyX2RpXCI+PG9tZ2RpOndheXBv
aW50IHg9XCIzNTlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6
d2F5cG9pbnQgeD1cIjQyMlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxi
cG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4
PVwiMzkwLjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRn
ZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzBuaDk2bnlc
IiBpZD1cIlRleHRBbm5vdGF0aW9uXzBuaDk2bnlfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjY5XCIgd2lkdGg9XCIyMTdcIiB4PVwiMzUzXCIgeT1cIjY3XCIvPjwvYnBtbmRpOkJQTU5TaGFw
ZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMDRwZWFqOVwiIGlk
PVwiQXNzb2NpYXRpb25fMDRwZWFqOV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzU3XCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNzRcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0MTJc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEzNlwiLz48L2JwbW5kaTpCUE1ORWRnZT48
YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFtYTZrYjVcIiBp
ZD1cIlRleHRBbm5vdGF0aW9uXzFtYTZrYjVfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjU3
XCIgd2lkdGg9XCIxNTZcIiB4PVwiMTMwXCIgeT1cIjczXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48
YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMTRhZmVmaVwiIGlkPVwi
QXNzb2NpYXRpb25fMTRhZmVmaV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMjcwXCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNjZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIyMzVcIiB4
c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEzMFwiLz48L2JwbW5kaTpCUE1ORWRnZT48L2Jw
bW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAidmVy
c2lvbiI6IDJ9LCAiYWN0aW9ucyI6IFtdfV0sICJyb2xlcyI6IFtdLCAid29ya3NwYWNlcyI6IFtd
LCAiZnVuY3Rpb25zIjogW3siaWQiOiAyNSwgIm5hbWUiOiAiZm5fbmV0ZGV2aWNlX2NvbmZpZyIs
ICJkaXNwbGF5X25hbWUiOiAiZm5fbmV0ZGV2aWNlX2NvbmZpZyIsICJkZXNjcmlwdGlvbiI6IHsi
Zm9ybWF0IjogInRleHQiLCAiY29udGVudCI6ICJVc2UgbmV0TWlrbyB0byBhdHRhY2ggdG8gZGV2
aWNlcyAoc3VjaCBhcyBmaXJld2FsbHMpIGZvciBjb21tYW5kIGxpbmUgY29uZmlndXJhdGlvbiJ9
LCAiZGVzdGluYXRpb25faGFuZGxlIjogImZuX25ldGRldmljZSIsICJleHBvcnRfa2V5IjogImZu
X25ldGRldmljZV9jb25maWciLCAidXVpZCI6ICI5YjNmMzFhMC0zMTI3LTRjZDEtOTJmOC01OTQ3
ZDc0OTJmMjgiLCAidmVyc2lvbiI6IDEsICJjcmVhdG9yIjogeyJpZCI6IDMsICJ0eXBlIjogInVz
ZXIiLCAibmFtZSI6ICJhQGV4YW1wbGUuY29tIiwgImRpc3BsYXlfbmFtZSI6ICJhYmxlIGJha2Vy
In0sICJsYXN0X21vZGlmaWVkX2J5IjogeyJpZCI6IDMsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6
ICJhQGV4YW1wbGUuY29tIiwgImRpc3BsYXlfbmFtZSI6ICJhYmxlIGJha2VyIn0sICJsYXN0X21v
ZGlmaWVkX3RpbWUiOiAxNTYxNjcwMzE0ODgwLCAidmlld19pdGVtcyI6IFt7InN0ZXBfbGFiZWwi
OiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRf
dHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiZWU0YzIxNzctZjExYS00NDEyLWJmYzkt
YWNmZjVjY2VmNjMzIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9sYWJlbCI6
IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90
eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICIyYmU3YTQ0Mi1jMGVkLTQwODAtYTg0YS1m
MTZmZWJiMzY1ZDMiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfV0sICJ3b3JrZmxvd3MiOiBb
eyJ3b3JrZmxvd19pZCI6IDIxLCAibmFtZSI6ICJFeGFtcGxlOiBFeGVjdXRlIE5ldGRldmljZSBD
b25maWd1cmF0aW9uIENvbW1hbmRzIiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfZXhl
Y3V0ZV9uZXRkZXZpY2VfY29uZmlndXJhdGlvbl9jb21tYW5kcyIsICJvYmplY3RfdHlwZSI6ICJp
bmNpZGVudCIsICJkZXNjcmlwdGlvbiI6IG51bGwsICJ1dWlkIjogbnVsbCwgImFjdGlvbnMiOiBb
XX1dfSwgeyJpZCI6IDI2LCAibmFtZSI6ICJmbl9uZXRkZXZpY2VfcXVlcnkiLCAiZGlzcGxheV9u
YW1lIjogImZuX25ldGRldmljZV9xdWVyeSIsICJkZXNjcmlwdGlvbiI6IHsiZm9ybWF0IjogInRl
eHQiLCAiY29udGVudCI6ICJVc2UgbmV0TWlrbyB0byBhdHRhY2ggdG8gZGV2aWNlcyAoc3VjaCBh
cyBmaXJld2FsbHMpIGZvciBjb21tYW5kIGxpbmUgcXVlcnlpbmcifSwgImRlc3RpbmF0aW9uX2hh
bmRsZSI6ICJmbl9uZXRkZXZpY2UiLCAiZXhwb3J0X2tleSI6ICJmbl9uZXRkZXZpY2VfcXVlcnki
LCAidXVpZCI6ICJkY2U3ODhlYi1jY2MyLTQ1N2QtYTA5NS1jOWE4OTRmMDc4ZWYiLCAidmVyc2lv
biI6IDEsICJjcmVhdG9yIjogeyJpZCI6IDMsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJhQGV4
YW1wbGUuY29tIiwgImRpc3BsYXlfbmFtZSI6ICJhYmxlIGJha2VyIn0sICJsYXN0X21vZGlmaWVk
X2J5IjogeyJpZCI6IDMsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJhQGV4YW1wbGUuY29tIiwg
ImRpc3BsYXlfbmFtZSI6ICJhYmxlIGJha2VyIn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTYx
NjcwMzE0ODgwLCAidmlld19pdGVtcyI6IFt7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6
IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9u
IiwgImNvbnRlbnQiOiAiZWU0YzIxNzctZjExYS00NDEyLWJmYzktYWNmZjVjY2VmNjMzIiwgInNo
b3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjog
bnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24i
LCAiY29udGVudCI6ICJjMzM1NmJjMS0zNTIzLTQxOWItOWVkNi0wMzJkZTYzNTAxMjEiLCAic2hv
d19saW5rX2hlYWRlciI6IGZhbHNlfSwgeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBu
dWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIs
ICJjb250ZW50IjogIjc0N2Y4MzlmLTczNTMtNDk0NC1hMDRjLWIzMjNiYzEzYzcxNyIsICJzaG93
X2xpbmtfaGVhZGVyIjogZmFsc2V9XSwgIndvcmtmbG93cyI6IFt7IndvcmtmbG93X2lkIjogMjAs
ICJuYW1lIjogIkV4YW1wbGU6IEV4ZWN1dGUgTmV0ZGV2aWNlIENvbW1hbmRzIiwgInByb2dyYW1t
YXRpY19uYW1lIjogImV4YW1wbGVfZXhlY3V0ZV9uZXRkZXZpY2VfY29tbWFuZCIsICJvYmplY3Rf
dHlwZSI6ICJpbmNpZGVudCIsICJkZXNjcmlwdGlvbiI6IG51bGwsICJ1dWlkIjogbnVsbCwgImFj
dGlvbnMiOiBbXX1dfV19
"""
    )