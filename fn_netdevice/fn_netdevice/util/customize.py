# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_netdevice"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_netdevice package"""
    reload_params = {"package": u"fn_netdevice",
                    "incident_fields": [], 
                    "action_fields": [u"config_commands", u"device_ids", u"send_command", u"use_textfsm_template"], 
                    "function_params": [u"netdevice_config_cmd", u"netdevice_ids", u"netdevice_send_cmd", u"netdevice_use_textfsm"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_netdevice"], 
                    "functions": [u"fn_netdevice", u"fn_netdevice_config"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_execute_netdevice_command", u"example_execute_netdevice_configuration_commands"], 
                    "actions": [u"Example: Execute Netdevice Configuration Changes", u"Example: Execute Netdevice Queries"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     config_commands
    #     device_ids
    #     send_command
    #     use_textfsm_template
    #   Function inputs:
    #     netdevice_config_cmd
    #     netdevice_ids
    #     netdevice_send_cmd
    #     netdevice_use_textfsm
    #   Message Destinations:
    #     fn_netdevice
    #   Functions:
    #     fn_netdevice
    #     fn_netdevice_config
    #   Workflows:
    #     example_execute_netdevice_command
    #     example_execute_netdevice_configuration_commands
    #   Rules:
    #     Example: Execute Netdevice Configuration Changes
    #     Example: Execute Netdevice Queries


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMCwgImJ1aWxkX251bWJl
ciI6IDQyNTQsICJ2ZXJzaW9uIjogIjMxLjAuNDI1NCJ9LCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9u
IjogMiwgImlkIjogMTUsICJleHBvcnRfZGF0ZSI6IDE1NjE0Njg3Mzg1NzAsICJmaWVsZHMiOiBb
eyJpZCI6IDUxLCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAidGV4dCI6ICJTaW11bGF0aW9uIiwg
InByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMCwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5j
aWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQg
aXMgcmVhZC1vbmx5LiIsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjog
ImMzZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIsICJvcGVyYXRpb25zIjogW10s
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogdHJ1ZSwg
ImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImlu
Y2lkZW50L2luY190cmFpbmluZyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxz
ZX0sIHsiaWQiOiAxMzMsICJuYW1lIjogImNvbmZpZ19jb21tYW5kcyIsICJ0ZXh0IjogIkNvbmZp
ZyBDb21tYW5kcyIsICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJ0eXBlX2lkIjogNiwgInRvb2x0
aXAiOiAiIiwgInBsYWNlaG9sZGVyIjogIlNwZWNpZnkgbXVsdGlwbGUgY29tbWFuZHMgb25lIHBl
ciBsaW5lIHRvIGV4ZWN1dGUiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0YXJlYSIsICJyZXF1aXJlZCI6
ICJhbHdheXMiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAi
ZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwg
ImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogImVjOGIxNGQzLWM2OTktNDliMC1iNTJlLTM2YmMw
MmZmMzVjYyIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVl
cyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4
dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL2NvbmZpZ19jb21tYW5k
cyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQiOiAxMzIsICJu
YW1lIjogInNlbmRfY29tbWFuZCIsICJ0ZXh0IjogIlF1ZXJ5IENvbW1hbmQiLCAicHJlZml4Ijog
InByb3BlcnRpZXMiLCAidHlwZV9pZCI6IDYsICJ0b29sdGlwIjogIiIsICJwbGFjZWhvbGRlciI6
ICJDb21tYW5kIGZvciByZW1vdGUgZGV2aWNlKHMpIGV4ZWN1dGlvbiIsICJpbnB1dF90eXBlIjog
InRleHQiLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2Us
ICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxh
bmtfb3B0aW9uIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICJjZTEyMTU0MS0z
MjU0LTRmZGQtYjYxMC0xNzAzNjk3MTQ0OTAiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9u
X3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJs
ZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2Nh
dGlvbi9zZW5kX2NvbW1hbmQiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9
LCB7ImlkIjogMTM0LCAibmFtZSI6ICJkZXZpY2VfaWRzIiwgInRleHQiOiAiRGV2aWNlIElEcyIs
ICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJ0eXBlX2lkIjogNiwgInRvb2x0aXAiOiAiIiwgInBs
YWNlaG9sZGVyIjogIkRldmljZXMgc2VwYXJhdGVkIGJ5IGNvbW1hcyIsICJpbnB1dF90eXBlIjog
InRleHQiLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2Us
ICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxh
bmtfb3B0aW9uIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICJjOTUyYTY1NC1i
MjM4LTQwYmEtOTNkMy0xNmMzYTEyNDkxOGUiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9u
X3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJs
ZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2Nh
dGlvbi9kZXZpY2VfaWRzIiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwg
eyJpZCI6IDEzNiwgIm5hbWUiOiAidXNlX3RleHRmc21fdGVtcGxhdGUiLCAidGV4dCI6ICJVc2Ug
VGV4dEZTTSBUZW1wbGF0ZSIsICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJ0eXBlX2lkIjogNiwg
InRvb2x0aXAiOiAiUmV0dXJuIENTViByZXN1bHRzIGJhc2VkIG9uIGEgdGV4dEZTTSB0ZW1wbGF0
ZSIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJib29sZWFuIiwgInJlcXVpcmVk
IjogImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2Us
ICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IHRydWUs
ICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICI1ZTI4ZTUxNi03ZmZkLTQ5YzItOGZjNS0yNTA5
ZTUwMmFmOGMiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1
ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3Rl
eHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi91c2VfdGV4dGZzbV90
ZW1wbGF0ZSIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQiOiAx
MzAsICJuYW1lIjogIm5ldGRldmljZV9jb25maWdfY21kIiwgInRleHQiOiAibmV0ZGV2aWNlX2Nv
bmZpZ19jbWQiLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAic2Vw
YXJhdGUgbXVsdGktbGluZSBpbnB1dCB3aXRoIGNvbW1hcyIsICJwbGFjZWhvbGRlciI6ICIiLCAi
aW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4i
OiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9u
IjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICIyYmU3YTQ0Mi1jMGVkLTQwODAt
YTg0YS1mMTZmZWJiMzY1ZDMiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjog
e30sICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUs
ICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9uZXRkZXZpY2Vf
Y29uZmlnX2NtZCIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQi
OiAxMzUsICJuYW1lIjogIm5ldGRldmljZV91c2VfdGV4dGZzbSIsICJ0ZXh0IjogIm5ldGRldmlj
ZV91c2VfdGV4dGZzbSIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6
ICJSZXR1cm4gcmVzdWx0cyBiYXNlZCBvbiBhIHRleHRGU00gdGVtcGxhdGUgIiwgInBsYWNlaG9s
ZGVyIjogIiIsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwg
ImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hv
c2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogdHJ1ZSwgImludGVybmFsIjog
ZmFsc2UsICJ1dWlkIjogIjc0N2Y4MzlmLTczNTMtNDk0NC1hMDRjLWIzMjNiYzEzYzcxNyIsICJv
cGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVh
ZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAi
ZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL25ldGRldmljZV91c2VfdGV4dGZzbSIsICJ0ZW1wbGF0
ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQiOiAxMjksICJuYW1lIjogIm5ldGRl
dmljZV9zZW5kX2NtZCIsICJ0ZXh0IjogIm5ldGRldmljZV9zZW5kX2NtZCIsICJwcmVmaXgiOiBu
dWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6ICJTcGVjaWZ5IGEgY29tbWFuZCB0byBleGVj
dXRlIG9uIHJlbW90ZSBkZXZpY2UiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAi
dGV4dCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZh
dWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50
ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiYzMzNTZiYzEtMzUyMy00MTliLTllZDYtMDMyZGU2MzUw
MTIxIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjog
W10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0Ijog
ZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vbmV0ZGV2aWNlX3NlbmRfY21kIiwgInRl
bXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDEzMSwgIm5hbWUiOiAi
bmV0ZGV2aWNlX2lkcyIsICJ0ZXh0IjogIm5ldGRldmljZV9pZHMiLCAicHJlZml4IjogbnVsbCwg
InR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiU3BlY2lmeSBkZXZpY2UgbmFtZXMgd2l0aCBjb21t
YXMiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAidGV4dCIsICJyZXF1aXJlZCI6
ICJhbHdheXMiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAi
ZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwg
ImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogImVlNGMyMTc3LWYxMWEtNDQxMi1iZmM5LWFjZmY1
Y2NlZjYzMyIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVl
cyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4
dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL25ldGRldmljZV9pZHMiLCAidGVt
cGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9XSwgImluY2lkZW50X3R5cGVzIjogW3si
dXBkYXRlX2RhdGUiOiAxNTYxNDY4NzQxMjY0LCAiY3JlYXRlX2RhdGUiOiAxNTYxNDY4NzQxMjY0
LCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZGVzY3Jp
cHRpb24iOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXki
OiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgIm5hbWUiOiAiQ3VzdG9taXph
dGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZh
bHNlLCAicGFyZW50X2lkIjogbnVsbCwgImhpZGRlbiI6IGZhbHNlLCAiaWQiOiAwfV0sICJwaGFz
ZXMiOiBbXSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAib3ZlcnJpZGVzIjogW10sICJtZXNzYWdl
X2Rlc3RpbmF0aW9ucyI6IFt7Im5hbWUiOiAiZm5fbmV0ZGV2aWNlIiwgInByb2dyYW1tYXRpY19u
YW1lIjogImZuX25ldGRldmljZSIsICJkZXN0aW5hdGlvbl90eXBlIjogMCwgImV4cGVjdF9hY2si
OiB0cnVlLCAidXNlcnMiOiBbImFAZXhhbXBsZS5jb20iXSwgInV1aWQiOiAiZDdlZmYyY2UtNDBh
MS00ZDE3LThhMzEtMjJhYzIyMmQ5ZjRlIiwgImV4cG9ydF9rZXkiOiAiZm5fbmV0ZGV2aWNlIn1d
LCAiYWN0aW9ucyI6IFt7ImlkIjogMjAsICJuYW1lIjogIkV4YW1wbGU6IEV4ZWN1dGUgTmV0ZGV2
aWNlIENvbmZpZ3VyYXRpb24gQ2hhbmdlcyIsICJ0eXBlIjogMSwgIm9iamVjdF90eXBlIjogImlu
Y2lkZW50IiwgImNvbmRpdGlvbnMiOiBbXSwgImF1dG9tYXRpb25zIjogW10sICJtZXNzYWdlX2Rl
c3RpbmF0aW9ucyI6IFtdLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX2V4ZWN1dGVfbmV0ZGV2aWNl
X2NvbmZpZ3VyYXRpb25fY29tbWFuZHMiXSwgInZpZXdfaXRlbXMiOiBbeyJzdGVwX2xhYmVsIjog
bnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5
cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJjb250ZW50IjogImM5NTJhNjU0LWIyMzgtNDBiYS05
M2QzLTE2YzNhMTI0OTE4ZSIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9LCB7InN0ZXBfbGFi
ZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmll
bGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgImNvbnRlbnQiOiAiZWM4YjE0ZDMtYzY5OS00
OWIwLWI1MmUtMzZiYzAyZmYzNWNjIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX1dLCAidGlt
ZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImM0NzVlN2ZkLTVmOGQtNGE4OS1iZTA0LTk5
NDg5NGEzYjhkMCIsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IEV4ZWN1dGUgTmV0ZGV2aWNlIENv
bmZpZ3VyYXRpb24gQ2hhbmdlcyIsICJsb2dpY190eXBlIjogImFsbCJ9LCB7ImlkIjogNDQsICJu
YW1lIjogIkV4YW1wbGU6IEV4ZWN1dGUgTmV0ZGV2aWNlIFF1ZXJpZXMiLCAidHlwZSI6IDEsICJv
YmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJjb25kaXRpb25zIjogW10sICJhdXRvbWF0aW9ucyI6
IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV9l
eGVjdXRlX25ldGRldmljZV9jb21tYW5kIl0sICJ2aWV3X2l0ZW1zIjogW3sic3RlcF9sYWJlbCI6
IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90
eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAiY29udGVudCI6ICJjOTUyYTY1NC1iMjM4LTQwYmEt
OTNkMy0xNmMzYTEyNDkxOGUiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfSwgeyJzdGVwX2xh
YmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZp
ZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJjb250ZW50IjogImNlMTIxNTQxLTMyNTQt
NGZkZC1iNjEwLTE3MDM2OTcxNDQ5MCIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9LCB7InN0
ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQi
LCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgImNvbnRlbnQiOiAiNWUyOGU1MTYt
N2ZmZC00OWMyLThmYzUtMjUwOWU1MDJhZjhjIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX1d
LCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogIjRhMmE0NGYzLTFhNTktNGZhYS04
ODE3LWU2YzViNGFlY2U5MiIsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IEV4ZWN1dGUgTmV0ZGV2
aWNlIFF1ZXJpZXMiLCAibG9naWNfdHlwZSI6ICJhbGwifV0sICJsYXlvdXRzIjogW10sICJub3Rp
ZmljYXRpb25zIjogbnVsbCwgInRpbWVmcmFtZXMiOiBudWxsLCAibG9jYWxlIjogbnVsbCwgImlu
ZHVzdHJpZXMiOiBudWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJnZW9zIjogbnVsbCwgInRhc2tf
b3JkZXIiOiBbXSwgImFjdGlvbl9vcmRlciI6IFtdLCAidHlwZXMiOiBbXSwgInNjcmlwdHMiOiBb
XSwgImluY2lkZW50X2FydGlmYWN0X3R5cGVzIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ3b3JrZmxv
d19pZCI6IDI4LCAibmFtZSI6ICJFeGFtcGxlOiBFeGVjdXRlIE5ldGRldmljZSBDb25maWd1cmF0
aW9uIENvbW1hbmRzIiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfZXhlY3V0ZV9uZXRk
ZXZpY2VfY29uZmlndXJhdGlvbl9jb21tYW5kcyIsICJvYmplY3RfdHlwZSI6ICJpbmNpZGVudCIs
ICJkZXNjcmlwdGlvbiI6ICJQZXJmb3JtIGEgY29uZmlndXJhdGlvbiBvcGVyYXRpb24gYWdhaW5z
dCBhIGZpcmV3YWxsIGRldmljZSIsICJjcmVhdG9yX2lkIjogImFAZXhhbXBsZS5jb20iLCAibGFz
dF9tb2RpZmllZF9ieSI6ICJhQGV4YW1wbGUuY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1
NjE0MDk5NTg3MTAsICJleHBvcnRfa2V5IjogImV4YW1wbGVfZXhlY3V0ZV9uZXRkZXZpY2VfY29u
ZmlndXJhdGlvbl9jb21tYW5kcyIsICJ1dWlkIjogIjljMDdmOGJlLThmMDItNDdhMy04OTc2LTM2
YzVlYTc3NTdlOCIsICJjb250ZW50IjogeyJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX2V4ZWN1dGVf
bmV0ZGV2aWNlX2NvbmZpZ3VyYXRpb25fY29tbWFuZHMiLCAieG1sIjogIjw/eG1sIHZlcnNpb249
XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93
d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRw
Oi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRw
Oi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRw
Oi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3Jn
LzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxT
Y2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3Jn
L3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVfZXhlY3V0ZV9uZXRkZXZpY2VfY29uZmlndXJh
dGlvbl9jb21tYW5kc1wiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTogRXhl
Y3V0ZSBOZXRkZXZpY2UgQ29uZmlndXJhdGlvbiBDb21tYW5kc1wiPjxkb2N1bWVudGF0aW9uPlBl
cmZvcm0gYSBjb25maWd1cmF0aW9uIG9wZXJhdGlvbiBhZ2FpbnN0IGEgZmlyZXdhbGwgZGV2aWNl
PC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91
dGdvaW5nPlNlcXVlbmNlRmxvd18wYXMzbnU5PC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZp
Y2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMWxzOG1raFwiIG5hbWU9XCJmbl9uZXRkZXZpY2VfY29u
ZmlnXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVz
aWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI5YjNmMzFhMC0zMTI3LTRjZDEtOTJmOC01OTQ3ZDc0OTJm
MjhcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcIm5vdGUgPSB1
XFxcIlxcXCJcXG5mb3IgaG9zdCBpbiByZXN1bHRzWydjb250ZW50J106XFxuICBub3RlID0gbm90
ZSArIHVcXFwiSG9zdDoge31cXFxcblxcXCIuZm9ybWF0KGhvc3QpXFxuICBub3RlID0gbm90ZSAr
IHVcXFwiQ29uZmlnIENtZDoge31cXFxcblJlc3VsdDoge31cXFxcblxcXCIuZm9ybWF0KHJlc3Vs
dHNbJ2NvbnRlbnQnXVtob3N0XVsnY29uZmlnX2NvbW1hbmQnXSwgcmVzdWx0c1snY29udGVudCdd
W2hvc3RdWydjb25maWdfcmVzdWx0J10pXFxuICBcXG4gIGlmIHJlc3VsdHNbJ2NvbnRlbnQnXVto
b3N0XVsnc3RhdHVzJ10gPT0gJ2ZhaWx1cmUnOlxcbiAgICBub3RlID0gbm90ZSArIHVcXFwiRmFp
bHVyZToge31cXFxcblxcXCIuZm9ybWF0KHJlc3VsdHNbJ2NvbnRlbnQnXVtob3N0XVsncmVhc29u
J10pXFxuICAgIFxcbiAgbm90ZSA9IG5vdGUgKyBcXFwiXFxcXG5cXFwiXFxuICAgIFxcbm5vdGVf
dGV4dCA9IGhlbHBlci5jcmVhdGVQbGFpblRleHQobm90ZSlcXG5pbmNpZGVudC5hZGROb3RlKG5v
dGVfdGV4dClcIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLm5ldGRldmljZV9j
b25maWdfY21kID0gcnVsZS5wcm9wZXJ0aWVzLmNvbmZpZ19jb21tYW5kcy5jb250ZW50XFxuaW5w
dXRzLm5ldGRldmljZV9pZHMgPSBydWxlLnByb3BlcnRpZXMuZGV2aWNlX2lkc1xcblwifTwvcmVz
aWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxv
d18wYXMzbnU5PC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzB4cmhuYjE8L291dGdv
aW5nPjwvc2VydmljZVRhc2s+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wYXMzbnU5
XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRh
c2tfMWxzOG1raFwiLz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wMGFmbnh3XCI+PGluY29taW5n
PlNlcXVlbmNlRmxvd18weHJobmIxPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cg
aWQ9XCJTZXF1ZW5jZUZsb3dfMHhyaG5iMVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFsczht
a2hcIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8wMGFmbnh3XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1c
IlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8
L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1
ajQ4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFu
bm90YXRpb25fMWt4eGl5dFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8x
ZG1lNXJqXCI+PHRleHQ+PCFbQ0RBVEFbR2VuZXJhdGUgYSBub3RlIHdpdGggdGhlIHJlc3VsdHMg
ZnJvbSB0aGUgcmVtb3ZlIGRldmljZSBvcGVyYXRpb25zXG5cbl1dPjwvdGV4dD48L3RleHRBbm5v
dGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzA4b3l6OWNcIiBzb3VyY2VSZWY9
XCJTZXJ2aWNlVGFza18xbHM4bWtoXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWRtZTVy
alwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xMTU1eDN0XCI+PHRleHQ+
VXNlIGFjdGl2aXR5IGZpZWxkcyBmcm9tIHRoZSBydWxlIGFzIGlucHV0PC90ZXh0PjwvdGV4dEFu
bm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMTd2cHNhOVwiIHNvdXJjZVJl
Zj1cIlNlcnZpY2VUYXNrXzFsczhta2hcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xMTU1
eDN0XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwi
PjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxh
bmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3ht
XCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2
XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wi
Lz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRp
b25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwi
IHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2Ug
YnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1
ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJw
bW5FbGVtZW50PVwiU2VydmljZVRhc2tfMWxzOG1raFwiIGlkPVwiU2VydmljZVRhc2tfMWxzOG1r
aF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIyNThc
IiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVt
ZW50PVwiU2VxdWVuY2VGbG93XzBhczNudTlcIiBpZD1cIlNlcXVlbmNlRmxvd18wYXMzbnU5X2Rp
XCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI1OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNc
IiB3aWR0aD1cIjBcIiB4PVwiMjI4XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3Rh
dGlvbl8xZG1lNXJqXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xZG1lNXJqX2RpXCI+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCI1MlwiIHdpZHRoPVwiMTgxXCIgeD1cIjM1OVwiIHk9XCI1NVwiLz48L2Jw
bW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9u
XzA4b3l6OWNcIiBpZD1cIkFzc29jaWF0aW9uXzA4b3l6OWNfZGlcIj48b21nZGk6d2F5cG9pbnQg
eD1cIjM1MVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTY5XCIvPjxvbWdkaTp3YXlw
b2ludCB4PVwiNDIwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMDdcIi8+PC9icG1u
ZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlv
bl8xMTU1eDN0XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xMTU1eDN0X2RpXCI+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCI0NlwiIHdpZHRoPVwiMTIzXCIgeD1cIjE0NlwiIHk9XCI2NlwiLz48L2JwbW5k
aTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzE3
dnBzYTlcIiBpZD1cIkFzc29jaWF0aW9uXzE3dnBzYTlfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1c
IjI3NFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTY2XCIvPjxvbWdkaTp3YXlwb2lu
dCB4PVwiMjI4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMTJcIi8+PC9icG1uZGk6
QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8wMGFmbnh3
XCIgaWQ9XCJFbmRFdmVudF8wMGFmbnh3X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwi
IHdpZHRoPVwiMzZcIiB4PVwiNDMyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjQ1MFwiIHk9XCIyMjdcIi8+
PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJw
bW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzB4cmhuYjFcIiBpZD1cIlNlcXVlbmNlRmxvd18weHJo
bmIxX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzNThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQzMlwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMzk1XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFi
ZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFn
cmFtPjwvZGVmaW5pdGlvbnM+IiwgInZlcnNpb24iOiA1fSwgImFjdGlvbnMiOiBbXX0sIHsid29y
a2Zsb3dfaWQiOiAxLCAibmFtZSI6ICJFeGFtcGxlOiBFeGVjdXRlIE5ldGRldmljZSBDb21tYW5k
cyIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX2V4ZWN1dGVfbmV0ZGV2aWNlX2NvbW1h
bmQiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiZGVzY3JpcHRpb24iOiAiUGVyZm9ybSBh
IHF1ZXJ5IG9wZXJhdGlvbiBhZ2FpbnN0IGEgZmlyZXdhbGwgZGV2aWNlIiwgImNyZWF0b3JfaWQi
OiAiYUBleGFtcGxlLmNvbSIsICJsYXN0X21vZGlmaWVkX2J5IjogImFAZXhhbXBsZS5jb20iLCAi
bGFzdF9tb2RpZmllZF90aW1lIjogMTU2MTQwOTg5OTU1NiwgImV4cG9ydF9rZXkiOiAiZXhhbXBs
ZV9leGVjdXRlX25ldGRldmljZV9jb21tYW5kIiwgInV1aWQiOiAiYjU0YzVjOWItZDcwOC00ODgz
LWEyZGUtMGFjN2QzNTVjMDBjIiwgImNvbnRlbnQiOiB7IndvcmtmbG93X2lkIjogImV4YW1wbGVf
ZXhlY3V0ZV9uZXRkZXZpY2VfY29tbWFuZCIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwi
IGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcu
b3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cu
b21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cu
b21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9t
Zy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNp
bGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9Y
TUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1p
bnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwi
Pjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9leGVjdXRlX25ldGRldmljZV9jb21tYW5kXCIgaXNFeGVj
dXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBFeGVjdXRlIE5ldGRldmljZSBDb21tYW5k
c1wiPjxkb2N1bWVudGF0aW9uPlBlcmZvcm0gYSBxdWVyeSBvcGVyYXRpb24gYWdhaW5zdCBhIGZp
cmV3YWxsIGRldmljZTwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRf
MTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMGhmbGw1bDwvb3V0Z29pbmc+PC9zdGFy
dEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzB1bDJnNzhcIiBuYW1lPVwiZm5f
bmV0ZGV2aWNlXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50
cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCJlMWNjNTA0OS04YzIyLTQ4ZTgtYTJjZi0zMDg2
ZmFlNjBmYjRcIj57XCJpbnB1dHNcIjp7XCI3NDdmODM5Zi03MzUzLTQ5NDQtYTA0Yy1iMzIzYmMx
M2M3MTdcIjp7XCJpbnB1dF90eXBlXCI6XCJzdGF0aWNcIixcInN0YXRpY19pbnB1dFwiOntcImJv
b2xlYW5fdmFsdWVcIjp0cnVlLFwibXVsdGlzZWxlY3RfdmFsdWVcIjpbXX19fSxcInBvc3RfcHJv
Y2Vzc2luZ19zY3JpcHRcIjpcIm5vdGUgPSB1XFxcIlxcXCJcXG5mb3IgaG9zdCBpbiByZXN1bHRz
Wydjb250ZW50J106XFxuICBub3RlID0gbm90ZSArIHVcXFwiSG9zdDoge31cXFxcblxcXCIuZm9y
bWF0KGhvc3QpXFxuICBub3RlID0gbm90ZSArIHVcXFwiQ21kOiB7fVxcXFxuUmVzdWx0OiB7fVxc
XFxuXFxcIi5mb3JtYXQocmVzdWx0c1snY29udGVudCddW2hvc3RdWydzZW5kX2NvbW1hbmQnXSwg
cmVzdWx0c1snY29udGVudCddW2hvc3RdWydzZW5kX3Jlc3VsdCddKVxcbiAgXFxuICBpZiByZXN1
bHRzWydjb250ZW50J11baG9zdF1bJ3N0YXR1cyddID09ICdmYWlsdXJlJzpcXG4gICAgbm90ZSA9
IG5vdGUgKyB1XFxcIkZhaWx1cmU6IHt9XFxcXG5cXFwiLmZvcm1hdChyZXN1bHRzWydjb250ZW50
J11baG9zdF1bJ3JlYXNvbiddKVxcbiAgICBcXG4gIG5vdGUgPSBub3RlICsgXFxcIlxcXFxuXFxc
IlxcbiAgICBcXG5ub3RlX3RleHQgPSBoZWxwZXIuY3JlYXRlUGxhaW5UZXh0KG5vdGUpXFxuaW5j
aWRlbnQuYWRkTm90ZShub3RlX3RleHQpXCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlu
cHV0cy5uZXRkZXZpY2VfaWRzID0gcnVsZS5wcm9wZXJ0aWVzLmRldmljZV9pZHNcXG5pbnB1dHMu
bmV0ZGV2aWNlX3NlbmRfY21kID0gcnVsZS5wcm9wZXJ0aWVzLnNlbmRfY29tbWFuZFxcbmlucHV0
cy5uZXRkZXZpY2VfdXNlX3RleHRmc20gPSBydWxlLnByb3BlcnRpZXMudXNlX3RleHRmc21fdGVt
cGxhdGVcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWlu
Zz5TZXF1ZW5jZUZsb3dfMGhmbGw1bDwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18w
bW1qbzVyPC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5j
ZUZsb3dfMGhmbGw1bFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJl
Zj1cIlNlcnZpY2VUYXNrXzB1bDJnNzhcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMHR1NXV2
alwiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMG1tam81cjwvaW5jb21pbmc+PC9lbmRFdmVudD48
c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBtbWpvNXJcIiBzb3VyY2VSZWY9XCJTZXJ2
aWNlVGFza18wdWwyZzc4XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMHR1NXV2alwiLz48dGV4dEFu
bm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3
b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNz
b2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdl
dFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4
dEFubm90YXRpb25fMG5oOTZueVwiPjx0ZXh0PkdlbmVyYXRlIGEgbm90ZSB3aXRoIHRoZSByZXN1
bHRzIGZyb20gdGhlIHJlbW92ZSBkZXZpY2Ugb3BlcmF0aW9uczwvdGV4dD48L3RleHRBbm5vdGF0
aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzA0cGVhajlcIiBzb3VyY2VSZWY9XCJT
ZXJ2aWNlVGFza18wdWwyZzc4XCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMG5oOTZueVwi
Lz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xbWE2a2I1XCI+PHRleHQ+VXNl
IGFjdGl2aXR5IGZpZWxkcyBmcm9tIHRoZSBydWxlIGFzIGlucHV0PC90ZXh0PjwvdGV4dEFubm90
YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMTRhZmVmaVwiIHNvdXJjZVJlZj1c
IlNlcnZpY2VUYXNrXzB1bDJnNzhcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xbWE2a2I1
XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxi
cG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVf
MVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIg
aWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIg
d2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48
L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJw
bW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25f
MWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9
XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBt
bkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4
X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5F
bGVtZW50PVwiU2VydmljZVRhc2tfMHVsMmc3OFwiIGlkPVwiU2VydmljZVRhc2tfMHVsMmc3OF9k
aVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIyNTlcIiB5
PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50
PVwiU2VxdWVuY2VGbG93XzBoZmxsNWxcIiBpZD1cIlNlcXVlbmNlRmxvd18waGZsbDVsX2RpXCI+
PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIw
NlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI1OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3
aWR0aD1cIjBcIiB4PVwiMjI4LjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2Jw
bW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzB0
dTV1dmpcIiBpZD1cIkVuZEV2ZW50XzB0dTV1dmpfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI0MjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVs
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNDQwXCIgeT1cIjIy
N1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVk
Z2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMG1tam81clwiIGlkPVwiU2VxdWVuY2VGbG93
XzBtbWpvNXJfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjM1OVwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDIyXCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIzOTAuNVwiIHk9XCIxODRcIi8+PC9icG1uZGk6
QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50
PVwiVGV4dEFubm90YXRpb25fMG5oOTZueVwiIGlkPVwiVGV4dEFubm90YXRpb25fMG5oOTZueV9k
aVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNjlcIiB3aWR0aD1cIjIxN1wiIHg9XCIzNTNcIiB5
PVwiNjdcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9
XCJBc3NvY2lhdGlvbl8wNHBlYWo5XCIgaWQ9XCJBc3NvY2lhdGlvbl8wNHBlYWo5X2RpXCI+PG9t
Z2RpOndheXBvaW50IHg9XCIzNTdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE3NFwi
Lz48b21nZGk6d2F5cG9pbnQgeD1cIjQxMlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwi
MTM2XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwi
VGV4dEFubm90YXRpb25fMW1hNmtiNVwiIGlkPVwiVGV4dEFubm90YXRpb25fMW1hNmtiNV9kaVwi
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNTdcIiB3aWR0aD1cIjE1NlwiIHg9XCIxMzBcIiB5PVwi
NzNcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJB
c3NvY2lhdGlvbl8xNGFmZWZpXCIgaWQ9XCJBc3NvY2lhdGlvbl8xNGFmZWZpX2RpXCI+PG9tZ2Rp
OndheXBvaW50IHg9XCIyNzBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE2NlwiLz48
b21nZGk6d2F5cG9pbnQgeD1cIjIzNVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTMw
XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlh
Z3JhbT48L2RlZmluaXRpb25zPiIsICJ2ZXJzaW9uIjogMjV9LCAiYWN0aW9ucyI6IFtdfV0sICJy
b2xlcyI6IFtdLCAid29ya3NwYWNlcyI6IFtdLCAiZnVuY3Rpb25zIjogW3siaWQiOiAxLCAibmFt
ZSI6ICJmbl9uZXRkZXZpY2UiLCAiZGlzcGxheV9uYW1lIjogImZuX25ldGRldmljZSIsICJkZXNj
cmlwdGlvbiI6IHsiZm9ybWF0IjogInRleHQiLCAiY29udGVudCI6ICJVc2UgTmV0bWlrbyB0byBh
dHRhY2ggdG8gZGV2aWNlcyAoc3VjaCBhcyBmaXJld2FsbHMpIGZvciBjb21tYW5kIGxpbmUgcXVl
cnlpbmcifSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJmbl9uZXRkZXZpY2UiLCAiZXhwb3J0X2tl
eSI6ICJmbl9uZXRkZXZpY2UiLCAidXVpZCI6ICJlMWNjNTA0OS04YzIyLTQ4ZTgtYTJjZi0zMDg2
ZmFlNjBmYjQiLCAidmVyc2lvbiI6IDUsICJjcmVhdG9yIjogeyJpZCI6IDMsICJ0eXBlIjogInVz
ZXIiLCAibmFtZSI6ICJhQGV4YW1wbGUuY29tIiwgImRpc3BsYXlfbmFtZSI6ICJhYmxlIGJha2Vy
In0sICJsYXN0X21vZGlmaWVkX2J5IjogeyJpZCI6IDMsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6
ICJhQGV4YW1wbGUuY29tIiwgImRpc3BsYXlfbmFtZSI6ICJhYmxlIGJha2VyIn0sICJsYXN0X21v
ZGlmaWVkX3RpbWUiOiAxNTYxNDA3NzIwNDE5LCAidmlld19pdGVtcyI6IFt7InN0ZXBfbGFiZWwi
OiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRf
dHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiZWU0YzIxNzctZjExYS00NDEyLWJmYzkt
YWNmZjVjY2VmNjMzIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9sYWJlbCI6
IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90
eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICJjMzM1NmJjMS0zNTIzLTQxOWItOWVkNi0w
MzJkZTYzNTAxMjEiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfSwgeyJzdGVwX2xhYmVsIjog
bnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5
cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogIjc0N2Y4MzlmLTczNTMtNDk0NC1hMDRjLWIz
MjNiYzEzYzcxNyIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9XSwgIndvcmtmbG93cyI6IFt7
IndvcmtmbG93X2lkIjogMSwgIm5hbWUiOiAiRXhhbXBsZTogRXhlY3V0ZSBOZXRkZXZpY2UgQ29t
bWFuZHMiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9leGVjdXRlX25ldGRldmljZV9j
b21tYW5kIiwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgImRlc2NyaXB0aW9uIjogbnVsbCwg
InV1aWQiOiBudWxsLCAiYWN0aW9ucyI6IFtdfV19LCB7ImlkIjogMjUsICJuYW1lIjogImZuX25l
dGRldmljZV9jb25maWciLCAiZGlzcGxheV9uYW1lIjogImZuX25ldGRldmljZV9jb25maWciLCAi
ZGVzY3JpcHRpb24iOiB7ImZvcm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAiVXNlIE5ldG1pa28g
dG8gYXR0YWNoIHRvIGRldmljZXMgKHN1Y2ggYXMgZmlyZXdhbGxzKSBmb3IgY29tbWFuZCBsaW5l
IGNvbmZpZ3VyYXRpb24ifSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJmbl9uZXRkZXZpY2UiLCAi
ZXhwb3J0X2tleSI6ICJmbl9uZXRkZXZpY2VfY29uZmlnIiwgInV1aWQiOiAiOWIzZjMxYTAtMzEy
Ny00Y2QxLTkyZjgtNTk0N2Q3NDkyZjI4IiwgInZlcnNpb24iOiAyLCAiY3JlYXRvciI6IHsiaWQi
OiAzLCAidHlwZSI6ICJ1c2VyIiwgIm5hbWUiOiAiYUBleGFtcGxlLmNvbSIsICJkaXNwbGF5X25h
bWUiOiAiYWJsZSBiYWtlciJ9LCAibGFzdF9tb2RpZmllZF9ieSI6IHsiaWQiOiAzLCAidHlwZSI6
ICJ1c2VyIiwgIm5hbWUiOiAiYUBleGFtcGxlLmNvbSIsICJkaXNwbGF5X25hbWUiOiAiYWJsZSBi
YWtlciJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU2MTQwNzc0MDc4OSwgInZpZXdfaXRlbXMi
OiBbeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVs
ZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogImVlNGMyMTc3
LWYxMWEtNDQxMi1iZmM5LWFjZmY1Y2NlZjYzMyIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9
LCB7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxk
X3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiMmJlN2E0NDIt
YzBlZC00MDgwLWE4NGEtZjE2ZmViYjM2NWQzIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX1d
LCAid29ya2Zsb3dzIjogW3sid29ya2Zsb3dfaWQiOiAyOCwgIm5hbWUiOiAiRXhhbXBsZTogRXhl
Y3V0ZSBOZXRkZXZpY2UgQ29uZmlndXJhdGlvbiBDb21tYW5kcyIsICJwcm9ncmFtbWF0aWNfbmFt
ZSI6ICJleGFtcGxlX2V4ZWN1dGVfbmV0ZGV2aWNlX2NvbmZpZ3VyYXRpb25fY29tbWFuZHMiLCAi
b2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiZGVzY3JpcHRpb24iOiBudWxsLCAidXVpZCI6IG51
bGwsICJhY3Rpb25zIjogW119XX1dfQ==
"""
    )