# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_proofpoint_trap"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_proofpoint_trap package"""
    reload_params = {"package": u"fn_proofpoint_trap",
                    "incident_fields": [u"proofpoint_trap_incident_id"], 
                    "action_fields": [], 
                    "function_params": [u"trap_incident_id"], 
                    "datatables": [u"proofpoint_trap_events"], 
                    "message_destinations": [u"fn_proofpoint_trap"], 
                    "functions": [u"fn_proofpoint_trap_get_incident_details"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"proofpoint_trap_get_incident_details"], 
                    "actions": [u"Proofpoint TRAP: Get Incident Details"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Incident fields:
    #     proofpoint_trap_incident_id
    #   Function inputs:
    #     trap_incident_id
    #   DataTables:
    #     proofpoint_trap_events
    #   Message Destinations:
    #     fn_proofpoint_trap
    #   Functions:
    #     fn_proofpoint_trap_get_incident_details
    #   Workflows:
    #     proofpoint_trap_get_incident_details
    #   Rules:
    #     Proofpoint TRAP: Get Incident Details


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMiwgIm1pbm9yIjogMCwgImJ1aWxkX251bWJl
ciI6IDQ1MDIsICJ2ZXJzaW9uIjogIjMyLjAuNDUwMiJ9LCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9u
IjogMiwgImlkIjogMywgImV4cG9ydF9kYXRlIjogMTU2NjQwMjY3NTIxMiwgImZpZWxkcyI6IFt7
ImlkIjogMzI0LCAibmFtZSI6ICJwcm9vZnBvaW50X3RyYXBfaW5jaWRlbnRfaWQiLCAidGV4dCI6
ICJwcm9vZnBvaW50X3RyYXBfaW5jaWRlbnRfaWQiLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAi
dHlwZV9pZCI6IDAsICJ0b29sdGlwIjogIlByb29mcG9pbnQgVFJBUCBpbmNpZGV0IGlkLiIsICJw
bGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjog
IjYwMWU1N2UzLTlkZWQtNGUxZi1iZmNjLTEwODRiNmQyNjIzNyIsICJvcGVyYXRpb25zIjogW10s
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2Us
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJp
bmNpZGVudC9wcm9vZnBvaW50X3RyYXBfaW5jaWRlbnRfaWQiLCAidGVtcGxhdGVzIjogW10sICJk
ZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMzIxLCAibmFtZSI6ICJ0cmFwX2luY2lkZW50X2lk
IiwgInRleHQiOiAidHJhcF9pbmNpZGVudF9pZCIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6
IDExLCAidG9vbHRpcCI6ICJQcm9vZnBvaW50IFRSQVAgSW5jaWRlbnQgSUQgKGludGVnZXIpIiwg
InBsYWNlaG9sZGVyIjogIjEiLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAiaGlkZV9ub3RpZmlj
YXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVy
IjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlk
IjogIjhhM2I2ZGY0LTJjOWYtNDc1My05OGE4LTAwNjA1ZDBmZjllZiIsICJvcGVyYXRpb25zIjog
W10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFs
c2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6
ICJfX2Z1bmN0aW9uL3RyYXBfaW5jaWRlbnRfaWQiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNh
dGVkIjogZmFsc2V9XSwgImluY2lkZW50X3R5cGVzIjogW3sidXBkYXRlX2RhdGUiOiAxNTY2NDAy
Njc1NTkyLCAiY3JlYXRlX2RhdGUiOiAxNTY2NDAyNjc1NTkyLCAidXVpZCI6ICJiZmVlYzJkNC0z
NzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXphdGlv
biBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNr
YWdlcyAoaW50ZXJuYWwpIiwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJu
YWwpIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVs
bCwgImhpZGRlbiI6IGZhbHNlLCAiaWQiOiAwfV0sICJwaGFzZXMiOiBbXSwgImF1dG9tYXRpY190
YXNrcyI6IFtdLCAib3ZlcnJpZGVzIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7Im5h
bWUiOiAiZm5fcHJvb2Zwb2ludF90cmFwIiwgInByb2dyYW1tYXRpY19uYW1lIjogImZuX3Byb29m
cG9pbnRfdHJhcCIsICJkZXN0aW5hdGlvbl90eXBlIjogMCwgImV4cGVjdF9hY2siOiB0cnVlLCAi
dXNlcnMiOiBbImFAYS5jb20iXSwgInV1aWQiOiAiOWU0MzY5YzAtNmZiZi00ZDM3LWIzYWUtNTFj
NDRiNTliYTFmIiwgImV4cG9ydF9rZXkiOiAiZm5fcHJvb2Zwb2ludF90cmFwIn1dLCAiYWN0aW9u
cyI6IFt7ImlkIjogMzMsICJuYW1lIjogIlByb29mcG9pbnQgVFJBUDogR2V0IEluY2lkZW50IERl
dGFpbHMiLCAidHlwZSI6IDEsICJvYmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJjb25kaXRpb25z
IjogW10sICJhdXRvbWF0aW9ucyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgIndv
cmtmbG93cyI6IFsicHJvb2Zwb2ludF90cmFwX2dldF9pbmNpZGVudF9kZXRhaWxzIl0sICJ2aWV3
X2l0ZW1zIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAiZTgyNTc5ZjEt
NjRjZS00YzE1LWFlNDMtYzc2NTk1ZjdkM2Y4IiwgImV4cG9ydF9rZXkiOiAiUHJvb2Zwb2ludCBU
UkFQOiBHZXQgSW5jaWRlbnQgRGV0YWlscyIsICJsb2dpY190eXBlIjogImFsbCJ9XSwgImxheW91
dHMiOiBbXSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAidGltZWZyYW1lcyI6IG51bGwsICJsb2Nh
bGUiOiBudWxsLCAiaW5kdXN0cmllcyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwgImdlb3Mi
OiBudWxsLCAidGFza19vcmRlciI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJ0eXBlcyI6IFt7
ImlkIjogbnVsbCwgInR5cGVfaWQiOiA4LCAidHlwZV9uYW1lIjogInByb29mcG9pbnRfdHJhcF9l
dmVudHMiLCAiZmllbGRzIjogeyJldmVudF9pZCI6IHsiaWQiOiAzMTMsICJuYW1lIjogImV2ZW50
X2lkIiwgInRleHQiOiAiRXZlbnQgSUQiLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMDAw
LCAidG9vbHRpcCI6ICIiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAibnVtYmVy
IiwgInJlcXVpcmVkIjogImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hv
c2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29w
dGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiNWM3M2ZkNGUtYjk0OC00
ZjFmLWIwZGMtN2MzMTkzMzdjNWNhIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJt
cyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0
cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogInByb29mcG9pbnRfdHJhcF9l
dmVudHMvZXZlbnRfaWQiLCAib3JkZXIiOiAwLCAid2lkdGgiOiA0MSwgInRlbXBsYXRlcyI6IFtd
LCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgImV2ZW50X3N0YXRlIjogeyJpZCI6IDMxNCwgIm5hbWUi
OiAiZXZlbnRfc3RhdGUiLCAidGV4dCI6ICJTdGF0ZSIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9p
ZCI6IDEwMDAsICJ0b29sdGlwIjogIiIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6
ICJ0ZXh0IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJp
bnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICJhMGY5NGNjMi1jMzA5LTQzYmItOGM4Zi0yNGUzYWY0
OTI0ZGIiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMi
OiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQi
OiBmYWxzZSwgImV4cG9ydF9rZXkiOiAicHJvb2Zwb2ludF90cmFwX2V2ZW50cy9ldmVudF9zdGF0
ZSIsICJvcmRlciI6IDcsICJ3aWR0aCI6IDU1LCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVk
IjogZmFsc2V9LCAiZXZlbnRfYXR0YWNrZGlyZWN0aW9uIjogeyJpZCI6IDMxNSwgIm5hbWUiOiAi
ZXZlbnRfYXR0YWNrZGlyZWN0aW9uIiwgInRleHQiOiAiQXR0YWNrIERpcmVjdGlvbiIsICJwcmVm
aXgiOiBudWxsLCAidHlwZV9pZCI6IDEwMDAsICJ0b29sdGlwIjogIiIsICJwbGFjZWhvbGRlciI6
ICIiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJj
aG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtf
b3B0aW9uIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICJjZDkzY2ZlMi02OWU0
LTQ2ZDctYjQ1Mi1lYTkwYWYxOWRlMWYiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Bl
cm1zIjoge30sICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6
IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAicHJvb2Zwb2ludF90cmFw
X2V2ZW50cy9ldmVudF9hdHRhY2tkaXJlY3Rpb24iLCAib3JkZXIiOiAzLCAid2lkdGgiOiA3NSwg
InRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgImV2ZW50X2Rlc2NyaXB0aW9u
IjogeyJpZCI6IDMxNiwgIm5hbWUiOiAiZXZlbnRfZGVzY3JpcHRpb24iLCAidGV4dCI6ICJEZXNj
cmlwdGlvbiIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDEwMDAsICJ0b29sdGlwIjogIiIs
ICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImhpZGVfbm90aWZpY2F0
aW9uIjogZmFsc2UsICJjaG9zZW4iOiB0cnVlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJibGFua19vcHRpb24iOiB0cnVlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAi
ZTI1MTcwZDctMThlNy00MmJhLTg2YjUtZWIwYWEwYTZjNzY4IiwgIm9wZXJhdGlvbnMiOiBbXSwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwg
ImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogInBy
b29mcG9pbnRfdHJhcF9ldmVudHMvZXZlbnRfZGVzY3JpcHRpb24iLCAib3JkZXIiOiAyLCAid2lk
dGgiOiA2MywgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgImV2ZW50X3Nl
dmVyaXR5IjogeyJpZCI6IDMxNywgIm5hbWUiOiAiZXZlbnRfc2V2ZXJpdHkiLCAidGV4dCI6ICJT
ZXZlcml0eSIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDEwMDAsICJ0b29sdGlwIjogIiIs
ICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImhpZGVfbm90aWZpY2F0
aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6
IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6
ICIwNDBiNzg2Ni04YzY4LTQyYTctOGI2My1lYTMzYmE4MDEwYWMiLCAib3BlcmF0aW9ucyI6IFtd
LCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNl
LCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAi
cHJvb2Zwb2ludF90cmFwX2V2ZW50cy9ldmVudF9zZXZlcml0eSIsICJvcmRlciI6IDQsICJ3aWR0
aCI6IDU5LCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCAiZXZlbnRfc291
cmNlIjogeyJpZCI6IDMxOCwgIm5hbWUiOiAiZXZlbnRfc291cmNlIiwgInRleHQiOiAiU291cmNl
IiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTAwMCwgInRvb2x0aXAiOiAiIiwgInBsYWNl
aG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBm
YWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2Us
ICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjJhYmM0
Yjk4LTIzYzItNDBlMy1iMmMzLWNkOWIwMDYzNWNlYyIsICJvcGVyYXRpb25zIjogW10sICJvcGVy
YXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFu
Z2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJwcm9vZnBv
aW50X3RyYXBfZXZlbnRzL2V2ZW50X3NvdXJjZSIsICJvcmRlciI6IDUsICJ3aWR0aCI6IDU3LCAi
dGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCAiZXZlbnRfY2F0ZWdvcnkiOiB7
ImlkIjogMzIzLCAibmFtZSI6ICJldmVudF9jYXRlZ29yeSIsICJ0ZXh0IjogIkV2ZW50IGNhdGVn
b3J5IiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTAwMCwgInRvb2x0aXAiOiAiIiwgInBs
YWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjQw
NzNkYTc5LTFjMjktNDcwMi1hMDk1LTdlYjE1MmMzYWFiOSIsICJvcGVyYXRpb25zIjogW10sICJv
cGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJj
aGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJwcm9v
ZnBvaW50X3RyYXBfZXZlbnRzL2V2ZW50X2NhdGVnb3J5IiwgIm9yZGVyIjogMSwgIndpZHRoIjog
NzAsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sICJldmVudF90aHJlYXRu
YW1lIjogeyJpZCI6IDMxOSwgIm5hbWUiOiAiZXZlbnRfdGhyZWF0bmFtZSIsICJ0ZXh0IjogIlRo
cmVhdCBOYW1lIiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTAwMCwgInRvb2x0aXAiOiAi
IiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlkZV9ub3RpZmlj
YXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVy
IjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlk
IjogImIxZWQwYWU3LTkyOTYtNGRiNS04ZTVhLTIzMjNlZTJjYzdmMyIsICJvcGVyYXRpb25zIjog
W10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFs
c2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6
ICJwcm9vZnBvaW50X3RyYXBfZXZlbnRzL2V2ZW50X3RocmVhdG5hbWUiLCAib3JkZXIiOiA2LCAi
d2lkdGgiOiA1OSwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgImV2ZW50
X3JlY2VpdmVkIjogeyJpZCI6IDMyMCwgIm5hbWUiOiAiZXZlbnRfcmVjZWl2ZWQiLCAidGV4dCI6
ICJFdmVudCBSZWNlaXZlZCIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDEwMDAsICJ0b29s
dGlwIjogIiIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImhpZGVf
bm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5
X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNl
LCAidXVpZCI6ICI3ZDQ3MTZiNy1jOTg4LTRlZDEtODgwZS03YjExODVlMjg1Y2EiLCAib3BlcmF0
aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25s
eSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9y
dF9rZXkiOiAicHJvb2Zwb2ludF90cmFwX2V2ZW50cy9ldmVudF9yZWNlaXZlZCIsICJvcmRlciI6
IDgsICJ3aWR0aCI6IDcyLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9fSwg
InByb3BlcnRpZXMiOiB7ImNhbl9jcmVhdGUiOiBmYWxzZSwgImNhbl9kZXN0cm95IjogZmFsc2Us
ICJmb3Jfd2hvIjogW119LCAicGFyZW50X3R5cGVzIjogWyJpbmNpZGVudCJdLCAiZGlzcGxheV9u
YW1lIjogIlByb29mcG9pbnQgVFJBUCBFdmVudHMiLCAiZm9yX25vdGlmaWNhdGlvbnMiOiBmYWxz
ZSwgImZvcl9hY3Rpb25zIjogZmFsc2UsICJmb3JfY3VzdG9tX2ZpZWxkcyI6IGZhbHNlLCAiZm9y
X3dvcmtmbG93cyI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJwcm9vZnBvaW50X3RyYXBfZXZlbnRz
IiwgInV1aWQiOiAiZTYwNTY2ZDYtZDZkMy00NDFkLWFhMTAtODM3NDJlZjNlOGUzIiwgImFjdGlv
bnMiOiBbXSwgInNjcmlwdHMiOiBbXX1dLCAic2NyaXB0cyI6IFtdLCAiaW5jaWRlbnRfYXJ0aWZh
Y3RfdHlwZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7IndvcmtmbG93X2lkIjogNCwgIm5hbWUiOiAi
UHJvb2Zwb2ludCBUUkFQOiBHZXQgSW5jaWRlbnQgRGV0YWlscyIsICJwcm9ncmFtbWF0aWNfbmFt
ZSI6ICJwcm9vZnBvaW50X3RyYXBfZ2V0X2luY2lkZW50X2RldGFpbHMiLCAib2JqZWN0X3R5cGUi
OiAiaW5jaWRlbnQiLCAiZGVzY3JpcHRpb24iOiAiUHJvb2Zwb2ludCBUcmFwOiBHZXQgSW5jaWRl
bnQgRGV0YWlscyIsICJjcmVhdG9yX2lkIjogImFAYS5jb20iLCAibGFzdF9tb2RpZmllZF9ieSI6
ICJhQGEuY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NjY0MDE5MTMyNDIsICJleHBvcnRf
a2V5IjogInByb29mcG9pbnRfdHJhcF9nZXRfaW5jaWRlbnRfZGV0YWlscyIsICJ1dWlkIjogImRj
ZWVjYmNkLTUxNzQtNDZkZi1hMmYxLTQ2YzExNmRhMDY0ZCIsICJjb250ZW50IjogeyJ3b3JrZmxv
d19pZCI6ICJwcm9vZnBvaW50X3RyYXBfZ2V0X2luY2lkZW50X2RldGFpbHMiLCAieG1sIjogIjw/
eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxu
cz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpi
cG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6
b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9t
Z2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNp
bGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6
Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5v
cmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3
LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cInByb29mcG9pbnRfdHJhcF9nZXRfaW5j
aWRlbnRfZGV0YWlsc1wiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiUHJvb2Zwb2ludCBU
UkFQOiBHZXQgSW5jaWRlbnQgRGV0YWlsc1wiPjxkb2N1bWVudGF0aW9uPlByb29mcG9pbnQgVHJh
cDogR2V0IEluY2lkZW50IERldGFpbHM8L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJT
dGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFodWs2MGo8L291dGdv
aW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xMm1pZ213XCIg
bmFtZT1cIlByb29mcG9pbnQgVFJBUDogR2V0IEluY2lkZW50IERldC4uLlwiIHJlc2lsaWVudDp0
eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1
dWlkPVwiMjVkMDkyYzAtNWFiNy00NDE0LTliNDYtY2E5YjBlNzNhMmI3XCI+e1wiaW5wdXRzXCI6
e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJub3RlID0gXFxcInt9XFxcIi5mb3JtYXQo
dW5pY29kZShyZXN1bHRzLmRhdGEpKVxcbmluY2lkZW50LmFkZE5vdGUoaGVscGVyLmNyZWF0ZVJp
Y2hUZXh0KG5vdGUpKVwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMudHJhcF9p
bmNpZGVudF9pZCA9IGluY2lkZW50LnByb3BlcnRpZXMucHJvb2Zwb2ludF90cmFwX2luY2lkZW50
X2lkXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+
U2VxdWVuY2VGbG93XzFodWs2MGo8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMGg3
anJhbDwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VG
bG93XzFodWs2MGpcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9
XCJTZXJ2aWNlVGFza18xMm1pZ213XCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzBtbWE4aGdc
Ij48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBoN2pyYWw8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNl
cXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18waDdqcmFsXCIgc291cmNlUmVmPVwiU2Vydmlj
ZVRhc2tfMTJtaWdtd1wiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzBtbWE4aGdcIi8+PHRleHRBbm5v
dGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29y
a2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29j
aWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRS
ZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFn
cmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwi
dW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVt
ZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4
XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwi
OTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBN
TlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4
eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBN
TlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4
XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1c
IjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5F
ZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMTJtaWdtd1wi
IGlkPVwiU2VydmljZVRhc2tfMTJtaWdtd19kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBc
IiB3aWR0aD1cIjEwMFwiIHg9XCIyNTNcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48
YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFodWs2MGpcIiBpZD1c
IlNlcXVlbmNlRmxvd18xaHVrNjBqX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI1M1wi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMjI1LjVcIiB5PVwiMTg0
XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFw
ZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzBtbWE4aGdcIiBpZD1cIkVuZEV2ZW50XzBtbWE4aGdf
ZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI0MDlcIiB5
PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3
aWR0aD1cIjBcIiB4PVwiNDI3XCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1u
ZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3df
MGg3anJhbFwiIGlkPVwiU2VxdWVuY2VGbG93XzBoN2pyYWxfZGlcIj48b21nZGk6d2F5cG9pbnQg
eD1cIjM1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlw
b2ludCB4PVwiNDA5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5k
aTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIz
ODFcIiB5PVwiMTg0LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjwv
YnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ2
ZXJzaW9uIjogMn0sICJhY3Rpb25zIjogW119XSwgInJvbGVzIjogW10sICJ3b3Jrc3BhY2VzIjog
W10sICJmdW5jdGlvbnMiOiBbeyJpZCI6IDEsICJuYW1lIjogImZuX3Byb29mcG9pbnRfdHJhcF9n
ZXRfaW5jaWRlbnRfZGV0YWlscyIsICJkaXNwbGF5X25hbWUiOiAiUHJvb2Zwb2ludCBUUkFQOiBH
ZXQgSW5jaWRlbnQgRGV0YWlscyIsICJkZXNjcmlwdGlvbiI6IHsiZm9ybWF0IjogInRleHQiLCAi
Y29udGVudCI6ICJGZXRjaCBJbmNpZGVudCBEZXRhaWxzIGZyb20gUHJvb2Zwb2ludCBUUkFQIn0s
ICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAiZm5fcHJvb2Zwb2ludF90cmFwIiwgImV4cG9ydF9rZXki
OiAiZm5fcHJvb2Zwb2ludF90cmFwX2dldF9pbmNpZGVudF9kZXRhaWxzIiwgInV1aWQiOiAiMjVk
MDkyYzAtNWFiNy00NDE0LTliNDYtY2E5YjBlNzNhMmI3IiwgInZlcnNpb24iOiA0LCAiY3JlYXRv
ciI6IHsiaWQiOiA0LCAidHlwZSI6ICJ1c2VyIiwgIm5hbWUiOiAiYUBhLmNvbSIsICJkaXNwbGF5
X25hbWUiOiAiUmVzaWxpZW50IFN5c2FkbWluIn0sICJsYXN0X21vZGlmaWVkX2J5IjogeyJpZCI6
IDQsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJhQGEuY29tIiwgImRpc3BsYXlfbmFtZSI6ICJS
ZXNpbGllbnQgU3lzYWRtaW4ifSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NjY0MDE4MzM1NDcs
ICJ2aWV3X2l0ZW1zIjogW3sic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVs
ZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVu
dCI6ICI4YTNiNmRmNC0yYzlmLTQ3NTMtOThhOC0wMDYwNWQwZmY5ZWYiLCAic2hvd19saW5rX2hl
YWRlciI6IGZhbHNlfV0sICJ3b3JrZmxvd3MiOiBbeyJ3b3JrZmxvd19pZCI6IDQsICJuYW1lIjog
IlByb29mcG9pbnQgVFJBUDogR2V0IEluY2lkZW50IERldGFpbHMiLCAicHJvZ3JhbW1hdGljX25h
bWUiOiAicHJvb2Zwb2ludF90cmFwX2dldF9pbmNpZGVudF9kZXRhaWxzIiwgIm9iamVjdF90eXBl
IjogImluY2lkZW50IiwgImRlc2NyaXB0aW9uIjogbnVsbCwgInV1aWQiOiBudWxsLCAiYWN0aW9u
cyI6IFtdfV19XX0=
"""
    )