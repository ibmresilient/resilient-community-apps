# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_proofpoint_trap"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_proofpoint_trap package"""
    reload_params = {"package": u"fn_proofpoint_trap",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"trap_incident_id"], 
                    "datatables": [u"proofpoint_trap_events"], 
                    "message_destinations": [u"fn_proofpoint_trap"], 
                    "functions": [u"fn_proofpoint_trap_get_incident_details"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"proofpoint_trap_get_incident_details"], 
                    "actions": [u"Proofpoint TRAP: Get Incident Details"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     trap_incident_id
    #   DataTables:
    #     proofpoint_trap_events
    #   Message Destinations:
    #     fn_proofpoint_trap
    #   Functions:
    #     fn_proofpoint_trap_get_incident_details
    #   Workflows:
    #     proofpoint_trap_get_incident_details
    #   Rules:
    #     Proofpoint TRAP: Get Incident Details


    yield ImportDefinition(u"""
eyJpZCI6IDI2LCAiZmllbGRzIjogW3siY2hvc2VuIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNl
LCAidXVpZCI6ICJjM2YwZTNlZC0yMWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAib3BlcmF0
aW9ucyI6IFtdLCAidmFsdWVzIjogW10sICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMzgsICJu
YW1lIjogImluY190cmFpbmluZyIsICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAicHJlZml4IjogbnVs
bCwgInR5cGVfaWQiOiAwLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNpZGVudCBpcyBhIHNp
bXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBpcyByZWFkLW9ubHku
IiwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
ZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAicmVhZF9vbmx5IjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5pbmciLCAidGVtcGxhdGVzIjog
W119LCB7ImNob3NlbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiOGEzYjZk
ZjQtMmM5Zi00NzUzLTk4YTgtMDA2MDVkMGZmOWVmIiwgIm9wZXJhdGlvbnMiOiBbXSwgInZhbHVl
cyI6IFtdLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDEzNSwgIm5hbWUiOiAidHJhcF9pbmNp
ZGVudF9pZCIsICJ0ZXh0IjogInRyYXBfaW5jaWRlbnRfaWQiLCAicHJlZml4IjogbnVsbCwgInR5
cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiUHJvb2Zwb2ludCBUUkFQIEluY2lkZW50IElEIChpbnRl
Z2VyKSIsICJwbGFjZWhvbGRlciI6ICIxIiwgImlucHV0X3R5cGUiOiAibnVtYmVyIiwgImhpZGVf
bm90aWZpY2F0aW9uIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwg
ImJsYW5rX29wdGlvbiI6IGZhbHNlLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJyZWFkX29ubHki
OiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3Ry
YXBfaW5jaWRlbnRfaWQiLCAidGVtcGxhdGVzIjogW119XSwgInBoYXNlcyI6IFtdLCAib3ZlcnJp
ZGVzIjogW10sICJhY3Rpb25zIjogW3siaWQiOiA0MiwgIm5hbWUiOiAiUHJvb2Zwb2ludCBUUkFQ
OiBHZXQgSW5jaWRlbnQgRGV0YWlscyIsICJ0eXBlIjogMSwgIm9iamVjdF90eXBlIjogImFydGlm
YWN0IiwgImNvbmRpdGlvbnMiOiBbXSwgImF1dG9tYXRpb25zIjogW10sICJtZXNzYWdlX2Rlc3Rp
bmF0aW9ucyI6IFtdLCAid29ya2Zsb3dzIjogWyJwcm9vZnBvaW50X3RyYXBfZ2V0X2luY2lkZW50
X2RldGFpbHMiXSwgInZpZXdfaXRlbXMiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAi
dXVpZCI6ICJkODBhYjZiOC04MzBiLTQyM2QtYmNmMy1kYzUyMzZkYmVlNjYiLCAiZXhwb3J0X2tl
eSI6ICJQcm9vZnBvaW50IFRSQVA6IEdldCBJbmNpZGVudCBEZXRhaWxzIiwgImxvZ2ljX3R5cGUi
OiAiYWxsIn1dLCAibGF5b3V0cyI6IFtdLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJ0aW1lZnJh
bWVzIjogbnVsbCwgImluZHVzdHJpZXMiOiBudWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJnZW9z
IjogbnVsbCwgImZ1bmN0aW9ucyI6IFt7ImlkIjogMzEsICJuYW1lIjogImZuX3Byb29mcG9pbnRf
dHJhcF9nZXRfaW5jaWRlbnRfZGV0YWlscyIsICJkZXNjcmlwdGlvbiI6IHsiZm9ybWF0IjogInRl
eHQiLCAiY29udGVudCI6ICJGZXRjaCBJbmNpZGVudCBEZXRhaWxzIGZyb20gUHJvb2Zwb2ludCBU
UkFQIn0sICJ1dWlkIjogIjI1ZDA5MmMwLTVhYjctNDQxNC05YjQ2LWNhOWIwZTczYTJiNyIsICJ2
ZXJzaW9uIjogMiwgImNyZWF0b3IiOiB7ImlkIjogMSwgInR5cGUiOiAidXNlciIsICJuYW1lIjog
Im1waWVrYXJza2lAZXNzZXh0ZWMuY29tIiwgImRpc3BsYXlfbmFtZSI6ICJNaWtlIFBpZWthcnNr
aSJ9LCAid29ya2Zsb3dzIjogW3siZGVzY3JpcHRpb24iOiBudWxsLCAidXVpZCI6IG51bGwsICJ3
b3JrZmxvd19pZCI6IDM0LCAibmFtZSI6ICJQcm9vZnBvaW50IFRyYXA6IEdldCBJbmNpZGVudCBE
ZXRhaWxzIiwgInByb2dyYW1tYXRpY19uYW1lIjogInByb29mcG9pbnRfdHJhcF9nZXRfaW5jaWRl
bnRfZGV0YWlscyIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJhY3Rpb25zIjogW119XSwg
ImRpc3BsYXlfbmFtZSI6ICJQcm9vZnBvaW50IFRSQVA6IEdldCBJbmNpZGVudCBEZXRhaWxzIiwg
ImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJmbl9wcm9vZnBvaW50X3RyYXAiLCAiZXhwb3J0X2tleSI6
ICJmbl9wcm9vZnBvaW50X3RyYXBfZ2V0X2luY2lkZW50X2RldGFpbHMiLCAibGFzdF9tb2RpZmll
ZF9ieSI6IHsiaWQiOiAzLCAidHlwZSI6ICJ1c2VyIiwgIm5hbWUiOiAiYXBpQHRlc3QuY29tIiwg
ImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQgU3lzYWRtaW4ifSwgImxhc3RfbW9kaWZpZWRfdGlt
ZSI6IDE1NTUwMzc5NjY1MzEsICJ2aWV3X2l0ZW1zIjogW3sic3RlcF9sYWJlbCI6IG51bGwsICJz
aG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9f
ZnVuY3Rpb24iLCAiY29udGVudCI6ICI4YTNiNmRmNC0yYzlmLTQ3NTMtOThhOC0wMDYwNWQwZmY5
ZWYiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfV19XSwgInNlcnZlcl92ZXJzaW9uIjogeyJt
YWpvciI6IDMwLCAibWlub3IiOiAwLCAiYnVpbGRfbnVtYmVyIjogMzQ3NiwgInZlcnNpb24iOiAi
MzAuMC4zNDc2In0sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAyLCAiZXhwb3J0X2RhdGUiOiAx
NTU1MDM4NDI1NTg5LCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1NTUwMzg1
Mzc4OTYsICJjcmVhdGVfZGF0ZSI6IDE1NTUwMzg1Mzc4OTYsICJ1dWlkIjogImJmZWVjMmQ0LTM3
NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9u
IFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2th
Z2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5h
bCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxs
LCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAibWVz
c2FnZV9kZXN0aW5hdGlvbnMiOiBbeyJuYW1lIjogImZuX3Byb29mcG9pbnRfdHJhcCIsICJwcm9n
cmFtbWF0aWNfbmFtZSI6ICJmbl9wcm9vZnBvaW50X3RyYXAiLCAiZGVzdGluYXRpb25fdHlwZSI6
IDAsICJleHBlY3RfYWNrIjogdHJ1ZSwgInVzZXJzIjogWyJtcGlla2Fyc2tpQGVzc2V4dGVjLmNv
bSIsICJhcGlAdGVzdC5jb20iXSwgInV1aWQiOiAiOWU0MzY5YzAtNmZiZi00ZDM3LWIzYWUtNTFj
NDRiNTliYTFmIiwgImV4cG9ydF9rZXkiOiAiZm5fcHJvb2Zwb2ludF90cmFwIn1dLCAidGFza19v
cmRlciI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJ0eXBlcyI6IFt7ImlkIjogbnVsbCwgImZp
ZWxkcyI6IHsiZXZlbnRfaWQiOiB7ImNob3NlbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwg
InV1aWQiOiAiNWM3M2ZkNGUtYjk0OC00ZjFmLWIwZGMtN2MzMTkzMzdjNWNhIiwgIm9wZXJhdGlv
bnMiOiBbXSwgInZhbHVlcyI6IFtdLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDEyNywgIm5h
bWUiOiAiZXZlbnRfaWQiLCAidGV4dCI6ICJFdmVudCBJRCIsICJwcmVmaXgiOiBudWxsLCAidHlw
ZV9pZCI6IDEwMDEsICJ0b29sdGlwIjogIiIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlw
ZSI6ICJudW1iZXIiLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgImhpZGVfbm90aWZpY2F0aW9uIjog
ZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hf
dGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJwcm9vZnBvaW50X3RyYXBfZXZlbnRzL2V2ZW50
X2lkIiwgIm9yZGVyIjogMCwgIndpZHRoIjogNDksICJ0ZW1wbGF0ZXMiOiBbXX0sICJldmVudF9z
dGF0ZSI6IHsiY2hvc2VuIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICJhMGY5
NGNjMi1jMzA5LTQzYmItOGM4Zi0yNGUzYWY0OTI0ZGIiLCAib3BlcmF0aW9ucyI6IFtdLCAidmFs
dWVzIjogW10sICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMTMzLCAibmFtZSI6ICJldmVudF9z
dGF0ZSIsICJ0ZXh0IjogIlN0YXRlIiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTAwMSwg
InRvb2x0aXAiOiAiIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAi
aGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZh
bHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInJlYWRf
b25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogInByb29mcG9p
bnRfdHJhcF9ldmVudHMvZXZlbnRfc3RhdGUiLCAib3JkZXIiOiA2LCAid2lkdGgiOiA2OCwgInRl
bXBsYXRlcyI6IFtdfSwgImV2ZW50X2F0dGFja2RpcmVjdGlvbiI6IHsiY2hvc2VuIjogZmFsc2Us
ICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICJjZDkzY2ZlMi02OWU0LTQ2ZDctYjQ1Mi1lYTkw
YWYxOWRlMWYiLCAib3BlcmF0aW9ucyI6IFtdLCAidmFsdWVzIjogW10sICJjaGFuZ2VhYmxlIjog
dHJ1ZSwgImlkIjogMTI5LCAibmFtZSI6ICJldmVudF9hdHRhY2tkaXJlY3Rpb24iLCAidGV4dCI6
ICJBdHRhY2sgRGlyZWN0aW9uIiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTAwMSwgInRv
b2x0aXAiOiAiIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlk
ZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNl
LCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInJlYWRfb25s
eSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogInByb29mcG9pbnRf
dHJhcF9ldmVudHMvZXZlbnRfYXR0YWNrZGlyZWN0aW9uIiwgIm9yZGVyIjogMiwgIndpZHRoIjog
OTEsICJ0ZW1wbGF0ZXMiOiBbXX0sICJldmVudF9kZXNjcmlwdGlvbiI6IHsiY2hvc2VuIjogdHJ1
ZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogImUyNTE3MGQ3LTE4ZTctNDJiYS04NmI1LWVi
MGFhMGE2Yzc2OCIsICJvcGVyYXRpb25zIjogW10sICJ2YWx1ZXMiOiBbXSwgImNoYW5nZWFibGUi
OiB0cnVlLCAiaWQiOiAxMjgsICJuYW1lIjogImV2ZW50X2Rlc2NyaXB0aW9uIiwgInRleHQiOiAi
RGVzY3JpcHRpb24iLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMDAxLCAidG9vbHRpcCI6
ICIiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAidGV4dCIsICJoaWRlX25vdGlm
aWNhdGlvbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFu
a19vcHRpb24iOiB0cnVlLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJyZWFkX29ubHkiOiBmYWxz
ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJwcm9vZnBvaW50X3RyYXBfZXZl
bnRzL2V2ZW50X2Rlc2NyaXB0aW9uIiwgIm9yZGVyIjogMSwgIndpZHRoIjogNjgsICJ0ZW1wbGF0
ZXMiOiBbXX0sICJldmVudF9zZXZlcml0eSI6IHsiY2hvc2VuIjogZmFsc2UsICJpbnRlcm5hbCI6
IGZhbHNlLCAidXVpZCI6ICIwNDBiNzg2Ni04YzY4LTQyYTctOGI2My1lYTMzYmE4MDEwYWMiLCAi
b3BlcmF0aW9ucyI6IFtdLCAidmFsdWVzIjogW10sICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjog
MTMwLCAibmFtZSI6ICJldmVudF9zZXZlcml0eSIsICJ0ZXh0IjogIlNldmVyaXR5IiwgInByZWZp
eCI6IG51bGwsICJ0eXBlX2lkIjogMTAwMSwgInRvb2x0aXAiOiAiIiwgInBsYWNlaG9sZGVyIjog
IiIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJv
cGVyYXRpb25fcGVybXMiOiB7fSwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFs
c2UsICJleHBvcnRfa2V5IjogInByb29mcG9pbnRfdHJhcF9ldmVudHMvZXZlbnRfc2V2ZXJpdHki
LCAib3JkZXIiOiAzLCAid2lkdGgiOiA2OCwgInRlbXBsYXRlcyI6IFtdfSwgImV2ZW50X3NvdXJj
ZSI6IHsiY2hvc2VuIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICIyYWJjNGI5
OC0yM2MyLTQwZTMtYjJjMy1jZDliMDA2MzVjZWMiLCAib3BlcmF0aW9ucyI6IFtdLCAidmFsdWVz
IjogW10sICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMTMxLCAibmFtZSI6ICJldmVudF9zb3Vy
Y2UiLCAidGV4dCI6ICJTb3VyY2UiLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMDAxLCAi
dG9vbHRpcCI6ICIiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAidGV4dCIsICJo
aWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAicmVhZF9v
bmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAicHJvb2Zwb2lu
dF90cmFwX2V2ZW50cy9ldmVudF9zb3VyY2UiLCAib3JkZXIiOiA0LCAid2lkdGgiOiA2OCwgInRl
bXBsYXRlcyI6IFtdfSwgImV2ZW50X3RocmVhdG5hbWUiOiB7ImNob3NlbiI6IGZhbHNlLCAiaW50
ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiYjFlZDBhZTctOTI5Ni00ZGI1LThlNWEtMjMyM2VlMmNj
N2YzIiwgIm9wZXJhdGlvbnMiOiBbXSwgInZhbHVlcyI6IFtdLCAiY2hhbmdlYWJsZSI6IHRydWUs
ICJpZCI6IDEzMiwgIm5hbWUiOiAiZXZlbnRfdGhyZWF0bmFtZSIsICJ0ZXh0IjogIlRocmVhdCBO
YW1lIiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTAwMSwgInRvb2x0aXAiOiAiIiwgInBs
YWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9u
IjogZmFsc2UsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInJlYWRfb25seSI6IGZhbHNlLCAicmlj
aF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogInByb29mcG9pbnRfdHJhcF9ldmVudHMvZXZl
bnRfdGhyZWF0bmFtZSIsICJvcmRlciI6IDUsICJ3aWR0aCI6IDczLCAidGVtcGxhdGVzIjogW119
LCAiZXZlbnRfcmVjZWl2ZWQiOiB7ImNob3NlbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwg
InV1aWQiOiAiN2Q0NzE2YjctYzk4OC00ZWQxLTg4MGUtN2IxMTg1ZTI4NWNhIiwgIm9wZXJhdGlv
bnMiOiBbXSwgInZhbHVlcyI6IFtdLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDEzNCwgIm5h
bWUiOiAiZXZlbnRfcmVjZWl2ZWQiLCAidGV4dCI6ICJFdmVudCBSZWNlaXZlZCIsICJwcmVmaXgi
OiBudWxsLCAidHlwZV9pZCI6IDEwMDEsICJ0b29sdGlwIjogIiIsICJwbGFjZWhvbGRlciI6ICIi
LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJkZWZh
dWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAib3Bl
cmF0aW9uX3Blcm1zIjoge30sICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAiZXhwb3J0X2tleSI6ICJwcm9vZnBvaW50X3RyYXBfZXZlbnRzL2V2ZW50X3JlY2VpdmVkIiwg
Im9yZGVyIjogNywgIndpZHRoIjogOTAsICJ0ZW1wbGF0ZXMiOiBbXX19LCAicHJvcGVydGllcyI6
IHsiY2FuX2NyZWF0ZSI6IGZhbHNlLCAiY2FuX2Rlc3Ryb3kiOiBmYWxzZSwgImZvcl93aG8iOiBb
XX0sICJ1dWlkIjogIjdiMTc1NmI4LTY5MWMtNDU4Ni05MjFkLWJiZDRlZjEzOTFlNiIsICJhY3Rp
b25zIjogW10sICJzY3JpcHRzIjogW10sICJ0eXBlX2lkIjogOCwgInR5cGVfbmFtZSI6ICJwcm9v
ZnBvaW50X3RyYXBfZXZlbnRzIiwgInBhcmVudF90eXBlcyI6IFsiaW5jaWRlbnQiXSwgImRpc3Bs
YXlfbmFtZSI6ICJQcm9vZnBvaW50IFRSQVAgRXZlbnRzIiwgImZvcl9ub3RpZmljYXRpb25zIjog
ZmFsc2UsICJmb3JfYWN0aW9ucyI6IGZhbHNlLCAiZm9yX2N1c3RvbV9maWVsZHMiOiBmYWxzZSwg
ImV4cG9ydF9rZXkiOiAicHJvb2Zwb2ludF90cmFwX2V2ZW50cyJ9XSwgInNjcmlwdHMiOiBbXSwg
ImluY2lkZW50X2FydGlmYWN0X3R5cGVzIjogW10sICJ3b3JrZmxvd3MiOiBbeyJkZXNjcmlwdGlv
biI6ICJSZXRyaWV2ZSBDYW1wYWlnbiBEZXRhaWxzIGZyb20gUHJvb2Zwb2ludCBUUkFQIEFQSSIs
ICJ1dWlkIjogIjQ3NmVhMGU4LTUwZmUtNGMzMy05M2JmLTJjMDUxNDE2ZGRjNCIsICJ3b3JrZmxv
d19pZCI6IDM0LCAibmFtZSI6ICJQcm9vZnBvaW50IFRyYXA6IEdldCBJbmNpZGVudCBEZXRhaWxz
IiwgInByb2dyYW1tYXRpY19uYW1lIjogInByb29mcG9pbnRfdHJhcF9nZXRfaW5jaWRlbnRfZGV0
YWlscyIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJjcmVhdG9yX2lkIjogIm1waWVrYXJz
a2lAZXNzZXh0ZWMuY29tIiwgImxhc3RfbW9kaWZpZWRfYnkiOiAibXBpZWthcnNraUBlc3NleHRl
Yy5jb20iLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU1NTAzODQyMDMzNiwgImV4cG9ydF9rZXki
OiAicHJvb2Zwb2ludF90cmFwX2dldF9pbmNpZGVudF9kZXRhaWxzIiwgImNvbnRlbnQiOiB7Inht
bCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlv
bnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIg
eG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwi
IHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4
bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1s
bnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9
XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93
d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0
cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJwcm9vZnBvaW50X3RyYXBf
Z2V0X2luY2lkZW50X2RldGFpbHNcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIlByb29m
cG9pbnQgVHJhcDogR2V0IEluY2lkZW50IERldGFpbHNcIj48ZG9jdW1lbnRhdGlvbj5SZXRyaWV2
ZSBDYW1wYWlnbiBEZXRhaWxzIGZyb20gUHJvb2Zwb2ludCBUUkFQIEFQSTwvZG9jdW1lbnRhdGlv
bj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5j
ZUZsb3dfMHRxZW5scjwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNl
cnZpY2VUYXNrXzA1dG9ncGxcIiBuYW1lPVwiUHJvb2Zwb2ludCBUUkFQOiBHZXQgSW5jaWRlbnQg
RGV0Li4uXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48
cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCIyNWQwOTJjMC01YWI3LTQ0MTQtOWI0Ni1jYTliMGU3
M2EyYjdcIj57XCJpbnB1dHNcIjp7fSxcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRz
LnRyYXBfaW5jaWRlbnRfaWQgPSBhcnRpZmFjdC52YWx1ZVwiLFwicG9zdF9wcm9jZXNzaW5nX3Nj
cmlwdFwiOlwibXlfbm90ZSA9IHJlc3VsdHMuZGF0YVxcbmluY2lkZW50LmFkZE5vdGUobXlfbm90
ZSlcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5T
ZXF1ZW5jZUZsb3dfMHRxZW5scjwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18waGZk
cWN6PC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzBucjFv
a3RcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBoZmRxY3o8L2luY29taW5nPjwvZW5kRXZlbnQ+
PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wdHFlbmxyXCIgc291cmNlUmVmPVwiU3Rh
cnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMDV0b2dwbFwiLz48c2Vx
dWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBoZmRxY3pcIiBzb3VyY2VSZWY9XCJTZXJ2aWNl
VGFza18wNXRvZ3BsXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMG5yMW9rdFwiLz48dGV4dEFubm90
YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3Jr
ZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2Np
YXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJl
Zj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdy
YW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1
bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1l
bnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhc
Ii8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5
MFwiIHg9XCIxNTdcIiB5PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1O
U2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4
aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1O
U2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhc
IiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2OVwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
MTUzXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVk
Z2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wNXRvZ3BsXCIg
aWQ9XCJTZXJ2aWNlVGFza18wNXRvZ3BsX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwi
IHdpZHRoPVwiMTAwXCIgeD1cIjI4NlwiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMG5yMW9rdFwiIGlkPVwiRW5k
RXZlbnRfMG5yMW9rdF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2
XCIgeD1cIjU1OFwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI1NzZcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQ
TU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1c
IlNlcXVlbmNlRmxvd18wdHFlbmxyXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMHRxZW5scl9kaVwiPjxv
bWdkaTp3YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZc
Ii8+PG9tZ2RpOndheXBvaW50IHg9XCIyODZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lk
dGg9XCIwXCIgeD1cIjI0MlwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRp
OkJQTU5FZGdlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMGhm
ZHFjelwiIGlkPVwiU2VxdWVuY2VGbG93XzBoZmRxY3pfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1c
IjM4NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2lu
dCB4PVwiNTU4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpC
UE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI0NzJc
IiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5k
aTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAidmVyc2lv
biI6IDYsICJ3b3JrZmxvd19pZCI6ICJwcm9vZnBvaW50X3RyYXBfZ2V0X2luY2lkZW50X2RldGFp
bHMifSwgImFjdGlvbnMiOiBbXX1dLCAicm9sZXMiOiBbXSwgIndvcmtzcGFjZXMiOiBbXX0=
"""
    )