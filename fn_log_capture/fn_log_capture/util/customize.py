# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_log_capture"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_log_capture package"""
    reload_params = {"package": u"fn_log_capture",
                    "incident_fields": [], 
                    "action_fields": [u"log_attachment_name", u"log_capture_date", u"log_capture_date_option", u"log_capture_maxlen", u"log_min_level"], 
                    "function_params": [u"incident_id", u"log_attachment_name", u"log_capture_date", u"log_capture_date_option", u"log_capture_maxlen", u"log_min_level", u"task_id"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_log_capture"], 
                    "functions": [u"fn_log_capture"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"log_capture"], 
                    "actions": [u"Log Capture"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     log_attachment_name
    #     log_capture_date
    #     log_capture_date_option
    #     log_capture_maxlen
    #     log_min_level
    #   Function inputs:
    #     incident_id
    #     log_attachment_name
    #     log_capture_date
    #     log_capture_date_option
    #     log_capture_maxlen
    #     log_min_level
    #     task_id
    #   Message Destinations:
    #     fn_log_capture
    #   Functions:
    #     fn_log_capture
    #   Workflows:
    #     log_capture
    #   Rules:
    #     Log Capture


    yield ImportDefinition(u"""
eyJncm91cHMiOiBudWxsLCAibG9jYWxlIjogbnVsbCwgIndvcmtmbG93cyI6IFt7ImRlc2NyaXB0
aW9uIjogIkNhcHR1cmUgcmVzaWxpZW50LWNpcmN1aXRzIGxvZyBlbnRyaWVzIGZvciByZXZpZXci
LCAid29ya2Zsb3dfaWQiOiAxNywgInRhZ3MiOiBbXSwgIm9iamVjdF90eXBlIjogImluY2lkZW50
IiwgImV4cG9ydF9rZXkiOiAibG9nX2NhcHR1cmUiLCAidXVpZCI6ICIyMjY2ZGY0ZC03ZGUwLTQx
M2QtYjhmYy02YWZjNWIyMmE2M2EiLCAiYWN0aW9ucyI6IFtdLCAiY29udGVudCI6IHsieG1sIjog
Ijw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4
bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxu
czpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1s
bnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5z
Om9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpy
ZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0
dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53
My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8v
d3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImxvZ19jYXB0dXJlXCIgaXNFeGVj
dXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJMb2cgQ2FwdHVyZVwiPjxkb2N1bWVudGF0aW9uPkNhcHR1
cmUgcmVzaWxpZW50LWNpcmN1aXRzIGxvZyBlbnRyaWVzIGZvciByZXZpZXc8L2RvY3VtZW50YXRp
b24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVu
Y2VGbG93XzBiNHptZ2M8L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJT
ZXJ2aWNlVGFza18xY3U5enBwXCIgbmFtZT1cIkxvZyBDYXB0dXJlXCIgcmVzaWxpZW50OnR5cGU9
XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9
XCJlNTdjYWFlMC04ZWQ1LTQwZTUtODU3Ny01YmMzZDQ3MDVhOTZcIj57XCJpbnB1dHNcIjp7XCIw
OGU4ZWI0My1iMmZlLTRlOGItYTVkYy02NWM0ZTAyODVlYTFcIjp7XCJpbnB1dF90eXBlXCI6XCJz
dGF0aWNcIixcInN0YXRpY19pbnB1dFwiOntcIm11bHRpc2VsZWN0X3ZhbHVlXCI6W10sXCJzZWxl
Y3RfdmFsdWVcIjpcIjEwOGI0YzFlLTEwMzctNDEyNS04ZjFkLWYwMjliODU2MDc4NFwifX0sXCI3
YWUyM2NiMy00MWNjLTQxYWQtODFkYS03ODk5NjFmODNlZDZcIjp7XCJpbnB1dF90eXBlXCI6XCJz
dGF0aWNcIixcInN0YXRpY19pbnB1dFwiOntcIm11bHRpc2VsZWN0X3ZhbHVlXCI6W10sXCJzZWxl
Y3RfdmFsdWVcIjpcIjdkMzgyZWFkLTljM2UtNDBiNC1iYzM2LTkyNjE4NDllMjI1NFwifX19LFwi
cG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5jaWRlbnQuYWRkTm90ZShcXFwiTG9nIEZpbGUg
QXR0YWNobWVudDoge31cXFxcbiMgb2YgTGluZXM6IHt9XFxcIi5mb3JtYXQocmVzdWx0cy5jb250
ZW50WydhdHRhY2htZW50X25hbWUnXSwgcmVzdWx0cy5jb250ZW50WydudW1fb2ZfbGluZXMnXSkp
XCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5sb2dfY2FwdHVyZV9kYXRlID0g
cnVsZS5wcm9wZXJ0aWVzLmxvZ19jYXB0dXJlX2RhdGVcXG5pbnB1dHMubG9nX2NhcHR1cmVfZGF0
ZV9vcHRpb24gPSBydWxlLnByb3BlcnRpZXMubG9nX2NhcHR1cmVfZGF0ZV9vcHRpb25cXG5pbnB1
dHMubG9nX2NhcHR1cmVfbWF4bGVuID0gcnVsZS5wcm9wZXJ0aWVzLmxvZ19jYXB0dXJlX21heGxl
blxcbmlucHV0cy5pbmNpZGVudF9pZCA9IGluY2lkZW50LmlkXFxuI2lucHV0cy50YXNrX2lkID0g
dGFzay5pZFxcbmlucHV0cy5sb2dfYXR0YWNobWVudF9uYW1lID0gcnVsZS5wcm9wZXJ0aWVzLmxv
Z19hdHRhY2htZW50X25hbWVcXG5pbnB1dHMubG9nX21pbl9sZXZlbCA9IHJ1bGUucHJvcGVydGll
cy5sb2dfbWluX2xldmVsXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50
cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBiNHptZ2M8L2luY29taW5nPjxvdXRnb2luZz5TZXF1
ZW5jZUZsb3dfMTQ4aHN6aDwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlk
PVwiU2VxdWVuY2VGbG93XzBiNHptZ2NcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1c
IiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18xY3U5enBwXCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2
ZW50XzF3bnQxYzRcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzE0OGhzemg8L2luY29taW5nPjwv
ZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xNDhoc3poXCIgc291cmNl
UmVmPVwiU2VydmljZVRhc2tfMWN1OXpwcFwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzF3bnQxYzRc
Ii8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0
YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlv
biBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFz
eG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0ZXh0QW5ub3RhdGlv
biBpZD1cIlRleHRBbm5vdGF0aW9uXzF0cGp5MGNcIj48dGV4dD5DcmVhdGVzIGFuIGF0dGFjaG1l
bnQgd2lsbCB0aGUgbG9nIGZpbGUgZGF0YTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lh
dGlvbiBpZD1cIkFzc29jaWF0aW9uXzFjdXpkanJcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18x
Y3U5enBwXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMXRwankwY1wiLz48L3Byb2Nlc3M+
PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFu
ZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQ
TU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVu
dF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4
PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxh
YmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRl
eHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0
XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNz
b2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3
YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9t
Z2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwi
Lz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZp
Y2VUYXNrXzFjdTl6cHBcIiBpZD1cIlNlcnZpY2VUYXNrXzFjdTl6cHBfZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMjU3XCIgeT1cIjE2NlwiLz48L2Jw
bW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxv
d18wYjR6bWdjXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMGI0em1nY19kaVwiPjxvbWdkaTp3YXlwb2lu
dCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndh
eXBvaW50IHg9XCIyNTdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBt
bmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1c
IjIyNy41XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+
PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8xd250MWM0XCIgaWQ9XCJF
bmRFdmVudF8xd250MWM0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwi
MzZcIiB4PVwiNDE1XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjQzM1wiIHk9XCIyMjdcIi8+PC9icG1uZGk6
QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50
PVwiU2VxdWVuY2VGbG93XzE0OGhzemhcIiBpZD1cIlNlcXVlbmNlRmxvd18xNDhoc3poX2RpXCI+
PG9tZ2RpOndheXBvaW50IHg9XCIzNTdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIw
NlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQxNVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3
aWR0aD1cIjBcIiB4PVwiMzg2XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1u
ZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlv
bl8xdHBqeTBjXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xdHBqeTBjX2RpXCI+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCI2N1wiIHdpZHRoPVwiMjUwXCIgeD1cIjM2NVwiIHk9XCI4OFwiLz48L2JwbW5k
aTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFj
dXpkanJcIiBpZD1cIkFzc29jaWF0aW9uXzFjdXpkanJfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1c
IjM1N1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTgzXCIvPjxvbWdkaTp3YXlwb2lu
dCB4PVwiNDE4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNTVcIi8+PC9icG1uZGk6
QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5p
dGlvbnM+IiwgIndvcmtmbG93X2lkIjogImxvZ19jYXB0dXJlIiwgInZlcnNpb24iOiA2fSwgImNy
ZWF0b3JfaWQiOiAiYUBleGFtcGxlLmNvbSIsICJsYXN0X21vZGlmaWVkX2J5IjogImFAZXhhbXBs
ZS5jb20iLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU3NDgwMjY5MTY0NywgImNvbnRlbnRfdmVy
c2lvbiI6IDYsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJsb2dfY2FwdHVyZSIsICJuYW1lIjogIkxv
ZyBDYXB0dXJlIn1dLCAiYWN0aW9ucyI6IFt7InRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAib2Jq
ZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAidHlwZSI6IDEsICJuYW1lIjogIkxvZyBDYXB0dXJlIiwg
InRhZ3MiOiBbXSwgInZpZXdfaXRlbXMiOiBbeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUi
OiAiYWN0aW9uaW52b2NhdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50
IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICI3ZTZmMjY2MC00MmI0LTRjZTMtOGVkMS0yOTYz
ZDAwYmZiZTciLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRf
dHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVs
ZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogImMyMzZmY2NkLTMyZWMtNDk0Yy1iYmUy
LTYzZTYzYzRmMWMyMiIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hvd19pZiI6IG51bGwsICJm
aWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNl
LCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiN2UwNWYzNzItZGRkNi00NDI1
LThhNDgtZjM2ODI3YzdlOWU5IiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVs
bCwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjog
ZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJmMTZmNjgyMS05NzM5
LTRjMDMtYTQzNS05YTBhMjA1ZGI4MWEiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3dfaWYi
OiBudWxsLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNob3dfbGlua19oZWFk
ZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogIjI5ZDAxNjEx
LWQ4NTctNDJlMS1iZWVjLTEzNTM0ZjU2OGNjMCIsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAiZW5h
YmxlZCI6IHRydWUsICJ3b3JrZmxvd3MiOiBbImxvZ19jYXB0dXJlIl0sICJsb2dpY190eXBlIjog
ImFsbCIsICJleHBvcnRfa2V5IjogIkxvZyBDYXB0dXJlIiwgInV1aWQiOiAiYTE0ZWU4OGEtZTlh
OS00OTE1LWE2NzMtYWUyZjljZGYwNDI3IiwgImF1dG9tYXRpb25zIjogW10sICJjb25kaXRpb25z
IjogW10sICJpZCI6IDMxLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXX1dLCAibGF5b3V0cyI6
IFtdLCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjogMiwgImlkIjogMjYsICJpbmR1c3RyaWVzIjog
bnVsbCwgImZ1bmN0aW9ucyI6IFt7ImRpc3BsYXlfbmFtZSI6ICJMb2cgQ2FwdHVyZSIsICJkZXNj
cmlwdGlvbiI6IHsiY29udGVudCI6ICJHZXQgdGhlIHJlc2lsaWVudC1jaXJjdWl0cyBsb2csIG9w
dGlvbmFsbHkgc3BlY2lmeWluZyB0aGUgbGFzdCBuIGxpbmVzIiwgImZvcm1hdCI6ICJ0ZXh0In0s
ICJjcmVhdG9yIjogeyJ0eXBlIjogInVzZXIiLCAiZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBT
eXNhZG1pbiIsICJpZCI6IDMsICJuYW1lIjogImFAZXhhbXBsZS5jb20ifSwgInZpZXdfaXRlbXMi
OiBbeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xp
bmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJj
Yjk1MTFlYS1iYTNlLTRiMWQtYjhkNi0yNmE3M2FlZTMxNDMiLCAic3RlcF9sYWJlbCI6IG51bGx9
LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlu
a19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogIjg3
Y2I0ZWM1LWE1ZDctNGM5MC05N2Q2LTNhZmM2MGM1NTRiYSIsICJzdGVwX2xhYmVsIjogbnVsbH0s
IHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5r
X2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiMDhl
OGViNDMtYjJmZS00ZThiLWE1ZGMtNjVjNGUwMjg1ZWExIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwg
eyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtf
aGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICI3YWUy
M2NiMy00MWNjLTQxYWQtODFkYS03ODk5NjFmODNlZDYiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7
InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19o
ZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogIjYwZThi
NjQzLTU2N2QtNDY0MC04NjA0LTYzN2Y3NjFjNjFmNyIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsi
c2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hl
YWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiOTU4ZjA5
NTMtOGI2Zi00NDcyLWI3ODYtYjlhZTQzNTFkZGZlIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJz
aG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVh
ZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJkNjMxNzRh
Zi0wZDkwLTRkNjctYTgzYS1mYjY1ZWU2M2QyNGEiLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgInRh
Z3MiOiBbXSwgImV4cG9ydF9rZXkiOiAiZm5fbG9nX2NhcHR1cmUiLCAidXVpZCI6ICJlNTdjYWFl
MC04ZWQ1LTQwZTUtODU3Ny01YmMzZDQ3MDVhOTYiLCAibGFzdF9tb2RpZmllZF9ieSI6IHsidHlw
ZSI6ICJ1c2VyIiwgImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQgU3lzYWRtaW4iLCAiaWQiOiAz
LCAibmFtZSI6ICJhQGV4YW1wbGUuY29tIn0sICJ2ZXJzaW9uIjogNCwgIndvcmtmbG93cyI6IFt7
InByb2dyYW1tYXRpY19uYW1lIjogImxvZ19jYXB0dXJlIiwgInRhZ3MiOiBbXSwgIm9iamVjdF90
eXBlIjogImluY2lkZW50IiwgInV1aWQiOiBudWxsLCAiYWN0aW9ucyI6IFtdLCAibmFtZSI6ICJM
b2cgQ2FwdHVyZSIsICJ3b3JrZmxvd19pZCI6IDE3LCAiZGVzY3JpcHRpb24iOiBudWxsfV0sICJs
YXN0X21vZGlmaWVkX3RpbWUiOiAxNTc0Nzk4ODExMDI5LCAiZGVzdGluYXRpb25faGFuZGxlIjog
ImZuX2xvZ19jYXB0dXJlIiwgImlkIjogMTIsICJuYW1lIjogImZuX2xvZ19jYXB0dXJlIn1dLCAi
YWN0aW9uX29yZGVyIjogW10sICJnZW9zIjogbnVsbCwgInRhZ3MiOiBbXSwgInRhc2tfb3JkZXIi
OiBbXSwgInR5cGVzIjogW10sICJ0aW1lZnJhbWVzIjogbnVsbCwgIndvcmtzcGFjZXMiOiBbXSwg
ImluYm91bmRfbWFpbGJveGVzIjogbnVsbCwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAicGhhc2Vz
IjogW10sICJub3RpZmljYXRpb25zIjogbnVsbCwgInJlZ3VsYXRvcnMiOiBudWxsLCAiaW5jaWRl
bnRfdHlwZXMiOiBbeyJjcmVhdGVfZGF0ZSI6IDE1NzQ4MDMwODg4MDksICJkZXNjcmlwdGlvbiI6
ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0
b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiaWQiOiAwLCAibmFtZSI6ICJDdXN0b21p
emF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAidXBkYXRlX2RhdGUiOiAxNTc0ODAzMDg4ODA5
LCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZW5hYmxl
ZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjog
ZmFsc2V9XSwgInNjcmlwdHMiOiBbXSwgInNlcnZlcl92ZXJzaW9uIjogeyJtYWpvciI6IDMzLCAi
dmVyc2lvbiI6ICIzMy4wLjUwODciLCAiYnVpbGRfbnVtYmVyIjogNTA4NywgIm1pbm9yIjogMH0s
ICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7InByb2dyYW1tYXRpY19uYW1lIjogImZuX2xvZ19j
YXB0dXJlIiwgInRhZ3MiOiBbXSwgImV4cG9ydF9rZXkiOiAiZm5fbG9nX2NhcHR1cmUiLCAidXVp
ZCI6ICJjN2NjNGE0ZC02ZDQ1LTRkOGQtYWI0Yi0xYjQ2M2YyZWFmYmYiLCAiZXhwZWN0X2FjayI6
IHRydWUsICJkZXN0aW5hdGlvbl90eXBlIjogMCwgInVzZXJzIjogWyJhQGV4YW1wbGUuY29tIl0s
ICJhcGlfa2V5cyI6IFtdLCAibmFtZSI6ICJmbl9sb2dfY2FwdHVyZSJ9XSwgImluY2lkZW50X2Fy
dGlmYWN0X3R5cGVzIjogW10sICJyb2xlcyI6IFtdLCAiZmllbGRzIjogW3sib3BlcmF0aW9ucyI6
IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImxvZ19j
YXB0dXJlX21heGxlbiIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJj
aGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMjUwLCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjog
ImNiOTUxMWVhLWJhM2UtNGIxZC1iOGQ2LTI2YTczYWVlMzE0MyIsICJjaG9zZW4iOiBmYWxzZSwg
ImlucHV0X3R5cGUiOiAibnVtYmVyIiwgInRvb2x0aXAiOiAiIyBvZiBsb2cgbGluZXMgdG8gcmV0
dXJuIGZyb20gdGhlIGVuZCBvciBhbGwgbGluZXMgd2hlbiBlbXB0eSIsICJpbnRlcm5hbCI6IGZh
bHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgInRhZ3MiOiBbXSwgImFs
bG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9sb2df
Y2FwdHVyZV9tYXhsZW4iLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVy
IjogIiIsICJuYW1lIjogImxvZ19jYXB0dXJlX21heGxlbiIsICJkZXByZWNhdGVkIjogZmFsc2Us
ICJjYWxjdWxhdGVkIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgImRlZmF1bHRfY2hvc2VuX2J5X3Nl
cnZlciI6IGZhbHNlfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRp
b25fcGVybXMiOiB7fSwgInRleHQiOiAidGFza19pZCIsICJibGFua19vcHRpb24iOiBmYWxzZSwg
InByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMjQ5LCAicmVhZF9vbmx5
IjogZmFsc2UsICJ1dWlkIjogIjk1OGYwOTUzLThiNmYtNDQ3Mi1iNzg2LWI5YWU0MzUxZGRmZSIs
ICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAibnVtYmVyIiwgInRvb2x0aXAiOiAiIiwg
ImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAi
dGFncyI6IFtdLCAiYWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJf
X2Z1bmN0aW9uL3Rhc2tfaWQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9s
ZGVyIjogIiIsICJuYW1lIjogInRhc2tfaWQiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiY2FsY3Vs
YXRlZCI6IGZhbHNlLCAidmFsdWVzIjogW10sICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1z
Ijoge30sICJ0ZXh0IjogImxvZ19hdHRhY2htZW50X25hbWUiLCAiYmxhbmtfb3B0aW9uIjogZmFs
c2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDI0NiwgInJlYWRf
b25seSI6IGZhbHNlLCAidXVpZCI6ICJkNjMxNzRhZi0wZDkwLTRkNjctYTgzYS1mYjY1ZWU2M2Qy
NGEiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJp
ZiBlbXB0eSB0aGUgZmlsZSB3aWxsIGJlIHJlc2lsaWVudC1jaXJjdWl0c195eXltbWRkX2hobW1z
LmxvZyIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMi
OiBbXSwgInRhZ3MiOiBbXSwgImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImV4cG9ydF9r
ZXkiOiAiX19mdW5jdGlvbi9sb2dfYXR0YWNobWVudF9uYW1lIiwgImhpZGVfbm90aWZpY2F0aW9u
IjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJsb2dfYXR0YWNobWVudF9uYW1l
IiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgInZhbHVlcyI6IFtd
LCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2V9LCB7Im9wZXJhdGlvbnMiOiBbXSwg
InR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJpbmNpZGVudF9p
ZCIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjog
dHJ1ZSwgImlkIjogMTg4LCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjYwZThiNjQzLTU2
N2QtNDY0MC04NjA0LTYzN2Y3NjFjNjFmNyIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUi
OiAibnVtYmVyIiwgInRvb2x0aXAiOiAiIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQi
OiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAidGFncyI6IFtdLCAiYWxsb3dfZGVmYXVsdF92YWx1
ZSI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2luY2lkZW50X2lkIiwgImhpZGVf
bm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJpbmNpZGVu
dF9pZCIsICJkZXByZWNhdGVkIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJ2YWx1ZXMi
OiBbXSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlfSwgeyJvcGVyYXRpb25zIjog
W10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAibG9nX2Nh
cHR1cmVfZGF0ZV9vcHRpb24iLCAiYmxhbmtfb3B0aW9uIjogdHJ1ZSwgInByZWZpeCI6IG51bGws
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMjQ4LCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlk
IjogIjA4ZThlYjQzLWIyZmUtNGU4Yi1hNWRjLTY1YzRlMDI4NWVhMSIsICJjaG9zZW4iOiBmYWxz
ZSwgImlucHV0X3R5cGUiOiAic2VsZWN0IiwgInRvb2x0aXAiOiAiU3BlY2lmeSBpZiB0aGUgZGF0
ZSBtYXRjaCB3aWxsIGJlIGJlZm9yZSBvciBhZnRlciB0aGUgbG9nIHRpbWVzdGFtcCIsICJpbnRl
cm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgInRhZ3Mi
OiBbXSwgImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5j
dGlvbi9sb2dfY2FwdHVyZV9kYXRlX29wdGlvbiIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNl
LCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAibG9nX2NhcHR1cmVfZGF0ZV9vcHRpb24iLCAi
ZGVwcmVjYXRlZCI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAidmFsdWVzIjogW3sidXVp
ZCI6ICIxMDhiNGMxZS0xMDM3LTQxMjUtOGYxZC1mMDI5Yjg1NjA3ODQiLCAiZGVmYXVsdCI6IHRy
dWUsICJlbmFibGVkIjogdHJ1ZSwgInZhbHVlIjogMjExLCAibGFiZWwiOiAiYmVmb3JlIiwgImhp
ZGRlbiI6IGZhbHNlLCAicHJvcGVydGllcyI6IG51bGx9LCB7InV1aWQiOiAiNDdiYTdhZmEtYzFm
ZC00ZjJkLWI4ZTYtMDBjNWQ1MDVkY2E3IiwgImRlZmF1bHQiOiBmYWxzZSwgImVuYWJsZWQiOiB0
cnVlLCAidmFsdWUiOiA0NTAsICJsYWJlbCI6ICJvbiIsICJoaWRkZW4iOiBmYWxzZSwgInByb3Bl
cnRpZXMiOiBudWxsfSwgeyJ1dWlkIjogIjM2MTFjOWJkLTljNTgtNDRlYS05NjgxLTI0NDI2YWYz
YzA5MyIsICJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgInZhbHVlIjogMjEyLCAi
bGFiZWwiOiAiYWZ0ZXIiLCAiaGlkZGVuIjogZmFsc2UsICJwcm9wZXJ0aWVzIjogbnVsbH1dLCAi
ZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2V9LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5
cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJsb2dfbWluX2xldmVs
IiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0
cnVlLCAiaWQiOiAyNDcsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiN2FlMjNjYjMtNDFj
Yy00MWFkLTgxZGEtNzg5OTYxZjgzZWQ2IiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6
ICJzZWxlY3QiLCAidG9vbHRpcCI6ICJGaWx0ZXIgYnkgbG9nIGxldmVscy4gREVCVUcgZGlzcGxh
eXMgZW50aXJlIGxvZyIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0
ZW1wbGF0ZXMiOiBbXSwgInRhZ3MiOiBbXSwgImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwg
ImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9sb2dfbWluX2xldmVsIiwgImhpZGVfbm90aWZpY2F0
aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJsb2dfbWluX2xldmVsIiwg
ImRlcHJlY2F0ZWQiOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgInJlcXVpcmVkIjogImFs
d2F5cyIsICJ2YWx1ZXMiOiBbeyJ1dWlkIjogImQxYzdjNDcwLWVhNGEtNGI0Zi05Y2M4LWFlNDVj
NTE2ZmRkYSIsICJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgInZhbHVlIjogMjA3
LCAibGFiZWwiOiAiRGVidWciLCAiaGlkZGVuIjogZmFsc2UsICJwcm9wZXJ0aWVzIjogbnVsbH0s
IHsidXVpZCI6ICI3ZDM4MmVhZC05YzNlLTQwYjQtYmMzNi05MjYxODQ5ZTIyNTQiLCAiZGVmYXVs
dCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJ2YWx1ZSI6IDIwOCwgImxhYmVsIjogIkluZm8i
LCAiaGlkZGVuIjogZmFsc2UsICJwcm9wZXJ0aWVzIjogbnVsbH0sIHsidXVpZCI6ICIyNjk5Nzg3
NC05ZDY1LTRiMGEtYjJmOS1kOWNkMTY5Y2FjMTAiLCAiZGVmYXVsdCI6IHRydWUsICJlbmFibGVk
IjogdHJ1ZSwgInZhbHVlIjogMjA5LCAibGFiZWwiOiAiV2FybmluZyIsICJoaWRkZW4iOiBmYWxz
ZSwgInByb3BlcnRpZXMiOiBudWxsfSwgeyJ1dWlkIjogIjI3NWM1NTdiLWQ5NzMtNDE2ZS05MTM2
LWM1NGY1ZjhlOGRiZCIsICJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgInZhbHVl
IjogMjEwLCAibGFiZWwiOiAiRXJyb3IiLCAiaGlkZGVuIjogZmFsc2UsICJwcm9wZXJ0aWVzIjog
bnVsbH1dLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2V9LCB7Im9wZXJhdGlvbnMi
OiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJsb2df
Y2FwdHVyZV9kYXRlIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNo
YW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyNDUsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAi
ODdjYjRlYzUtYTVkNy00YzkwLTk3ZDYtM2FmYzYwYzU1NGJhIiwgImNob3NlbiI6IGZhbHNlLCAi
aW5wdXRfdHlwZSI6ICJkYXRldGltZXBpY2tlciIsICJ0b29sdGlwIjogIkRhdGUgdG8gc3RhcnQg
bG9nIGNhcHR1cmUiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVt
cGxhdGVzIjogW10sICJ0YWdzIjogW10sICJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJl
eHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vbG9nX2NhcHR1cmVfZGF0ZSIsICJoaWRlX25vdGlmaWNh
dGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAibG9nX2NhcHR1cmVfZGF0
ZSIsICJkZXByZWNhdGVkIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJ2YWx1ZXMiOiBb
XSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlfSwgeyJvcGVyYXRpb25zIjogW10s
ICJ0eXBlX2lkIjogNiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJNYXggbGluZXMi
LCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJjaGFuZ2Vh
YmxlIjogdHJ1ZSwgImlkIjogMjQyLCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjdlMDVm
MzcyLWRkZDYtNDQyNS04YTQ4LWYzNjgyN2M3ZTllOSIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0
X3R5cGUiOiAibnVtYmVyIiwgInRvb2x0aXAiOiAiIyBvZiBsaW5lcyB0byBjYXB0dXJlIG9yIGFs
bCB3aGVuIGVtcHR5IiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRl
bXBsYXRlcyI6IFtdLCAidGFncyI6IFtdLCAiYWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAi
ZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL2xvZ19jYXB0dXJlX21heGxlbiIsICJoaWRl
X25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAibG9nX2Nh
cHR1cmVfbWF4bGVuIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwg
InZhbHVlcyI6IFtdLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2V9LCB7Im9wZXJh
dGlvbnMiOiBbXSwgInR5cGVfaWQiOiA2LCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0Ijog
IkRhdGUgY29tcGFyZSIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6ICJwcm9wZXJ0
aWVzIiwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyNDAsICJyZWFkX29ubHkiOiBmYWxzZSwg
InV1aWQiOiAiN2U2ZjI2NjAtNDJiNC00Y2UzLThlZDEtMjk2M2QwMGJmYmU3IiwgImNob3NlbiI6
IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJkYXRldGltZXBpY2tlciIsICJ0b29sdGlwIjogIkNhcHR1
cmUgbGluZXMgc2luY2UgdGhpcyBkYXRlIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQi
OiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAidGFncyI6IFtdLCAiYWxsb3dfZGVmYXVsdF92YWx1
ZSI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL2xvZ19jYXB0dXJlX2Rh
dGUiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1l
IjogImxvZ19jYXB0dXJlX2RhdGUiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6
IGZhbHNlLCAidmFsdWVzIjogW10sICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZX0s
IHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDYsICJvcGVyYXRpb25fcGVybXMiOiB7fSwg
InRleHQiOiAiQXR0YWNobWVudCBOYW1lIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4
IjogInByb3BlcnRpZXMiLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDI0MSwgInJlYWRfb25s
eSI6IGZhbHNlLCAidXVpZCI6ICIyOWQwMTYxMS1kODU3LTQyZTEtYmVlYy0xMzUzNGY1NjhjYzAi
LCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJpZiBl
bXB0eSwgbmFtZSB3aWxsIGJlICdyZXNpbGllbnQtY2lyY3VpdHNfeXl5eW1tZGRfaGhtbXNzLmxv
ZyciLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjog
W10sICJ0YWdzIjogW10sICJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJleHBvcnRfa2V5
IjogImFjdGlvbmludm9jYXRpb24vbG9nX2F0dGFjaG1lbnRfbmFtZSIsICJoaWRlX25vdGlmaWNh
dGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAibG9nX2F0dGFjaG1lbnRf
bmFtZSIsICJkZXByZWNhdGVkIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJ2YWx1ZXMi
OiBbXSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlfSwgeyJvcGVyYXRpb25zIjog
W10sICJ0eXBlX2lkIjogNiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJEYXRlIG9w
dGlvbiIsICJibGFua19vcHRpb24iOiB0cnVlLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAiY2hh
bmdlYWJsZSI6IHRydWUsICJpZCI6IDI0NCwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJj
MjM2ZmNjZC0zMmVjLTQ5NGMtYmJlMi02M2U2M2M0ZjFjMjIiLCAiY2hvc2VuIjogZmFsc2UsICJp
bnB1dF90eXBlIjogInNlbGVjdCIsICJ0b29sdGlwIjogIlNwZWNpZnkgaWYgdGhlIGxvZyB0aW1l
c3BhbXAgbWF0Y2ggaXMgYmVmb3JlIG9yIGFmdGVyIHRoZSBzcGVjaWZpZWQgZGF0ZSIsICJpbnRl
cm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgInRhZ3Mi
OiBbXSwgImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9u
aW52b2NhdGlvbi9sb2dfY2FwdHVyZV9kYXRlX29wdGlvbiIsICJoaWRlX25vdGlmaWNhdGlvbiI6
IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAibG9nX2NhcHR1cmVfZGF0ZV9vcHRp
b24iLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAidmFsdWVzIjog
W3sidXVpZCI6ICIxMjBiOTljYy0yM2ZkLTQ0OGUtOTU0OC1kY2QzMTQyMDA3YmEiLCAiZGVmYXVs
dCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJ2YWx1ZSI6IDIwNSwgImxhYmVsIjogImJlZm9y
ZSIsICJoaWRkZW4iOiBmYWxzZSwgInByb3BlcnRpZXMiOiBudWxsfSwgeyJ1dWlkIjogIjQ2ODc3
MDc1LWI5ZjYtNGQwNi04Nzc3LTM3ZGY0ZDE5Nzk1ZSIsICJkZWZhdWx0IjogZmFsc2UsICJlbmFi
bGVkIjogdHJ1ZSwgInZhbHVlIjogNDUxLCAibGFiZWwiOiAib24iLCAiaGlkZGVuIjogZmFsc2Us
ICJwcm9wZXJ0aWVzIjogbnVsbH0sIHsidXVpZCI6ICJiMDFiMmUyNS0yMThjLTQyODgtYTZiYi0z
MGYwNGNlZmE5NWMiLCAiZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJ2YWx1ZSI6
IDIwNiwgImxhYmVsIjogImFmdGVyIiwgImhpZGRlbiI6IGZhbHNlLCAicHJvcGVydGllcyI6IG51
bGx9XSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlfSwgeyJvcGVyYXRpb25zIjog
W10sICJ0eXBlX2lkIjogNiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJGaWx0ZXIg
YnkgTG9nIExldmVsIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogInByb3BlcnRp
ZXMiLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDI0MywgInJlYWRfb25seSI6IGZhbHNlLCAi
dXVpZCI6ICJmMTZmNjgyMS05NzM5LTRjMDMtYTQzNS05YTBhMjA1ZGI4MWEiLCAiY2hvc2VuIjog
ZmFsc2UsICJpbnB1dF90eXBlIjogInNlbGVjdCIsICJ0b29sdGlwIjogIkZpbHRlciBieSBsb2cg
bGV2ZWwsIERlYnVnIGRpc3BsYXlzIGFsbCBsb2cgZW50cmllcyIsICJpbnRlcm5hbCI6IGZhbHNl
LCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgInRhZ3MiOiBbXSwgImFsbG93
X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9s
b2dfbWluX2xldmVsIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6
ICIiLCAibmFtZSI6ICJsb2dfbWluX2xldmVsIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImNhbGN1
bGF0ZWQiOiBmYWxzZSwgInJlcXVpcmVkIjogImFsd2F5cyIsICJ2YWx1ZXMiOiBbeyJ1dWlkIjog
IjMyYWYxMTE4LTE2ZGQtNDNjMC04YzVkLTY2MzQyMDQwNGQ0ZSIsICJkZWZhdWx0IjogZmFsc2Us
ICJlbmFibGVkIjogdHJ1ZSwgInZhbHVlIjogMjAwLCAibGFiZWwiOiAiRGVidWciLCAiaGlkZGVu
IjogZmFsc2UsICJwcm9wZXJ0aWVzIjogbnVsbH0sIHsidXVpZCI6ICIxNWU5YmQ0ZC1iNzg2LTRi
MmItYWMxOS1lODY1MjI1Yjc0NzkiLCAiZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUs
ICJ2YWx1ZSI6IDIwMSwgImxhYmVsIjogIkluZm8iLCAiaGlkZGVuIjogZmFsc2UsICJwcm9wZXJ0
aWVzIjogbnVsbH0sIHsidXVpZCI6ICJmMTE1ZDY4NC01ODBmLTQwMzItYmI2MC1hNDZkNWRlMjE1
YzUiLCAiZGVmYXVsdCI6IHRydWUsICJlbmFibGVkIjogdHJ1ZSwgInZhbHVlIjogMjAyLCAibGFi
ZWwiOiAiV2FybmluZyIsICJoaWRkZW4iOiBmYWxzZSwgInByb3BlcnRpZXMiOiBudWxsfSwgeyJ1
dWlkIjogImNhZDRjODgxLThjNmQtNDI2MS1iZjZkLThiZDQzMjI3MmFhNyIsICJkZWZhdWx0Ijog
ZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgInZhbHVlIjogMjAzLCAibGFiZWwiOiAiRXJyb3IiLCAi
aGlkZGVuIjogZmFsc2UsICJwcm9wZXJ0aWVzIjogbnVsbH1dLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2V9LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAwLCAib3BlcmF0
aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAiYmxhbmtfb3B0aW9uIjogZmFs
c2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDYxLCAicmVhZF9v
bmx5IjogdHJ1ZSwgInV1aWQiOiAiYzNmMGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2Nh
IiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJib29sZWFuIiwgInRvb2x0aXAiOiAi
V2hldGhlciB0aGUgaW5jaWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVu
dC4gIFRoaXMgZmllbGQgaXMgcmVhZC1vbmx5LiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90
ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgInRhZ3MiOiBbXSwgImFsbG93X2RlZmF1bHRf
dmFsdWUiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQvaW5jX3RyYWluaW5nIiwgImhp
ZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJuYW1lIjogImluY190cmFpbmluZyIsICJkZXByZWNh
dGVkIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgImRlZmF1bHRf
Y2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlfV0sICJvdmVycmlkZXMiOiBbXSwgImV4cG9ydF9kYXRl
IjogMTU3NDgwMzA4MDE5OH0=
"""
    )