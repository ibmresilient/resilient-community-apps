{"action_order": [], "actions": [{"automations": [], "conditions": [{"evaluation_id": null, "field_name": "email_approval_process.status", "method": "in", "type": null, "value": ["Approved", "Denied", "Expired", "Unknown"]}], "enabled": true, "export_key": "Complete Email Approval Process", "id": 389, "logic_type": "all", "message_destinations": [], "name": "Complete Email Approval Process", "object_type": "email_approval_process", "tags": [], "timeout_seconds": 86400, "type": 0, "uuid": "cd6e6424-ee3a-432d-af30-f836d1493e0d", "view_items": [], "workflows": ["complete_email_approval_process"]}, {"automations": [], "conditions": [], "enabled": true, "export_key": "Email Approval Process: Artifact", "id": 624, "logic_type": "all", "message_destinations": [], "name": "Email Approval Process: Artifact", "object_type": "artifact", "tags": [], "timeout_seconds": 86400, "type": 1, "uuid": "b9ef47c1-7306-43c5-83d1-1dd4ba11a875", "view_items": [{"content": "41bfaa97-37be-4486-8fc9-e3ae9bb979be", "element": "field_uuid", "field_type": "actioninvocation", "show_if": null, "show_link_header": false, "step_label": null}, {"content": "fabdb418-8334-4ed4-badc-a2be47a2658a", "element": "field_uuid", "field_type": "actioninvocation", "show_if": null, "show_link_header": false, "step_label": null}, {"content": "feaf27ba-eefc-4bac-90e6-3c757841fc4b", "element": "field_uuid", "field_type": "actioninvocation", "show_if": null, "show_link_header": false, "step_label": null}, {"content": "79610ebe-5ed1-4058-a96e-3bdc80efd1e4", "element": "field_uuid", "field_type": "actioninvocation", "show_if": null, "show_link_header": false, "step_label": null}, {"content": "428205c5-6772-4caf-b2e7-d75d220aaac2", "element": "field_uuid", "field_type": "actioninvocation", "show_if": null, "show_link_header": false, "step_label": null}], "workflows": ["email_approval_process_artifact"]}, {"automations": [], "conditions": [], "enabled": true, "export_key": "Email Approval Process: Task", "id": 378, "logic_type": "all", "message_destinations": [], "name": "Email Approval Process: Task", "object_type": "task", "tags": [], "timeout_seconds": 86400, "type": 1, "uuid": "936acf14-a327-41cb-9a78-daf30217b1c5", "view_items": [{"content": "41bfaa97-37be-4486-8fc9-e3ae9bb979be", "element": "field_uuid", "field_type": "actioninvocation", "show_if": null, "show_link_header": false, "step_label": null}, {"content": "fabdb418-8334-4ed4-badc-a2be47a2658a", "element": "field_uuid", "field_type": "actioninvocation", "show_if": null, "show_link_header": false, "step_label": null}, {"content": "feaf27ba-eefc-4bac-90e6-3c757841fc4b", "element": "field_uuid", "field_type": "actioninvocation", "show_if": null, "show_link_header": false, "step_label": null}, {"content": "79610ebe-5ed1-4058-a96e-3bdc80efd1e4", "element": "field_uuid", "field_type": "actioninvocation", "show_if": null, "show_link_header": false, "step_label": null}, {"content": "428205c5-6772-4caf-b2e7-d75d220aaac2", "element": "field_uuid", "field_type": "actioninvocation", "show_if": null, "show_link_header": false, "step_label": null}], "workflows": ["email_approval_process_task"]}, {"automations": [{"scripts_to_run": "Email Approval Process Response", "type": "run_script", "value": null}], "conditions": [{"evaluation_id": null, "field_name": null, "method": "object_added", "type": null, "value": null}], "enabled": true, "export_key": "Process Email Approval Response", "id": 384, "logic_type": "all", "message_destinations": [], "name": "Process Email Approval Response", "object_type": "__emailmessage", "tags": [], "timeout_seconds": 86400, "type": 0, "uuid": "3150f9ce-39ae-4875-9716-09bf7d778f1a", "view_items": [], "workflows": []}], "apps": [], "automatic_tasks": [], "export_date": 1666790805731, "export_format_version": 2, "export_type": null, "fields": [{"allow_default_value": false, "blank_option": false, "calculated": false, "changeable": true, "chosen": false, "default_chosen_by_server": false, "deprecated": false, "export_key": "actioninvocation/email_approval_cc", "hide_notification": false, "id": 3364, "input_type": "text", "internal": false, "is_tracked": false, "name": "email_approval_cc", "operation_perms": {}, "operations": [], "placeholder": "", "prefix": "properties", "read_only": false, "rich_text": false, "tags": [], "templates": [], "text": "Approval Cc", "tooltip": "comma separated list of email recipients", "type_id": 6, "uuid": "fabdb418-8334-4ed4-badc-a2be47a2658a", "values": []}, {"allow_default_value": false, "blank_option": false, "calculated": false, "changeable": true, "chosen": false, "default_chosen_by_server": false, "deprecated": false, "export_key": "actioninvocation/email_approval_details", "hide_notification": false, "id": 2809, "input_type": "textarea", "internal": false, "is_tracked": false, "name": "email_approval_details", "operation_perms": {}, "operations": [], "placeholder": "", "prefix": "properties", "read_only": false, "rich_text": false, "tags": [], "templates": [], "text": "Approval Details", "tooltip": "email details to include in email msg", "type_id": 6, "uuid": "feaf27ba-eefc-4bac-90e6-3c757841fc4b", "values": []}, {"allow_default_value": false, "blank_option": false, "calculated": false, "changeable": true, "chosen": false, "default_chosen_by_server": false, "deprecated": false, "export_key": "actioninvocation/email_approval_to", "hide_notification": false, "id": 2810, "input_type": "text", "internal": false, "is_tracked": false, "name": "email_approval_to", "operation_perms": {}, "operations": [], "placeholder": "", "prefix": "properties", "read_only": false, "required": "always", "rich_text": false, "tags": [], "templates": [], "text": "Approval To", "tooltip": "email recipient list", "type_id": 6, "uuid": "41bfaa97-37be-4486-8fc9-e3ae9bb979be", "values": []}, {"allow_default_value": false, "blank_option": false, "calculated": false, "changeable": true, "chosen": false, "default_chosen_by_server": false, "deprecated": false, "export_key": "actioninvocation/email_approval_importance", "hide_notification": false, "id": 3363, "input_type": "select", "internal": false, "is_tracked": false, "name": "email_approval_importance", "operation_perms": {}, "operations": [], "placeholder": "", "prefix": "properties", "read_only": false, "required": "always", "rich_text": false, "tags": [], "templates": [], "text": "Email Importance", "tooltip": "", "type_id": 6, "uuid": "428205c5-6772-4caf-b2e7-d75d220aaac2", "values": [{"default": false, "enabled": true, "hidden": false, "label": "low", "properties": null, "uuid": "e4112cf9-f9bd-4ad4-bb57-0a10156f4e84", "value": 970}, {"default": true, "enabled": true, "hidden": false, "label": "normal", "properties": null, "uuid": "8a9342cd-d9a4-4a7c-97fe-aa3062ef6024", "value": 971}, {"default": false, "enabled": true, "hidden": false, "label": "high", "properties": null, "uuid": "304ce0b3-fca9-4d79-ac83-5b38a6f2354b", "value": 972}]}, {"allow_default_value": false, "blank_option": false, "calculated": false, "changeable": true, "chosen": false, "default_chosen_by_server": false, "deprecated": false, "export_key": "actioninvocation/email_approval_expiration", "hide_notification": false, "id": 2826, "input_type": "datetimepicker", "internal": false, "is_tracked": false, "name": "email_approval_expiration", "operation_perms": {}, "operations": [], "placeholder": "", "prefix": "properties", "read_only": false, "rich_text": false, "tags": [], "templates": [], "text": "Approval Expiration", "tooltip": "Date and Time when no longer valid", "type_id": 6, "uuid": "79610ebe-5ed1-4058-a96e-3bdc80efd1e4", "values": []}, {"export_key": "incident/internal_customizations_field", "id": 0, "input_type": "text", "internal": true, "name": "internal_customizations_field", "read_only": true, "text": "Customizations Field (internal)", "type_id": 0, "uuid": "bfeec2d4-3770-11e8-ad39-4a0004044aa1"}], "functions": [], "geos": null, "groups": null, "id": 97, "inbound_destinations": [], "inbound_mailboxes": null, "incident_artifact_types": [], "incident_types": [{"update_date": 1666790803872, "create_date": 1666790803872, "uuid": "bfeec2d4-3770-11e8-ad39-4a0004044aa0", "description": "Customization Packages (internal)", "export_key": "Customization Packages (internal)", "name": "Customization Packages (internal)", "enabled": false, "system": false, "parent_id": null, "hidden": false, "id": 0}], "industries": null, "layouts": [], "locale": null, "message_destinations": [], "notifications": null, "overrides": [], "phases": [], "playbooks": null, "regulators": null, "roles": [], "scripts": [{"actions": [], "created_date": 1665599672367, "description": "Collect and format data used by the Email Approval Process. Uses the 'email_approval' workspace property.\n\nThis script relies on the 'create custom task' function from fn_task_utils to precede it", "enabled": false, "export_key": "Email Approval Pre Process Artifact", "id": 22, "language": "python3", "last_modified_by": "b@example.com", "last_modified_time": 1666729302952, "name": "Email Approval Pre Process Artifact", "object_type": "artifact", "playbook_handle": null, "programmatic_name": "email_approval_pre_process_artifact", "script_text": "import base64\nimport hashlib\nimport re\nimport time\n\n# get the task_creation property. This script requires the 'create custom task' function to previously run\ntry:\n  dialog_inputs = playbook.inputs\n  task_info = playbook.functions.results.task_creation\nexcept:\n  dialog_inputs = rule.properties\n  task_info = workflow.properties.task_creation\n\ntask_id = task_info['content'].get('task', {}).get('id')\ntask_name = task_info['inputs'].get('task_name')\n\nMESSAGE_ID_DOMAIN = \"QRADARSOAR.IBM.COM\"\nSUBJECT_PREFIX = \"IBM SOAR Approval Requested\"\n# check for any combination of upper/lowercase http/https/news/telnet/file. Characters repeated for readability\nDEFANG_PATTERN = re.compile(r\"(https|http|ftps|ftp|mailto|news|file|mailto):\", re.IGNORECASE)\n\ncurrent_time = int(time.time()*1000)\n\n# generate a message-id\ndef generate_msg_hash(expiration, incident_id, incident_create_date, task_id):\n    m = hashlib.sha256()\n    m.update(str(expiration).encode())\n    m.update(str(incident_id).encode())\n    m.update(str(incident_create_date).encode())\n    m.update(str(task_id).encode())\n\n    uuid_hash = m.hexdigest()\n    return \"{}-{}-{}-{}-{}\".format(uuid_hash[0:12], uuid_hash[12:24], uuid_hash[24:36], uuid_hash[36:48], uuid_hash[48:])\n\ndef create_msg_id(msg_hash, domain=MESSAGE_ID_DOMAIN):\n  return \"{}@{}\".format(msg_hash, domain)\n\nmsg_content = dialog_inputs.email_approval_details.content.replace('\\n', '<br>') if dialog_inputs.email_approval_details.content else None\n\nexpiration_ts = dialog_inputs.email_approval_expiration if dialog_inputs.email_approval_expiration else 0\n# confirm dates in the future\nif expiration_ts and expiration_ts < current_time:\n    helper.fail(\"Expiration date is in the past\")\n\nexpiration = time.strftime('%Y-%m-%d %H:%M:%S %Z', time.localtime(expiration_ts/1000)) if expiration_ts else 0\n\nmsg_hash = generate_msg_hash(expiration_ts,\n                             incident.id,\n                             incident.create_date,\n                             task_id\n                             )\nmsg_id = create_msg_id(msg_hash)\n# defang the artifact if needed\nartifact_value = DEFANG_PATTERN.sub(r\"x_\\1_x:\", artifact.value)\nbody = []\nbody.append(f\"\"\"\n##- Please type your reply \"approved\" or \"denied\" above this line. Add additional detail on separate line(s), as necessary.  -##\n<br><br>\nApproval is requested to perform an action on artifact: '{artifact_value}'.\n\"\"\")\nif expiration_ts > 0:\n    body.append(f\"This approval will expire on: {expiration}\")\n\n\nbody.append(f\"\"\"<br>\nAdditional detail follows:\n<br>\n{msg_content}\n<br><br>\n##- retain this data -##\n<br>\nmsg-id: {msg_hash}\n<br>\nincident {incident.id}: {incident.name} (<a target='_blank' href='{{{{ template_helper.generate_incident_url({incident.id}) }}}}'>link</a>)\n<br>\ntask {task_id}: {task_name} (<a target='_blank' href='{{{{ template_helper.generate_task_url({incident.id},{task_id}) }}}}'>link</a>)\n<br>\nartifact: {artifact.type}: {artifact_value}\n<br>\nexpiration {expiration_ts}: {expiration}\n\"\"\")\n\n# have the approval details\ndetails = {\n  \"ts\": current_time,\n  \"expiration\": expiration,\n  \"expiration_ts\": expiration_ts,\n  \"msg_hash\": msg_hash,\n  \"msg_id\": msg_id,\n  \"to\": dialog_inputs.email_approval_to,\n  \"from\": None, # change as necessary\n  \"cc\": dialog_inputs.email_approval_cc,\n  \"bcc\": None, # change as necessary\n  \"subject\": f\"{SUBJECT_PREFIX} for Task: {task_name}\",\n  \"body\": \"<br>\".join(body),\n  \"importance\": dialog_inputs.email_approval_importance,\n  \"task_id\": task_id,\n  \"task_name\": task_name\n}\n\n# add to property for function processing\ntry:\n  workflow.addProperty(\"email_approval\", details)\nexcept:\n  playbook.addProperty(\"email_approval\", details)\n", "tags": [], "uuid": "6c477b73-b03d-4333-bdba-731347aba1c3"}, {"actions": [], "created_date": 1661457880386, "description": "Collect and format data used by the Email Approval Process. Uses the 'email_approval' workspace property.", "enabled": false, "export_key": "Email Approval Pre Process Task", "id": 12, "language": "python3", "last_modified_by": "b@example.com", "last_modified_time": 1666729302989, "name": "Email Approval Pre Process Task", "object_type": "task", "playbook_handle": null, "programmatic_name": "pre_process_email_approval", "script_text": "import base64\nimport hashlib\nimport time\n\ntry:\n  dialog_inputs = playbook.inputs\nexcept:\n  dialog_inputs = rule.properties\n\nMESSAGE_ID_DOMAIN = \"QRADARSOAR.IBM.COM\"\nSUBJECT_PREFIX = \"IBM SOAR Approval Requested\"\n\ncurrent_time = int(time.time()*1000)\n\n# generate a message-id\ndef generate_msg_hash(expiration, incident_id, incident_create_date, task_id):\n    m = hashlib.sha256()\n    m.update(str(expiration).encode())\n    m.update(str(incident_id).encode())\n    m.update(str(incident_create_date).encode())\n    m.update(str(task_id).encode())\n\n    uuid_hash = m.hexdigest()\n    return \"{}-{}-{}-{}-{}\".format(uuid_hash[0:12], uuid_hash[12:24], uuid_hash[24:36], uuid_hash[36:48], uuid_hash[48:])\n\ndef create_msg_id(msg_hash, domain=MESSAGE_ID_DOMAIN):\n  return \"{}@{}\".format(msg_hash, domain)\n\nmsg_content = dialog_inputs.email_approval_details.content.replace('\\n', '<br>') if dialog_inputs.email_approval_details.content else None\n\nexpiration_ts = dialog_inputs.email_approval_expiration if dialog_inputs.email_approval_expiration else 0\n# confirm dates in the future\nif expiration_ts and expiration_ts < current_time:\n    helper.fail(\"Expiration date is in the past\")\n\nexpiration = time.strftime('%Y-%m-%d %H:%M:%S %Z', time.localtime(expiration_ts/1000)) if expiration_ts else 0\n\nmsg_hash = generate_msg_hash(expiration_ts,\n                             incident.id,\n                             incident.create_date,\n                             task.id\n                             )\nmsg_id = create_msg_id(msg_hash)\n\nbody = []\nbody.append(\"\"\"\n##- Please type your reply \"approved\" or \"denied\" above this line. Add additional detail on separate line(s), as necessary.  -##\n<br><br>\nApproval is requested to perform this activity.\n\"\"\")\nif expiration_ts > 0:\n    body.append(f\"This approval will expire on: {expiration}\")\n    \nbody.append(f\"\"\"<br>\nAdditional detail follows:\n<br>\n{msg_content}\n<br><br>\n##- retain this data -##\n<br>\nmsg-id: {msg_hash}\n<br>\nincident {incident.id}: {incident.name} (<a target='_blank' href='{{{{ template_helper.generate_incident_url({incident.id}) }}}}'>link</a>)\n<br>\ntask {task.id}: {task.name} (<a target='_blank' href='{{{{ template_helper.generate_task_url({incident.id},{task.id}) }}}}'>link</a>)\n<br>\nexpiration {expiration_ts}: {expiration}\n\"\"\")\n\n# have the approval details\ndetails = {\n  \"ts\": current_time,\n  \"expiration\": expiration,\n  \"expiration_ts\": expiration_ts,\n  \"msg_hash\": msg_hash,\n  \"msg_id\": msg_id,\n  \"to\": dialog_inputs.email_approval_to,\n  \"from\": None, # change as necessary\n  \"cc\": dialog_inputs.email_approval_cc,\n  \"bcc\": None, # change as necessary\n  \"subject\": f\"{SUBJECT_PREFIX} for Task: {task.name}\",\n  \"body\": \"<br>\".join(body),\n  \"importance\": dialog_inputs.email_approval_importance\n}\n\n# add to property for function processing\ntry:\n  workflow.addProperty(\"email_approval\", details)\nexcept:\n  playbook.addProperty(\"email_approval\", details)\n\n# updates to task\ntask.due_date = expiration_ts if expiration_ts else task.due_date\ntask.owner_id = principal.name if not task.owner_id else None", "tags": [], "uuid": "9fdd148f-407d-48c2-968b-03a88377899d"}, {"actions": [], "created_date": 1660251517362, "description": "Parse email approval emails and make updates to cooresponding incidents and tasks", "enabled": false, "export_key": "Email Approval Process Response", "id": 11, "language": "python3", "last_modified_by": "b@example.com", "last_modified_time": 1666790644005, "name": "Email Approval Process Response", "object_type": "__emailmessage", "playbook_handle": null, "programmatic_name": "email_approval_process_response", "script_text": "# (c) Copyright IBM Corp. 2010, 2022. All Rights Reserved.\nimport datetime\nimport hashlib\nimport re\nimport time\nfrom email.utils import parsedate_to_datetime\n\nSUBJECT_PREFIX = \"IBM SOAR Approval Requested\"\n# pattern used to find and extract the email message-id\nMESSAGE_PATTERN = re.compile(r\"([^<>]+)\")\n\nID_PATTERN_LIST = {\n  'msg-id': re.compile(r\"msg-id: ([a-zA-z0-9-]*)\"),\n  'inc-id': re.compile(r\"incident (\\d*):\"),\n  'task-id': re.compile(r\"task (\\d*):\"),\n  'task-name': re.compile(r\"task \\d*: (.*)$\"),\n  'expiration-ts': re.compile(r\"expiration (\\d*):\")\n}\n\nAPPROVE_LIST = ['yes', 'ok', 'okay', 'approve', 'approved', 'allow', 'proceed', 'continue', 'accept']\nDENY_LIST = ['no', 'disapprove', 'reject', 'rejected', 'deny', 'denied', 'stop', 'pause', 'defer', 'deferred']\nSTRIP_RESPONSE = re.compile(r'(\\w*)') # pattern to strip white space and special characters like '.'\n\n# delimeter for sections within the approval message\nRETAIN_COMMENTS = \"##- retain\"\nORIGINAL_EMAIL = [re.compile(r\"^> \"), \n                  re.compile(r\"^On \"), \n                  re.compile(r\"wrote:\", \n                  re.IGNORECASE), \n                  re.compile(r\"From:\", re.IGNORECASE),\n                  re.compile(r\"^____\")\n                 ] # characters associated with the start of the original message\n\n# F U N C T I O N S\ndef generate_msg_hash(expiration_ts, incident_id, incident_create_date, task_id):\n    m = hashlib.sha256()\n    m.update(str(expiration_ts).encode())\n    m.update(str(incident_id).encode())\n    m.update(str(incident_create_date).encode())\n    m.update(str(task_id).encode())\n\n    uuid_hash = m.hexdigest()\n    return \"{}-{}-{}-{}-{}\".format(uuid_hash[0:12], uuid_hash[12:24], uuid_hash[24:36], uuid_hash[36:48], uuid_hash[48:])\n    \ndef handle_list(value):\n  # convert a list to comma separate list, if neccessary\n  if value and isinstance(value, list):\n    return \", \".join(value)\n\n  return value\n\ndef get_content():\n  # return all content found in the email messagew\n  \"\"\"\n  approved\n  msg1\n  msg2\n  ##- Please type your reply \"approved\" or \"denied\" above this line. Add additional detail on separate line(s), as necessary.  -##\n  \n  Approval is requested to perform this activity. Additional detail follows:\n  checkpoint fw\n  ip ban\n  \n  ##- retain this data -##\n  msg-id: d9ef3d54103f-03cb756ce84b-805eab0bff8c-8030b0796977-a47d83a5f0c391d4\n  incident 2142: Incident generated from email \"Approval Requested for Task: Remote wipe/lock\" via mailbox outlook (<a target='_blank' href='https://9.30.55.116:443/#incidents/2142?orgId=201'>link</a>)\n  task 1066: Interview key individuals (<a target='_blank' href='https://9.30.55.116:443/#incidents/2142?orgId=201&amp;taskId=1066&amp;tabName=details'>link</a>)\n  expiration 123456789: 2022-08-29 12:00:00 IST\n  \"\"\"\n\n  if (emailmessage.body.content is not None):\n    return emailmessage.body.content\n\n  log.error(\"Email message has no content!\")\n\ndef get_response(content):\n  # parse the message body to collect:\n  #  - the response\n  #  - any comments\n  #  - msg-id, incident-id, task-id\n  \n  id_list_response = {}\n  comments = []\n  response = None\n\n  # sections are separators between user response and information about the incident\n  retain_section = False\n  original_msg = False\n  for line in content.split('\\n'):\n    # find the section where all the incident data is retained\n    if RETAIN_COMMENTS in line.strip():\n      retain_section = True\n      continue\n      \n    if retain_section:\n      for key, ptrn in ID_PATTERN_LIST.items():\n        match = ptrn.search(line.strip())\n        if match:\n          id_list_response[key] = match.group(1)\n      continue\n        \n    # parse the approval response and comments\n    if not retain_section and response is not None and line.strip():\n      if \"<br>\" not in line and not original_msg:\n        # make sure we haven't started looking through the original email\n        for matcher in ORIGINAL_EMAIL:\n            if matcher.search(line):\n                original_msg = True\n                break\n            \n        if not original_msg:\n          comments.append(line)\n    elif not retain_section and response is None:\n      match = STRIP_RESPONSE.search(line.strip().lower())\n      reply = match.group(0) if match else line.strip().lower()\n\n      # find approval response\n      if bool(reply in APPROVE_LIST):\n        response = True\n      elif bool(reply in DENY_LIST):\n        response = False\n      else:\n        log.info(f\"extraneous: {line}\")\n\n  log.info(f\"response {response} id_list_response {id_list_response} comments {comments}\")\n  return response, id_list_response, comments\n\ndef find_incident(inc_id):\n  # find the cooresponding incident\n  query_builder.equals(fields.incident.id, int(inc_id))\n  query_builder.equals(fields.incident.plan_status, \"Active\")\n  query = query_builder.build()\n  incidents = helper.findIncidents(query)\n\n  if len(incidents) == 0:\n    return None\n\n  return incidents[0]\n\ndef is_valid_msg_id(incident, id_list_response):\n  # confirm if the msg-id matches the incident\n  confirm_msg_id = generate_msg_hash(id_list_response['expiration-ts'],\n                                     id_list_response['inc-id'],\n                                     incident.create_date,\n                                     id_list_response['task-id']\n                                     )\n\n  return bool(id_list_response['msg-id'] == confirm_msg_id)\n\ndef get_attachments(attachments):\n  return [attachment.suggested_filename for attachment in attachments]\n\ndef get_msg_sent_date(msg_date):\n  # Date: Sat, 27 Aug 2022 20:30:30 +0000 (UTC)\n  dt = parsedate_to_datetime(msg_date[0].replace(\"Date: \", \"\"))\n  return int(dt.timestamp()*1000)\n  \ndef get_expiration_ts(expiration):\n    if expiration != '0':\n        dt = datetime.strptime(expiration, '%Y-%m-%d %H:%M:%S %Z')\n        if dt:\n            return dt.timestamp()*1000\n        \n    return 0\n  \n\n# S T A R T\n# bail if subject doesn't match\nif SUBJECT_PREFIX in emailmessage.subject:\n\n  # loop through the message, starting at the 2nd comment section\n  content = get_content()\n  \n  # collect all the data\n  response, id_list_response, comments = get_response(content)\n  \n  if response is None:\n    log.error(\"No response was recognized\")\n  \n  # do not continue if all ids are not found\n  if id_list_response.keys() != ID_PATTERN_LIST.keys():\n    log.warn(\"This does not appear to be an approval email\")\n    log.warn(emailmessage.body.content)\n    for k,v in id_list_response.items():\n        log.warn(f\"{k}:{v}\")\n  else:\n    # get the expiration timeframe in millisec\n    #id_list_response['expiration-ts'] = get_expiration_ts(id_list_response['expiration'])\n    log.info(f\"Finding incident {id_list_response.get('inc-id')}\")\n    # find the cooresponding incident\n    found_incident = find_incident(id_list_response.get('inc-id'))\n    if not found_incident:\n      helper.fail(f\"Unable to locate incident: {id_list_response.get('inc-id')}\")\n\n    # this populates the incident object\n    log.info(f\"Associating approval with incident: {id_list_response.get('inc-id')}\")\n    emailmessage.associateWithIncident(found_incident)\n    \n    # determine if msg id is the same\n    if not is_valid_msg_id(incident, id_list_response):\n      helper.fail(f\"msg-id mismatch for incident: {id_list_response.get('inc-id')} {id_list_response}\")\n      \n    # store the email in the email approval table\n    row = incident.addRow('email_approval_process')\n    row['date'] = int(emailmessage.sent_date)\n     # determine if the expiration value has expired\n    if int(id_list_response.get('expiration-ts')) != 0 and int(id_list_response.get('expiration-ts')) < int(time.time()*1000):\n      row['status'] = 'Expired'\n    elif response:\n      row['status'] = 'Approved'\n    elif response is None:\n      row['status'] = 'Unknown'\n    else:\n      row['status'] = 'Denied'\n\n    row['recipients'] = f\"To: {emailmessage.to[0].get('address')}\\nFrom: {emailmessage.sender.get('address')}\"\n    row['comments'] = \"\\n\".join(comments)\n    row['message_id'] = id_list_response.get('msg-id')\n    row['expiration'] = int(id_list_response.get('expiration-ts'))\n    row['task_id'] = int(id_list_response.get('task-id'))\n    row['task_name'] = id_list_response.get('task-name')\n", "tags": [], "uuid": "eb728439-2706-41f1-a387-b299d080f36d"}], "server_version": {"build_number": 49, "major": 43, "minor": 1, "version": "43.1.49"}, "tags": [], "task_order": [], "timeframes": null, "types": [{"actions": [], "display_name": "Email Approval Process", "export_key": "email_approval_process", "fields": {"comments": {"allow_default_value": false, "blank_option": false, "calculated": false, "changeable": true, "chosen": false, "default_chosen_by_server": false, "deprecated": false, "export_key": "email_approval_process/comments", "hide_notification": false, "id": 2819, "input_type": "textarea", "internal": false, "is_tracked": false, "name": "comments", "operation_perms": {}, "operations": [], "order": 5, "placeholder": "", "prefix": null, "read_only": false, "rich_text": false, "tags": [], "templates": [], "text": "Comments", "tooltip": "", "type_id": 1032, "uuid": "70acca89-8c37-4398-acf0-e497c43d188c", "values": [], "width": 84}, "date": {"allow_default_value": false, "blank_option": false, "calculated": false, "changeable": true, "chosen": false, "default_chosen_by_server": false, "deprecated": false, "export_key": "email_approval_process/date", "hide_notification": false, "id": 2820, "input_type": "datetimepicker", "internal": false, "is_tracked": false, "name": "date", "operation_perms": {}, "operations": [], "order": 0, "placeholder": "", "prefix": null, "read_only": false, "rich_text": false, "tags": [], "templates": [], "text": "Date", "tooltip": "", "type_id": 1032, "uuid": "c1748afa-9bf9-4e09-b219-48bb91abfcc9", "values": [], "width": 130}, "expiration": {"allow_default_value": false, "blank_option": true, "calculated": false, "changeable": true, "chosen": true, "default_chosen_by_server": false, "deprecated": false, "export_key": "email_approval_process/expiration", "hide_notification": false, "id": 2821, "input_type": "datetimepicker", "internal": false, "is_tracked": false, "name": "expiration", "operation_perms": {}, "operations": [], "order": 6, "placeholder": "", "prefix": null, "read_only": false, "rich_text": false, "tags": [], "templates": [], "text": "Expiration", "tooltip": "", "type_id": 1032, "uuid": "d65d0883-a0e9-458d-a848-bb2add4d500a", "values": [], "width": 120}, "message_id": {"allow_default_value": false, "blank_option": true, "calculated": false, "changeable": true, "chosen": true, "default_chosen_by_server": false, "deprecated": false, "export_key": "email_approval_process/message_id", "hide_notification": false, "id": 2822, "input_type": "text", "internal": false, "is_tracked": false, "name": "message_id", "operation_perms": {}, "operations": [], "order": 7, "placeholder": "", "prefix": null, "read_only": false, "rich_text": false, "tags": [], "templates": [], "text": "Message Id", "tooltip": "", "type_id": 1032, "uuid": "bcefc400-2e1b-4d59-bbc0-bf91c2cb13c0", "values": [], "width": 70}, "recipients": {"allow_default_value": false, "blank_option": false, "calculated": false, "changeable": true, "chosen": false, "default_chosen_by_server": false, "deprecated": false, "export_key": "email_approval_process/recipients", "hide_notification": false, "id": 2828, "input_type": "textarea", "internal": false, "is_tracked": false, "name": "recipients", "operation_perms": {}, "operations": [], "order": 2, "placeholder": "", "prefix": null, "read_only": false, "rich_text": false, "tags": [], "templates": [], "text": "Recipients", "tooltip": "", "type_id": 1032, "uuid": "a8865480-b89e-46e2-83e7-316a7940cd0d", "values": [], "width": 83}, "status": {"allow_default_value": false, "blank_option": true, "calculated": false, "changeable": true, "chosen": false, "default_chosen_by_server": false, "deprecated": false, "export_key": "email_approval_process/status", "hide_notification": false, "id": 2824, "input_type": "select", "internal": false, "is_tracked": false, "name": "status", "operation_perms": {}, "operations": [], "order": 1, "placeholder": "", "prefix": null, "read_only": false, "required": "always", "rich_text": false, "tags": [], "templates": [], "text": "Status", "tooltip": "", "type_id": 1032, "uuid": "1a09eb38-0f6b-4080-bf7d-22258c910d31", "values": [{"default": false, "enabled": true, "hidden": false, "label": "Sent", "properties": null, "uuid": "21e29454-1922-446e-b0f4-6cb8de6e727d", "value": 752}, {"default": false, "enabled": true, "hidden": false, "label": "Resent", "properties": null, "uuid": "58a45ba5-5dbc-4964-9c70-d76c2563da56", "value": 980}, {"default": false, "enabled": true, "hidden": false, "label": "Approved", "properties": null, "uuid": "aae2911a-aedc-4762-b1f7-4828a6517689", "value": 714}, {"default": false, "enabled": true, "hidden": false, "label": "Denied", "properties": null, "uuid": "83473b3f-00c6-4aba-8da8-7dfb3dd32704", "value": 715}, {"default": false, "enabled": true, "hidden": false, "label": "Expired", "properties": null, "uuid": "afd4f00a-8914-44d7-a08c-9cdf6426e7f9", "value": 757}, {"default": false, "enabled": true, "hidden": false, "label": "Unknown", "properties": null, "uuid": "41b30867-925f-432d-aaee-a77362a3d51c", "value": 948}], "width": 51}, "task_id": {"allow_default_value": false, "blank_option": false, "calculated": false, "changeable": true, "chosen": false, "default_chosen_by_server": false, "deprecated": false, "export_key": "email_approval_process/task_id", "hide_notification": false, "id": 2825, "input_type": "number", "internal": false, "is_tracked": false, "name": "task_id", "operation_perms": {}, "operations": [], "order": 3, "placeholder": "", "prefix": null, "read_only": false, "required": "always", "rich_text": false, "tags": [], "templates": [], "text": "Task Id", "tooltip": "", "type_id": 1032, "uuid": "b2729324-1c42-4c86-805d-c916942850eb", "values": [], "width": 60}, "task_name": {"allow_default_value": false, "blank_option": false, "calculated": false, "changeable": true, "chosen": false, "default_chosen_by_server": false, "deprecated": false, "export_key": "email_approval_process/task_name", "hide_notification": false, "id": 2827, "input_type": "text", "internal": false, "is_tracked": false, "name": "task_name", "operation_perms": {}, "operations": [], "order": 4, "placeholder": "", "prefix": null, "read_only": false, "rich_text": false, "tags": [], "templates": [], "text": "Task Name", "tooltip": "", "type_id": 1032, "uuid": "f3ea079f-e5bc-4456-b8fa-83d022a97d0e", "values": [], "width": 75}}, "for_actions": false, "for_custom_fields": false, "for_notifications": false, "for_workflows": false, "id": null, "parent_types": ["incident"], "properties": {"can_create": false, "can_destroy": false, "for_who": []}, "scripts": [], "tags": [], "type_id": 8, "type_name": "email_approval_process", "uuid": "def9ce7c-7354-4265-95ff-2c908a474b5e"}], "workflows": [{"actions": [], "content": {"version": 19, "workflow_id": "email_approval_process_artifact", "xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><definitions xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:omgdc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:omgdi=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:resilient=\"http://resilient.ibm.com/bpmn\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" targetNamespace=\"http://www.camunda.org/test\"><process id=\"email_approval_process_artifact\" isExecutable=\"true\" name=\"Email Approval Process: Artifact\"><documentation>Create a task to track the request on this artifact. Send information about the created task and artifact to recipient(s) and track the email for the response.</documentation><startEvent id=\"StartEvent_155asxm\"><outgoing>SequenceFlow_0e7ploi</outgoing></startEvent><scriptTask id=\"ScriptTask_1lvbpwt\" name=\"Email Approval Pre Process Artifa...\"><extensionElements><resilient:script programmaticName=\"email_approval_pre_process_artifact\" uuid=\"6c477b73-b03d-4333-bdba-731347aba1c3\"/></extensionElements><incoming>SequenceFlow_1oinw5s</incoming><outgoing>SequenceFlow_0xahms0</outgoing><script>script</script></scriptTask><serviceTask id=\"ServiceTask_0skh2g5\" name=\"Task Utils: Create Custom Task\" resilient:type=\"function\"><extensionElements><resilient:function uuid=\"c4281bd4-d872-4562-b7c8-b0e379aea8ad\">{\"inputs\":{},\"pre_processing_script\":\"import json\\n\\ninputs.incident_id = incident.id\\ninputs.task_name = f\\\"Requested approval for artifact type: '{artifact.type}'\\\"\\n\\ntask_payload = { \\n  \\\"phase_id\\\": {\\n    \\\"name\\\": \\\"Respond\\\" \\n  },\\n  \\\"owner_id\\\": { \\n    \\\"name\\\": principal.name \\n  },\\n  \\\"required\\\": True\\n}\\nif rule.properties.email_approval_expiration:\\n  task_payload['due_date'] = rule.properties.email_approval_expiration\\n  \\ninputs.task_utils_payload = json.dumps(task_payload)\\n\",\"pre_processing_script_language\":\"python3\",\"result_name\":\"task_creation\"}</resilient:function></extensionElements><incoming>SequenceFlow_0e7ploi</incoming><outgoing>SequenceFlow_1oinw5s</outgoing></serviceTask><serviceTask id=\"ServiceTask_18cldff\" name=\"Outbound Email: Send Email 2\" resilient:type=\"function\"><extensionElements><resilient:function uuid=\"bb874b84-b405-40ba-abed-5f7c594f2a99\">{\"inputs\":{\"9f9dde5a-65a6-4e39-81f5-53242747b03b\":{\"input_type\":\"static\",\"static_input\":{\"multiselect_value\":[],\"select_value\":\"5df194d5-7f42-494b-8bf0-219d6ffc56ee\"}}},\"post_processing_script\":\"if results.success:\\n  details = workflow.properties.email_approval\\n  row = incident.addRow('email_approval_process')\\n  \\n  row['date'] = details['ts']\\n  row['status'] = 'Sent'\\n  row['recipients'] = f\\\"To: {details['to']}\\\"\\n  row['message_id'] = details['msg_id']\\n  row['expiration'] = details['expiration_ts']\\n  row['task_id'] = details['task_id']\\n  row['task_name'] = details['task_name']\\n  \",\"post_processing_script_language\":\"python3\",\"pre_processing_script\":\"details = workflow.properties.email_approval\\n\\ninputs.mail_message_id = details['msg_id']\\ninputs.mail_incident_id = incident.id\\ninputs.mail_to = details['to']\\ninputs.mail_cc = details.get('cc')\\ninputs.mail_bcc = details.get('bcc')\\ninputs.mail_from =  details['from']\\ninputs.mail_subject = details['subject']\\ninputs.mail_inline_template = details['body']\\ninputs.mail_importance = details['importance']\\n\",\"pre_processing_script_language\":\"python3\",\"result_name\":\"outbound_email_results\"}</resilient:function></extensionElements><incoming>SequenceFlow_0xahms0</incoming><outgoing>SequenceFlow_1123xzu</outgoing></serviceTask><sequenceFlow id=\"SequenceFlow_0xahms0\" sourceRef=\"ScriptTask_1lvbpwt\" targetRef=\"ServiceTask_18cldff\"/><scriptTask id=\"ScriptTask_0snjqui\" name=\"Save Outbound Email Results\"><extensionElements><resilient:script programmaticName=\"save_outbound_email_results\" uuid=\"7744a945-4634-43eb-8558-a3658c865f03\"/></extensionElements><incoming>SequenceFlow_1123xzu</incoming><outgoing>SequenceFlow_1kxa6vo</outgoing><script>script</script></scriptTask><sequenceFlow id=\"SequenceFlow_1123xzu\" sourceRef=\"ServiceTask_18cldff\" targetRef=\"ScriptTask_0snjqui\"/><endEvent id=\"EndEvent_1iw4doz\"><incoming>SequenceFlow_09att87</incoming></endEvent><sequenceFlow id=\"SequenceFlow_1kxa6vo\" sourceRef=\"ScriptTask_0snjqui\" targetRef=\"ServiceTask_03lncxj\"/><sequenceFlow id=\"SequenceFlow_1oinw5s\" sourceRef=\"ServiceTask_0skh2g5\" targetRef=\"ScriptTask_1lvbpwt\"/><sequenceFlow id=\"SequenceFlow_0e7ploi\" sourceRef=\"StartEvent_155asxm\" targetRef=\"ServiceTask_0skh2g5\"/><serviceTask id=\"ServiceTask_03lncxj\" name=\"Task Utils: Add Note\" resilient:type=\"function\"><extensionElements><resilient:function uuid=\"da653a3d-964a-4e28-a6e0-c436db0b6774\">{\"inputs\":{\"5e23b145-2bec-4d82-ad50-dc115f355360\":{\"input_type\":\"static\",\"static_input\":{\"multiselect_value\":[],\"select_value\":\"6a2e4e13-7f0c-4dab-a460-86b04769ceeb\"}}},\"pre_processing_script\":\"inputs.incident_id = incident.id\\n\\ntask_info = workflow.properties.task_creation\\ndetails = workflow.properties.email_approval\\nemail_results = workflow.properties.outbound_email_results\\n\\ntask_id = task_info['content'].get('task', {}).get('id')\\ninputs.task_id = int(task_id)\\ninputs.task_utils_note_body = f\\\"Tracking email approval for this task.&lt;br&gt;To: {details['to']}&lt;br&gt;Body: {email_results['content']['mail_body'].replace('&lt;br&gt;', '')}\\\"\\ninputs.task_utils_note_type = 'html'\",\"pre_processing_script_language\":\"python3\"}</resilient:function></extensionElements><incoming>SequenceFlow_1kxa6vo</incoming><outgoing>SequenceFlow_09att87</outgoing></serviceTask><sequenceFlow id=\"SequenceFlow_09att87\" sourceRef=\"ServiceTask_03lncxj\" targetRef=\"EndEvent_1iw4doz\"/><textAnnotation id=\"TextAnnotation_1kxxiyt\"><text>Start your workflow here</text></textAnnotation><association id=\"Association_1seuj48\" sourceRef=\"StartEvent_155asxm\" targetRef=\"TextAnnotation_1kxxiyt\"/></process><bpmndi:BPMNDiagram id=\"BPMNDiagram_1\"><bpmndi:BPMNPlane bpmnElement=\"undefined\" id=\"BPMNPlane_1\"><bpmndi:BPMNShape bpmnElement=\"StartEvent_155asxm\" id=\"StartEvent_155asxm_di\"><omgdc:Bounds height=\"36\" width=\"36\" x=\"162\" y=\"188\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"0\" width=\"90\" x=\"157\" y=\"223\"/></bpmndi:BPMNLabel></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_1kxxiyt\" id=\"TextAnnotation_1kxxiyt_di\"><omgdc:Bounds height=\"30\" width=\"100\" x=\"99\" y=\"254\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_1seuj48\" id=\"Association_1seuj48_di\"><omgdi:waypoint x=\"169\" xsi:type=\"omgdc:Point\" y=\"220\"/><omgdi:waypoint x=\"153\" xsi:type=\"omgdc:Point\" y=\"254\"/></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"ScriptTask_1lvbpwt\" id=\"ScriptTask_1lvbpwt_di\"><omgdc:Bounds height=\"80\" width=\"100\" x=\"426\" y=\"166\"/></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement=\"ServiceTask_0skh2g5\" id=\"ServiceTask_0skh2g5_di\"><omgdc:Bounds height=\"80\" width=\"100\" x=\"244\" y=\"166\"/></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement=\"ServiceTask_18cldff\" id=\"ServiceTask_18cldff_di\"><omgdc:Bounds height=\"80\" width=\"100\" x=\"603\" y=\"166\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_0xahms0\" id=\"SequenceFlow_0xahms0_di\"><omgdi:waypoint x=\"526\" xsi:type=\"omgdc:Point\" y=\"206\"/><omgdi:waypoint x=\"603\" xsi:type=\"omgdc:Point\" y=\"206\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"564.5\" y=\"184\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"ScriptTask_0snjqui\" id=\"ScriptTask_0snjqui_di\"><omgdc:Bounds height=\"80\" width=\"100\" x=\"764\" y=\"166\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_1123xzu\" id=\"SequenceFlow_1123xzu_di\"><omgdi:waypoint x=\"703\" xsi:type=\"omgdc:Point\" y=\"206\"/><omgdi:waypoint x=\"764\" xsi:type=\"omgdc:Point\" y=\"206\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"733.5\" y=\"184\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"EndEvent_1iw4doz\" id=\"EndEvent_1iw4doz_di\"><omgdc:Bounds height=\"36\" width=\"36\" x=\"1066\" y=\"188\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"90\" x=\"1039\" y=\"227\"/></bpmndi:BPMNLabel></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_1kxa6vo\" id=\"SequenceFlow_1kxa6vo_di\"><omgdi:waypoint x=\"864\" xsi:type=\"omgdc:Point\" y=\"206\"/><omgdi:waypoint x=\"912\" xsi:type=\"omgdc:Point\" y=\"206\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"90\" x=\"843\" y=\"184.5\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_1oinw5s\" id=\"SequenceFlow_1oinw5s_di\"><omgdi:waypoint x=\"344\" xsi:type=\"omgdc:Point\" y=\"206\"/><omgdi:waypoint x=\"426\" xsi:type=\"omgdc:Point\" y=\"206\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"385\" y=\"184\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_0e7ploi\" id=\"SequenceFlow_0e7ploi_di\"><omgdi:waypoint x=\"198\" xsi:type=\"omgdc:Point\" y=\"206\"/><omgdi:waypoint x=\"244\" xsi:type=\"omgdc:Point\" y=\"206\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"221\" y=\"184\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"ServiceTask_03lncxj\" id=\"ServiceTask_03lncxj_di\"><omgdc:Bounds height=\"80\" width=\"100\" x=\"912\" y=\"166\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_09att87\" id=\"SequenceFlow_09att87_di\"><omgdi:waypoint x=\"1012\" xsi:type=\"omgdc:Point\" y=\"206\"/><omgdi:waypoint x=\"1066\" xsi:type=\"omgdc:Point\" y=\"206\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"1039\" y=\"184\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge></bpmndi:BPMNPlane></bpmndi:BPMNDiagram></definitions>"}, "content_version": 19, "description": "Create a task to track the request on this artifact. Send information about the created task and artifact to recipient(s) and track the email for the response.", "export_key": "email_approval_process_artifact", "last_modified_by": "b@example.com", "last_modified_time": 1665683298401, "name": "Email Approval Process: Artifact", "object_type": "artifact", "programmatic_name": "email_approval_process_artifact", "tags": [], "uuid": "2cd85e06-946d-4bd5-8163-3920c258aed2", "workflow_id": 182}, {"actions": [], "content": {"version": 49, "workflow_id": "email_approval_process_task", "xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><definitions xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:omgdc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:omgdi=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:resilient=\"http://resilient.ibm.com/bpmn\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" targetNamespace=\"http://www.camunda.org/test\"><process id=\"email_approval_process_task\" isExecutable=\"true\" name=\"Email Approval Process: Task\"><documentation>Send information about the task to recipient(s) and track the email for the response.</documentation><startEvent id=\"StartEvent_155asxm\"><outgoing>SequenceFlow_0d4zi7z</outgoing></startEvent><endEvent id=\"EndEvent_0186yt3\"><incoming>SequenceFlow_0kxxfw9</incoming></endEvent><serviceTask id=\"ServiceTask_1tvjw6m\" name=\"Outbound Email: Send Email 2\" resilient:type=\"function\"><extensionElements><resilient:function uuid=\"bb874b84-b405-40ba-abed-5f7c594f2a99\">{\"inputs\":{\"9f9dde5a-65a6-4e39-81f5-53242747b03b\":{\"input_type\":\"static\",\"static_input\":{\"multiselect_value\":[],\"select_value\":\"5df194d5-7f42-494b-8bf0-219d6ffc56ee\"}}},\"post_processing_script\":\"if results.success:\\n  details = workflow.properties.email_approval\\n  row = incident.addRow('email_approval_process')\\n  \\n  row['date'] = details['ts']\\n  row['status'] = 'Sent'\\n  row['recipients'] = f\\\"To: {details['to']}\\\"\\n  row['message_id'] = details['msg_id']\\n  row['expiration'] = details['expiration_ts']\\n  row['task_id'] = task.id\\n  row['task_name'] = task.name\\n  \\n  task.addNote(helper.createPlainText(f\\\"Tracking email approval for this task.\\\\nTo: {details['to']}\\\\nBody: {details['body']}\\\"))\\n\",\"post_processing_script_language\":\"python3\",\"pre_processing_script\":\"details = workflow.properties.email_approval\\n\\ninputs.mail_message_id = details['msg_id']\\ninputs.mail_incident_id = incident.id\\ninputs.mail_to = details['to']\\ninputs.mail_cc = details.get('cc')\\ninputs.mail_bcc = details.get('bcc')\\ninputs.mail_from =  details['from']\\ninputs.mail_subject = details['subject']\\ninputs.mail_inline_template = details['body']\\ninputs.mail_importance = details['importance']\\n\",\"pre_processing_script_language\":\"python3\",\"result_name\":\"outbound_email_results\"}</resilient:function></extensionElements><incoming>SequenceFlow_0lcx96x</incoming><outgoing>SequenceFlow_18ell8y</outgoing></serviceTask><sequenceFlow id=\"SequenceFlow_18ell8y\" sourceRef=\"ServiceTask_1tvjw6m\" targetRef=\"ScriptTask_04hrgf7\"/><scriptTask id=\"ScriptTask_04hrgf7\" name=\"Save Outbound Email Results\"><extensionElements><resilient:script programmaticName=\"save_outbound_email_results\" uuid=\"7744a945-4634-43eb-8558-a3658c865f03\"/></extensionElements><incoming>SequenceFlow_18ell8y</incoming><outgoing>SequenceFlow_0kxxfw9</outgoing><script>script</script></scriptTask><sequenceFlow id=\"SequenceFlow_0kxxfw9\" sourceRef=\"ScriptTask_04hrgf7\" targetRef=\"EndEvent_0186yt3\"/><sequenceFlow id=\"SequenceFlow_0d4zi7z\" sourceRef=\"StartEvent_155asxm\" targetRef=\"ScriptTask_05vj5iw\"/><scriptTask id=\"ScriptTask_05vj5iw\" name=\"Email Approval Pre Process Task\"><extensionElements><resilient:script programmaticName=\"pre_process_email_approval\" uuid=\"9fdd148f-407d-48c2-968b-03a88377899d\"/></extensionElements><incoming>SequenceFlow_0d4zi7z</incoming><outgoing>SequenceFlow_0lcx96x</outgoing><script>script</script></scriptTask><sequenceFlow id=\"SequenceFlow_0lcx96x\" sourceRef=\"ScriptTask_05vj5iw\" targetRef=\"ServiceTask_1tvjw6m\"/><textAnnotation id=\"TextAnnotation_1kxxiyt\"><text>Start your workflow here</text></textAnnotation><association id=\"Association_1seuj48\" sourceRef=\"StartEvent_155asxm\" targetRef=\"TextAnnotation_1kxxiyt\"/><textAnnotation id=\"TextAnnotation_1gpqtzu\"><text>Input from workflow.properties.email_approval</text></textAnnotation><association id=\"Association_00symn8\" sourceRef=\"ServiceTask_1tvjw6m\" targetRef=\"TextAnnotation_1gpqtzu\"/></process><bpmndi:BPMNDiagram id=\"BPMNDiagram_1\"><bpmndi:BPMNPlane bpmnElement=\"undefined\" id=\"BPMNPlane_1\"><bpmndi:BPMNShape bpmnElement=\"StartEvent_155asxm\" id=\"StartEvent_155asxm_di\"><omgdc:Bounds height=\"36\" width=\"36\" x=\"162\" y=\"188\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"0\" width=\"90\" x=\"157\" y=\"223\"/></bpmndi:BPMNLabel></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_1kxxiyt\" id=\"TextAnnotation_1kxxiyt_di\"><omgdc:Bounds height=\"30\" width=\"100\" x=\"99\" y=\"254\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_1seuj48\" id=\"Association_1seuj48_di\"><omgdi:waypoint x=\"169\" xsi:type=\"omgdc:Point\" y=\"220\"/><omgdi:waypoint x=\"153\" xsi:type=\"omgdc:Point\" y=\"254\"/></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"EndEvent_0186yt3\" id=\"EndEvent_0186yt3_di\"><omgdc:Bounds height=\"36\" width=\"36\" x=\"729\" y=\"188\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"90\" x=\"702\" y=\"227\"/></bpmndi:BPMNLabel></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement=\"ServiceTask_1tvjw6m\" id=\"ServiceTask_1tvjw6m_di\"><omgdc:Bounds height=\"80\" width=\"100\" x=\"402\" y=\"166\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_18ell8y\" id=\"SequenceFlow_18ell8y_di\"><omgdi:waypoint x=\"502\" xsi:type=\"omgdc:Point\" y=\"206\"/><omgdi:waypoint x=\"567\" xsi:type=\"omgdc:Point\" y=\"206\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"90\" x=\"489.5\" y=\"184.5\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"ScriptTask_04hrgf7\" id=\"ScriptTask_04hrgf7_di\"><omgdc:Bounds height=\"80\" width=\"100\" x=\"567\" y=\"166\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_0kxxfw9\" id=\"SequenceFlow_0kxxfw9_di\"><omgdi:waypoint x=\"667\" xsi:type=\"omgdc:Point\" y=\"206\"/><omgdi:waypoint x=\"729\" xsi:type=\"omgdc:Point\" y=\"206\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"90\" x=\"653\" y=\"184.5\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_0d4zi7z\" id=\"SequenceFlow_0d4zi7z_di\"><omgdi:waypoint x=\"198\" xsi:type=\"omgdc:Point\" y=\"206\"/><omgdi:waypoint x=\"242\" xsi:type=\"omgdc:Point\" y=\"206\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"90\" x=\"175\" y=\"184.5\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"ScriptTask_05vj5iw\" id=\"ScriptTask_05vj5iw_di\"><omgdc:Bounds height=\"80\" width=\"100\" x=\"242\" y=\"166\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_0lcx96x\" id=\"SequenceFlow_0lcx96x_di\"><omgdi:waypoint x=\"342\" xsi:type=\"omgdc:Point\" y=\"206\"/><omgdi:waypoint x=\"402\" xsi:type=\"omgdc:Point\" y=\"206\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"372\" y=\"184\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_1gpqtzu\" id=\"TextAnnotation_1gpqtzu_di\"><omgdc:Bounds height=\"33\" width=\"209\" x=\"278\" y=\"75\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_00symn8\" id=\"Association_00symn8_di\"><omgdi:waypoint x=\"428\" xsi:type=\"omgdc:Point\" y=\"166\"/><omgdi:waypoint x=\"393\" xsi:type=\"omgdc:Point\" y=\"108\"/></bpmndi:BPMNEdge></bpmndi:BPMNPlane></bpmndi:BPMNDiagram></definitions>"}, "content_version": 49, "description": "Send information about the task to recipient(s) and track the email for the response.", "export_key": "email_approval_process_task", "last_modified_by": "b@example.com", "last_modified_time": 1665676490329, "name": "Email Approval Process: Task", "object_type": "task", "programmatic_name": "email_approval_process_task", "tags": [], "uuid": "64879dbf-dace-4fe3-9759-2b4ceaf0f5d1", "workflow_id": 168}, {"actions": [], "content": {"version": 9, "workflow_id": "complete_email_approval_process", "xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><definitions xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:omgdc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:omgdi=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:resilient=\"http://resilient.ibm.com/bpmn\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" targetNamespace=\"http://www.camunda.org/test\"><process id=\"complete_email_approval_process\" isExecutable=\"true\" name=\"Complete Email Approval Process\"><documentation>Add the approval email to the associated task</documentation><startEvent id=\"StartEvent_155asxm\"><outgoing>SequenceFlow_0cdix7c</outgoing></startEvent><serviceTask id=\"ServiceTask_1qswc4h\" name=\"Task Utils: Add Note\" resilient:type=\"function\"><extensionElements><resilient:function uuid=\"da653a3d-964a-4e28-a6e0-c436db0b6774\">{\"inputs\":{\"5e23b145-2bec-4d82-ad50-dc115f355360\":{\"input_type\":\"static\",\"static_input\":{\"multiselect_value\":[],\"select_value\":\"6a2e4e13-7f0c-4dab-a460-86b04769ceeb\"}}},\"pre_processing_script\":\"if row.get('task_id'):\\n  inputs.incident_id = incident.id\\n  inputs.task_id = row['task_id']\\n  inputs.task_utils_note_body = f\\\"\\\"\\\"Email Approval for task: {row['status']}\\n  Recipients: {row['recipients'].content}\\n  Comments: {row['comments'].content}\\n  \\\"\\\"\\\"\\n  inputs.task_utils_note_type = \\\"text\\\"\",\"pre_processing_script_language\":\"python3\"}</resilient:function></extensionElements><incoming>SequenceFlow_0cdix7c</incoming><outgoing>SequenceFlow_1667ok8</outgoing></serviceTask><sequenceFlow id=\"SequenceFlow_0cdix7c\" sourceRef=\"StartEvent_155asxm\" targetRef=\"ServiceTask_1qswc4h\"/><endEvent id=\"EndEvent_1af8f5j\"><incoming>SequenceFlow_1667ok8</incoming></endEvent><sequenceFlow id=\"SequenceFlow_1667ok8\" sourceRef=\"ServiceTask_1qswc4h\" targetRef=\"EndEvent_1af8f5j\"/><textAnnotation id=\"TextAnnotation_1kxxiyt\"><text>Start your workflow here</text></textAnnotation><association id=\"Association_1seuj48\" sourceRef=\"StartEvent_155asxm\" targetRef=\"TextAnnotation_1kxxiyt\"/></process><bpmndi:BPMNDiagram id=\"BPMNDiagram_1\"><bpmndi:BPMNPlane bpmnElement=\"undefined\" id=\"BPMNPlane_1\"><bpmndi:BPMNShape bpmnElement=\"StartEvent_155asxm\" id=\"StartEvent_155asxm_di\"><omgdc:Bounds height=\"36\" width=\"36\" x=\"162\" y=\"188\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"0\" width=\"90\" x=\"157\" y=\"223\"/></bpmndi:BPMNLabel></bpmndi:BPMNShape><bpmndi:BPMNShape bpmnElement=\"TextAnnotation_1kxxiyt\" id=\"TextAnnotation_1kxxiyt_di\"><omgdc:Bounds height=\"30\" width=\"100\" x=\"99\" y=\"254\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"Association_1seuj48\" id=\"Association_1seuj48_di\"><omgdi:waypoint x=\"169\" xsi:type=\"omgdc:Point\" y=\"220\"/><omgdi:waypoint x=\"153\" xsi:type=\"omgdc:Point\" y=\"254\"/></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"ServiceTask_1qswc4h\" id=\"ServiceTask_1qswc4h_di\"><omgdc:Bounds height=\"80\" width=\"100\" x=\"289\" y=\"166\"/></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_0cdix7c\" id=\"SequenceFlow_0cdix7c_di\"><omgdi:waypoint x=\"198\" xsi:type=\"omgdc:Point\" y=\"206\"/><omgdi:waypoint x=\"289\" xsi:type=\"omgdc:Point\" y=\"206\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"243.5\" y=\"184\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge><bpmndi:BPMNShape bpmnElement=\"EndEvent_1af8f5j\" id=\"EndEvent_1af8f5j_di\"><omgdc:Bounds height=\"36\" width=\"36\" x=\"446\" y=\"188\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"464\" y=\"227\"/></bpmndi:BPMNLabel></bpmndi:BPMNShape><bpmndi:BPMNEdge bpmnElement=\"SequenceFlow_1667ok8\" id=\"SequenceFlow_1667ok8_di\"><omgdi:waypoint x=\"389\" xsi:type=\"omgdc:Point\" y=\"206\"/><omgdi:waypoint x=\"446\" xsi:type=\"omgdc:Point\" y=\"206\"/><bpmndi:BPMNLabel><omgdc:Bounds height=\"13\" width=\"0\" x=\"417.5\" y=\"184\"/></bpmndi:BPMNLabel></bpmndi:BPMNEdge></bpmndi:BPMNPlane></bpmndi:BPMNDiagram></definitions>"}, "content_version": 9, "description": "Add the approval email to the associated task", "export_key": "complete_email_approval_process", "last_modified_by": "b@example.com", "last_modified_time": 1666787226982, "name": "Complete Email Approval Process", "object_type": "email_approval_process", "programmatic_name": "complete_email_approval_process", "tags": [], "uuid": "ede1b110-3594-4167-8f8f-053418016cd0", "workflow_id": 170}], "workspaces": []}