# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_datatable_utils"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_datatable_utils package"""
    reload_params = {"package": u"fn_datatable_utils",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"dt_utils_cells_to_update", u"dt_utils_datatable_api_name", u"dt_utils_row_id", u"dt_utils_search_column", u"dt_utils_search_value", u"incident_id"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_datatable_utils"], 
                    "functions": [u"dt_utils_get_row", u"dt_utils_update_row"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [],
                    "actions": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     dt_utils_cells_to_update
    #     dt_utils_datatable_api_name
    #     dt_utils_row_id
    #     dt_utils_search_column
    #     dt_utils_search_value
    #     incident_id
    #   Message Destinations:
    #     fn_datatable_utils
    #   Functions:
    #     dt_utils_get_row
    #     dt_utils_update_row


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbXSwgImFjdGlvbnMiOiBbXSwgImxheW91
dHMiOiBbXSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJpZCI6IDQsICJpbmR1c3RyaWVz
IjogbnVsbCwgInBoYXNlcyI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJnZW9zIjogbnVsbCwg
ImxvY2FsZSI6IG51bGwsICJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgInZlcnNpb24i
OiAiMzEuMC40MjU0IiwgImJ1aWxkX251bWJlciI6IDQyNTQsICJtaW5vciI6IDB9LCAidGltZWZy
YW1lcyI6IG51bGwsICJ3b3Jrc3BhY2VzIjogW10sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImZ1
bmN0aW9ucyI6IFt7ImRpc3BsYXlfbmFtZSI6ICJEYXRhIFRhYmxlIFV0aWxzOiBHZXQgUm93Iiwg
ImRlc2NyaXB0aW9uIjogeyJjb250ZW50IjogIkZ1bmN0aW9uIHRoYXQgc2VhcmNoZXMgZm9yIGEg
cm93IHVzaW5nIGEgJ2NvbHVtbiBuYW1lL2NlbGwgdmFsdWUnIHBhaXIgb3IgdGhlIHJvdyBpZCBh
bmQgcmV0dXJucyB0aGUgY2VsbHMgb2YgdGhlIHJvdyBmb3VuZCIsICJmb3JtYXQiOiAidGV4dCJ9
LCAiY3JlYXRvciI6IHsiZGlzcGxheV9uYW1lIjogIkFkbWluIFVzZXIiLCAidHlwZSI6ICJ1c2Vy
IiwgImlkIjogMywgIm5hbWUiOiAiYWRtaW5AcmVzLmNvbSJ9LCAidmlld19pdGVtcyI6IFt7InNo
b3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFk
ZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogImVlNTMyYzcz
LTNkYmUtNDA2MS1iMjQxLTI1ODhjYjYyMDgyMCIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hv
d19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRl
ciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiZjdmNTFjM2Yt
MTYwMS00NGRmLWJiODMtZjdlYzk1ODNkYTk2IiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93
X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVhZGVy
IjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICIyMWYxZTQ0Ni0z
MDVhLTRmMDMtYTE3Ni1jMDY0Y2EzMjgzZmUiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3df
aWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIi
OiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogIjJjMzU5YjU4LWU0
MWUtNGRkMS1hYzY1LTEzOGU4NWEyNzM2MyIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hvd19p
ZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6
IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiZmNhMjdmNzAtODY3
Yi00ODk5LWI3YzUtZjhiZGYxYmJlYzEzIiwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJleHBvcnRf
a2V5IjogImR0X3V0aWxzX2dldF9yb3ciLCAidXVpZCI6ICI3N2U5OGJkYi0yODQzLTRjZDYtODI5
NC01YTlkYmVmNmEwOGUiLCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9uYW1lIjogIkFk
bWluIFVzZXIiLCAidHlwZSI6ICJ1c2VyIiwgImlkIjogMywgIm5hbWUiOiAiYWRtaW5AcmVzLmNv
bSJ9LCAidmVyc2lvbiI6IDIsICJ3b3JrZmxvd3MiOiBbeyJkZXNjcmlwdGlvbiI6IG51bGwsICJv
YmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJhY3Rpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6
IERhdGEgVGFibGUgVXRpbHM6IEdldCBSb3ciLCAid29ya2Zsb3dfaWQiOiAxLCAicHJvZ3JhbW1h
dGljX25hbWUiOiAiZXhhbXBsZV9kYXRhX3RhYmxlX3V0aWxzX2dldF9yb3ciLCAidXVpZCI6IG51
bGx9XSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NDUzMDYwMzg0OTksICJkZXN0aW5hdGlvbl9o
YW5kbGUiOiAiZm5fZGF0YXRhYmxlX3V0aWxzIiwgImlkIjogMzQsICJuYW1lIjogImR0X3V0aWxz
X2dldF9yb3cifSwgeyJkaXNwbGF5X25hbWUiOiAiRGF0YSBUYWJsZSBVdGlsczogVXBkYXRlIFJv
dyIsICJkZXNjcmlwdGlvbiI6IHsiY29udGVudCI6ICJGdW5jdGlvbiB0aGF0IHRha2VzIGEgSlNP
TiBTdHJpbmcgb2YgJ2NvbHVtbiBuYW1lL2NlbGwgdmFsdWUnIHBhaXJzIHRvIHVwZGF0ZSBhIERh
dGEgVGFibGUgcm93IiwgImZvcm1hdCI6ICJ0ZXh0In0sICJjcmVhdG9yIjogeyJkaXNwbGF5X25h
bWUiOiAiQWRtaW4gVXNlciIsICJ0eXBlIjogInVzZXIiLCAiaWQiOiAzLCAibmFtZSI6ICJhZG1p
bkByZXMuY29tIn0sICJ2aWV3X2l0ZW1zIjogW3sic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBl
IjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJm
aWVsZF91dWlkIiwgImNvbnRlbnQiOiAiZWU1MzJjNzMtM2RiZS00MDYxLWIyNDEtMjU4OGNiNjIw
ODIwIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUi
OiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZp
ZWxkX3V1aWQiLCAiY29udGVudCI6ICJmN2Y1MWMzZi0xNjAxLTQ0ZGYtYmI4My1mN2VjOTU4M2Rh
OTYiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6
ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmll
bGRfdXVpZCIsICJjb250ZW50IjogIjIxZjFlNDQ2LTMwNWEtNGYwMy1hMTc2LWMwNjRjYTMyODNm
ZSIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjog
Il9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVs
ZF91dWlkIiwgImNvbnRlbnQiOiAiOWUxZmMwYTUtNzU0Ni00YzZhLTgxNGYtMWZhZDg3OGNkODc1
IiwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJleHBvcnRfa2V5IjogImR0X3V0aWxzX3VwZGF0ZV9y
b3ciLCAidXVpZCI6ICI3N2I4NDUxZS0zMTM3LTQzNjItODQwYS1hYzcyNGI2NzRiNzMiLCAibGFz
dF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9uYW1lIjogIkFkbWluIFVzZXIiLCAidHlwZSI6ICJ1
c2VyIiwgImlkIjogMywgIm5hbWUiOiAiYWRtaW5AcmVzLmNvbSJ9LCAidmVyc2lvbiI6IDIsICJ3
b3JrZmxvd3MiOiBbXSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NDUzMTAxOTc1MTcsICJkZXN0
aW5hdGlvbl9oYW5kbGUiOiAiZm5fZGF0YXRhYmxlX3V0aWxzIiwgImlkIjogMzUsICJuYW1lIjog
ImR0X3V0aWxzX3VwZGF0ZV9yb3cifV0sICJub3RpZmljYXRpb25zIjogbnVsbCwgInJlZ3VsYXRv
cnMiOiBudWxsLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJjcmVhdGVfZGF0ZSI6IDE1NDUzMTEyMzU5
OTUsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAi
ZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiaWQiOiAw
LCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAidXBkYXRlX2Rh
dGUiOiAxNTQ1MzExMjM1OTk1LCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAw
MDQwNDRhYTAiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQi
OiBudWxsLCAiaGlkZGVuIjogZmFsc2V9XSwgInNjcmlwdHMiOiBbXSwgInR5cGVzIjogW10sICJt
ZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7InV1aWQiOiAiMzJiZDhhYjgtM2MzMi00ZWM4LWE1ZDkt
MDI1MjQ3N2EwYzNlIiwgImV4cG9ydF9rZXkiOiAiZm5fZGF0YXRhYmxlX3V0aWxzIiwgIm5hbWUi
OiAiZm5fZGF0YXRhYmxlX3V0aWxzIiwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAicHJvZ3JhbW1h
dGljX25hbWUiOiAiZm5fZGF0YXRhYmxlX3V0aWxzIiwgImV4cGVjdF9hY2siOiB0cnVlLCAidXNl
cnMiOiBbImludGVncmF0aW9uc0BleGFtcGxlLmNvbSJdfV0sICJpbmNpZGVudF9hcnRpZmFjdF90
eXBlcyI6IFtdLCAicm9sZXMiOiBbXSwgImZpZWxkcyI6IFt7Im9wZXJhdGlvbnMiOiBbXSwgInR5
cGVfaWQiOiAwLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAi
Ymxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUs
ICJpZCI6IDM4LCAicmVhZF9vbmx5IjogdHJ1ZSwgInV1aWQiOiAiYzNmMGUzZWQtMjFlMS00ZDUz
LWFmZmItZmU1Y2EzMzA4Y2NhIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJib29s
ZWFuIiwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRlbnQgaXMgYSBzaW11bGF0aW9uIG9y
IGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQgaXMgcmVhZC1vbmx5LiIsICJpbnRlcm5h
bCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9r
ZXkiOiAiaW5jaWRlbnQvaW5jX3RyYWluaW5nIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2Us
ICJuYW1lIjogImluY190cmFpbmluZyIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2No
b3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10s
ICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiaW5jaWRlbnRf
aWQiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6
IHRydWUsICJpZCI6IDE4MSwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJlZTUzMmM3My0z
ZGJlLTQwNjEtYjI0MS0yNTg4Y2I2MjA4MjAiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBl
IjogIm51bWJlciIsICJ0b29sdGlwIjogIlRoZSBpZCBvZiB0aGlzIGluY2lkZW50IiwgImludGVy
bmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0
X2tleSI6ICJfX2Z1bmN0aW9uL2luY2lkZW50X2lkIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFs
c2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJpbmNpZGVudF9pZCIsICJkZXByZWNhdGVk
IjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInJlcXVpcmVkIjog
ImFsd2F5cyIsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDEx
LCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImR0X3V0aWxzX2NlbGxzX3RvX3VwZGF0
ZSIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjog
dHJ1ZSwgImlkIjogMTgzLCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjllMWZjMGE1LTc1
NDYtNGM2YS04MTRmLTFmYWQ4NzhjZDg3NSIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUi
OiAidGV4dCIsICJ0b29sdGlwIjogIkEgSlNPTiBTdHJpbmcgY29udGFpbmluZyB0aGUgY29sdW1u
IG5hbWVzIGFuZCBjZWxsIHZhbHVlcyB5b3Ugd2FudCB1cGRhdGUiLCAiaW50ZXJuYWwiOiBmYWxz
ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9f
ZnVuY3Rpb24vZHRfdXRpbHNfY2VsbHNfdG9fdXBkYXRlIiwgImhpZGVfbm90aWZpY2F0aW9uIjog
ZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJkdF91dGlsc19jZWxsc190b191cGRh
dGUiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBb
XSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJkdF91dGls
c19yb3dfaWQiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdl
YWJsZSI6IHRydWUsICJpZCI6IDE3OCwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICIyMWYx
ZTQ0Ni0zMDVhLTRmMDMtYTE3Ni1jMDY0Y2EzMjgzZmUiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1
dF90eXBlIjogIm51bWJlciIsICJ0b29sdGlwIjogIlRoZSBpZCBvZiB0aGUgcm93IHRvIGdldCIs
ICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwg
ImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9kdF91dGlsc19yb3dfaWQiLCAiaGlkZV9ub3RpZmlj
YXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogImR0X3V0aWxzX3Jvd19p
ZCIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxz
ZSwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVy
YXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiZHRfdXRpbHNfc2VhcmNoX2NvbHVtbiIsICJibGFu
a19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlk
IjogMTc5LCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjJjMzU5YjU4LWU0MWUtNGRkMS1h
YzY1LTEzOGU4NWEyNzM2MyIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIs
ICJ0b29sdGlwIjogIlRoZSBhcGkgbmFtZSBvZiB0aGUgY29sdW1uIHRvIHNlYXJjaCIsICJpbnRl
cm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9y
dF9rZXkiOiAiX19mdW5jdGlvbi9kdF91dGlsc19zZWFyY2hfY29sdW1uIiwgImhpZGVfbm90aWZp
Y2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJkdF91dGlsc19zZWFy
Y2hfY29sdW1uIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZl
ciI6IGZhbHNlLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAx
MSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJkdF91dGlsc19kYXRhdGFibGVfYXBp
X25hbWUiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJs
ZSI6IHRydWUsICJpZCI6IDE4MiwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJmN2Y1MWMz
Zi0xNjAxLTQ0ZGYtYmI4My1mN2VjOTU4M2RhOTYiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90
eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJUaGUgQVBJIG5hbWUgb2YgdGhlIERhdGEgVGFibGUi
LCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10s
ICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vZHRfdXRpbHNfZGF0YXRhYmxlX2FwaV9uYW1lIiwg
ImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJk
dF91dGlsc19kYXRhdGFibGVfYXBpX25hbWUiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVs
dF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAidmFsdWVz
IjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJt
cyI6IHt9LCAidGV4dCI6ICJkdF91dGlsc19zZWFyY2hfdmFsdWUiLCAiYmxhbmtfb3B0aW9uIjog
ZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDE4MCwgInJl
YWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJmY2EyN2Y3MC04NjdiLTQ4OTktYjdjNS1mOGJkZjFi
YmVjMTMiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6
ICJUaGUgY2VsbCB2YWx1ZSB0byBzZWFyY2ggZm9yIHdpdGhpbiB0aGUgc2VhcmNoIGNvbHVtbiIs
ICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwg
ImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9kdF91dGlsc19zZWFyY2hfdmFsdWUiLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogImR0X3V0aWxz
X3NlYXJjaF92YWx1ZSIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9z
ZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfV0sICJvdmVycmlkZXMiOiBbXSwgImV4cG9ydF9k
YXRlIjogMTU0NTMxMDMxMDE1NH0=
"""
    )