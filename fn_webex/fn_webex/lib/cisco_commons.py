from resilient_circuits import FunctionError

def check_response(response):
    """
    A function to raise exceptions depending on the response from the endpoint

    Args:
    -----
        response (<response>): A response object from the server endpoint generated by the Request common

    Raises:
    -------
        FunctionError: Invalid API call methord passed to request common.
        FunctionError: Server rejected request due to malformed query.
        FunctionError: Invalid security context, check refresh token and scope.
    """
    if response is None:
        raise FunctionError("Invalid METHOD passed to webex_request!")
    if response.status_code not in [200, 201, 404]:
        raise FunctionError("API call failed! HTTP Status: {}, URL: {}".format(response.status_code))
    elif response.status_code == 401:
        raise FunctionError("Security context is invalid, API returned 401!")
    return response