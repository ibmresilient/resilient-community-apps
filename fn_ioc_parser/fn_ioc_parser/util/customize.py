# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_ioc_parser"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_ioc_parser package"""
    reload_params = {"package": u"fn_ioc_parser",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"ioc_parser_artifact_id", u"ioc_parser_artifact_value", u"ioc_parser_attachment_id", u"ioc_parser_incident_id", u"ioc_parser_task_id"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_ioc_parser"], 
                    "functions": [u"function_ioc_parser"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_parse_iocs_artifact", u"example_parse_iocs_attachment"], 
                    "actions": [u"Example: Parse IOCs - Artifact", u"Example: Parse IOCs - Attachment"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     ioc_parser_artifact_id
    #     ioc_parser_artifact_value
    #     ioc_parser_attachment_id
    #     ioc_parser_incident_id
    #     ioc_parser_task_id
    #   Message Destinations:
    #     fn_ioc_parser
    #   Functions:
    #     function_ioc_parser
    #   Workflows:
    #     example_parse_iocs_artifact
    #     example_parse_iocs_attachment
    #   Rules:
    #     Example: Parse IOCs - Artifact
    #     Example: Parse IOCs - Attachment


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogIjU4OWQ3MzJiLTcwNzIt
NDlmNS05ODNlLWQ1ODc3ZjZlMDQzYiIsICJkZXNjcmlwdGlvbiI6ICJFeGFtcGxlIFdvcmtmbG93
IHNob3dpbmcgaG93IHRvIGV4dHJhY3QgSU9DJ3MgKEluZGljYXRvcnMgb2YgQ29tcHJvbWlzZSkg
ZnJvbSBJbmNpZGVudC9UYXNrIEF0dGFjaG1lbnRzLiBFYWNoIHVuaXF1ZSBJT0MgaXMgYWRkZWQg
dG8gdGhlIEluY2lkZW50IGFzIGFuIEFydGlmYWN0IiwgIm9iamVjdF90eXBlIjogImF0dGFjaG1l
bnQiLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX3BhcnNlX2lvY3NfYXR0YWNobWVudCIsICJ3b3Jr
Zmxvd19pZCI6IDM0LCAibGFzdF9tb2RpZmllZF9ieSI6ICJhZG1pbkBleGFtcGxlLmNvbSIsICJj
b250ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThc
Ij8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEw
MDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4v
MjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIw
MTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEw
MDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1u
XCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4
c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5h
bWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhh
bXBsZV9wYXJzZV9pb2NzX2F0dGFjaG1lbnRcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1c
IkV4YW1wbGU6IFBhcnNlIElPQ3MgQXR0YWNobWVudFwiPjxkb2N1bWVudGF0aW9uPjwhW0NEQVRB
W0V4YW1wbGUgV29ya2Zsb3cgc2hvd2luZyBob3cgdG8gZXh0cmFjdCBJT0MncyAoSW5kaWNhdG9y
cyBvZiBDb21wcm9taXNlKSBmcm9tIEluY2lkZW50L1Rhc2sgQXR0YWNobWVudHMuIEVhY2ggdW5p
cXVlIElPQyBpcyBhZGRlZCB0byB0aGUgSW5jaWRlbnQgYXMgYW4gQXJ0aWZhY3RdXT48L2RvY3Vt
ZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+
U2VxdWVuY2VGbG93XzFxeDR6NDY8L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sg
aWQ9XCJTZXJ2aWNlVGFza18wbzRmMWFmXCIgbmFtZT1cIklPQyBQYXJzZXJcIiByZXNpbGllbnQ6
dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24g
dXVpZD1cIjg2NGNjMDQzLTQ3ZjUtNDI2MS1iNjU4LTM5ZjQ3MTJiMjY5ZFwiPntcImlucHV0c1wi
Ont9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW1wb3J0IHJlXFxuXFxuZGVmIGdldF9h
cnRpZmFjdF90eXBlKGFydGlmYWN0X3ZhbHVlLCBhcnRpZmFjdF90eXBlKTpcXG4gIFxcXCJcXFwi
XFxcIlVzZSBzb21lIHJlZ2V4IGV4cHJlc3Npb25zIHRvIHRyeSBhbmQgaWRlbnRpZnlcXG4gIGZy
b20gdGhlIEFydGlmYWN0J3MgdmFsdWUsIHdoYXQgQXJ0aWZhY3QgdHlwZSBpdCBpcy5cXG4gIFJl
dHVybiBvcmlnaW5hbCBhcnRpZmFjdF90eXBlIGlmIHdlIGNhbm5vdCBmaWd1cmUgaXQgb3V0XFxc
IlxcXCJcXFwiXFxuXFxuICBkbnNfbmFtZV9yZWdleCA9IHJlLmNvbXBpbGUocideKChbYS16QS1a
XXsxfSl8KFthLXpBLVpdezF9W2EtekEtWl17MX0pfChbYS16QS1aXXsxfVswLTldezF9KXwoWzAt
OV17MX1bYS16QS1aXXsxfSl8KFthLXpBLVowLTldW2EtekEtWjAtOS1fXXsxLDYxfVthLXpBLVow
LTldKSlcXFxcLihbYS16QS1aXXsyLDZ9fFthLXpBLVowLTktXXsyLDMwfVxcXFwuW2EtekEtWl17
MiwzfSkkJylcXG4gIFxcbiAgaWYgcmUubWF0Y2goZG5zX25hbWVfcmVnZXgsIGFydGlmYWN0X3Zh
bHVlKTpcXG4gICAgcmV0dXJuIFxcXCJETlMgTmFtZVxcXCJcXG4gIFxcbiAgcmV0dXJuIGFydGlm
YWN0X3R5cGVcXG5cXG4jIE1hcCBpb2MudHlwZSB0byBSZXNpbGllbnQgQXJ0aWZhY3QgVHlwZVxc
bmlvY190eXBlX3RvX2FydGlmYWN0X3R5cGVfbWFwID0ge1xcbiAgICAndXJpJzogJ1VSSSBQYXRo
JyxcXG4gICAgJ0lQJzogJ0lQIEFkZHJlc3MnLFxcbiAgICAnbWQ1JzogJ01hbHdhcmUgTUQ1IEhh
c2gnLFxcbiAgICAnc2hhMSc6ICdNYWx3YXJlIFNIQS0xIEhhc2gnLFxcbiAgICAnc2hhMjU2Jzog
J01hbHdhcmUgU0hBLTI1NiBIYXNoJyxcXG4gICAgJ0NWRSc6ICdUaHJlYXQgQ1ZFIElEJyxcXG4g
ICAgJ2VtYWlsJzogJ0VtYWlsIFNlbmRlcicsXFxuICAgICdmaWxlbmFtZSc6ICdGaWxlIE5hbWUn
LFxcbiAgICAnZmlsZSc6ICdGaWxlIE5hbWUnXFxufVxcblxcbiMgR2V0IHRoZSBJT0NzXFxuaW9j
cyA9IHJlc3VsdHMuaW9jc1xcblxcbmlmIGlvY3M6XFxuICAgICMgTG9vcCBJT0NzIGFuZCBhZGQg
ZWFjaCBvbiBhcyBhbiBBcnRpZmFjdFxcbiAgICBmb3IgaW9jIGluIGlvY3M6XFxuICAgICAgYXJ0
aWZhY3RfZGVzY3JpcHRpb24gPSB1XFxcIlRoaXMgSU9DIG9jY3VycmVkIHswfSB0aW1lKHMpIGlu
IHRoZSBhcnRpZmFjdDogezF9XFxcIi5mb3JtYXQoIHVuaWNvZGUoaW9jLmNvdW50KSwgdW5pY29k
ZShyZXN1bHRzLmF0dGFjaG1lbnRfZmlsZV9uYW1lKSApXFxuICAgICAgYXJ0aWZhY3RfdmFsdWUg
PSBpb2MudmFsdWVcXG4gICAgICBhcnRpZmFjdF90eXBlID0gaW9jX3R5cGVfdG9fYXJ0aWZhY3Rf
dHlwZV9tYXAuZ2V0KGlvYy50eXBlLCBcXFwiU3RyaW5nXFxcIilcXG4gICAgICBcXG4gICAgICAj
IElmIHRoZSBhcnRpZmFjdF90eXBlIGlzICdVUkkgUGF0aCcsIGNhbGwgZ2V0X2FydGlmYWN0X3R5
cGUgdG8gdHJ5IGludGVudGlmeSB0aGUgdHlwZSB1c2luZyByZWdleFxcbiAgICAgIGlmIGFydGlm
YWN0X3R5cGUgPT0gXFxcIlVSSSBQYXRoXFxcIjpcXG4gICAgICAgIGFydGlmYWN0X3R5cGUgPSBn
ZXRfYXJ0aWZhY3RfdHlwZShhcnRpZmFjdF92YWx1ZSwgYXJ0aWZhY3RfdHlwZSlcXG4gICAgICBc
XG4gICAgICBpbmNpZGVudC5hZGRBcnRpZmFjdChhcnRpZmFjdF90eXBlLCBhcnRpZmFjdF92YWx1
ZSwgYXJ0aWZhY3RfZGVzY3JpcHRpb24pXFxuXCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpc
IiMgRGVmaW5lIFByZS1Qcm9jZXNzIElucHV0c1xcbmlucHV0cy5pb2NfcGFyc2VyX2luY2lkZW50
X2lkID0gaW5jaWRlbnQuaWRcXG5pbnB1dHMuaW9jX3BhcnNlcl9hdHRhY2htZW50X2lkID0gYXR0
YWNobWVudC5pZFxcblxcbiMgSWYgdGhpcyBpcyBhIFRhc2ssIHNldCB0aGUgVGFzayBJRFxcbmlm
IHRhc2s6XFxuICAgICBpbnB1dHMuaW9jX3BhcnNlcl90YXNrX2lkID0gdGFzay5pZFwifTwvcmVz
aWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxv
d18xcXg0ejQ2PC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFxeml1aDc8L291dGdv
aW5nPjwvc2VydmljZVRhc2s+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xcXg0ejQ2
XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRh
c2tfMG80ZjFhZlwiLz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wM3FxdGp0XCI+PGluY29taW5n
PlNlcXVlbmNlRmxvd18xcXppdWg3PC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cg
aWQ9XCJTZXF1ZW5jZUZsb3dfMXF6aXVoN1wiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzBvNGYx
YWZcIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8wM3FxdGp0XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1c
IlRleHRBbm5vdGF0aW9uXzBsbDF2dG5cIj48dGV4dD48IVtDREFUQVtPdXRwdXQ6IExpc3Qgb2Yg
J2lvY3MnIHdpdGggdGhlIGF0dHJpYnV0ZXMgJ3R5cGUnLCAndmFsdWUnIGFuZCAnY291bnQnXG5d
XT48L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8w
OWppc2s5XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMG80ZjFhZlwiIHRhcmdldFJlZj1cIlRl
eHRBbm5vdGF0aW9uXzBsbDF2dG5cIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRp
b25fMTlhY2N1ZlwiPjx0ZXh0PjwhW0NEQVRBW0lucHV0czogaW5jaWRlbnRfaWQsIHRhc2tfaWQs
IGF0dGFjaG1lbnRfaWQsXG5dXT48L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24g
aWQ9XCJBc3NvY2lhdGlvbl8xcTZzMHUwXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMG80ZjFh
ZlwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzE5YWNjdWZcIi8+PC9wcm9jZXNzPjxicG1u
ZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBt
bkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hh
cGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1
YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIi0x
MlwiIHk9XCIyMlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBc
IiB3aWR0aD1cIjkwXCIgeD1cIi0xN1wiIHk9XCI1N1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRh
c2tfMG80ZjFhZlwiIGlkPVwiU2VydmljZVRhc2tfMG80ZjFhZl9kaVwiPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIyOTZcIiB5PVwiMFwiLz48L2JwbW5kaTpC
UE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xcXg0
ejQ2XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMXF4NHo0Nl9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwi
MjRcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjQwXCIvPjxvbWdkaTp3YXlwb2ludCB4
PVwiMjEyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI0MFwiLz48b21nZGk6d2F5cG9p
bnQgeD1cIjIxMlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiNDBcIi8+PG9tZ2RpOndh
eXBvaW50IHg9XCIyOTZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjQwXCIvPjxicG1u
ZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1c
IjE4MlwiIHk9XCIzMy41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48
YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzAzcXF0anRcIiBpZD1cIkVu
ZEV2ZW50XzAzcXF0anRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIz
NlwiIHg9XCI2OTZcIiB5PVwiMjJcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiNjY5XCIgeT1cIjYxXCIvPjwvYnBtbmRpOkJQ
TU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1c
IlNlcXVlbmNlRmxvd18xcXppdWg3XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMXF6aXVoN19kaVwiPjxv
bWdkaTp3YXlwb2ludCB4PVwiMzk2XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI0MFwi
Lz48b21nZGk6d2F5cG9pbnQgeD1cIjY5NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwi
NDBcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRo
PVwiOTBcIiB4PVwiNTAxXCIgeT1cIjE4LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRp
OkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25f
MGxsMXZ0blwiIGlkPVwiVGV4dEFubm90YXRpb25fMGxsMXZ0bl9kaVwiPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiNTFcIiB3aWR0aD1cIjE5OVwiIHg9XCI0ODlcIiB5PVwiLTc5XCIvPjwvYnBtbmRp
OkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMDlq
aXNrOVwiIGlkPVwiQXNzb2NpYXRpb25fMDlqaXNrOV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwi
Mzk2XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMVwiLz48b21nZGk6d2F5cG9pbnQg
eD1cIjUyNFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiLTI4XCIvPjwvYnBtbmRpOkJQ
TU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMTlh
Y2N1ZlwiIGlkPVwiVGV4dEFubm90YXRpb25fMTlhY2N1Zl9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiODNcIiB3aWR0aD1cIjEwN1wiIHg9XCIxMDdcIiB5PVwiLTk1XCIvPjwvYnBtbmRpOkJQ
TU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMXE2czB1
MFwiIGlkPVwiQXNzb2NpYXRpb25fMXE2czB1MF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMjk2
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNlwiLz48b21nZGk6d2F5cG9pbnQgeD1c
IjIxNFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiLTI0XCIvPjwvYnBtbmRpOkJQTU5F
ZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25z
PiIsICJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX3BhcnNlX2lvY3NfYXR0YWNobWVudCIsICJ2ZXJz
aW9uIjogMzF9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU2MTg4OTc5NDU4MCwgImNyZWF0b3Jf
aWQiOiAiaW50ZWdyYXRpb25zQGV4YW1wbGUuY29tIiwgImFjdGlvbnMiOiBbXSwgInByb2dyYW1t
YXRpY19uYW1lIjogImV4YW1wbGVfcGFyc2VfaW9jc19hdHRhY2htZW50IiwgIm5hbWUiOiAiRXhh
bXBsZTogUGFyc2UgSU9DcyBBdHRhY2htZW50In0sIHsidXVpZCI6ICI4OTBjYzMzYi01OTlmLTRj
OGItYWY2Zi1iNDIyNTdkM2JhNGYiLCAiZGVzY3JpcHRpb24iOiAiRXhhbXBsZSBXb3JrZmxvdyBz
aG93aW5nIGhvdyB0byBleHRyYWN0IElPQydzIChJbmRpY2F0b3JzIG9mIENvbXByb21pc2UpIGZy
b20gYW4gQXJ0aWZhY3QgRmlsZSBvciBUZXh0LUJhc2VkIEFydGlmYWN0LiBFYWNoIHVuaXF1ZSBJ
T0MgaXMgYWRkZWQgdG8gdGhlIEluY2lkZW50IGFzIGFuIEFydGlmYWN0IiwgIm9iamVjdF90eXBl
IjogImFydGlmYWN0IiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9wYXJzZV9pb2NzX2FydGlmYWN0
IiwgIndvcmtmbG93X2lkIjogMzUsICJsYXN0X21vZGlmaWVkX2J5IjogImFkbWluQGV4YW1wbGUu
Y29tIiwgImNvbnRlbnQiOiB7InhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9
XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9C
UE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3Nw
ZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3Nw
ZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVj
L0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0u
Y29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwi
IHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIg
dGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3Mg
aWQ9XCJleGFtcGxlX3BhcnNlX2lvY3NfYXJ0aWZhY3RcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIg
bmFtZT1cIkV4YW1wbGU6IFBhcnNlIElPQ3MgQXJ0aWZhY3RcIj48ZG9jdW1lbnRhdGlvbj48IVtD
REFUQVtFeGFtcGxlIFdvcmtmbG93IHNob3dpbmcgaG93IHRvIGV4dHJhY3QgSU9DJ3MgKEluZGlj
YXRvcnMgb2YgQ29tcHJvbWlzZSkgZnJvbSBhbiBBcnRpZmFjdCBGaWxlIG9yIFRleHQtQmFzZWQg
QXJ0aWZhY3QuIEVhY2ggdW5pcXVlIElPQyBpcyBhZGRlZCB0byB0aGUgSW5jaWRlbnQgYXMgYW4g
QXJ0aWZhY3RdXT48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1
NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzB0aW91Zmc8L291dGdvaW5nPjwvc3RhcnRF
dmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xa2w0Nmk2XCIgbmFtZT1cIklPQyBQ
YXJzZXJcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxy
ZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cIjg2NGNjMDQzLTQ3ZjUtNDI2MS1iNjU4LTM5ZjQ3MTJi
MjY5ZFwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW1wb3J0
IHJlXFxuXFxuZGVmIGdldF9hcnRpZmFjdF90eXBlKGFydGlmYWN0X3ZhbHVlLCBhcnRpZmFjdF90
eXBlKTpcXG4gIFxcXCJcXFwiXFxcIlVzZSBzb21lIHJlZ2V4IGV4cHJlc3Npb25zIHRvIHRyeSBh
bmQgaWRlbnRpZnlcXG4gIGZyb20gdGhlIEFydGlmYWN0J3MgdmFsdWUsIHdoYXQgQXJ0aWZhY3Qg
dHlwZSBpdCBpcy5cXG4gIFJldHVybiBvcmlnaW5hbCBhcnRpZmFjdF90eXBlIGlmIHdlIGNhbm5v
dCBmaWd1cmUgaXQgb3V0XFxcIlxcXCJcXFwiXFxuXFxuICBkbnNfbmFtZV9yZWdleCA9IHJlLmNv
bXBpbGUocideKChbYS16QS1aXXsxfSl8KFthLXpBLVpdezF9W2EtekEtWl17MX0pfChbYS16QS1a
XXsxfVswLTldezF9KXwoWzAtOV17MX1bYS16QS1aXXsxfSl8KFthLXpBLVowLTldW2EtekEtWjAt
OS1fXXsxLDYxfVthLXpBLVowLTldKSlcXFxcLihbYS16QS1aXXsyLDZ9fFthLXpBLVowLTktXXsy
LDMwfVxcXFwuW2EtekEtWl17MiwzfSkkJylcXG4gIFxcbiAgaWYgcmUubWF0Y2goZG5zX25hbWVf
cmVnZXgsIGFydGlmYWN0X3ZhbHVlKTpcXG4gICAgcmV0dXJuIFxcXCJETlMgTmFtZVxcXCJcXG4g
IFxcbiAgcmV0dXJuIGFydGlmYWN0X3R5cGVcXG5cXG4jIE1hcCBpb2MudHlwZSB0byBSZXNpbGll
bnQgQXJ0aWZhY3QgVHlwZVxcbmlvY190eXBlX3RvX2FydGlmYWN0X3R5cGVfbWFwID0ge1xcbiAg
ICAndXJpJzogJ1VSSSBQYXRoJyxcXG4gICAgJ0lQJzogJ0lQIEFkZHJlc3MnLFxcbiAgICAnbWQ1
JzogJ01hbHdhcmUgTUQ1IEhhc2gnLFxcbiAgICAnc2hhMSc6ICdNYWx3YXJlIFNIQS0xIEhhc2gn
LFxcbiAgICAnc2hhMjU2JzogJ01hbHdhcmUgU0hBLTI1NiBIYXNoJyxcXG4gICAgJ0NWRSc6ICdU
aHJlYXQgQ1ZFIElEJyxcXG4gICAgJ2VtYWlsJzogJ0VtYWlsIFNlbmRlcicsXFxuICAgICdmaWxl
bmFtZSc6ICdGaWxlIE5hbWUnLFxcbiAgICAnZmlsZSc6ICdGaWxlIE5hbWUnXFxufVxcblxcbiMg
R2V0IHRoZSBJT0NzXFxuaW9jcyA9IHJlc3VsdHMuaW9jc1xcblxcbmlmIGlvY3M6XFxuICAgICMg
TG9vcCBJT0NzIGFuZCBhZGQgZWFjaCBvbiBhcyBhbiBBcnRpZmFjdFxcbiAgICBmb3IgaW9jIGlu
IGlvY3M6XFxuICAgICAgXFxuICAgICAgIyBJZiBhdHRhY2htZW50X2ZpbGVfbmFtZSBpcyBub3Qg
ZGVmaW5lZCwgdXNlIHRoZSBpb2MudmFsdWUgYXMgaW4gdGhlIEFydGlmYWN0J3MgRGVzY3JpcHRp
b25cXG4gICAgICBpZiByZXN1bHRzLmF0dGFjaG1lbnRfZmlsZV9uYW1lOlxcbiAgICAgICAgYXJ0
aWZhY3RfZGVzY3JpcHRpb24gPSB1XFxcIlRoaXMgSU9DIG9jY3VycmVkIHswfSB0aW1lKHMpIGlu
IHRoZSBhcnRpZmFjdDogezF9XFxcIi5mb3JtYXQoIHVuaWNvZGUoaW9jLmNvdW50KSwgdW5pY29k
ZShyZXN1bHRzLmF0dGFjaG1lbnRfZmlsZV9uYW1lKSApXFxuICAgICAgXFxuICAgICAgZWxzZTpc
XG4gICAgICAgIGFydGlmYWN0X2Rlc2NyaXB0aW9uID0gdVxcXCJUaGlzIElPQyBvY2N1cnJlZCB7
MH0gdGltZShzKSBpbiB0aGUgYXJ0aWZhY3Q6IHsxfVxcXCIuZm9ybWF0KCB1bmljb2RlKGlvYy5j
b3VudCksIHVuaWNvZGUoaW9jLnZhbHVlKSApXFxuXFxuICAgICAgYXJ0aWZhY3RfdmFsdWUgPSBp
b2MudmFsdWVcXG4gICAgICBhcnRpZmFjdF90eXBlID0gaW9jX3R5cGVfdG9fYXJ0aWZhY3RfdHlw
ZV9tYXAuZ2V0KGlvYy50eXBlLCBcXFwiU3RyaW5nXFxcIilcXG4gICAgICBcXG4gICAgICAjIElm
IHRoZSBhcnRpZmFjdF90eXBlIGlzICdVUkkgUGF0aCcsIGNhbGwgZ2V0X2FydGlmYWN0X3R5cGUg
dG8gdHJ5IGludGVudGlmeSB0aGUgdHlwZSB1c2luZyByZWdleFxcbiAgICAgIGlmIGFydGlmYWN0
X3R5cGUgPT0gXFxcIlVSSSBQYXRoXFxcIjpcXG4gICAgICAgIGFydGlmYWN0X3R5cGUgPSBnZXRf
YXJ0aWZhY3RfdHlwZShhcnRpZmFjdF92YWx1ZSwgYXJ0aWZhY3RfdHlwZSlcXG4gICAgICBcXG4g
ICAgICBpbmNpZGVudC5hZGRBcnRpZmFjdChhcnRpZmFjdF90eXBlLCBhcnRpZmFjdF92YWx1ZSwg
YXJ0aWZhY3RfZGVzY3JpcHRpb24pXFxuXCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcIiMg
RGVmaW5lIFByZS1Qcm9jZXNzIElucHV0c1xcbmlucHV0cy5pb2NfcGFyc2VyX2luY2lkZW50X2lk
ID0gaW5jaWRlbnQuaWRcXG5pbnB1dHMuaW9jX3BhcnNlcl9hcnRpZmFjdF9pZCA9IGFydGlmYWN0
LmlkXFxuaW5wdXRzLmlvY19wYXJzZXJfYXJ0aWZhY3RfdmFsdWUgPSBhcnRpZmFjdC52YWx1ZVwi
fTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVl
bmNlRmxvd18wdGlvdWZnPC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFhaHBxcTM8
L291dGdvaW5nPjwvc2VydmljZVRhc2s+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18w
dGlvdWZnXCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2Vy
dmljZVRhc2tfMWtsNDZpNlwiLz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8xd2o4dHE0XCI+PGlu
Y29taW5nPlNlcXVlbmNlRmxvd18xYWhwcXEzPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5j
ZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMWFocHFxM1wiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNr
XzFrbDQ2aTZcIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8xd2o4dHE0XCIvPjx0ZXh0QW5ub3RhdGlv
biBpZD1cIlRleHRBbm5vdGF0aW9uXzFkcjczcmtcIj48dGV4dD48IVtDREFUQVtPdXRwdXQ6IExp
c3Qgb2YgJ2lvY3MnIHdpdGggdGhlIGF0dHJpYnV0ZXMgJ3R5cGUnLCAndmFsdWUnIGFuZCAnY291
bnQnXG5dXT48L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lh
dGlvbl8wNmE5MDQ0XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWtsNDZpNlwiIHRhcmdldFJl
Zj1cIlRleHRBbm5vdGF0aW9uXzFkcjczcmtcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFu
bm90YXRpb25fMTZreW0xNFwiPjx0ZXh0PjwhW0NEQVRBW0lucHV0czogaW5jaWRlbnRfaWQsIGFy
dGlmYWN0X2lkLCBhcnRpZmFjdF92YWx1ZVxuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFz
c29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMGJweHR1b1wiIHNvdXJjZVJlZj1cIlNlcnZpY2VU
YXNrXzFrbDQ2aTZcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xNmt5bTE0XCIvPjwvcHJv
Y2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBN
TlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1u
ZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFy
dEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIz
NlwiIHg9XCIxNDRcIiB5PVwiMTEzXCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTM5XCIgeT1cIjE0OFwiLz48L2JwbW5kaTpC
UE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50
PVwiU2VydmljZVRhc2tfMWtsNDZpNlwiIGlkPVwiU2VydmljZVRhc2tfMWtsNDZpNl9kaVwiPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCI0NDlcIiB5PVwiOTFc
Ii8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1
ZW5jZUZsb3dfMHRpb3VmZ1wiIGlkPVwiU2VxdWVuY2VGbG93XzB0aW91ZmdfZGlcIj48b21nZGk6
d2F5cG9pbnQgeD1cIjE4MFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTMxXCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiMzE0XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMzFc
Ii8+PG9tZ2RpOndheXBvaW50IHg9XCIzMTRcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjEzMVwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQ0OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMTMxXCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNc
IiB3aWR0aD1cIjkwXCIgeD1cIjI4NFwiIHk9XCIxMjQuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+
PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVu
dF8xd2o4dHE0XCIgaWQ9XCJFbmRFdmVudF8xd2o4dHE0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiODE1XCIgeT1cIjExM1wiLz48YnBtbmRpOkJQTU5M
YWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCI5MFwiIHg9XCI3ODhcIiB5
PVwiMTUyXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xYWhwcXEzXCIgaWQ9XCJTZXF1ZW5j
ZUZsb3dfMWFocHFxM19kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNTQ5XCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIxMzFcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2ODFcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEzMVwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjY4MVwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTMxXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiODE1
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMzFcIi8+PGJwbW5kaTpCUE1OTGFiZWw+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiNjUxXCIgeT1cIjEy
NC41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5T
aGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFkcjczcmtcIiBpZD1cIlRleHRBbm5v
dGF0aW9uXzFkcjczcmtfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjY1XCIgd2lkdGg9XCIx
NTVcIiB4PVwiNjUwXCIgeT1cIjIyXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5F
ZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMDZhOTA0NFwiIGlkPVwiQXNzb2NpYXRpb25f
MDZhOTA0NF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNTQ5XCIgeHNpOnR5cGU9XCJvbWdkYzpQ
b2ludFwiIHk9XCIxMTRcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2NTBcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjgxXCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMTZreW0xNFwiIGlkPVwiVGV4dEFubm90YXRp
b25fMTZreW0xNF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNzhcIiB3aWR0aD1cIjEwMFwi
IHg9XCIyNjVcIiB5PVwiMTZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2Ug
YnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8wYnB4dHVvXCIgaWQ9XCJBc3NvY2lhdGlvbl8wYnB4
dHVvX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0NDlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjExMVwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjM2NVwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiNzZcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwv
YnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgIndvcmtmbG93X2lkIjogImV4YW1w
bGVfcGFyc2VfaW9jc19hcnRpZmFjdCIsICJ2ZXJzaW9uIjogMTd9LCAibGFzdF9tb2RpZmllZF90
aW1lIjogMTU2MTg4OTk1MTg5MCwgImNyZWF0b3JfaWQiOiAiaW50ZWdyYXRpb25zQGV4YW1wbGUu
Y29tIiwgImFjdGlvbnMiOiBbXSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfcGFyc2Vf
aW9jc19hcnRpZmFjdCIsICJuYW1lIjogIkV4YW1wbGU6IFBhcnNlIElPQ3MgQXJ0aWZhY3QifV0s
ICJhY3Rpb25zIjogW3sibG9naWNfdHlwZSI6ICJhbGwiLCAibmFtZSI6ICJFeGFtcGxlOiBQYXJz
ZSBJT0NzIC0gQXJ0aWZhY3QiLCAidmlld19pdGVtcyI6IFtdLCAidHlwZSI6IDEsICJ3b3JrZmxv
d3MiOiBbImV4YW1wbGVfcGFyc2VfaW9jc19hcnRpZmFjdCJdLCAib2JqZWN0X3R5cGUiOiAiYXJ0
aWZhY3QiLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImFkZDAyYzBiLWY1NjUt
NDAyMi05OGIyLWE5MjJkMjcyNzYwMyIsICJhdXRvbWF0aW9ucyI6IFtdLCAiZXhwb3J0X2tleSI6
ICJFeGFtcGxlOiBQYXJzZSBJT0NzIC0gQXJ0aWZhY3QiLCAiY29uZGl0aW9ucyI6IFt7InR5cGUi
OiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IG51bGwsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnZh
bHVlIiwgIm1ldGhvZCI6ICJub3RfY29udGFpbnMiLCAidmFsdWUiOiAiLnBuZyJ9LCB7InR5cGUi
OiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IG51bGwsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5
cGUiLCAibWV0aG9kIjogImluIiwgInZhbHVlIjogWyJSRkMgODIyIEVtYWlsIE1lc3NhZ2UgRmls
ZSIsICJFbWFpbCBTdWJqZWN0IiwgIkVtYWlsIEJvZHkiLCAiRW1haWwgQXR0YWNobWVudCIsICJN
YWx3YXJlIFNhbXBsZSIsICJMb2cgRmlsZSIsICJPdGhlciBGaWxlIiwgIlN0cmluZyIsICJYNTA5
IENlcnRpZmljYXRlIEZpbGUiXX1dLCAiaWQiOiA0NywgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjog
W119LCB7ImxvZ2ljX3R5cGUiOiAiYWxsIiwgIm5hbWUiOiAiRXhhbXBsZTogUGFyc2UgSU9DcyAt
IEF0dGFjaG1lbnQiLCAidmlld19pdGVtcyI6IFtdLCAidHlwZSI6IDEsICJ3b3JrZmxvd3MiOiBb
ImV4YW1wbGVfcGFyc2VfaW9jc19hdHRhY2htZW50Il0sICJvYmplY3RfdHlwZSI6ICJhdHRhY2ht
ZW50IiwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6ICJiYzQ5NzUwZi03ZjJjLTRl
MGUtYTI0OS1iMzI3YjZhNDFmMWQiLCAiYXV0b21hdGlvbnMiOiBbXSwgImV4cG9ydF9rZXkiOiAi
RXhhbXBsZTogUGFyc2UgSU9DcyAtIEF0dGFjaG1lbnQiLCAiY29uZGl0aW9ucyI6IFtdLCAiaWQi
OiA0OCwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW119XSwgImxheW91dHMiOiBbXSwgImV4cG9y
dF9mb3JtYXRfdmVyc2lvbiI6IDIsICJpZCI6IDcyLCAiaW5kdXN0cmllcyI6IG51bGwsICJwaGFz
ZXMiOiBbXSwgImFjdGlvbl9vcmRlciI6IFtdLCAiZ2VvcyI6IG51bGwsICJsb2NhbGUiOiBudWxs
LCAic2VydmVyX3ZlcnNpb24iOiB7Im1ham9yIjogMzEsICJ2ZXJzaW9uIjogIjMxLjAuNDI1NCIs
ICJidWlsZF9udW1iZXIiOiA0MjU0LCAibWlub3IiOiAwfSwgInRpbWVmcmFtZXMiOiBudWxsLCAi
d29ya3NwYWNlcyI6IFtdLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJmdW5jdGlvbnMiOiBbeyJk
aXNwbGF5X25hbWUiOiAiSU9DIFBhcnNlciIsICJkZXNjcmlwdGlvbiI6IHsiY29udGVudCI6ICJF
eHRyYWN0IElPQydzIChJbmRpY2F0b3JzIG9mIENvbXByb21pc2UpIGZyb20gSW5jaWRlbnQvVGFz
ayBBdHRhY2htZW50cywgVGV4dC1CYXNlZCBBcnRpZmFjdHMgYW5kIEFydGlmYWN0IEZpbGVzIiwg
ImZvcm1hdCI6ICJ0ZXh0In0sICJjcmVhdG9yIjogeyJkaXNwbGF5X25hbWUiOiAiT3JjaGVzdHJh
dGlvbiBFbmdpbmUiLCAidHlwZSI6ICJ1c2VyIiwgImlkIjogMzgsICJuYW1lIjogImludGVncmF0
aW9uc0BleGFtcGxlLmNvbSJ9LCAidmlld19pdGVtcyI6IFt7InNob3dfaWYiOiBudWxsLCAiZmll
bGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1l
bnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogImMyOGFiNDJkLWE1OTAtNGVmMi05MWZlLWNl
NmJiMDY5NThkOSIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hvd19pZiI6IG51bGwsICJmaWVs
ZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVu
dCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiMWRmYzVkYzctODAzOS00YTIyLTg4MTItZjll
OGY0ZjAyNDhmIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxk
X3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50
IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJlZmM1OGU4Yi1jOGM4LTQ1YmEtOGM4NC1jNGNi
ZGE3Nzg3MGUiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRf
dHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQi
OiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogIjhlODdhZTNjLWNlYzgtNGNhNC1iYjk0LTE3NjQ0
NTVmOTI3NCIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90
eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6
ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiNmM5Mjc3YzYtZjBhMy00OWRmLWEyMzQtZmMzY2U2
ZWI2ODlmIiwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJleHBvcnRfa2V5IjogImZ1bmN0aW9uX2lv
Y19wYXJzZXIiLCAidXVpZCI6ICI4NjRjYzA0My00N2Y1LTQyNjEtYjY1OC0zOWY0NzEyYjI2OWQi
LCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9uYW1lIjogIkFkbWluIFVzZXIiLCAidHlw
ZSI6ICJ1c2VyIiwgImlkIjogNzEsICJuYW1lIjogImFkbWluQGV4YW1wbGUuY29tIn0sICJ2ZXJz
aW9uIjogMywgIndvcmtmbG93cyI6IFt7ImRlc2NyaXB0aW9uIjogbnVsbCwgIm9iamVjdF90eXBl
IjogImFydGlmYWN0IiwgImFjdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTogUGFyc2UgSU9D
cyBBcnRpZmFjdCIsICJ3b3JrZmxvd19pZCI6IDM1LCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhh
bXBsZV9wYXJzZV9pb2NzX2FydGlmYWN0IiwgInV1aWQiOiBudWxsfSwgeyJkZXNjcmlwdGlvbiI6
IG51bGwsICJvYmplY3RfdHlwZSI6ICJhdHRhY2htZW50IiwgImFjdGlvbnMiOiBbXSwgIm5hbWUi
OiAiRXhhbXBsZTogUGFyc2UgSU9DcyBBdHRhY2htZW50IiwgIndvcmtmbG93X2lkIjogMzQsICJw
cm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3BhcnNlX2lvY3NfYXR0YWNobWVudCIsICJ1dWlk
IjogbnVsbH1dLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU2MTg4OTUzNTcxMCwgImRlc3RpbmF0
aW9uX2hhbmRsZSI6ICJmbl9pb2NfcGFyc2VyIiwgImlkIjogNjcsICJuYW1lIjogImZ1bmN0aW9u
X2lvY19wYXJzZXIifV0sICJub3RpZmljYXRpb25zIjogbnVsbCwgInJlZ3VsYXRvcnMiOiBudWxs
LCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJjcmVhdGVfZGF0ZSI6IDE1NjE4ODk5NjExMjQsICJkZXNj
cmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tl
eSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiaWQiOiAwLCAibmFtZSI6
ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAidXBkYXRlX2RhdGUiOiAxNTYx
ODg5OTYxMTI0LCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAi
LCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAi
aGlkZGVuIjogZmFsc2V9XSwgInNjcmlwdHMiOiBbXSwgInR5cGVzIjogW10sICJtZXNzYWdlX2Rl
c3RpbmF0aW9ucyI6IFt7InV1aWQiOiAiZWM0MzY0NWUtMjlkYi00NWQ2LWFiODMtOWRmYzc0YmFi
MTNhIiwgImV4cG9ydF9rZXkiOiAiZm5faW9jX3BhcnNlciIsICJuYW1lIjogImZuX2lvY19wYXJz
ZXIiLCAiZGVzdGluYXRpb25fdHlwZSI6IDAsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl9pb2Nf
cGFyc2VyIiwgImV4cGVjdF9hY2siOiB0cnVlLCAidXNlcnMiOiBbImludGVncmF0aW9uc0BleGFt
cGxlLmNvbSJdfV0sICJpbmNpZGVudF9hcnRpZmFjdF90eXBlcyI6IFtdLCAicm9sZXMiOiBbXSwg
ImZpZWxkcyI6IFt7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAwLCAib3BlcmF0aW9uX3Bl
cm1zIjoge30sICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJw
cmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDM4LCAicmVhZF9vbmx5Ijog
dHJ1ZSwgInV1aWQiOiAiYzNmMGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgImNo
b3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJib29sZWFuIiwgInRvb2x0aXAiOiAiV2hldGhl
ciB0aGUgaW5jaWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRo
aXMgZmllbGQgaXMgcmVhZC1vbmx5LiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0Ijog
ZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQvaW5jX3RyYWlu
aW5nIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJuYW1lIjogImluY190cmFpbmluZyIs
ICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwg
InZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRp
b25fcGVybXMiOiB7fSwgInRleHQiOiAiaW9jX3BhcnNlcl90YXNrX2lkIiwgImJsYW5rX29wdGlv
biI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyNDEs
ICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiMWRmYzVkYzctODAzOS00YTIyLTg4MTItZjll
OGY0ZjAyNDhmIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAidG9v
bHRpcCI6ICJUaGUgSUQgb2YgdGhlIFRhc2siLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4
dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vaW9j
X3BhcnNlcl90YXNrX2lkIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRl
ciI6ICIxMDAwMDEiLCAibmFtZSI6ICJpb2NfcGFyc2VyX3Rhc2tfaWQiLCAiZGVwcmVjYXRlZCI6
IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX0s
IHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30s
ICJ0ZXh0IjogImlvY19wYXJzZXJfYXJ0aWZhY3RfaWQiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2Us
ICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDI0MCwgInJlYWRfb25s
eSI6IGZhbHNlLCAidXVpZCI6ICI4ZTg3YWUzYy1jZWM4LTRjYTQtYmI5NC0xNzY0NDU1ZjkyNzQi
LCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJ0b29sdGlwIjogIlRo
ZSBJRCBvZiB0aGUgQXJ0aWZhY3QiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZh
bHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vaW9jX3BhcnNl
cl9hcnRpZmFjdF9pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIi
OiAiMTIzIiwgIm5hbWUiOiAiaW9jX3BhcnNlcl9hcnRpZmFjdF9pZCIsICJkZXByZWNhdGVkIjog
ZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfSwg
eyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwg
InRleHQiOiAiaW9jX3BhcnNlcl9hcnRpZmFjdF92YWx1ZSIsICJibGFua19vcHRpb24iOiBmYWxz
ZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMjM5LCAicmVhZF9v
bmx5IjogZmFsc2UsICJ1dWlkIjogIjZjOTI3N2M2LWYwYTMtNDlkZi1hMjM0LWZjM2NlNmViNjg5
ZiIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIlRo
ZSBBcnRpZmFjdCdzIHZhbHVlIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxz
ZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2lvY19wYXJzZXJf
YXJ0aWZhY3RfdmFsdWUiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVy
IjogIiIsICJuYW1lIjogImlvY19wYXJzZXJfYXJ0aWZhY3RfdmFsdWUiLCAiZGVwcmVjYXRlZCI6
IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX0s
IHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30s
ICJ0ZXh0IjogImlvY19wYXJzZXJfaW5jaWRlbnRfaWQiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2Us
ICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDI0MywgInJlYWRfb25s
eSI6IGZhbHNlLCAidXVpZCI6ICJjMjhhYjQyZC1hNTkwLTRlZjItOTFmZS1jZTZiYjA2OTU4ZDki
LCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJ0b29sdGlwIjogIlRo
ZSBJRCBvZiB0aGUgSW5jaWRlbnQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZh
bHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vaW9jX3BhcnNl
cl9pbmNpZGVudF9pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIi
OiAiIiwgIm5hbWUiOiAiaW9jX3BhcnNlcl9pbmNpZGVudF9pZCIsICJkZXByZWNhdGVkIjogZmFs
c2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInJlcXVpcmVkIjogImFsd2F5
cyIsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3Bl
cmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImlvY19wYXJzZXJfYXR0YWNobWVudF9pZCIsICJi
bGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwg
ImlkIjogMjQyLCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogImVmYzU4ZThiLWM4YzgtNDVi
YS04Yzg0LWM0Y2JkYTc3ODcwZSIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAibnVt
YmVyIiwgInRvb2x0aXAiOiAiVGhlIElEIG9mIHRoZSBBdHRhY2htZW50IiwgImludGVybmFsIjog
ZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6
ICJfX2Z1bmN0aW9uL2lvY19wYXJzZXJfYXR0YWNobWVudF9pZCIsICJoaWRlX25vdGlmaWNhdGlv
biI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiMTIzIiwgIm5hbWUiOiAiaW9jX3BhcnNlcl9hdHRh
Y2htZW50X2lkIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZl
ciI6IGZhbHNlLCAidmFsdWVzIjogW119XSwgIm92ZXJyaWRlcyI6IFtdLCAiZXhwb3J0X2RhdGUi
OiAxNTYxODg5OTU5NzQxfQ==
"""
    )