# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_ioc_parser"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_ioc_parser package"""
    reload_params = {"package": u"fn_ioc_parser",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"ioc_parser_artifact_id", u"ioc_parser_artifact_value", u"ioc_parser_attachment_id", u"ioc_parser_incident_id", u"ioc_parser_task_id"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_ioc_parser"], 
                    "functions": [u"function_ioc_parser"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_parse_iocs_artifact", u"example_parse_iocs_attachment"], 
                    "actions": [u"Example: Parse IOCs - Artifact", u"Example: Parse IOCs - Attachment"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     ioc_parser_artifact_id
    #     ioc_parser_artifact_value
    #     ioc_parser_attachment_id
    #     ioc_parser_incident_id
    #     ioc_parser_task_id
    #   Message Destinations:
    #     fn_ioc_parser
    #   Functions:
    #     function_ioc_parser
    #   Workflows:
    #     example_parse_iocs_artifact
    #     example_parse_iocs_attachment
    #   Rules:
    #     Example: Parse IOCs - Artifact
    #     Example: Parse IOCs - Attachment


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogIjg5MGNjMzNiLTU5OWYt
NGM4Yi1hZjZmLWI0MjI1N2QzYmE0ZiIsICJkZXNjcmlwdGlvbiI6ICJFeGFtcGxlIFdvcmtmbG93
IHNob3dpbmcgaG93IHRvIGV4dHJhY3QgSU9DJ3MgKEluZGljYXRvcnMgb2YgQ29tcHJvbWlzZSkg
ZnJvbSBhbiBBcnRpZmFjdCBGaWxlIG9yIFRleHQtQmFzZWQgQXJ0aWZhY3QuIEVhY2ggdW5pcXVl
IElPQyBpcyBhZGRlZCB0byB0aGUgSW5jaWRlbnQgYXMgYW4gQXJ0aWZhY3QiLCAib2JqZWN0X3R5
cGUiOiAiYXJ0aWZhY3QiLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX3BhcnNlX2lvY3NfYXJ0aWZh
Y3QiLCAid29ya2Zsb3dfaWQiOiAzNSwgImxhc3RfbW9kaWZpZWRfYnkiOiAiYWRtaW5AZXhhbXBs
ZS5jb20iLCAiY29udGVudCI6IHsieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGlu
Zz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVj
L0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcv
c3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcv
c3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3Nw
ZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50Lmli
bS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1h
XCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2Vc
IiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2Vz
cyBpZD1cImV4YW1wbGVfcGFyc2VfaW9jc19hcnRpZmFjdFwiIGlzRXhlY3V0YWJsZT1cInRydWVc
IiBuYW1lPVwiRXhhbXBsZTogUGFyc2UgSU9DcyBBcnRpZmFjdFwiPjxkb2N1bWVudGF0aW9uPjwh
W0NEQVRBW0V4YW1wbGUgV29ya2Zsb3cgc2hvd2luZyBob3cgdG8gZXh0cmFjdCBJT0MncyAoSW5k
aWNhdG9ycyBvZiBDb21wcm9taXNlKSBmcm9tIGFuIEFydGlmYWN0IEZpbGUgb3IgVGV4dC1CYXNl
ZCBBcnRpZmFjdC4gRWFjaCB1bmlxdWUgSU9DIGlzIGFkZGVkIHRvIHRoZSBJbmNpZGVudCBhcyBh
biBBcnRpZmFjdF1dPjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRf
MTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMHRpb3VmZzwvb3V0Z29pbmc+PC9zdGFy
dEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzFrbDQ2aTZcIiBuYW1lPVwiSU9D
IFBhcnNlclwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+
PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiODY0Y2MwNDMtNDdmNS00MjYxLWI2NTgtMzlmNDcx
MmIyNjlkXCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbXBv
cnQgcmVcXG5cXG5kZWYgZ2V0X2FydGlmYWN0X3R5cGUoYXJ0aWZhY3RfdmFsdWUsIGFydGlmYWN0
X3R5cGUpOlxcbiAgXFxcIlxcXCJcXFwiVXNlIHNvbWUgcmVnZXggZXhwcmVzc2lvbnMgdG8gdHJ5
IGFuZCBpZGVudGlmeVxcbiAgZnJvbSB0aGUgQXJ0aWZhY3QncyB2YWx1ZSwgd2hhdCBBcnRpZmFj
dCB0eXBlIGl0IGlzLlxcbiAgUmV0dXJuIG9yaWdpbmFsIGFydGlmYWN0X3R5cGUgaWYgd2UgY2Fu
bm90IGZpZ3VyZSBpdCBvdXRcXFwiXFxcIlxcXCJcXG5cXG4gIGRuc19uYW1lX3JlZ2V4ID0gcmUu
Y29tcGlsZShyJ14oKFthLXpBLVpdezF9KXwoW2EtekEtWl17MX1bYS16QS1aXXsxfSl8KFthLXpB
LVpdezF9WzAtOV17MX0pfChbMC05XXsxfVthLXpBLVpdezF9KXwoW2EtekEtWjAtOV1bYS16QS1a
MC05LV9dezEsNjF9W2EtekEtWjAtOV0pKVxcXFwuKFthLXpBLVpdezIsNn18W2EtekEtWjAtOS1d
ezIsMzB9XFxcXC5bYS16QS1aXXsyLDN9KSQnKVxcbiAgXFxuICBpZiByZS5tYXRjaChkbnNfbmFt
ZV9yZWdleCwgYXJ0aWZhY3RfdmFsdWUpOlxcbiAgICByZXR1cm4gXFxcIkROUyBOYW1lXFxcIlxc
biAgXFxuICByZXR1cm4gYXJ0aWZhY3RfdHlwZVxcblxcbiMgTWFwIGlvYy50eXBlIHRvIFJlc2ls
aWVudCBBcnRpZmFjdCBUeXBlXFxuaW9jX3R5cGVfdG9fYXJ0aWZhY3RfdHlwZV9tYXAgPSB7XFxu
ICAgICd1cmknOiAnVVJJIFBhdGgnLFxcbiAgICAnSVAnOiAnSVAgQWRkcmVzcycsXFxuICAgICdt
ZDUnOiAnTWFsd2FyZSBNRDUgSGFzaCcsXFxuICAgICdzaGExJzogJ01hbHdhcmUgU0hBLTEgSGFz
aCcsXFxuICAgICdzaGEyNTYnOiAnTWFsd2FyZSBTSEEtMjU2IEhhc2gnLFxcbiAgICAnQ1ZFJzog
J1RocmVhdCBDVkUgSUQnLFxcbiAgICAnZW1haWwnOiAnRW1haWwgU2VuZGVyJyxcXG4gICAgJ2Zp
bGVuYW1lJzogJ0ZpbGUgTmFtZScsXFxuICAgICdmaWxlJzogJ0ZpbGUgTmFtZSdcXG59XFxuXFxu
IyBHZXQgdGhlIElPQ3NcXG5pb2NzID0gcmVzdWx0cy5pb2NzXFxuXFxuaWYgaW9jczpcXG4gICAg
IyBMb29wIElPQ3MgYW5kIGFkZCBlYWNoIG9uIGFzIGFuIEFydGlmYWN0XFxuICAgIGZvciBpb2Mg
aW4gaW9jczpcXG4gICAgICBcXG4gICAgICAjIElmIGF0dGFjaG1lbnRfZmlsZV9uYW1lIGlzIG5v
dCBkZWZpbmVkLCB1c2UgdGhlIGlvYy52YWx1ZSBhcyBpbiB0aGUgQXJ0aWZhY3QncyBEZXNjcmlw
dGlvblxcbiAgICAgIGlmIHJlc3VsdHMuYXR0YWNobWVudF9maWxlX25hbWU6XFxuICAgICAgICBh
cnRpZmFjdF9kZXNjcmlwdGlvbiA9IHVcXFwiVGhpcyBJT0Mgb2NjdXJyZWQgezB9IHRpbWUocykg
aW4gdGhlIGFydGlmYWN0OiB7MX1cXFwiLmZvcm1hdCggdW5pY29kZShpb2MuY291bnQpLCB1bmlj
b2RlKHJlc3VsdHMuYXR0YWNobWVudF9maWxlX25hbWUpIClcXG4gICAgICBcXG4gICAgICBlbHNl
OlxcbiAgICAgICAgYXJ0aWZhY3RfZGVzY3JpcHRpb24gPSB1XFxcIlRoaXMgSU9DIG9jY3VycmVk
IHswfSB0aW1lKHMpIGluIHRoZSBhcnRpZmFjdDogezF9XFxcIi5mb3JtYXQoIHVuaWNvZGUoaW9j
LmNvdW50KSwgdW5pY29kZShpb2MudmFsdWUpIClcXG5cXG4gICAgICBhcnRpZmFjdF92YWx1ZSA9
IGlvYy52YWx1ZVxcbiAgICAgIGFydGlmYWN0X3R5cGUgPSBpb2NfdHlwZV90b19hcnRpZmFjdF90
eXBlX21hcC5nZXQoaW9jLnR5cGUsIFxcXCJTdHJpbmdcXFwiKVxcbiAgICAgIFxcbiAgICAgICMg
SWYgdGhlIGFydGlmYWN0X3R5cGUgaXMgJ1VSSSBQYXRoJywgY2FsbCBnZXRfYXJ0aWZhY3RfdHlw
ZSB0byB0cnkgaWRlbnRpZnkgdGhlIHR5cGUgdXNpbmcgcmVnZXhcXG4gICAgICBpZiBhcnRpZmFj
dF90eXBlID09IFxcXCJVUkkgUGF0aFxcXCI6XFxuICAgICAgICBhcnRpZmFjdF90eXBlID0gZ2V0
X2FydGlmYWN0X3R5cGUoYXJ0aWZhY3RfdmFsdWUsIGFydGlmYWN0X3R5cGUpXFxuICAgICAgXFxu
ICAgICAgaW5jaWRlbnQuYWRkQXJ0aWZhY3QoYXJ0aWZhY3RfdHlwZSwgYXJ0aWZhY3RfdmFsdWUs
IGFydGlmYWN0X2Rlc2NyaXB0aW9uKVxcblwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCIj
IERlZmluZSBQcmUtUHJvY2VzcyBJbnB1dHNcXG5pbnB1dHMuaW9jX3BhcnNlcl9pbmNpZGVudF9p
ZCA9IGluY2lkZW50LmlkXFxuaW5wdXRzLmlvY19wYXJzZXJfYXJ0aWZhY3RfaWQgPSBhcnRpZmFj
dC5pZFxcbmlucHV0cy5pb2NfcGFyc2VyX2FydGlmYWN0X3ZhbHVlID0gYXJ0aWZhY3QudmFsdWVc
In08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1
ZW5jZUZsb3dfMHRpb3VmZzwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xYWhwcXEz
PC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3df
MHRpb3VmZ1wiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNl
cnZpY2VUYXNrXzFrbDQ2aTZcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMXdqOHRxNFwiPjxp
bmNvbWluZz5TZXF1ZW5jZUZsb3dfMWFocHFxMzwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVu
Y2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzFhaHBxcTNcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFz
a18xa2w0Nmk2XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMXdqOHRxNFwiLz48dGV4dEFubm90YXRp
b24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xZHI3M3JrXCI+PHRleHQ+PCFbQ0RBVEFbT3V0cHV0OiBM
aXN0IG9mICdpb2NzJyB3aXRoIHRoZSBhdHRyaWJ1dGVzICd0eXBlJywgJ3ZhbHVlJyBhbmQgJ2Nv
dW50J1xuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2Np
YXRpb25fMDZhOTA0NFwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFrbDQ2aTZcIiB0YXJnZXRS
ZWY9XCJUZXh0QW5ub3RhdGlvbl8xZHI3M3JrXCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRB
bm5vdGF0aW9uXzE2a3ltMTRcIj48dGV4dD48IVtDREFUQVtJbnB1dHM6IGluY2lkZW50X2lkLCBh
cnRpZmFjdF9pZCwgYXJ0aWZhY3RfdmFsdWVcbl1dPjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxh
c3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzBicHh0dW9cIiBzb3VyY2VSZWY9XCJTZXJ2aWNl
VGFza18xa2w0Nmk2XCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMTZreW0xNFwiLz48L3By
b2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQ
TU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBt
bmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3Rh
cnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwi
MzZcIiB4PVwiMTQ0XCIgeT1cIjExM1wiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjEzOVwiIHk9XCIxNDhcIi8+PC9icG1uZGk6
QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVu
dD1cIlNlcnZpY2VUYXNrXzFrbDQ2aTZcIiBpZD1cIlNlcnZpY2VUYXNrXzFrbDQ2aTZfZGlcIj48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiNDQ5XCIgeT1cIjkx
XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2Vx
dWVuY2VGbG93XzB0aW91ZmdcIiBpZD1cIlNlcXVlbmNlRmxvd18wdGlvdWZnX2RpXCI+PG9tZ2Rp
OndheXBvaW50IHg9XCIxODBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEzMVwiLz48
b21nZGk6d2F5cG9pbnQgeD1cIjMxNFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTMx
XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzE0XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIxMzFcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0NDlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjEzMVwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEz
XCIgd2lkdGg9XCI5MFwiIHg9XCIyODRcIiB5PVwiMTI0LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVs
PjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZl
bnRfMXdqOHRxNFwiIGlkPVwiRW5kRXZlbnRfMXdqOHRxNF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjgxNVwiIHk9XCIxMTNcIi8+PGJwbW5kaTpCUE1O
TGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiNzg4XCIg
eT1cIjE1MlwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6
QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMWFocHFxM1wiIGlkPVwiU2VxdWVu
Y2VGbG93XzFhaHBxcTNfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjU0OVwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMTMxXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNjgxXCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMzFcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2ODFcIiB4
c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEzMVwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjgx
NVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTMxXCIvPjxicG1uZGk6QlBNTkxhYmVs
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1cIjY1MVwiIHk9XCIx
MjQuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xZHI3M3JrXCIgaWQ9XCJUZXh0QW5u
b3RhdGlvbl8xZHI3M3JrX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI2NVwiIHdpZHRoPVwi
MTU1XCIgeD1cIjY1MFwiIHk9XCIyMlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1O
RWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzA2YTkwNDRcIiBpZD1cIkFzc29jaWF0aW9u
XzA2YTkwNDRfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjU0OVwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMTE0XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNjUwXCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCI4MVwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFw
ZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzE2a3ltMTRcIiBpZD1cIlRleHRBbm5vdGF0
aW9uXzE2a3ltMTRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjc4XCIgd2lkdGg9XCIxMDBc
IiB4PVwiMjY1XCIgeT1cIjE2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdl
IGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMGJweHR1b1wiIGlkPVwiQXNzb2NpYXRpb25fMGJw
eHR1b19kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDQ5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2lu
dFwiIHk9XCIxMTFcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIzNjVcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjc2XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48
L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ3b3JrZmxvd19pZCI6ICJleGFt
cGxlX3BhcnNlX2lvY3NfYXJ0aWZhY3QiLCAidmVyc2lvbiI6IDZ9LCAibGFzdF9tb2RpZmllZF90
aW1lIjogMTU2MjE1OTQ2MDgyOSwgImNyZWF0b3JfaWQiOiAiaW50ZWdyYXRpb25zQGV4YW1wbGUu
Y29tIiwgImFjdGlvbnMiOiBbXSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfcGFyc2Vf
aW9jc19hcnRpZmFjdCIsICJuYW1lIjogIkV4YW1wbGU6IFBhcnNlIElPQ3MgQXJ0aWZhY3QifSwg
eyJ1dWlkIjogIjU4OWQ3MzJiLTcwNzItNDlmNS05ODNlLWQ1ODc3ZjZlMDQzYiIsICJkZXNjcmlw
dGlvbiI6ICJFeGFtcGxlIFdvcmtmbG93IHNob3dpbmcgaG93IHRvIGV4dHJhY3QgSU9DJ3MgKElu
ZGljYXRvcnMgb2YgQ29tcHJvbWlzZSkgZnJvbSBJbmNpZGVudC9UYXNrIEF0dGFjaG1lbnRzLiBF
YWNoIHVuaXF1ZSBJT0MgaXMgYWRkZWQgdG8gdGhlIEluY2lkZW50IGFzIGFuIEFydGlmYWN0Iiwg
Im9iamVjdF90eXBlIjogImF0dGFjaG1lbnQiLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX3BhcnNl
X2lvY3NfYXR0YWNobWVudCIsICJ3b3JrZmxvd19pZCI6IDM0LCAibGFzdF9tb2RpZmllZF9ieSI6
ICJhZG1pbkBleGFtcGxlLmNvbSIsICJjb250ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1c
IjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3
dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8v
d3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6
Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcv
MjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNj
aGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcv
dGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9wYXJzZV9pb2NzX2F0dGFjaG1lbnRcIiBpc0V4
ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IFBhcnNlIElPQ3MgQXR0YWNobWVudFwi
Pjxkb2N1bWVudGF0aW9uPjwhW0NEQVRBW0V4YW1wbGUgV29ya2Zsb3cgc2hvd2luZyBob3cgdG8g
ZXh0cmFjdCBJT0MncyAoSW5kaWNhdG9ycyBvZiBDb21wcm9taXNlKSBmcm9tIEluY2lkZW50L1Rh
c2sgQXR0YWNobWVudHMuIEVhY2ggdW5pcXVlIElPQyBpcyBhZGRlZCB0byB0aGUgSW5jaWRlbnQg
YXMgYW4gQXJ0aWZhY3RdXT48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFxeDR6NDY8L291dGdvaW5nPjwv
c3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wbzRmMWFmXCIgbmFtZT1c
IklPQyBQYXJzZXJcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1l
bnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cIjg2NGNjMDQzLTQ3ZjUtNDI2MS1iNjU4LTM5
ZjQ3MTJiMjY5ZFwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwi
aW1wb3J0IHJlXFxuXFxuZGVmIGdldF9hcnRpZmFjdF90eXBlKGFydGlmYWN0X3ZhbHVlLCBhcnRp
ZmFjdF90eXBlKTpcXG4gIFxcXCJcXFwiXFxcIlVzZSBzb21lIHJlZ2V4IGV4cHJlc3Npb25zIHRv
IHRyeSBhbmQgaWRlbnRpZnlcXG4gIGZyb20gdGhlIEFydGlmYWN0J3MgdmFsdWUsIHdoYXQgQXJ0
aWZhY3QgdHlwZSBpdCBpcy5cXG4gIFJldHVybiBvcmlnaW5hbCBhcnRpZmFjdF90eXBlIGlmIHdl
IGNhbm5vdCBmaWd1cmUgaXQgb3V0XFxcIlxcXCJcXFwiXFxuXFxuICBkbnNfbmFtZV9yZWdleCA9
IHJlLmNvbXBpbGUocideKChbYS16QS1aXXsxfSl8KFthLXpBLVpdezF9W2EtekEtWl17MX0pfChb
YS16QS1aXXsxfVswLTldezF9KXwoWzAtOV17MX1bYS16QS1aXXsxfSl8KFthLXpBLVowLTldW2Et
ekEtWjAtOS1fXXsxLDYxfVthLXpBLVowLTldKSlcXFxcLihbYS16QS1aXXsyLDZ9fFthLXpBLVow
LTktXXsyLDMwfVxcXFwuW2EtekEtWl17MiwzfSkkJylcXG4gIFxcbiAgaWYgcmUubWF0Y2goZG5z
X25hbWVfcmVnZXgsIGFydGlmYWN0X3ZhbHVlKTpcXG4gICAgcmV0dXJuIFxcXCJETlMgTmFtZVxc
XCJcXG4gIFxcbiAgcmV0dXJuIGFydGlmYWN0X3R5cGVcXG5cXG4jIE1hcCBpb2MudHlwZSB0byBS
ZXNpbGllbnQgQXJ0aWZhY3QgVHlwZVxcbmlvY190eXBlX3RvX2FydGlmYWN0X3R5cGVfbWFwID0g
e1xcbiAgICAndXJpJzogJ1VSSSBQYXRoJyxcXG4gICAgJ0lQJzogJ0lQIEFkZHJlc3MnLFxcbiAg
ICAnbWQ1JzogJ01hbHdhcmUgTUQ1IEhhc2gnLFxcbiAgICAnc2hhMSc6ICdNYWx3YXJlIFNIQS0x
IEhhc2gnLFxcbiAgICAnc2hhMjU2JzogJ01hbHdhcmUgU0hBLTI1NiBIYXNoJyxcXG4gICAgJ0NW
RSc6ICdUaHJlYXQgQ1ZFIElEJyxcXG4gICAgJ2VtYWlsJzogJ0VtYWlsIFNlbmRlcicsXFxuICAg
ICdmaWxlbmFtZSc6ICdGaWxlIE5hbWUnLFxcbiAgICAnZmlsZSc6ICdGaWxlIE5hbWUnXFxufVxc
blxcbiMgR2V0IHRoZSBJT0NzXFxuaW9jcyA9IHJlc3VsdHMuaW9jc1xcblxcbmlmIGlvY3M6XFxu
ICAgICMgTG9vcCBJT0NzIGFuZCBhZGQgZWFjaCBvbiBhcyBhbiBBcnRpZmFjdFxcbiAgICBmb3Ig
aW9jIGluIGlvY3M6XFxuICAgICAgYXJ0aWZhY3RfZGVzY3JpcHRpb24gPSB1XFxcIlRoaXMgSU9D
IG9jY3VycmVkIHswfSB0aW1lKHMpIGluIHRoZSBhcnRpZmFjdDogezF9XFxcIi5mb3JtYXQoIHVu
aWNvZGUoaW9jLmNvdW50KSwgdW5pY29kZShyZXN1bHRzLmF0dGFjaG1lbnRfZmlsZV9uYW1lKSAp
XFxuICAgICAgYXJ0aWZhY3RfdmFsdWUgPSBpb2MudmFsdWVcXG4gICAgICBhcnRpZmFjdF90eXBl
ID0gaW9jX3R5cGVfdG9fYXJ0aWZhY3RfdHlwZV9tYXAuZ2V0KGlvYy50eXBlLCBcXFwiU3RyaW5n
XFxcIilcXG4gICAgICBcXG4gICAgICAjIElmIHRoZSBhcnRpZmFjdF90eXBlIGlzICdVUkkgUGF0
aCcsIGNhbGwgZ2V0X2FydGlmYWN0X3R5cGUgdG8gdHJ5IGlkZW50aWZ5IHRoZSB0eXBlIHVzaW5n
IHJlZ2V4XFxuICAgICAgaWYgYXJ0aWZhY3RfdHlwZSA9PSBcXFwiVVJJIFBhdGhcXFwiOlxcbiAg
ICAgICAgYXJ0aWZhY3RfdHlwZSA9IGdldF9hcnRpZmFjdF90eXBlKGFydGlmYWN0X3ZhbHVlLCBh
cnRpZmFjdF90eXBlKVxcbiAgICAgIFxcbiAgICAgIGluY2lkZW50LmFkZEFydGlmYWN0KGFydGlm
YWN0X3R5cGUsIGFydGlmYWN0X3ZhbHVlLCBhcnRpZmFjdF9kZXNjcmlwdGlvbilcXG5cIixcInBy
ZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiIyBEZWZpbmUgUHJlLVByb2Nlc3MgSW5wdXRzXFxuaW5w
dXRzLmlvY19wYXJzZXJfaW5jaWRlbnRfaWQgPSBpbmNpZGVudC5pZFxcbmlucHV0cy5pb2NfcGFy
c2VyX2F0dGFjaG1lbnRfaWQgPSBhdHRhY2htZW50LmlkXFxuXFxuIyBJZiB0aGlzIGlzIGEgVGFz
aywgc2V0IHRoZSBUYXNrIElEXFxuaWYgdGFzazpcXG4gICAgIGlucHV0cy5pb2NfcGFyc2VyX3Rh
c2tfaWQgPSB0YXNrLmlkXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50
cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFxeDR6NDY8L2luY29taW5nPjxvdXRnb2luZz5TZXF1
ZW5jZUZsb3dfMXF6aXVoNzwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlk
PVwiU2VxdWVuY2VGbG93XzFxeDR6NDZcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1c
IiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wbzRmMWFmXCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2
ZW50XzAzcXF0anRcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFxeml1aDc8L2luY29taW5nPjwv
ZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xcXppdWg3XCIgc291cmNl
UmVmPVwiU2VydmljZVRhc2tfMG80ZjFhZlwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzAzcXF0anRc
Ii8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMGxsMXZ0blwiPjx0ZXh0Pjwh
W0NEQVRBW091dHB1dDogTGlzdCBvZiAnaW9jcycgd2l0aCB0aGUgYXR0cmlidXRlcyAndHlwZScs
ICd2YWx1ZScgYW5kICdjb3VudCdcbl1dPjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lh
dGlvbiBpZD1cIkFzc29jaWF0aW9uXzA5amlzazlcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18w
bzRmMWFmXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMGxsMXZ0blwiLz48dGV4dEFubm90
YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xOWFjY3VmXCI+PHRleHQ+PCFbQ0RBVEFbSW5wdXRz
OiBpbmNpZGVudF9pZCwgdGFza19pZCwgYXR0YWNobWVudF9pZCxcbl1dPjwvdGV4dD48L3RleHRB
bm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFxNnMwdTBcIiBzb3VyY2VS
ZWY9XCJTZXJ2aWNlVGFza18wbzRmMWFmXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMTlh
Y2N1ZlwiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFc
Ij48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBs
YW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4
bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIz
NlwiIHdpZHRoPVwiMzZcIiB4PVwiMjQwXCIgeT1cIjE1MFwiLz48YnBtbmRpOkJQTU5MYWJlbD48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjIzNVwiIHk9XCIxODVc
Ii8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFw
ZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzBvNGYxYWZcIiBpZD1cIlNlcnZpY2VUYXNrXzBv
NGYxYWZfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwi
NDcwXCIgeT1cIjEyOFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1u
RWxlbWVudD1cIlNlcXVlbmNlRmxvd18xcXg0ejQ2XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMXF4NHo0
Nl9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMjc2XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwi
IHk9XCIxNjhcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIzNzRcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjE2OFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjM3NFwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMTY4XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDcwXCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIxNjhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiMzQ0XCIgeT1cIjE2MS41XCIvPjwvYnBt
bmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIkVuZEV2ZW50XzAzcXF0anRcIiBpZD1cIkVuZEV2ZW50XzAzcXF0anRfZGlcIj48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI3OTdcIiB5PVwiMTUwXCIv
PjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkw
XCIgeD1cIjc3MFwiIHk9XCIxODlcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5T
aGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFxeml1aDdc
IiBpZD1cIlNlcXVlbmNlRmxvd18xcXppdWg3X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI1NzBc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE2OFwiLz48b21nZGk6d2F5cG9pbnQgeD1c
Ijc5N1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTY4XCIvPjxicG1uZGk6QlBNTkxh
YmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1cIjYzOC41XCIg
eT1cIjE0Ni41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRp
OkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzBsbDF2dG5cIiBpZD1cIlRl
eHRBbm5vdGF0aW9uXzBsbDF2dG5fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjUxXCIgd2lk
dGg9XCIxOTlcIiB4PVwiNTcwXCIgeT1cIjU1XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRp
OkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMDlqaXNrOVwiIGlkPVwiQXNzb2Np
YXRpb25fMDlqaXNrOV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNTcwXCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIxMzlcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2MjdcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEwNlwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQ
TU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzE5YWNjdWZcIiBpZD1cIlRleHRB
bm5vdGF0aW9uXzE5YWNjdWZfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgzXCIgd2lkdGg9
XCIxMDdcIiB4PVwiMzI3XCIgeT1cIjM5XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQ
TU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMXE2czB1MFwiIGlkPVwiQXNzb2NpYXRp
b25fMXE2czB1MF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDcwXCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIxMzhcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0MzRcIiB4c2k6dHlwZT1c
Im9tZ2RjOlBvaW50XCIgeT1cIjExNlwiLz48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1O
UGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAid29ya2Zsb3dfaWQi
OiAiZXhhbXBsZV9wYXJzZV9pb2NzX2F0dGFjaG1lbnQiLCAidmVyc2lvbiI6IDExfSwgImxhc3Rf
bW9kaWZpZWRfdGltZSI6IDE1NjIxNTk0NzQwMzMsICJjcmVhdG9yX2lkIjogImludGVncmF0aW9u
c0BleGFtcGxlLmNvbSIsICJhY3Rpb25zIjogW10sICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFt
cGxlX3BhcnNlX2lvY3NfYXR0YWNobWVudCIsICJuYW1lIjogIkV4YW1wbGU6IFBhcnNlIElPQ3Mg
QXR0YWNobWVudCJ9XSwgImFjdGlvbnMiOiBbeyJsb2dpY190eXBlIjogImFsbCIsICJuYW1lIjog
IkV4YW1wbGU6IFBhcnNlIElPQ3MgLSBBcnRpZmFjdCIsICJ2aWV3X2l0ZW1zIjogW10sICJ0eXBl
IjogMSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV9wYXJzZV9pb2NzX2FydGlmYWN0Il0sICJvYmpl
Y3RfdHlwZSI6ICJhcnRpZmFjdCIsICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAi
YWRkMDJjMGItZjU2NS00MDIyLTk4YjItYTkyMmQyNzI3NjAzIiwgImF1dG9tYXRpb25zIjogW10s
ICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFBhcnNlIElPQ3MgLSBBcnRpZmFjdCIsICJjb25kaXRp
b25zIjogW3sidHlwZSI6IG51bGwsICJldmFsdWF0aW9uX2lkIjogbnVsbCwgImZpZWxkX25hbWUi
OiAiYXJ0aWZhY3QudHlwZSIsICJtZXRob2QiOiAiaW4iLCAidmFsdWUiOiBbIlJGQyA4MjIgRW1h
aWwgTWVzc2FnZSBGaWxlIiwgIkVtYWlsIFN1YmplY3QiLCAiRW1haWwgQm9keSIsICJFbWFpbCBB
dHRhY2htZW50IiwgIk1hbHdhcmUgU2FtcGxlIiwgIkxvZyBGaWxlIiwgIk90aGVyIEZpbGUiLCAi
U3RyaW5nIiwgIlg1MDkgQ2VydGlmaWNhdGUgRmlsZSJdfSwgeyJ0eXBlIjogbnVsbCwgImV2YWx1
YXRpb25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFjdC52YWx1ZSIsICJtZXRob2Qi
OiAibm90X2NvbnRhaW5zIiwgInZhbHVlIjogIi5wbmcifV0sICJpZCI6IDQ3LCAibWVzc2FnZV9k
ZXN0aW5hdGlvbnMiOiBbXX0sIHsibG9naWNfdHlwZSI6ICJhbGwiLCAibmFtZSI6ICJFeGFtcGxl
OiBQYXJzZSBJT0NzIC0gQXR0YWNobWVudCIsICJ2aWV3X2l0ZW1zIjogW10sICJ0eXBlIjogMSwg
IndvcmtmbG93cyI6IFsiZXhhbXBsZV9wYXJzZV9pb2NzX2F0dGFjaG1lbnQiXSwgIm9iamVjdF90
eXBlIjogImF0dGFjaG1lbnQiLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImJj
NDk3NTBmLTdmMmMtNGUwZS1hMjQ5LWIzMjdiNmE0MWYxZCIsICJhdXRvbWF0aW9ucyI6IFtdLCAi
ZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBQYXJzZSBJT0NzIC0gQXR0YWNobWVudCIsICJjb25kaXRp
b25zIjogW10sICJpZCI6IDQ4LCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXX1dLCAibGF5b3V0
cyI6IFtdLCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjogMiwgImlkIjogMzYsICJpbmR1c3RyaWVz
IjogbnVsbCwgInBoYXNlcyI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJnZW9zIjogbnVsbCwg
ImxvY2FsZSI6IG51bGwsICJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgInZlcnNpb24i
OiAiMzEuMC40MjU0IiwgImJ1aWxkX251bWJlciI6IDQyNTQsICJtaW5vciI6IDB9LCAidGltZWZy
YW1lcyI6IG51bGwsICJ3b3Jrc3BhY2VzIjogW10sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImZ1
bmN0aW9ucyI6IFt7ImRpc3BsYXlfbmFtZSI6ICJJT0MgUGFyc2VyIiwgImRlc2NyaXB0aW9uIjog
eyJjb250ZW50IjogIkV4dHJhY3QgSU9DcyBmcm9tIEluY2lkZW50L1Rhc2sgQXR0YWNobWVudHMs
IFRleHQtQmFzZWQgQXJ0aWZhY3RzIGFuZCBBcnRpZmFjdCBmaWxlcy4iLCAiZm9ybWF0IjogInRl
eHQifSwgImNyZWF0b3IiOiB7ImRpc3BsYXlfbmFtZSI6ICJPcmNoZXN0cmF0aW9uIEVuZ2luZSIs
ICJ0eXBlIjogInVzZXIiLCAiaWQiOiAzOCwgIm5hbWUiOiAiaW50ZWdyYXRpb25zQGV4YW1wbGUu
Y29tIn0sICJ2aWV3X2l0ZW1zIjogW3sic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9f
ZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91
dWlkIiwgImNvbnRlbnQiOiAiYzI4YWI0MmQtYTU5MC00ZWYyLTkxZmUtY2U2YmIwNjk1OGQ5Iiwg
InN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19m
dW5jdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1
aWQiLCAiY29udGVudCI6ICIxZGZjNWRjNy04MDM5LTRhMjItODgxMi1mOWU4ZjRmMDI0OGYiLCAi
c3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1
bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVp
ZCIsICJjb250ZW50IjogImVmYzU4ZThiLWM4YzgtNDViYS04Yzg0LWM0Y2JkYTc3ODcwZSIsICJz
dGVwX2xhYmVsIjogbnVsbH0sIHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVu
Y3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlk
IiwgImNvbnRlbnQiOiAiOGU4N2FlM2MtY2VjOC00Y2E0LWJiOTQtMTc2NDQ1NWY5Mjc0IiwgInN0
ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5j
dGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQi
LCAiY29udGVudCI6ICI2YzkyNzdjNi1mMGEzLTQ5ZGYtYTIzNC1mYzNjZTZlYjY4OWYiLCAic3Rl
cF9sYWJlbCI6IG51bGx9XSwgImV4cG9ydF9rZXkiOiAiZnVuY3Rpb25faW9jX3BhcnNlciIsICJ1
dWlkIjogIjg2NGNjMDQzLTQ3ZjUtNDI2MS1iNjU4LTM5ZjQ3MTJiMjY5ZCIsICJsYXN0X21vZGlm
aWVkX2J5IjogeyJkaXNwbGF5X25hbWUiOiAiQWRtaW4gVXNlciIsICJ0eXBlIjogInVzZXIiLCAi
aWQiOiA3MSwgIm5hbWUiOiAiYWRtaW5AZXhhbXBsZS5jb20ifSwgInZlcnNpb24iOiAzLCAid29y
a2Zsb3dzIjogW3siZGVzY3JpcHRpb24iOiBudWxsLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3Qi
LCAiYWN0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBQYXJzZSBJT0NzIEFydGlmYWN0Iiwg
IndvcmtmbG93X2lkIjogMzUsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3BhcnNlX2lv
Y3NfYXJ0aWZhY3QiLCAidXVpZCI6IG51bGx9LCB7ImRlc2NyaXB0aW9uIjogbnVsbCwgIm9iamVj
dF90eXBlIjogImF0dGFjaG1lbnQiLCAiYWN0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBQ
YXJzZSBJT0NzIEF0dGFjaG1lbnQiLCAid29ya2Zsb3dfaWQiOiAzNCwgInByb2dyYW1tYXRpY19u
YW1lIjogImV4YW1wbGVfcGFyc2VfaW9jc19hdHRhY2htZW50IiwgInV1aWQiOiBudWxsfV0sICJs
YXN0X21vZGlmaWVkX3RpbWUiOiAxNTYyMTU5MTc1Mzk5LCAiZGVzdGluYXRpb25faGFuZGxlIjog
ImZuX2lvY19wYXJzZXIiLCAiaWQiOiA2NywgIm5hbWUiOiAiZnVuY3Rpb25faW9jX3BhcnNlciJ9
XSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJpbmNpZGVudF90
eXBlcyI6IFt7ImNyZWF0ZV9kYXRlIjogMTU2MjE1OTQ4NTExMywgImRlc2NyaXB0aW9uIjogIkN1
c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJleHBvcnRfa2V5IjogIkN1c3RvbWl6
YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJpZCI6IDAsICJuYW1lIjogIkN1c3RvbWl6YXRp
b24gUGFja2FnZXMgKGludGVybmFsKSIsICJ1cGRhdGVfZGF0ZSI6IDE1NjIxNTk0ODUxMTMsICJ1
dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJlbmFibGVkIjog
ZmFsc2UsICJzeXN0ZW0iOiBmYWxzZSwgInBhcmVudF9pZCI6IG51bGwsICJoaWRkZW4iOiBmYWxz
ZX1dLCAic2NyaXB0cyI6IFtdLCAidHlwZXMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjog
W3sidXVpZCI6ICJlYzQzNjQ1ZS0yOWRiLTQ1ZDYtYWI4My05ZGZjNzRiYWIxM2EiLCAiZXhwb3J0
X2tleSI6ICJmbl9pb2NfcGFyc2VyIiwgIm5hbWUiOiAiZm5faW9jX3BhcnNlciIsICJkZXN0aW5h
dGlvbl90eXBlIjogMCwgInByb2dyYW1tYXRpY19uYW1lIjogImZuX2lvY19wYXJzZXIiLCAiZXhw
ZWN0X2FjayI6IHRydWUsICJ1c2VycyI6IFsiaW50ZWdyYXRpb25zQGV4YW1wbGUuY29tIl19XSwg
ImluY2lkZW50X2FydGlmYWN0X3R5cGVzIjogW10sICJyb2xlcyI6IFtdLCAiZmllbGRzIjogW3si
b3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDAsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRl
eHQiOiAiU2ltdWxhdGlvbiIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGws
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMzgsICJyZWFkX29ubHkiOiB0cnVlLCAidXVpZCI6
ICJjM2YwZTNlZC0yMWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAiY2hvc2VuIjogZmFsc2Us
ICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNpZGVu
dCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBpcyBy
ZWFkLW9ubHkuIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBs
YXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5pbmciLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwgImRlcHJlY2F0ZWQi
OiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW119
LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9
LCAidGV4dCI6ICJpb2NfcGFyc2VyX2FydGlmYWN0X2lkIiwgImJsYW5rX29wdGlvbiI6IGZhbHNl
LCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyNDAsICJyZWFkX29u
bHkiOiBmYWxzZSwgInV1aWQiOiAiOGU4N2FlM2MtY2VjOC00Y2E0LWJiOTQtMTc2NDQ1NWY5Mjc0
IiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAidG9vbHRpcCI6ICJJ
RCBvZiB0aGUgYXJ0aWZhY3QiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vaW9jX3BhcnNlcl9h
cnRpZmFjdF9pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAi
MTIzIiwgIm5hbWUiOiAiaW9jX3BhcnNlcl9hcnRpZmFjdF9pZCIsICJkZXByZWNhdGVkIjogZmFs
c2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfSwgeyJv
cGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRl
eHQiOiAiaW9jX3BhcnNlcl90YXNrX2lkIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4
IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyNDEsICJyZWFkX29ubHkiOiBmYWxz
ZSwgInV1aWQiOiAiMWRmYzVkYzctODAzOS00YTIyLTg4MTItZjllOGY0ZjAyNDhmIiwgImNob3Nl
biI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAidG9vbHRpcCI6ICJJRCBvZiB0aGUg
dGFzayIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMi
OiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9pb2NfcGFyc2VyX3Rhc2tfaWQiLCAiaGlk
ZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIjEwMDAwMSIsICJuYW1lIjog
ImlvY19wYXJzZXJfdGFza19pZCIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nl
bl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0
eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiaW9jX3BhcnNlcl9p
bmNpZGVudF9pZCIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFu
Z2VhYmxlIjogdHJ1ZSwgImlkIjogMjQzLCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogImMy
OGFiNDJkLWE1OTAtNGVmMi05MWZlLWNlNmJiMDY5NThkOSIsICJjaG9zZW4iOiBmYWxzZSwgImlu
cHV0X3R5cGUiOiAibnVtYmVyIiwgInRvb2x0aXAiOiAiSUQgb2YgdGhlIGluY2lkZW50IiwgImlu
dGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhw
b3J0X2tleSI6ICJfX2Z1bmN0aW9uL2lvY19wYXJzZXJfaW5jaWRlbnRfaWQiLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogImlvY19wYXJzZXJf
aW5jaWRlbnRfaWQiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2Vy
dmVyIjogZmFsc2UsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAidmFsdWVzIjogW119LCB7Im9wZXJh
dGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6
ICJpb2NfcGFyc2VyX2F0dGFjaG1lbnRfaWQiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVm
aXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDI0MiwgInJlYWRfb25seSI6IGZh
bHNlLCAidXVpZCI6ICJlZmM1OGU4Yi1jOGM4LTQ1YmEtOGM4NC1jNGNiZGE3Nzg3MGUiLCAiY2hv
c2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJ0b29sdGlwIjogIklEIG9mIHRo
ZSBhdHRhY2htZW50IiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRl
bXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2lvY19wYXJzZXJfYXR0YWNo
bWVudF9pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiMTIz
IiwgIm5hbWUiOiAiaW9jX3BhcnNlcl9hdHRhY2htZW50X2lkIiwgImRlcHJlY2F0ZWQiOiBmYWxz
ZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW119LCB7Im9w
ZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4
dCI6ICJpb2NfcGFyc2VyX2FydGlmYWN0X3ZhbHVlIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAi
cHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyMzksICJyZWFkX29ubHki
OiBmYWxzZSwgInV1aWQiOiAiNmM5Mjc3YzYtZjBhMy00OWRmLWEyMzQtZmMzY2U2ZWI2ODlmIiwg
ImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAiOiAiQXJ0aWZh
Y3QncyB2YWx1ZSIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1w
bGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9pb2NfcGFyc2VyX2FydGlmYWN0
X3ZhbHVlIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAi
bmFtZSI6ICJpb2NfcGFyc2VyX2FydGlmYWN0X3ZhbHVlIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwg
ImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW119XSwgIm92ZXJy
aWRlcyI6IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTYyMTU5NDgzNTEwfQ==
"""
    )