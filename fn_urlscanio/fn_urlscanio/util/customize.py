# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_urlscanio"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_urlscanio package"""
    reload_params = {"package": u"fn_urlscanio",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"incident_id", u"urlscanio_public", u"urlscanio_referer", u"urlscanio_url", u"urlscanio_useragent"], 
                    "datatables": [], 
                    "message_destinations": [u"urlscanio"], 
                    "functions": [u"urlscanio"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_urlscanio"], 
                    "actions": [u"Example: urlscan.io"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     incident_id
    #     urlscanio_public
    #     urlscanio_referer
    #     urlscanio_url
    #     urlscanio_useragent
    #   Message Destinations:
    #     urlscanio
    #   Functions:
    #     urlscanio
    #   Workflows:
    #     example_urlscanio
    #   Rules:
    #     Example: urlscan.io


    yield ImportDefinition(u"""
eyJncm91cHMiOiBudWxsLCAibG9jYWxlIjogbnVsbCwgIndvcmtmbG93cyI6IFt7ImRlc2NyaXB0
aW9uIjogIkEgd29ya2Zsb3cgZGVtb25zdHJhdGluZyBob3cgdG8gc2NhbiBhIFVSTCBmcm9tIGFu
IGFydGlmYWN0IHVzaW5nIHVybHNjYW4uaW8gYW5kIHdyaXRlIHRoZSBzY3JlZW5zaG90IG9mIHRo
YXQgVVJMIHRvIGFuIGF0dGFjaG1lbnQuIiwgIndvcmtmbG93X2lkIjogMzUsICJ0YWdzIjogW10s
ICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJleHBvcnRfa2V5IjogImV4YW1wbGVfdXJsc2Nh
bmlvIiwgInV1aWQiOiAiMjFiODQxYmItZjNmMy00MWI3LTkyYTEtYzQ0ZjAyN2QxNGExIiwgImFj
dGlvbnMiOiBbXSwgImNvbnRlbnQiOiB7InhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5j
b2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcv
c3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcu
b3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcu
b3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9y
Zy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVu
dC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNj
aGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3Rh
bmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHBy
b2Nlc3MgaWQ9XCJleGFtcGxlX3VybHNjYW5pb1wiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1l
PVwiRXhhbXBsZTogdXJsc2Nhbi5pb1wiPjxkb2N1bWVudGF0aW9uPkEgd29ya2Zsb3cgZGVtb25z
dHJhdGluZyBob3cgdG8gc2NhbiBhIFVSTCBmcm9tIGFuIGFydGlmYWN0IHVzaW5nIHVybHNjYW4u
aW8gYW5kIHdyaXRlIHRoZSBzY3JlZW5zaG90IG9mIHRoYXQgVVJMIHRvIGFuIGF0dGFjaG1lbnQu
PC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91
dGdvaW5nPlNlcXVlbmNlRmxvd18xN2RvNDZ0PC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZp
Y2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMGMzZXN1blwiIG5hbWU9XCJTY2FuIHdpdGggdXJsc2Nh
bi5pb1wiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJl
c2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiZDE5YzFmMDAtYjRmMS00NDgwLWI4YTMtN2JkZDE5MTQz
MDQxXCI+e1wiaW5wdXRzXCI6e1wiZWU5MjYzYzEtNDMyYS00MWE4LThiYmQtNjkxN2QzNWZiM2Fj
XCI6e1wiaW5wdXRfdHlwZVwiOlwic3RhdGljXCIsXCJzdGF0aWNfaW5wdXRcIjp7XCJib29sZWFu
X3ZhbHVlXCI6ZmFsc2UsXCJtdWx0aXNlbGVjdF92YWx1ZVwiOltdfX19LFwicG9zdF9wcm9jZXNz
aW5nX3NjcmlwdFwiOlwiIyBUaGUgcmVzdWx0IGNvbnRhaW5zLFxcbiMge1xcbiMgICBcXFwicG5n
X3VybFxcXCI6IHRoZSBVUkwgb2YgdGhlIHNjcmVlbnNob3QgaW1hZ2VcXG4jICAgXFxcInBuZ19i
YXNlNjRjb250ZW50XFxcIjogdGhlIGJhc2U2NC1lbmNvZGVkIHNjcmVlbnNob3QgKFBORylcXG4j
ICAgXFxcInJlcG9ydF91cmxcXFwiOiB0aGUgVVJMIG9mIHRoZSBKU09OIHJlcG9ydF91cmxcXG4j
ICAgXFxcInJlcG9ydFxcXCI6IHRoZSBKU09OIHJlcG9ydCwgd2hpY2ggd2lsbCBjb250YWluIGxv
dHMgb2YgZGV0YWlsIG9mIHRoZSBwYWdlIGFuYWx5c2lzIChzZWUgdXJsc2Nhbi5pbyBmb3IgZGV0
YWlscykuXFxuIyB9XFxuI1xcbiMgSW4gdGhpcyBjYXNlLCB0aGUgZmlsZSBhdHRhY2htZW50IGNv
bnRlbnQgaXMgdXNlZCBsYXRlciBpbiB0aGUgd29ya2Zsb3cuICBOb3RoaW5nIHRvIGRvIGhlcmUu
XCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcIiMgVGhpcyBpcyBhbiBhcnRpZmFjdCB3b3Jr
ZmxvdzsgXFxuIyBUaGUgVVJMIHRvIHNjYW4gaXMgdGhlIGFydGlmYWN0IHZhbHVlXFxuaW5wdXRz
LnVybHNjYW5pb191cmwgPSBhcnRpZmFjdC52YWx1ZVxcblxcbiMgQXNzaWduIHRoZSBpbmNpZGVu
dCBpZFxcbmlucHV0cy5pbmNpZGVudF9pZCA9IGluY2lkZW50LmlkXCIsXCJyZXN1bHRfbmFtZVwi
OlwidXJsc2NhbmlvXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48
aW5jb21pbmc+U2VxdWVuY2VGbG93XzE3ZG80NnQ8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5j
ZUZsb3dfMGpkcjdoNzwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwi
U2VxdWVuY2VGbG93XzE3ZG80NnRcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0
YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wYzNlc3VuXCIvPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1
ZW5jZUZsb3dfMGpkcjdoN1wiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzBjM2VzdW5cIiB0YXJn
ZXRSZWY9XCJFbmRFdmVudF8wOHQ4bTQ0XCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzA4dDht
NDRcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBqZHI3aDc8L2luY29taW5nPjwvZW5kRXZlbnQ+
PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlJ1biBm
b3IgYSBVUkwgYXJ0aWZhY3Q8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9
XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIg
dGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiLz48dGV4dEFubm90YXRpb24gaWQ9
XCJUZXh0QW5ub3RhdGlvbl8xaThoOXNoXCI+PHRleHQ+PCFbQ0RBVEFbU2NhbiB0aGUgVVJMIGFu
ZCB3cml0ZSB0aGUgc2NyZWVuc2hvdCB0byB0byBhbiBhdHRhY2htZW50XG5dXT48L3RleHQ+PC90
ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wZGthdG9yXCIgc291
cmNlUmVmPVwiU2VydmljZVRhc2tfMGMzZXN1blwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9u
XzFpOGg5c2hcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3Jh
bV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQ
TU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1
NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFi
ZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdcIiB5PVwi
MjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5u
b3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNVwiIHdpZHRoPVwi
MTAwXCIgeD1cIjE3NFwiIHk9XCI2OVwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1O
RWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9u
XzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE4M1wiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMTg5XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjE1XCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIxMDRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hh
cGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wYzNlc3VuXCIgaWQ9XCJTZXJ2aWNlVGFza18w
YzNlc3VuX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1c
IjI5N1wiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBt
bkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMTdkbzQ2dFwiIGlkPVwiU2VxdWVuY2VGbG93XzE3ZG80
NnRfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjk3XCIgeHNpOnR5cGU9XCJvbWdkYzpQ
b2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9
XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyNDcuNVwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBNTkxh
YmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1
ZW5jZUZsb3dfMGpkcjdoN1wiIGlkPVwiU2VxdWVuY2VGbG93XzBqZHI3aDdfZGlcIj48b21nZGk6
d2F5cG9pbnQgeD1cIjM5N1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiNTEyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZc
Ii8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwi
OTBcIiB4PVwiNDA5LjVcIiB5PVwiMTg0LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRp
OkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMDh0OG00
NFwiIGlkPVwiRW5kRXZlbnRfMDh0OG00NF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZc
IiB3aWR0aD1cIjM2XCIgeD1cIjUxMlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9t
Z2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiNDg1XCIgeT1cIjIyN1wi
Lz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWk4aDlzaFwiIGlkPVwiVGV4dEFubm90YXRp
b25fMWk4aDlzaF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNjBcIiB3aWR0aD1cIjEwMlwi
IHg9XCIzNDZcIiB5PVwiNTFcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2Ug
YnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8wZGthdG9yXCIgaWQ9XCJBc3NvY2lhdGlvbl8wZGth
dG9yX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzNjNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjE2NlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjM4NlwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMTExXCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48
L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ3b3JrZmxvd19pZCI6ICJleGFt
cGxlX3VybHNjYW5pbyIsICJ2ZXJzaW9uIjogNH0sICJjcmVhdG9yX2lkIjogImViMmQxZjdkLTY2
NTEtNDE1YS1iNGZmLWExNGZjZDJmODRmNSIsICJsYXN0X21vZGlmaWVkX2J5IjogImFAYS5jb20i
LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU4MjgzODE3ODQ0NSwgImNvbnRlbnRfdmVyc2lvbiI6
IDQsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3VybHNjYW5pbyIsICJuYW1lIjogIkV4
YW1wbGU6IHVybHNjYW4uaW8ifV0sICJhY3Rpb25zIjogW3sidGltZW91dF9zZWNvbmRzIjogODY0
MDAsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJ0eXBlIjogMSwgIm5hbWUiOiAiRXhhbXBs
ZTogdXJsc2Nhbi5pbyIsICJ0YWdzIjogW10sICJ2aWV3X2l0ZW1zIjogW10sICJlbmFibGVkIjog
dHJ1ZSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV91cmxzY2FuaW8iXSwgImxvZ2ljX3R5cGUiOiAi
YWxsIiwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTogdXJsc2Nhbi5pbyIsICJ1dWlkIjogImM3Zjk1
NmZjLTlkZTctNDE3OC05MTg1LWY5OWU2YmM2NWYzYyIsICJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFt7InR5cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IG51bGwsICJmaWVsZF9u
YW1lIjogImFydGlmYWN0LnR5cGUiLCAibWV0aG9kIjogImluIiwgInZhbHVlIjogWyJVUkwiLCAi
VVJMIFJlZmVyZXIiXX1dLCAiaWQiOiA1MCwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW119XSwg
ImxheW91dHMiOiBbXSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJpZCI6IDUsICJpbmR1
c3RyaWVzIjogbnVsbCwgImZ1bmN0aW9ucyI6IFt7ImRpc3BsYXlfbmFtZSI6ICJTY2FuIHdpdGgg
dXJsc2Nhbi5pbyIsICJkZXNjcmlwdGlvbiI6IHsiY29udGVudCI6ICJBbmFseXplIGEgVVJMIHdp
dGggdXJsc2Nhbi5pbyIsICJmb3JtYXQiOiAidGV4dCJ9LCAiY3JlYXRvciI6IHsidHlwZSI6ICJh
cGlrZXkiLCAiZGlzcGxheV9uYW1lIjogImludGVncmF0aW9ucyIsICJpZCI6IDQsICJuYW1lIjog
ImViMmQxZjdkLTY2NTEtNDE1YS1iNGZmLWExNGZjZDJmODRmNSJ9LCAidmlld19pdGVtcyI6IFt7
InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19o
ZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogImVhZDIx
NGMyLTEzZmUtNDNmNi1hM2M3LTY3NmE4ODMzOGRiYiIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsi
c2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hl
YWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiNjJmOTVl
ZTktYTExMi00ZDFhLWFhNjUtYTZkMGUxZWY3MzQ4IiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJz
aG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVh
ZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJlZTkyNjNj
MS00MzJhLTQxYTgtOGJiZC02OTE3ZDM1ZmIzYWMiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNo
b3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFk
ZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogIjczODE4NzVj
LTdhMzItNDM5ZC04ZjU1LTc2MjM5YTRjNzJiNyIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hv
d19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRl
ciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiYTJlYmRiNWIt
M2Q1YS00MjVjLWEwYzctZmEzNTkwNGZhNWM0IiwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJ0YWdz
IjogW10sICJleHBvcnRfa2V5IjogInVybHNjYW5pbyIsICJ1dWlkIjogImQxOWMxZjAwLWI0ZjEt
NDQ4MC1iOGEzLTdiZGQxOTE0MzA0MSIsICJsYXN0X21vZGlmaWVkX2J5IjogeyJ0eXBlIjogInVz
ZXIiLCAiZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJpZCI6IDMsICJuYW1l
IjogImFAYS5jb20ifSwgInZlcnNpb24iOiAzLCAid29ya2Zsb3dzIjogW3sicHJvZ3JhbW1hdGlj
X25hbWUiOiAiZXhhbXBsZV91cmxzY2FuaW8iLCAidGFncyI6IFtdLCAib2JqZWN0X3R5cGUiOiAi
YXJ0aWZhY3QiLCAidXVpZCI6IG51bGwsICJhY3Rpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6
IHVybHNjYW4uaW8iLCAid29ya2Zsb3dfaWQiOiAzNSwgImRlc2NyaXB0aW9uIjogbnVsbH1dLCAi
bGFzdF9tb2RpZmllZF90aW1lIjogMTU4MjgyODI0MTA4OSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6
ICJ1cmxzY2FuaW8iLCAiaWQiOiAzMiwgIm5hbWUiOiAidXJsc2NhbmlvIn1dLCAiYWN0aW9uX29y
ZGVyIjogW10sICJnZW9zIjogbnVsbCwgInRhZ3MiOiBbXSwgInRhc2tfb3JkZXIiOiBbXSwgInR5
cGVzIjogW10sICJ0aW1lZnJhbWVzIjogbnVsbCwgIndvcmtzcGFjZXMiOiBbXSwgImluYm91bmRf
bWFpbGJveGVzIjogbnVsbCwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAicGhhc2VzIjogW10sICJu
b3RpZmljYXRpb25zIjogbnVsbCwgInJlZ3VsYXRvcnMiOiBudWxsLCAiaW5jaWRlbnRfdHlwZXMi
OiBbeyJjcmVhdGVfZGF0ZSI6IDE1ODI4Mzk3MTY1MDAsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21p
emF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9u
IFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiaWQiOiAwLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBh
Y2thZ2VzIChpbnRlcm5hbCkiLCAidXBkYXRlX2RhdGUiOiAxNTgyODM5NzE2NTAwLCAidXVpZCI6
ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZW5hYmxlZCI6IGZhbHNl
LCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2V9XSwg
InNjcmlwdHMiOiBbXSwgInNlcnZlcl92ZXJzaW9uIjogeyJtYWpvciI6IDM1LCAidmVyc2lvbiI6
ICIzNS4yLjMyIiwgImJ1aWxkX251bWJlciI6IDMyLCAibWlub3IiOiAyfSwgIm1lc3NhZ2VfZGVz
dGluYXRpb25zIjogW3sicHJvZ3JhbW1hdGljX25hbWUiOiAidXJsc2NhbmlvIiwgInRhZ3MiOiBb
XSwgImV4cG9ydF9rZXkiOiAidXJsc2NhbmlvIiwgInV1aWQiOiAiOWM0ZTAxNDMtZDg0Yi00ZmQy
LWJlNDMtZTUyZWViMWUxZTA4IiwgImV4cGVjdF9hY2siOiB0cnVlLCAiZGVzdGluYXRpb25fdHlw
ZSI6IDAsICJ1c2VycyI6IFtdLCAiYXBpX2tleXMiOiBbImViMmQxZjdkLTY2NTEtNDE1YS1iNGZm
LWExNGZjZDJmODRmNSJdLCAibmFtZSI6ICJ1cmxzY2FuLmlvIn1dLCAiaW5jaWRlbnRfYXJ0aWZh
Y3RfdHlwZXMiOiBbXSwgInJvbGVzIjogW10sICJmaWVsZHMiOiBbeyJvcGVyYXRpb25zIjogW10s
ICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAidXJsc2Nhbmlv
X3JlZmVyZXIiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdl
YWJsZSI6IHRydWUsICJpZCI6IDI1MSwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJhMmVi
ZGI1Yi0zZDVhLTQyNWMtYTBjNy1mYTM1OTA0ZmE1YzQiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1
dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJDdXN0b20gcmVmZXJlciBVUkwgZm9yIHRoaXMg
c2NhbiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMi
OiBbXSwgInRhZ3MiOiBbXSwgImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImV4cG9ydF9r
ZXkiOiAiX19mdW5jdGlvbi91cmxzY2FuaW9fcmVmZXJlciIsICJoaWRlX25vdGlmaWNhdGlvbiI6
IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAidXJsc2NhbmlvX3JlZmVyZXIiLCAi
aXNfdHJhY2tlZCI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZh
bHNlLCAidmFsdWVzIjogW10sICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZX0sIHsi
b3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0
ZXh0IjogInVybHNjYW5pb19wdWJsaWMiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgi
OiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDI1MCwgInJlYWRfb25seSI6IGZhbHNl
LCAidXVpZCI6ICJlZTkyNjNjMS00MzJhLTQxYTgtOGJiZC02OTE3ZDM1ZmIzYWMiLCAiY2hvc2Vu
IjogZmFsc2UsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAidG9vbHRpcCI6ICJTaG91bGQgdGhl
IHNjYW4gYmUgcG9zdGVkIGFzIHB1YmxpYz8iLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4
dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJ0YWdzIjogW10sICJhbGxvd19kZWZhdWx0X3Zh
bHVlIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vdXJsc2NhbmlvX3B1YmxpYyIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAi
dXJsc2NhbmlvX3B1YmxpYyIsICJpc190cmFja2VkIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFs
c2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgImRlZmF1bHRfY2hvc2VuX2J5
X3NlcnZlciI6IGZhbHNlfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVy
YXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAidXJsc2NhbmlvX3VzZXJhZ2VudCIsICJibGFua19v
cHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjog
MjUzLCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjczODE4NzVjLTdhMzItNDM5ZC04ZjU1
LTc2MjM5YTRjNzJiNyIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0
b29sdGlwIjogIk92ZXJyaWRlIFVzZXItQWdlbnQgZm9yIHRoaXMgc2NhbiIsICJpbnRlcm5hbCI6
IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgInRhZ3MiOiBbXSwg
ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi91
cmxzY2FuaW9fdXNlcmFnZW50IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhv
bGRlciI6ICIiLCAibmFtZSI6ICJ1cmxzY2FuaW9fdXNlcmFnZW50IiwgImlzX3RyYWNrZWQiOiBm
YWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgInZhbHVlcyI6
IFtdLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2V9LCB7Im9wZXJhdGlvbnMiOiBb
XSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJpbmNpZGVu
dF9pZCIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxl
IjogdHJ1ZSwgImlkIjogMTk3LCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogImVhZDIxNGMy
LTEzZmUtNDNmNi1hM2M3LTY3NmE4ODMzOGRiYiIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5
cGUiOiAibnVtYmVyIiwgInRvb2x0aXAiOiAidGhlIGlkIG9mIHRoZSBpbmNpZGVudCIsICJpbnRl
cm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgInRhZ3Mi
OiBbXSwgImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5j
dGlvbi9pbmNpZGVudF9pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xk
ZXIiOiAiIiwgIm5hbWUiOiAiaW5jaWRlbnRfaWQiLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAiZGVw
cmVjYXRlZCI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlz
IiwgInZhbHVlcyI6IFtdLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2V9LCB7Im9w
ZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4
dCI6ICJ1cmxzY2FuaW9fdXJsIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVs
bCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyNTIsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1
aWQiOiAiNjJmOTVlZTktYTExMi00ZDFhLWFhNjUtYTZkMGUxZWY3MzQ4IiwgImNob3NlbiI6IGZh
bHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAiOiAiIiwgImludGVybmFsIjogZmFs
c2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAidGFncyI6IFtdLCAiYWxs
b3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3VybHNj
YW5pb191cmwiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIs
ICJuYW1lIjogInVybHNjYW5pb191cmwiLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAiZGVwcmVjYXRl
ZCI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAidmFsdWVzIjogW10sICJkZWZhdWx0X2No
b3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDAs
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiU2ltdWxhdGlvbiIsICJibGFua19vcHRp
b24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogNjEs
ICJyZWFkX29ubHkiOiB0cnVlLCAidXVpZCI6ICJjM2YwZTNlZC0yMWUxLTRkNTMtYWZmYi1mZTVj
YTMzMDhjY2EiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAidG9v
bHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNpZGVudCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFy
IGluY2lkZW50LiAgVGhpcyBmaWVsZCBpcyByZWFkLW9ubHkuIiwgImludGVybmFsIjogZmFsc2Us
ICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAidGFncyI6IFtdLCAiYWxsb3df
ZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5p
bmciLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwg
ImlzX3RyYWNrZWQiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBm
YWxzZSwgInZhbHVlcyI6IFtdLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2V9XSwg
Im92ZXJyaWRlcyI6IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTgyODM5NzE0NDcwfQ==
"""
    )