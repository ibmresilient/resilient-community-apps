# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_urlscanio"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_urlscanio package"""
    reload_params = {"package": u"fn_urlscanio",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"incident_id", u"urlscanio_public", u"urlscanio_referer", u"urlscanio_url", u"urlscanio_useragent"], 
                    "datatables": [], 
                    "message_destinations": [u"urlscanio"], 
                    "functions": [u"urlscanio"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_urlscanio"], 
                    "actions": [u"Example: urlscan.io"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     incident_id
    #     urlscanio_public
    #     urlscanio_referer
    #     urlscanio_url
    #     urlscanio_useragent
    #   Message Destinations:
    #     urlscanio
    #   Functions:
    #     urlscanio
    #   Workflows:
    #     example_urlscanio
    #   Rules:
    #     Example: urlscan.io


    yield ImportDefinition(u"""
eyJncm91cHMiOiBudWxsLCAibG9jYWxlIjogbnVsbCwgIndvcmtmbG93cyI6IFt7ImRlc2NyaXB0
aW9uIjogIiIsICJ3b3JrZmxvd19pZCI6IDc4LCAidGFncyI6IFtdLCAib2JqZWN0X3R5cGUiOiAi
YXJ0aWZhY3QiLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX3VybHNjYW5pbyIsICJ1dWlkIjogIjIx
Yjg0MWJiLWYzZjMtNDFiNy05MmExLWM0NGYwMjdkMTRhMSIsICJhY3Rpb25zIjogW10sICJjb250
ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+
PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUy
NC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAx
MDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAw
NTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUy
NC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIg
eG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9
XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVz
cGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBs
ZV91cmxzY2FuaW9cIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IHVybHNj
YW4uaW9cIj48ZG9jdW1lbnRhdGlvbi8+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFz
eG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzE3ZG80NnQ8L291dGdvaW5nPjwvc3RhcnRFdmVu
dD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wYzNlc3VuXCIgbmFtZT1cIlNjYW4gd2l0
aCB1cmxzY2FuLmlvXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVt
ZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCJkMTljMWYwMC1iNGYxLTQ0ODAtYjhhMy03
YmRkMTkxNDMwNDFcIj57XCJpbnB1dHNcIjp7XCJlZTkyNjNjMS00MzJhLTQxYTgtOGJiZC02OTE3
ZDM1ZmIzYWNcIjp7XCJpbnB1dF90eXBlXCI6XCJzdGF0aWNcIixcInN0YXRpY19pbnB1dFwiOntc
ImJvb2xlYW5fdmFsdWVcIjpmYWxzZSxcIm11bHRpc2VsZWN0X3ZhbHVlXCI6W119fX0sXCJwb3N0
X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCIjIFRoZSByZXN1bHQgY29udGFpbnMsXFxuIyB7XFxuIyAg
IFxcXCJwbmdfdXJsXFxcIjogdGhlIFVSTCBvZiB0aGUgc2NyZWVuc2hvdCBpbWFnZVxcbiMgICBc
XFwicG5nX2Jhc2U2NGNvbnRlbnRcXFwiOiB0aGUgYmFzZTY0LWVuY29kZWQgc2NyZWVuc2hvdCAo
UE5HKVxcbiMgICBcXFwicmVwb3J0X3VybFxcXCI6IHRoZSBVUkwgb2YgdGhlIEpTT04gcmVwb3J0
X3VybFxcbiMgICBcXFwicmVwb3J0XFxcIjogdGhlIEpTT04gcmVwb3J0LCB3aGljaCB3aWxsIGNv
bnRhaW4gbG90cyBvZiBkZXRhaWwgb2YgdGhlIHBhZ2UgYW5hbHlzaXMgKHNlZSB1cmxzY2FuLmlv
IGZvciBkZXRhaWxzKS5cXG4jIH1cXG4jXFxuIyBJbiB0aGlzIGNhc2UsIHRoZSBmaWxlIGF0dGFj
aG1lbnQgY29udGVudCBpcyB1c2VkIGxhdGVyIGluIHRoZSB3b3JrZmxvdy4gIE5vdGhpbmcgdG8g
ZG8gaGVyZS5cIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiIyBUaGlzIGlzIGFuIGFydGlm
YWN0IHdvcmtmbG93OyBcXG4jIFRoZSBVUkwgdG8gc2NhbiBpcyB0aGUgYXJ0aWZhY3QgdmFsdWVc
XG5pbnB1dHMudXJsc2NhbmlvX3VybCA9IGFydGlmYWN0LnZhbHVlXFxuXFxuIyBTZXQgdGhlIGlu
Y2lkZW50IGlkXFxuaW5wdXRzLmluY2lkZW50X2lkID0gaW5jaWRlbnQuaWRcIixcInJlc3VsdF9u
YW1lXCI6XCJ1cmxzY2FuaW9cIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1l
bnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMTdkbzQ2dDwvaW5jb21pbmc+PG91dGdvaW5nPlNl
cXVlbmNlRmxvd18xZGFlbDc4PC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cg
aWQ9XCJTZXF1ZW5jZUZsb3dfMTdkbzQ2dFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4
bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzBjM2VzdW5cIi8+PGVuZEV2ZW50IGlkPVwiRW5k
RXZlbnRfMDh0OG00NFwiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMWRhZWw3ODwvaW5jb21pbmc+
PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzFkYWVsNzhcIiBzb3Vy
Y2VSZWY9XCJTZXJ2aWNlVGFza18wYzNlc3VuXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMDh0OG00
NFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+
UnVuIGZvciBhIFVSTCBhcnRpZmFjdDwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlv
biBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFz
eG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0ZXh0QW5ub3RhdGlv
biBpZD1cIlRleHRBbm5vdGF0aW9uXzFpOGg5c2hcIj48dGV4dD5TY2FuIHRoZSBVUkw8L3RleHQ+
PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wZGthdG9yXCIg
c291cmNlUmVmPVwiU2VydmljZVRhc2tfMGMzZXN1blwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0
aW9uXzFpOGg5c2hcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlh
Z3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1c
IkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1O
TGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdcIiB5
PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNVwiIHdpZHRo
PVwiMTAwXCIgeD1cIjE3NFwiIHk9XCI2OVwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0
aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE4M1wiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMTg5XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjE1XCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIxMDRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wYzNlc3VuXCIgaWQ9XCJTZXJ2aWNlVGFz
a18wYzNlc3VuX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIg
eD1cIjI5N1wiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2Ug
YnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMTdkbzQ2dFwiIGlkPVwiU2VxdWVuY2VGbG93XzE3
ZG80NnRfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjk3XCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyNDcuNVwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBN
TkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwi
RW5kRXZlbnRfMDh0OG00NFwiIGlkPVwiRW5kRXZlbnRfMDh0OG00NF9kaVwiPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjQ2MFwiIHk9XCIxODhcIi8+PGJwbW5k
aTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwi
NDMzXCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWk4aDlzaFwiIGlk
PVwiVGV4dEFubm90YXRpb25fMWk4aDlzaF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBc
IiB3aWR0aD1cIjEwMFwiIHg9XCIzNDhcIiB5PVwiNjlcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8wZGthdG9yXCIgaWQ9XCJB
c3NvY2lhdGlvbl8wZGthdG9yX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzNjRcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE2NlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjM5MlwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiOTlcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5k
aTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xZGFlbDc4XCIgaWQ9XCJTZXF1
ZW5jZUZsb3dfMWRhZWw3OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzk3XCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0NjBcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjQyOC41XCIgeT1cIjE4NFwiLz48
L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwv
YnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgIndvcmtmbG93X2lkIjogImV4YW1w
bGVfdXJsc2NhbmlvIiwgInZlcnNpb24iOiAzfSwgImNyZWF0b3JfaWQiOiAiYUBhLmNvbSIsICJs
YXN0X21vZGlmaWVkX2J5IjogImFAYS5jb20iLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU4MjU3
MDcyMDI1OSwgImNvbnRlbnRfdmVyc2lvbiI6IDMsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFt
cGxlX3VybHNjYW5pbyIsICJuYW1lIjogIkV4YW1wbGU6IHVybHNjYW4uaW8ifV0sICJhY3Rpb25z
IjogW3sidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIs
ICJ0eXBlIjogMSwgIm5hbWUiOiAiRXhhbXBsZTogdXJsc2Nhbi5pbyIsICJ0YWdzIjogW10sICJ2
aWV3X2l0ZW1zIjogW10sICJlbmFibGVkIjogdHJ1ZSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV91
cmxzY2FuaW8iXSwgImxvZ2ljX3R5cGUiOiAiYWxsIiwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTog
dXJsc2Nhbi5pbyIsICJ1dWlkIjogImJiYjkwNzJhLTI2M2MtNDMxNi04ZGEzLWRhODg1YzA0Zjgx
NCIsICJhdXRvbWF0aW9ucyI6IFtdLCAiY29uZGl0aW9ucyI6IFt7InR5cGUiOiBudWxsLCAiZXZh
bHVhdGlvbl9pZCI6IG51bGwsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5cGUiLCAibWV0aG9k
IjogImluIiwgInZhbHVlIjogWyJVUkwiLCAiVVJMIFJlZmVyZXIiXX1dLCAiaWQiOiA5MSwgIm1l
c3NhZ2VfZGVzdGluYXRpb25zIjogW119XSwgImxheW91dHMiOiBbXSwgImV4cG9ydF9mb3JtYXRf
dmVyc2lvbiI6IDIsICJpZCI6IDMsICJpbmR1c3RyaWVzIjogbnVsbCwgImZ1bmN0aW9ucyI6IFt7
ImRpc3BsYXlfbmFtZSI6ICJTY2FuIHdpdGggdXJsc2Nhbi5pbyIsICJkZXNjcmlwdGlvbiI6IHsi
Y29udGVudCI6ICJBbmFseXplIGEgVVJMIHdpdGggdXJsc2Nhbi5pbyIsICJmb3JtYXQiOiAidGV4
dCJ9LCAiY3JlYXRvciI6IHsidHlwZSI6ICJ1c2VyIiwgImRpc3BsYXlfbmFtZSI6ICJSZXNpbGll
bnQgU3lzYWRtaW4iLCAiaWQiOiAzLCAibmFtZSI6ICJhQGEuY29tIn0sICJ2aWV3X2l0ZW1zIjog
W3sic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5r
X2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiZWFk
MjE0YzItMTNmZS00M2Y2LWEzYzctNjc2YTg4MzM4ZGJiIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwg
eyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtf
aGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICI2MmY5
NWVlOS1hMTEyLTRkMWEtYWE2NS1hNmQwZTFlZjczNDgiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7
InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19o
ZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogImVlOTI2
M2MxLTQzMmEtNDFhOC04YmJkLTY5MTdkMzVmYjNhYyIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsi
c2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hl
YWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiNzM4MTg3
NWMtN2EzMi00MzlkLThmNTUtNzYyMzlhNGM3MmI3IiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJz
aG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVh
ZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJhMmViZGI1
Yi0zZDVhLTQyNWMtYTBjNy1mYTM1OTA0ZmE1YzQiLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgInRh
Z3MiOiBbXSwgImV4cG9ydF9rZXkiOiAidXJsc2NhbmlvIiwgInV1aWQiOiAiZDE5YzFmMDAtYjRm
MS00NDgwLWI4YTMtN2JkZDE5MTQzMDQxIiwgImxhc3RfbW9kaWZpZWRfYnkiOiB7InR5cGUiOiAi
dXNlciIsICJkaXNwbGF5X25hbWUiOiAiUmVzaWxpZW50IFN5c2FkbWluIiwgImlkIjogMywgIm5h
bWUiOiAiYUBhLmNvbSJ9LCAidmVyc2lvbiI6IDUsICJ3b3JrZmxvd3MiOiBbeyJwcm9ncmFtbWF0
aWNfbmFtZSI6ICJleGFtcGxlX3VybHNjYW5pbyIsICJ0YWdzIjogW10sICJvYmplY3RfdHlwZSI6
ICJhcnRpZmFjdCIsICJ1dWlkIjogbnVsbCwgImFjdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBs
ZTogdXJsc2Nhbi5pbyIsICJ3b3JrZmxvd19pZCI6IDc4LCAiZGVzY3JpcHRpb24iOiBudWxsfV0s
ICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTgyNTcwNjc4OTc1LCAiZGVzdGluYXRpb25faGFuZGxl
IjogInVybHNjYW5pbyIsICJpZCI6IDQyLCAibmFtZSI6ICJ1cmxzY2FuaW8ifV0sICJhY3Rpb25f
b3JkZXIiOiBbXSwgImdlb3MiOiBudWxsLCAidGFncyI6IFtdLCAidGFza19vcmRlciI6IFtdLCAi
dHlwZXMiOiBbXSwgInRpbWVmcmFtZXMiOiBudWxsLCAid29ya3NwYWNlcyI6IFtdLCAiaW5ib3Vu
ZF9tYWlsYm94ZXMiOiBudWxsLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJwaGFzZXMiOiBbXSwg
Im5vdGlmaWNhdGlvbnMiOiBudWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJpbmNpZGVudF90eXBl
cyI6IFt7ImNyZWF0ZV9kYXRlIjogMTU4Mjg0MjIyNTYyNywgImRlc2NyaXB0aW9uIjogIkN1c3Rv
bWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJleHBvcnRfa2V5IjogIkN1c3RvbWl6YXRp
b24gUGFja2FnZXMgKGludGVybmFsKSIsICJpZCI6IDAsICJuYW1lIjogIkN1c3RvbWl6YXRpb24g
UGFja2FnZXMgKGludGVybmFsKSIsICJ1cGRhdGVfZGF0ZSI6IDE1ODI4NDIyMjU2MjcsICJ1dWlk
IjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJlbmFibGVkIjogZmFs
c2UsICJzeXN0ZW0iOiBmYWxzZSwgInBhcmVudF9pZCI6IG51bGwsICJoaWRkZW4iOiBmYWxzZX1d
LCAic2NyaXB0cyI6IFtdLCAic2VydmVyX3ZlcnNpb24iOiB7Im1ham9yIjogMzUsICJ2ZXJzaW9u
IjogIjM1LjIuMzIiLCAiYnVpbGRfbnVtYmVyIjogMzIsICJtaW5vciI6IDJ9LCAibWVzc2FnZV9k
ZXN0aW5hdGlvbnMiOiBbeyJwcm9ncmFtbWF0aWNfbmFtZSI6ICJ1cmxzY2FuaW8iLCAidGFncyI6
IFtdLCAiZXhwb3J0X2tleSI6ICJ1cmxzY2FuaW8iLCAidXVpZCI6ICI5YzRlMDE0My1kODRiLTRm
ZDItYmU0My1lNTJlZWIxZTFlMDgiLCAiZXhwZWN0X2FjayI6IHRydWUsICJkZXN0aW5hdGlvbl90
eXBlIjogMCwgInVzZXJzIjogW10sICJhcGlfa2V5cyI6IFsiZWIyZDFmN2QtNjY1MS00MTVhLWI0
ZmYtYTE0ZmNkMmY4NGY1Il0sICJuYW1lIjogInVybHNjYW4uaW8ifV0sICJpbmNpZGVudF9hcnRp
ZmFjdF90eXBlcyI6IFtdLCAicm9sZXMiOiBbXSwgImZpZWxkcyI6IFt7Im9wZXJhdGlvbnMiOiBb
XSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJpbmNpZGVu
dF9pZCIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxl
IjogdHJ1ZSwgImlkIjogMjQwLCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogImVhZDIxNGMy
LTEzZmUtNDNmNi1hM2M3LTY3NmE4ODMzOGRiYiIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5
cGUiOiAibnVtYmVyIiwgInRvb2x0aXAiOiAidGhlIGlkIG9mIHRoZSBpbmNpZGVudCIsICJpbnRl
cm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgInRhZ3Mi
OiBbXSwgImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5j
dGlvbi9pbmNpZGVudF9pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xk
ZXIiOiAiIiwgIm5hbWUiOiAiaW5jaWRlbnRfaWQiLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAiZGVw
cmVjYXRlZCI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlz
IiwgInZhbHVlcyI6IFtdLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2V9LCB7Im9w
ZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4
dCI6ICJ1cmxzY2FuaW9fdXNlcmFnZW50IiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4
IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAzMjYsICJyZWFkX29ubHkiOiBmYWxz
ZSwgInV1aWQiOiAiNzM4MTg3NWMtN2EzMi00MzlkLThmNTUtNzYyMzlhNGM3MmI3IiwgImNob3Nl
biI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAiOiAiT3ZlcnJpZGUgVXNl
ci1BZ2VudCBmb3IgdGhpcyBzY2FuIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBm
YWxzZSwgInRlbXBsYXRlcyI6IFtdLCAidGFncyI6IFtdLCAiYWxsb3dfZGVmYXVsdF92YWx1ZSI6
IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3VybHNjYW5pb191c2VyYWdlbnQiLCAi
aGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogInVy
bHNjYW5pb191c2VyYWdlbnQiLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZh
bHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAidmFsdWVzIjogW10sICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3Bl
cmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogInVybHNjYW5pb19wdWJsaWMiLCAiYmxhbmtfb3B0
aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDMy
OCwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJlZTkyNjNjMS00MzJhLTQxYTgtOGJiZC02
OTE3ZDM1ZmIzYWMiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAi
dG9vbHRpcCI6ICJTaG91bGQgdGhlIHNjYW4gYmUgcG9zdGVkIGFzIHB1YmxpYz8iLCAiaW50ZXJu
YWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJ0YWdzIjog
W10sICJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rp
b24vdXJsc2NhbmlvX3B1YmxpYyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vo
b2xkZXIiOiAiIiwgIm5hbWUiOiAidXJsc2NhbmlvX3B1YmxpYyIsICJpc190cmFja2VkIjogZmFs
c2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJ2YWx1ZXMiOiBb
XSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlfSwgeyJvcGVyYXRpb25zIjogW10s
ICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAidXJsc2Nhbmlv
X3JlZmVyZXIiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdl
YWJsZSI6IHRydWUsICJpZCI6IDM2MiwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJhMmVi
ZGI1Yi0zZDVhLTQyNWMtYTBjNy1mYTM1OTA0ZmE1YzQiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1
dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJDdXN0b20gcmVmZXJlciBVUkwgZm9yIHRoaXMg
c2NhbiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMi
OiBbXSwgInRhZ3MiOiBbXSwgImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImV4cG9ydF9r
ZXkiOiAiX19mdW5jdGlvbi91cmxzY2FuaW9fcmVmZXJlciIsICJoaWRlX25vdGlmaWNhdGlvbiI6
IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAidXJsc2NhbmlvX3JlZmVyZXIiLCAi
aXNfdHJhY2tlZCI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZh
bHNlLCAidmFsdWVzIjogW10sICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZX0sIHsi
b3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0
ZXh0IjogInVybHNjYW5pb191cmwiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBu
dWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDMyMSwgInJlYWRfb25seSI6IGZhbHNlLCAi
dXVpZCI6ICI2MmY5NWVlOS1hMTEyLTRkMWEtYWE2NS1hNmQwZTFlZjczNDgiLCAiY2hvc2VuIjog
ZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICIiLCAiaW50ZXJuYWwiOiBm
YWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJ0YWdzIjogW10sICJh
bGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vdXJs
c2NhbmlvX3VybCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAi
IiwgIm5hbWUiOiAidXJsc2NhbmlvX3VybCIsICJpc190cmFja2VkIjogZmFsc2UsICJkZXByZWNh
dGVkIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgImRlZmF1bHRf
Y2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjog
MCwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJTaW11bGF0aW9uIiwgImJsYW5rX29w
dGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiA2
MSwgInJlYWRfb25seSI6IHRydWUsICJ1dWlkIjogImMzZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZl
NWNhMzMwOGNjYSIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJ0
b29sdGlwIjogIldoZXRoZXIgdGhlIGluY2lkZW50IGlzIGEgc2ltdWxhdGlvbiBvciBhIHJlZ3Vs
YXIgaW5jaWRlbnQuICBUaGlzIGZpZWxkIGlzIHJlYWQtb25seS4iLCAiaW50ZXJuYWwiOiBmYWxz
ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJ0YWdzIjogW10sICJhbGxv
d19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJleHBvcnRfa2V5IjogImluY2lkZW50L2luY190cmFp
bmluZyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAibmFtZSI6ICJpbmNfdHJhaW5pbmci
LCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6
IGZhbHNlLCAidmFsdWVzIjogW10sICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZX1d
LCAib3ZlcnJpZGVzIjogW10sICJleHBvcnRfZGF0ZSI6IDE1ODI1NzA3NDY5MjV9
"""
    )