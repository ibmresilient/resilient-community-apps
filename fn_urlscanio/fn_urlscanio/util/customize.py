# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_urlscanio"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_urlscanio package"""
    reload_params = {"package": u"fn_urlscanio",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"incident_id", u"urlscanio_public", u"urlscanio_referer", u"urlscanio_url", u"urlscanio_useragent"], 
                    "datatables": [], 
                    "message_destinations": [u"urlscanio"], 
                    "functions": [u"urlscanio"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_urlscanio"], 
                    "actions": [u"Example: urlscan.io"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     incident_id
    #     urlscanio_public
    #     urlscanio_referer
    #     urlscanio_url
    #     urlscanio_useragent
    #   Message Destinations:
    #     urlscanio
    #   Functions:
    #     urlscanio
    #   Workflows:
    #     example_urlscanio
    #   Rules:
    #     Example: urlscan.io


    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFt7ImV2YWx1YXRpb25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFj
dC50eXBlIiwgIm1ldGhvZCI6ICJpbiIsICJ0eXBlIjogbnVsbCwgInZhbHVlIjogWyJVUkwiLCAi
VVJMIFJlZmVyZXIiXX1dLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6
IHVybHNjYW4uaW8iLCAiaWQiOiAxOCwgImxvZ2ljX3R5cGUiOiAiYWxsIiwgIm1lc3NhZ2VfZGVz
dGluYXRpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6IHVybHNjYW4uaW8iLCAib2JqZWN0X3R5
cGUiOiAiYXJ0aWZhY3QiLCAidGFncyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ0
eXBlIjogMSwgInV1aWQiOiAiYmJiOTA3MmEtMjYzYy00MzE2LThkYTMtZGE4ODVjMDRmODE0Iiwg
InZpZXdfaXRlbXMiOiBbXSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV91cmxzY2FuaW8iXX1dLCAi
YXV0b21hdGljX3Rhc2tzIjogW10sICJleHBvcnRfZGF0ZSI6IDE1ODMyNjQxODU3NTQsICJleHBv
cnRfZm9ybWF0X3ZlcnNpb24iOiAyLCAiZmllbGRzIjogW3siYWxsb3dfZGVmYXVsdF92YWx1ZSI6
IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJjaGFu
Z2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVy
IjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24v
aW5jaWRlbnRfaWQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogMTgwLCAiaW5w
dXRfdHlwZSI6ICJudW1iZXIiLCAiaW50ZXJuYWwiOiBmYWxzZSwgImlzX3RyYWNrZWQiOiBmYWxz
ZSwgIm5hbWUiOiAiaW5jaWRlbnRfaWQiLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRp
b25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6
IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6
IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogImluY2lkZW50X2lkIiwgInRvb2x0aXAiOiAi
dGhlIGlkIG9mIHRoZSBpbmNpZGVudCIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogImVhZDIxNGMy
LTEzZmUtNDNmNi1hM2M3LTY3NmE4ODMzOGRiYiIsICJ2YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVm
YXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjog
ZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9z
ZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5Ijog
Il9fZnVuY3Rpb24vdXJsc2NhbmlvX3VybCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
aWQiOiAxODQsICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgImlzX3Ry
YWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAidXJsc2NhbmlvX3VybCIsICJvcGVyYXRpb25fcGVybXMi
OiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxs
LCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRl
bXBsYXRlcyI6IFtdLCAidGV4dCI6ICJ1cmxzY2FuaW9fdXJsIiwgInRvb2x0aXAiOiAiIiwgInR5
cGVfaWQiOiAxMSwgInV1aWQiOiAiNjJmOTVlZTktYTExMi00ZDFhLWFhNjUtYTZkMGUxZWY3MzQ4
IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19v
cHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAi
Y2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJl
Y2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi91cmxzY2FuaW9fcHVibGlj
IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDE4MiwgImlucHV0X3R5cGUiOiAi
Ym9vbGVhbiIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6
ICJ1cmxzY2FuaW9fcHVibGljIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6
IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxz
ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0
IjogInVybHNjYW5pb19wdWJsaWMiLCAidG9vbHRpcCI6ICJTaG91bGQgdGhlIHNjYW4gYmUgcG9z
dGVkIGFzIHB1YmxpYz8iLCAidHlwZV9pZCI6IDExLCAidXVpZCI6ICJlZTkyNjNjMS00MzJhLTQx
YTgtOGJiZC02OTE3ZDM1ZmIzYWMiLCAidmFsdWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFs
dWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAi
Y2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3Nl
cnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0
aW9uL3VybHNjYW5pb19yZWZlcmVyIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6
IDE4MywgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNfdHJhY2tl
ZCI6IGZhbHNlLCAibmFtZSI6ICJ1cmxzY2FuaW9fcmVmZXJlciIsICJvcGVyYXRpb25fcGVybXMi
OiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxs
LCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRl
bXBsYXRlcyI6IFtdLCAidGV4dCI6ICJ1cmxzY2FuaW9fcmVmZXJlciIsICJ0b29sdGlwIjogIkN1
c3RvbSByZWZlcmVyIFVSTCBmb3IgdGhpcyBzY2FuIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAi
YTJlYmRiNWItM2Q1YS00MjVjLWEwYzctZmEzNTkwNGZhNWM0IiwgInZhbHVlcyI6IFtdfSwgeyJh
bGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1
bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZh
dWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9y
dF9rZXkiOiAiX19mdW5jdGlvbi91cmxzY2FuaW9fdXNlcmFnZW50IiwgImhpZGVfbm90aWZpY2F0
aW9uIjogZmFsc2UsICJpZCI6IDE4MSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6
IGZhbHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJ1cmxzY2FuaW9fdXNlcmFnZW50
IiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIi
OiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZh
bHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogInVybHNjYW5pb191c2Vy
YWdlbnQiLCAidG9vbHRpcCI6ICJPdmVycmlkZSBVc2VyLUFnZW50IGZvciB0aGlzIHNjYW4iLCAi
dHlwZV9pZCI6IDExLCAidXVpZCI6ICI3MzgxODc1Yy03YTMyLTQzOWQtOGY1NS03NjIzOWE0Yzcy
YjciLCAidmFsdWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5r
X29wdGlvbiI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUs
ICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVw
cmVjYXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5pbmciLCAi
aGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogNjEsICJpbnB1dF90eXBlIjogImJvb2xl
YW4iLCAiaW50ZXJuYWwiOiBmYWxzZSwgImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAiaW5j
X3RyYWluaW5nIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicHJl
Zml4IjogbnVsbCwgInJlYWRfb25seSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3Mi
OiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJTaW11bGF0aW9uIiwgInRvb2x0aXAiOiAi
V2hldGhlciB0aGUgaW5jaWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVu
dC4gIFRoaXMgZmllbGQgaXMgcmVhZC1vbmx5LiIsICJ0eXBlX2lkIjogMCwgInV1aWQiOiAiYzNm
MGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgInZhbHVlcyI6IFtdfV0sICJmdW5j
dGlvbnMiOiBbeyJjcmVhdG9yIjogeyJkaXNwbGF5X25hbWUiOiAiUmVzaWxpZW50IFN5c2FkbWlu
IiwgImlkIjogMywgIm5hbWUiOiAiYUBhLmNvbSIsICJ0eXBlIjogInVzZXIifSwgImRlc2NyaXB0
aW9uIjogeyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50IjogIkFuYWx5emUgYSBVUkwgd2l0aCB1
cmxzY2FuLmlvIn0sICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAidXJsc2NhbmlvIiwgImRpc3BsYXlf
bmFtZSI6ICJTY2FuIHdpdGggdXJsc2Nhbi5pbyIsICJleHBvcnRfa2V5IjogInVybHNjYW5pbyIs
ICJpZCI6IDEsICJsYXN0X21vZGlmaWVkX2J5IjogeyJkaXNwbGF5X25hbWUiOiAiaW50ZWdyYXRp
b25zIiwgImlkIjogNCwgIm5hbWUiOiAiZWIyZDFmN2QtNjY1MS00MTVhLWI0ZmYtYTE0ZmNkMmY4
NGY1IiwgInR5cGUiOiAiYXBpa2V5In0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTgzMjYzNTkz
OTc4LCAibmFtZSI6ICJ1cmxzY2FuaW8iLCAidGFncyI6IFtdLCAidXVpZCI6ICJkMTljMWYwMC1i
NGYxLTQ0ODAtYjhhMy03YmRkMTkxNDMwNDEiLCAidmVyc2lvbiI6IDUsICJ2aWV3X2l0ZW1zIjog
W3siY29udGVudCI6ICJlYWQyMTRjMi0xM2ZlLTQzZjYtYTNjNy02NzZhODgzMzhkYmIiLCAiZWxl
bWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lm
IjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwg
eyJjb250ZW50IjogIjYyZjk1ZWU5LWExMTItNGQxYS1hYTY1LWE2ZDBlMWVmNzM0OCIsICJlbGVt
ZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYi
OiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7
ImNvbnRlbnQiOiAiZWU5MjYzYzEtNDMyYS00MWE4LThiYmQtNjkxN2QzNWZiM2FjIiwgImVsZW1l
bnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19pZiI6
IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsi
Y29udGVudCI6ICI3MzgxODc1Yy03YTMyLTQzOWQtOGY1NS03NjIzOWE0YzcyYjciLCAiZWxlbWVu
dCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjog
bnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJj
b250ZW50IjogImEyZWJkYjViLTNkNWEtNDI1Yy1hMGM3LWZhMzU5MDRmYTVjNCIsICJlbGVtZW50
IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBu
dWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgIndv
cmtmbG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImRlc2NyaXB0aW9uIjogbnVsbCwgIm5hbWUiOiAi
RXhhbXBsZTogdXJsc2Nhbi5pbyIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJwcm9ncmFt
bWF0aWNfbmFtZSI6ICJleGFtcGxlX3VybHNjYW5pbyIsICJ0YWdzIjogW10sICJ1dWlkIjogbnVs
bCwgIndvcmtmbG93X2lkIjogNX1dfV0sICJnZW9zIjogbnVsbCwgImdyb3VwcyI6IG51bGwsICJp
ZCI6IDcsICJpbmJvdW5kX21haWxib3hlcyI6IG51bGwsICJpbmNpZGVudF9hcnRpZmFjdF90eXBl
cyI6IFtdLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1ODMyNjQxODY4NDUs
ICJjcmVhdGVfZGF0ZSI6IDE1ODMyNjQxODY4NDUsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFl
OC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2th
Z2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChp
bnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAi
ZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlk
ZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgImluZHVzdHJpZXMiOiBudWxsLCAibGF5b3V0cyI6IFtd
LCAibG9jYWxlIjogbnVsbCwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3siYXBpX2tleXMiOiBb
ImViMmQxZjdkLTY2NTEtNDE1YS1iNGZmLWExNGZjZDJmODRmNSJdLCAiZGVzdGluYXRpb25fdHlw
ZSI6IDAsICJleHBlY3RfYWNrIjogdHJ1ZSwgImV4cG9ydF9rZXkiOiAidXJsc2NhbmlvIiwgIm5h
bWUiOiAidXJsc2Nhbi5pbyIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJ1cmxzY2FuaW8iLCAidGFn
cyI6IFtdLCAidXNlcnMiOiBbXSwgInV1aWQiOiAiOWM0ZTAxNDMtZDg0Yi00ZmQyLWJlNDMtZTUy
ZWViMWUxZTA4In1dLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJvdmVycmlkZXMiOiBbXSwgInBo
YXNlcyI6IFtdLCAicmVndWxhdG9ycyI6IG51bGwsICJyb2xlcyI6IFtdLCAic2NyaXB0cyI6IFtd
LCAic2VydmVyX3ZlcnNpb24iOiB7ImJ1aWxkX251bWJlciI6IDMyLCAibWFqb3IiOiAzNSwgIm1p
bm9yIjogMiwgInZlcnNpb24iOiAiMzUuMi4zMiJ9LCAidGFncyI6IFtdLCAidGFza19vcmRlciI6
IFtdLCAidGltZWZyYW1lcyI6IG51bGwsICJ0eXBlcyI6IFtdLCAid29ya2Zsb3dzIjogW3siYWN0
aW9ucyI6IFtdLCAiY29udGVudCI6IHsidmVyc2lvbiI6IDQsICJ3b3JrZmxvd19pZCI6ICJleGFt
cGxlX3VybHNjYW5pbyIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwi
VVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBN
Ti8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVj
L0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVj
L0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9E
RC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNv
bS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4
bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRh
cmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlk
PVwiZXhhbXBsZV91cmxzY2FuaW9cIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1w
bGU6IHVybHNjYW4uaW9cIj48ZG9jdW1lbnRhdGlvbi8+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzE3ZG80NnQ8L291dGdvaW5nPjwv
c3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wYzNlc3VuXCIgbmFtZT1c
IlNjYW4gd2l0aCB1cmxzY2FuLmlvXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRl
bnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCJkMTljMWYwMC1iNGYxLTQ0
ODAtYjhhMy03YmRkMTkxNDMwNDFcIj57XCJpbnB1dHNcIjp7XCJlZTkyNjNjMS00MzJhLTQxYTgt
OGJiZC02OTE3ZDM1ZmIzYWNcIjp7XCJpbnB1dF90eXBlXCI6XCJzdGF0aWNcIixcInN0YXRpY19p
bnB1dFwiOntcImJvb2xlYW5fdmFsdWVcIjpmYWxzZSxcIm11bHRpc2VsZWN0X3ZhbHVlXCI6W119
fX0sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCIjIFRoZSByZXN1bHQgY29udGFpbnMsXFxu
IyB7XFxuIyAgIFxcXCJwbmdfdXJsXFxcIjogdGhlIFVSTCBvZiB0aGUgc2NyZWVuc2hvdCBpbWFn
ZVxcbiMgICBcXFwicG5nX2Jhc2U2NGNvbnRlbnRcXFwiOiB0aGUgYmFzZTY0LWVuY29kZWQgc2Ny
ZWVuc2hvdCAoUE5HKVxcbiMgICBcXFwicmVwb3J0X3VybFxcXCI6IHRoZSBVUkwgb2YgdGhlIEpT
T04gcmVwb3J0X3VybFxcbiMgICBcXFwicmVwb3J0XFxcIjogdGhlIEpTT04gcmVwb3J0LCB3aGlj
aCB3aWxsIGNvbnRhaW4gbG90cyBvZiBkZXRhaWwgb2YgdGhlIHBhZ2UgYW5hbHlzaXMgKHNlZSB1
cmxzY2FuLmlvIGZvciBkZXRhaWxzKS5cXG4jIH1cXG4jXFxuIyBJbiB0aGlzIGNhc2UsIHRoZSBm
aWxlIGlzIGFscmVhZHkgYXR0YWNoZWQgdG8gdGhlIGluY2lkZW50LiAgTm90aGluZyB0byBkbyBo
ZXJlLlwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCIjIFRoaXMgaXMgYW4gYXJ0aWZhY3Qg
d29ya2Zsb3c7IFxcbiMgVGhlIFVSTCB0byBzY2FuIGlzIHRoZSBhcnRpZmFjdCB2YWx1ZVxcbmlu
cHV0cy51cmxzY2FuaW9fdXJsID0gYXJ0aWZhY3QudmFsdWVcXG5cXG4jIFNldCB0aGUgaW5jaWRl
bnQgaWRcXG5pbnB1dHMuaW5jaWRlbnRfaWQgPSBpbmNpZGVudC5pZFwiLFwicmVzdWx0X25hbWVc
IjpcInVybHNjYW5pb1wifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+
PGluY29taW5nPlNlcXVlbmNlRmxvd18xN2RvNDZ0PC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVu
Y2VGbG93XzFkYWVsNzg8L291dGdvaW5nPjwvc2VydmljZVRhc2s+PHNlcXVlbmNlRmxvdyBpZD1c
IlNlcXVlbmNlRmxvd18xN2RvNDZ0XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIg
dGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMGMzZXN1blwiLz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVu
dF8wOHQ4bTQ0XCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18xZGFlbDc4PC9pbmNvbWluZz48L2Vu
ZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMWRhZWw3OFwiIHNvdXJjZVJl
Zj1cIlNlcnZpY2VUYXNrXzBjM2VzdW5cIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8wOHQ4bTQ0XCIv
Pjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIj48dGV4dD5SdW4g
Zm9yIGEgVVJMIGFydGlmYWN0PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlk
PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwi
IHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5vdGF0aW9uIGlk
PVwiVGV4dEFubm90YXRpb25fMWk4aDlzaFwiPjx0ZXh0PlNjYW4gdGhlIFVSTDwvdGV4dD48L3Rl
eHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzBka2F0b3JcIiBzb3Vy
Y2VSZWY9XCJTZXJ2aWNlVGFza18wYzNlc3VuXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25f
MWk4aDlzaFwiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFt
XzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBN
TlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1
YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9
XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJl
bD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIy
MjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5T
aGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5v
dGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM1XCIgd2lkdGg9XCIx
MDBcIiB4PVwiMTc0XCIgeT1cIjY5XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5F
ZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25f
MXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTgzXCIgeHNpOnR5cGU9XCJvbWdkYzpQ
b2ludFwiIHk9XCIxODlcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIyMTVcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjEwNFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFw
ZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzBjM2VzdW5cIiBpZD1cIlNlcnZpY2VUYXNrXzBj
M2VzdW5fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwi
Mjk3XCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1u
RWxlbWVudD1cIlNlcXVlbmNlRmxvd18xN2RvNDZ0XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMTdkbzQ2
dF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwi
IHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIyOTdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjEzXCIgd2lkdGg9XCIwXCIgeD1cIjI0Ny41XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFi
ZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRF
dmVudF8wOHQ4bTQ0XCIgaWQ9XCJFbmRFdmVudF8wOHQ4bTQ0X2RpXCI+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNDYwXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQ
TU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCI5MFwiIHg9XCI0MzNc
IiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5k
aTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xaThoOXNoXCIgaWQ9XCJU
ZXh0QW5ub3RhdGlvbl8xaThoOXNoX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdp
ZHRoPVwiMTAwXCIgeD1cIjM0OFwiIHk9XCI2OVwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5k
aTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzBka2F0b3JcIiBpZD1cIkFzc29j
aWF0aW9uXzBka2F0b3JfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjM2NFwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMTY2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzkyXCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI5OVwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQ
TU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFkYWVsNzhcIiBpZD1cIlNlcXVlbmNl
Rmxvd18xZGFlbDc4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzOTdcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQ2MFwiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNDI4LjVcIiB5PVwiMTg0XCIvPjwvYnBt
bmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1u
ZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4ifSwgImNvbnRlbnRfdmVyc2lvbiI6IDQsICJj
cmVhdG9yX2lkIjogImFAYS5jb20iLCAiZGVzY3JpcHRpb24iOiAiIiwgImV4cG9ydF9rZXkiOiAi
ZXhhbXBsZV91cmxzY2FuaW8iLCAibGFzdF9tb2RpZmllZF9ieSI6ICJhQGEuY29tIiwgImxhc3Rf
bW9kaWZpZWRfdGltZSI6IDE1ODMyNjQxNjY0NzYsICJuYW1lIjogIkV4YW1wbGU6IHVybHNjYW4u
aW8iLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhh
bXBsZV91cmxzY2FuaW8iLCAidGFncyI6IFtdLCAidXVpZCI6ICIyMWI4NDFiYi1mM2YzLTQxYjct
OTJhMS1jNDRmMDI3ZDE0YTEiLCAid29ya2Zsb3dfaWQiOiA1fV0sICJ3b3Jrc3BhY2VzIjogW119
"""
    )