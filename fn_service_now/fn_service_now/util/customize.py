# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_service_now"""

from __future__ import print_function
from resilient_circuits.util import *


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     incident_id
    #     sn_extend_request
    #     sn_init_work_note
    #     sn_track_changes
    #     task_id
    #   Message Destinations:
    #     fn_service_now
    #   Functions:
    #     sn_utilities_create_in_servicenow
    #   Workflows:
    #     example_sn_utilities_create_incident_in_servicenow
    #     example_sn_utilities_create_task_in_servicenow
    #   Rules:
    #     Create Incident in ServiceNow
    #     Create Task in ServiceNow


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJwcm9ncmFtbWF0aWNfbmFtZSI6ICJl
eGFtcGxlX3NuX3V0aWxpdGllc19jcmVhdGVfaW5jaWRlbnRfaW5fc2VydmljZW5vdyIsICJvYmpl
Y3RfdHlwZSI6ICJpbmNpZGVudCIsICJleHBvcnRfa2V5IjogImV4YW1wbGVfc25fdXRpbGl0aWVz
X2NyZWF0ZV9pbmNpZGVudF9pbl9zZXJ2aWNlbm93IiwgInV1aWQiOiAiZDVhNzRlNzktNWRmYS00
OTk4LTg0NGYtY2MyZmIwYzY1MWZmIiwgImxhc3RfbW9kaWZpZWRfYnkiOiAiYWRtaW5AcmVzLmNv
bSIsICJuYW1lIjogIkV4YW1wbGU6IFNOIFV0aWxpdGllczogQ3JlYXRlIEluY2lkZW50IGluIFNl
cnZpY2VOb3ciLCAiY29udGVudCI6IHsieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNv
ZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9z
cGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5v
cmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5v
cmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3Jn
L3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50
LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2No
ZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFu
Y2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJv
Y2VzcyBpZD1cImV4YW1wbGVfc25fdXRpbGl0aWVzX2NyZWF0ZV9pbmNpZGVudF9pbl9zZXJ2aWNl
bm93XCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBTTiBVdGlsaXRpZXM6
IENyZWF0ZSBJbmNpZGVudCBpbiBTZXJ2aWNlTm93XCI+PGRvY3VtZW50YXRpb24+QW4gZXhhbXBs
ZSB3b3JrZmxvdyBzaG93aW5nIGhvdyB0byBjcmVhdGUgYW4gYXNzb2NpYXRlZCBTZXJ2aWNlTm93
IHJlY29yZCBmcm9tIGEgUmVzaWxpZW50IEluY2lkZW50PC9kb2N1bWVudGF0aW9uPjxzdGFydEV2
ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xeDZk
OG4xPC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tf
MWR2ZWhucVwiIG5hbWU9XCJTTiBVdGlsaXRpZXM6IENyZWF0ZSBpbiBTZXJ2aWNlTm8uLi5cIiBy
ZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6
ZnVuY3Rpb24gdXVpZD1cIjA0MWZhOGNhLTcwYmItNDRiMS05OTZiLTg4ZjYxYThhMDY3MVwiPntc
ImlucHV0c1wiOntcImZkNWRlZjUxLWNiYjktNGNlOC1hZmY4LTUyNGY0MzhlYmEyOVwiOntcImlu
cHV0X3R5cGVcIjpcInN0YXRpY1wiLFwic3RhdGljX2lucHV0XCI6e1wiYm9vbGVhbl92YWx1ZVwi
OnRydWUsXCJtdWx0aXNlbGVjdF92YWx1ZVwiOltdfX19LFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0
XCI6XCIjIFNOIFV0aWxpdGllczogRXhhbXBsZTogQ3JlYXRlIEluY2lkZW50IGluIFNlcnZpY2VO
b3cgcHJlLXByb2Nlc3Npbmcgc2NyaXB0XFxuXFxuIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjXFxuIyMjIERlZmluZSBwcmUtcHJvY2Vzc2luZyBmdW5jdGlvbnMgIyMjXFxu
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXFxuZGVmIGRpY3RfdG9fanNv
bl9zdHIoZCk6XFxuICBcXFwiXFxcIlxcXCJGdW5jdGlvbiB0aGF0IGNvbnZlcnRzIGEgZGljdGlv
bmFyeSBpbnRvIGEgSlNPTiBzdHJpbmcuXFxuICAgICBTdXBwb3J0cyBiYXNlc3RyaW5nLCBib29s
IGFuZCBpbnQuXFxuICAgICBJZiB0aGUgdmFsdWUgaXMgTm9uZSwgaXQgc2V0cyBpdCB0byBGYWxz
ZVxcXCJcXFwiXFxcIlxcblxcbiAganNvbl9zdHIgPSAnXFxcInsgezB9IH1cXFwiJ1xcbiAganNv
bl9lbnRyeSA9ICdcXFwiezB9XFxcIjp7MX0nXFxuICBqc29uX2VudHJ5X3N0ciA9ICdcXFwiezB9
XFxcIjpcXFwiezF9XFxcIidcXG4gIGVudHJpZXMgPSBbXSBcXG4gIFxcbiAgZm9yIGVudHJ5IGlu
IGQ6XFxuICAgIGtleSA9IGVudHJ5XFxuICAgIHZhbHVlID0gZFtlbnRyeV1cXG4gICAgXFxuICAg
IGlmIHZhbHVlIGlzIE5vbmU6XFxuICAgICAgdmFsdWUgPSBGYWxzZVxcbiAgICAgIFxcbiAgICBp
ZiBpc2luc3RhbmNlKHZhbHVlLCBiYXNlc3RyaW5nKTpcXG4gICAgICBlbnRyaWVzLmFwcGVuZChq
c29uX2VudHJ5X3N0ci5mb3JtYXQoa2V5LCB2YWx1ZSkpXFxuICAgIFxcbiAgICBlbGlmIGlzaW5z
dGFuY2UodmFsdWUsIGJvb2wpOlxcbiAgICAgIHZhbHVlID0gJ3RydWUnIGlmIHZhbHVlID09IFRy
dWUgZWxzZSAnZmFsc2UnXFxuICAgICAgZW50cmllcy5hcHBlbmQoanNvbl9lbnRyeS5mb3JtYXQo
a2V5LCB2YWx1ZSkpXFxuICAgIFxcbiAgICBlbHNlOlxcbiAgICAgIGVudHJpZXMuYXBwZW5kKGpz
b25fZW50cnkuZm9ybWF0KGtleSwgdmFsdWUpKVxcbiAgXFxuICByZXR1cm4gJ3snICsgJywnLmpv
aW4oZW50cmllcykgKyAnfSdcXG5cXG4jIyMjIyMjIyMjIyMjIyMjIyMjIyNcXG4jIyMgRGVmaW5l
IElucHV0cyAjIyNcXG4jIyMjIyMjIyMjIyMjIyMjIyMjIyNcXG5cXG4jIElEIG9mIHRoaXMgaW5j
aWRlbnRcXG5pbnB1dHMuaW5jaWRlbnRfaWQgPSBpbmNpZGVudC5pZFxcblxcbiMgSW5pdGlhbCB3
b3JrIG5vdGUgdG8gYXR0YWNoIHRvIGNyZWF0ZWQgU2VydmljZU5vdyByZWNvcmRcXG5pbnB1dHMu
c25faW5pdF93b3JrX25vdGUgPSBcXFwiVGhpcyByZWNvcmQgd2FzIGNyZWF0ZWQgYnkgezB9IFt7
MX1dIHVzaW5nIG91ciBJQk0gUmVzaWxpZW50IFN5c3RlbXMgSVIgUGxhdGZvcm1cXFwiLmZvcm1h
dChwcmluY2lwYWwuZGlzcGxheV9uYW1lLCBwcmluY2lwYWwubmFtZSlcXG5cXG4jIEFueSBmdXJ0
aGVyIGluZm9ybWF0aW9uIHlvdSB3YW50IHRvIHNlbmQgdG8gU2VydmljZU5vdy4gRWFjaCBLZXkv
VmFsdWUgcGFpciBpcyBhdHRhY2hlZCB0byB0aGUgUmVxdWVzdCBvYmplY3QgYW5kIGFjY2Vzc2li
bGUgaW4gU2VydmljZU5vdy5cXG4jIFNlcnZpY2VOb3cgRXhhbXBsZTo6IHNldFZhbHVlKCdhc3Np
Z25tZW50X2dyb3VwJywgcmVxdWVzdC5ib2R5LmV4dHJhX2luZm8uYXNzaWdubWVudF9ncm91cClc
XG5pbnB1dHMuc25fZXh0ZW5kX3JlcXVlc3QgPSBkaWN0X3RvX2pzb25fc3RyKHtcXG4gIFxcXCJh
c3NpZ25tZW50X2dyb3VwXFxcIjogXFxcIklUIFNlY3VyaXR5XFxcIixcXG4gIFxcXCJzdGF0ZVxc
XCI6IFxcXCJJbiBQcm9ncmVzc1xcXCIsXFxuICBcXFwiY3JlYXRlZFxcXCI6IGluY2lkZW50LmNy
ZWF0ZV9kYXRlLFxcbiAgXFxcImN1c3RvbV9wb2xpY2VfcGhvbmVfbnVtYmVyXFxcIjogaW5jaWRl
bnQucHJvcGVydGllcy5jdXN0b21fcG9saWNlX3Bob25lX251bWJlclxcbn0pXCJ9PC9yZXNpbGll
bnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzF4
NmQ4bjE8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMWozNzVkODwvb3V0Z29pbmc+
PC9zZXJ2aWNlVGFzaz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wYjVvMWZrXCI+PGluY29taW5n
PlNlcXVlbmNlRmxvd18xajM3NWQ4PC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cg
aWQ9XCJTZXF1ZW5jZUZsb3dfMWozNzVkOFwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFkdmVo
bnFcIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8wYjVvMWZrXCIvPjxzZXF1ZW5jZUZsb3cgaWQ9XCJT
ZXF1ZW5jZUZsb3dfMXg2ZDhuMVwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRh
cmdldFJlZj1cIlNlcnZpY2VUYXNrXzFkdmVobnFcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4
dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4
dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhc
IiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3Rh
dGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRp
YWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9
XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVu
dF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBN
TkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIg
eT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6
QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4
dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0
aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6
QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lh
dGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBN
TlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMWR2ZWhucVwiIGlkPVwiU2VydmljZVRh
c2tfMWR2ZWhucV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwi
IHg9XCIzMThcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFw
ZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzBiNW8xZmtcIiBpZD1cIkVuZEV2ZW50XzBiNW8xZmtf
ZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI1MzVcIiB5
PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3
aWR0aD1cIjBcIiB4PVwiNTUzXCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1u
ZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3df
MWozNzVkOFwiIGlkPVwiU2VxdWVuY2VGbG93XzFqMzc1ZDhfZGlcIj48b21nZGk6d2F5cG9pbnQg
eD1cIjQxOFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlw
b2ludCB4PVwiNTM1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5k
aTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI0
NzYuNVwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxi
cG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMXg2ZDhuMVwiIGlkPVwi
U2VxdWVuY2VGbG93XzF4NmQ4bjFfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzE4XCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9t
Z2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyNThcIiB5PVwiMTg0XCIv
PjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+
PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAid29ya2Zsb3dfaWQiOiAiZXhh
bXBsZV9zbl91dGlsaXRpZXNfY3JlYXRlX2luY2lkZW50X2luX3NlcnZpY2Vub3ciLCAidmVyc2lv
biI6IDF9LCAid29ya2Zsb3dfaWQiOiAzOSwgImFjdGlvbnMiOiBbXSwgImxhc3RfbW9kaWZpZWRf
dGltZSI6IDE1MzYyNjE4ODY2MzUsICJjcmVhdG9yX2lkIjogImFkbWluQHJlcy5jb20iLCAiZGVz
Y3JpcHRpb24iOiAiQW4gZXhhbXBsZSB3b3JrZmxvdyBzaG93aW5nIGhvdyB0byBjcmVhdGUgYW4g
YXNzb2NpYXRlZCBTZXJ2aWNlTm93IHJlY29yZCBmcm9tIGEgUmVzaWxpZW50IEluY2lkZW50In0s
IHsicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9zbl91dGlsaXRpZXNfY3JlYXRlX3Rhc2tf
aW5fc2VydmljZW5vdyIsICJvYmplY3RfdHlwZSI6ICJ0YXNrIiwgImV4cG9ydF9rZXkiOiAiZXhh
bXBsZV9zbl91dGlsaXRpZXNfY3JlYXRlX3Rhc2tfaW5fc2VydmljZW5vdyIsICJ1dWlkIjogIjQ0
ZmQzZjI5LTIwNWItNGU0OS1hODNhLTc0NmNiNzFiODYxNyIsICJsYXN0X21vZGlmaWVkX2J5Ijog
ImFkbWluQHJlcy5jb20iLCAibmFtZSI6ICJFeGFtcGxlOiBTTiBVdGlsaXRpZXM6IENyZWF0ZSBU
YXNrIGluIFNlcnZpY2VOb3ciLCAiY29udGVudCI6IHsieG1sIjogIjw/eG1sIHZlcnNpb249XCIx
LjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cu
b21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8v
d3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8v
d3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3
dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8v
cmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIw
MDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hl
bWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rl
c3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVfc25fdXRpbGl0aWVzX2NyZWF0ZV90YXNrX2luX3Nl
cnZpY2Vub3dcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IFNOIFV0aWxp
dGllczogQ3JlYXRlIFRhc2sgaW4gU2VydmljZU5vd1wiPjxkb2N1bWVudGF0aW9uPkFuIGV4YW1w
bGUgd29ya2Zsb3cgc2hvd2luZyBob3cgdG8gY3JlYXRlIGFuIGFzc29jaWF0ZWQgU2VydmljZU5v
dyByZWNvcmQgZnJvbSBhIFJlc2lsaWVudCBUYXNrPC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50
IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wamVkcHdz
PC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMDQx
amZvaFwiIG5hbWU9XCJTTiBVdGlsaXRpZXM6IENyZWF0ZSBpbiBTZXJ2aWNlTm8uLi5cIiByZXNp
bGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVu
Y3Rpb24gdXVpZD1cIjA0MWZhOGNhLTcwYmItNDRiMS05OTZiLTg4ZjYxYThhMDY3MVwiPntcImlu
cHV0c1wiOnt9LFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCIjIFNOIFV0aWxpdGllczogRXhh
bXBsZTogQ3JlYXRlIFRhc2sgaW4gU2VydmljZU5vdyBwcmUtcHJvY2Vzc2luZyBzY3JpcHRcXG5c
XG4jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcXG4jIyMgRGVmaW5lIHBy
ZS1wcm9jZXNzaW5nIGZ1bmN0aW9ucyAjIyNcXG4jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyNcXG5kZWYgZGljdF90b19qc29uX3N0cihkKTpcXG4gIFxcXCJcXFwiXFxcIkZ1
bmN0aW9uIHRoYXQgY29udmVydHMgYSBkaWN0aW9uYXJ5IGludG8gYSBKU09OIHN0cmluZy5cXG4g
ICAgIFN1cHBvcnRzIGJhc2VzdHJpbmcsIGJvb2wgYW5kIGludC5cXG4gICAgIElmIHRoZSB2YWx1
ZSBpcyBOb25lLCBpdCBzZXRzIGl0IHRvIEZhbHNlXFxcIlxcXCJcXFwiXFxuXFxuICBqc29uX3N0
ciA9ICdcXFwieyB7MH0gfVxcXCInXFxuICBqc29uX2VudHJ5ID0gJ1xcXCJ7MH1cXFwiOnsxfSdc
XG4gIGpzb25fZW50cnlfc3RyID0gJ1xcXCJ7MH1cXFwiOlxcXCJ7MX1cXFwiJ1xcbiAgZW50cmll
cyA9IFtdIFxcbiAgXFxuICBmb3IgZW50cnkgaW4gZDpcXG4gICAga2V5ID0gZW50cnlcXG4gICAg
dmFsdWUgPSBkW2VudHJ5XVxcbiAgICBcXG4gICAgaWYgdmFsdWUgaXMgTm9uZTpcXG4gICAgICB2
YWx1ZSA9IEZhbHNlXFxuICAgICAgXFxuICAgIGlmIGlzaW5zdGFuY2UodmFsdWUsIGJhc2VzdHJp
bmcpOlxcbiAgICAgIGVudHJpZXMuYXBwZW5kKGpzb25fZW50cnlfc3RyLmZvcm1hdChrZXksIHZh
bHVlKSlcXG4gICAgXFxuICAgIGVsaWYgaXNpbnN0YW5jZSh2YWx1ZSwgYm9vbCk6XFxuICAgICAg
dmFsdWUgPSAndHJ1ZScgaWYgdmFsdWUgPT0gVHJ1ZSBlbHNlICdmYWxzZSdcXG4gICAgICBlbnRy
aWVzLmFwcGVuZChqc29uX2VudHJ5LmZvcm1hdChrZXksIHZhbHVlKSlcXG4gICAgXFxuICAgIGVs
c2U6XFxuICAgICAgZW50cmllcy5hcHBlbmQoanNvbl9lbnRyeS5mb3JtYXQoa2V5LCB2YWx1ZSkp
XFxuICBcXG4gIHJldHVybiAneycgKyAnLCcuam9pbihlbnRyaWVzKSArICd9J1xcblxcbiMjIyMj
IyMjIyMjIyMjIyMjIyMjI1xcbiMjIyBEZWZpbmUgSW5wdXRzICMjI1xcbiMjIyMjIyMjIyMjIyMj
IyMjIyMjI1xcblxcbiMgSUQgb2YgdGhpcyBJbmNpZGVudFxcbmlucHV0cy5pbmNpZGVudF9pZCA9
IGluY2lkZW50LmlkXFxuXFxuIyBJRCBvZiB0aGlzIFRhc2tcXG5pbnB1dHMudGFza19pZCA9IHRh
c2suaWRcXG5cXG4jIEluaXRpYWwgd29yayBub3RlIHRvIGF0dGFjaCB0byBjcmVhdGVkIFNlcnZp
Y2VOb3cgcmVjb3JkXFxuaW5wdXRzLnNuX2luaXRfd29ya19ub3RlID0gXFxcIlRoaXMgcmVjb3Jk
IHdhcyBjcmVhdGVkIGJ5IHswfSBbezF9XSB1c2luZyBvdXIgSUJNIFJlc2lsaWVudCBTeXN0ZW1z
IElSIFBsYXRmb3JtXFxcIi5mb3JtYXQocHJpbmNpcGFsLmRpc3BsYXlfbmFtZSwgcHJpbmNpcGFs
Lm5hbWUpXFxuXFxuIyBBbnkgZnVydGhlciBpbmZvcm1hdGlvbiB5b3Ugd2FudCB0byBzZW5kIHRv
IFNlcnZpY2VOb3cuIEVhY2ggS2V5L1ZhbHVlIHBhaXIgaXMgYXR0YWNoZWQgdG8gdGhlIFJlcXVl
c3Qgb2JqZWN0IGFuZCBhY2Nlc3NpYmxlIGluIFNlcnZpY2VOb3cuXFxuIyBTZXJ2aWNlTm93IEV4
YW1wbGU6OiBzZXRWYWx1ZSgnYXNzaWdubWVudF9ncm91cCcsIHJlcXVlc3QuYm9keS5leHRyYV9p
bmZvLmFzc2lnbm1lbnRfZ3JvdXApXFxuaW5wdXRzLnNuX2V4dGVuZF9yZXF1ZXN0ID0gZGljdF90
b19qc29uX3N0cih7XFxuICBcXFwiYXNzaWdubWVudF9ncm91cFxcXCI6IFxcXCJJVCBTZWN1cml0
eVxcXCIsXFxuICBcXFwic3RhdGVcXFwiOiBcXFwiSW4gUHJvZ3Jlc3NcXFwiLFxcbiAgXFxcImNy
ZWF0ZWRcXFwiOiBpbmNpZGVudC5jcmVhdGVfZGF0ZSxcXG4gIFxcXCJjdXN0b21fcG9saWNlX3Bo
b25lX251bWJlclxcXCI6IGluY2lkZW50LnByb3BlcnRpZXMuY3VzdG9tX3BvbGljZV9waG9uZV9u
dW1iZXJcXG59KVwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PGlu
Y29taW5nPlNlcXVlbmNlRmxvd18wamVkcHdzPC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVuY2VG
bG93XzBvMWJyb2M8L291dGdvaW5nPjwvc2VydmljZVRhc2s+PGVuZEV2ZW50IGlkPVwiRW5kRXZl
bnRfMGxta2c5clwiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMG8xYnJvYzwvaW5jb21pbmc+PC9l
bmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBvMWJyb2NcIiBzb3VyY2VS
ZWY9XCJTZXJ2aWNlVGFza18wNDFqZm9oXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMGxta2c5clwi
Lz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBqZWRwd3NcIiBzb3VyY2VSZWY9XCJT
dGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wNDFqZm9oXCIvPjx0
ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIj48dGV4dD5TdGFydCB5
b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9
XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIg
dGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiLz48L3Byb2Nlc3M+PGJwbW5kaTpC
UE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxl
bWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBi
cG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3ht
X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIg
eT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3
aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBt
bmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0
aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwvYnBt
bmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25f
MXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4
PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndheXBv
aW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2JwbW5k
aTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzA0
MWpmb2hcIiBpZD1cIlNlcnZpY2VUYXNrXzA0MWpmb2hfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMzI5XCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1O
U2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8wbG1rZzlyXCIg
aWQ9XCJFbmRFdmVudF8wbG1rZzlyX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdp
ZHRoPVwiMzZcIiB4PVwiNTg3XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjYwNVwiIHk9XCIyMjdcIi8+PC9i
cG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5F
bGVtZW50PVwiU2VxdWVuY2VGbG93XzBvMWJyb2NcIiBpZD1cIlNlcXVlbmNlRmxvd18wbzFicm9j
X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0MjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjU4N1wiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MTNcIiB3aWR0aD1cIjBcIiB4PVwiNTA4XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+
PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNl
Rmxvd18wamVkcHdzXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMGplZHB3c19kaVwiPjxvbWdkaTp3YXlw
b2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2Rp
OndheXBvaW50IHg9XCIzMjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48
YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIg
eD1cIjI2My41XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVk
Z2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+
IiwgIndvcmtmbG93X2lkIjogImV4YW1wbGVfc25fdXRpbGl0aWVzX2NyZWF0ZV90YXNrX2luX3Nl
cnZpY2Vub3ciLCAidmVyc2lvbiI6IDd9LCAid29ya2Zsb3dfaWQiOiAzOCwgImFjdGlvbnMiOiBb
XSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1MzYyNjEyMDYzMTgsICJjcmVhdG9yX2lkIjogImFk
bWluQHJlcy5jb20iLCAiZGVzY3JpcHRpb24iOiAiQW4gZXhhbXBsZSB3b3JrZmxvdyBzaG93aW5n
IGhvdyB0byBjcmVhdGUgYW4gYXNzb2NpYXRlZCBTZXJ2aWNlTm93IHJlY29yZCBmcm9tIGEgUmVz
aWxpZW50IFRhc2sifV0sICJhY3Rpb25zIjogW3sibG9naWNfdHlwZSI6ICJhbGwiLCAibmFtZSI6
ICJDcmVhdGUgSW5jaWRlbnQgaW4gU2VydmljZU5vdyIsICJ2aWV3X2l0ZW1zIjogW10sICJ0eXBl
IjogMSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV9zbl91dGlsaXRpZXNfY3JlYXRlX2luY2lkZW50
X2luX3NlcnZpY2Vub3ciXSwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgInRpbWVvdXRfc2Vj
b25kcyI6IDg2NDAwLCAidXVpZCI6ICJmZmZhOWNmNS0yNThiLTQ4N2QtYTZlYy1kN2IxMWIyMzQz
MDgiLCAiYXV0b21hdGlvbnMiOiBbXSwgImV4cG9ydF9rZXkiOiAiQ3JlYXRlIEluY2lkZW50IGlu
IFNlcnZpY2VOb3ciLCAiY29uZGl0aW9ucyI6IFtdLCAiaWQiOiA0NSwgIm1lc3NhZ2VfZGVzdGlu
YXRpb25zIjogW119LCB7ImxvZ2ljX3R5cGUiOiAiYWxsIiwgIm5hbWUiOiAiQ3JlYXRlIFRhc2sg
aW4gU2VydmljZU5vdyIsICJ2aWV3X2l0ZW1zIjogW10sICJ0eXBlIjogMSwgIndvcmtmbG93cyI6
IFsiZXhhbXBsZV9zbl91dGlsaXRpZXNfY3JlYXRlX3Rhc2tfaW5fc2VydmljZW5vdyJdLCAib2Jq
ZWN0X3R5cGUiOiAidGFzayIsICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAiNzAz
MDYyNzctMmZmZC00ZGE1LWE5M2ItYmFkNjJmYzM1NDljIiwgImF1dG9tYXRpb25zIjogW10sICJl
eHBvcnRfa2V5IjogIkNyZWF0ZSBUYXNrIGluIFNlcnZpY2VOb3ciLCAiY29uZGl0aW9ucyI6IFtd
LCAiaWQiOiA0NiwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW119XSwgImxheW91dHMiOiBbXSwg
ImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJpZCI6IDExLCAiaW5kdXN0cmllcyI6IG51bGws
ICJwaGFzZXMiOiBbXSwgImFjdGlvbl9vcmRlciI6IFtdLCAiZ2VvcyI6IG51bGwsICJzZXJ2ZXJf
dmVyc2lvbiI6IHsibWFqb3IiOiAzMCwgInZlcnNpb24iOiAiMzAuMC4zNDc2IiwgImJ1aWxkX251
bWJlciI6IDM0NzYsICJtaW5vciI6IDB9LCAidGltZWZyYW1lcyI6IG51bGwsICJ3b3Jrc3BhY2Vz
IjogW10sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImZ1bmN0aW9ucyI6IFt7ImRpc3BsYXlfbmFt
ZSI6ICJTTiBVdGlsaXRpZXM6IENyZWF0ZSBpbiBTZXJ2aWNlTm93IiwgInV1aWQiOiAiMDQxZmE4
Y2EtNzBiYi00NGIxLTk5NmItODhmNjFhOGEwNjcxIiwgImNyZWF0b3IiOiB7ImRpc3BsYXlfbmFt
ZSI6ICJBZG1pbiBVc2VyIiwgInR5cGUiOiAidXNlciIsICJpZCI6IDMsICJuYW1lIjogImFkbWlu
QHJlcy5jb20ifSwgInZpZXdfaXRlbXMiOiBbeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUi
OiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZp
ZWxkX3V1aWQiLCAiY29udGVudCI6ICIzZjM1ZjFhOS1mNWQ2LTQ0MGEtYTgyNS02NmEzNDBhZWFl
ZmUiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6
ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmll
bGRfdXVpZCIsICJjb250ZW50IjogIjk1OGYwOTUzLThiNmYtNDQ3Mi1iNzg2LWI5YWU0MzUxZGRm
ZSIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjog
Il9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVs
ZF91dWlkIiwgImNvbnRlbnQiOiAiOWZiMDcwZDctZmM1YS00Y2ExLThlMmUtZmM5NDBlNTNjODU3
IiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAi
X19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxk
X3V1aWQiLCAiY29udGVudCI6ICJmZDVkZWY1MS1jYmI5LTRjZTgtYWZmOC01MjRmNDM4ZWJhMjki
LCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJf
X2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRf
dXVpZCIsICJjb250ZW50IjogIjQ3MmU5YWRhLWY3YzYtNGFjOS1hMDBlLWY4NmQ5YWJkYmZjOSIs
ICJzdGVwX2xhYmVsIjogbnVsbH1dLCAiZXhwb3J0X2tleSI6ICJzbl91dGlsaXRpZXNfY3JlYXRl
X2luX3NlcnZpY2Vub3ciLCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9uYW1lIjogIkFk
bWluIFVzZXIiLCAidHlwZSI6ICJ1c2VyIiwgImlkIjogMywgIm5hbWUiOiAiYWRtaW5AcmVzLmNv
bSJ9LCAibmFtZSI6ICJzbl91dGlsaXRpZXNfY3JlYXRlX2luX3NlcnZpY2Vub3ciLCAidmVyc2lv
biI6IDIsICJ3b3JrZmxvd3MiOiBbeyJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3NuX3V0
aWxpdGllc19jcmVhdGVfaW5jaWRlbnRfaW5fc2VydmljZW5vdyIsICJvYmplY3RfdHlwZSI6ICJp
bmNpZGVudCIsICJ1dWlkIjogbnVsbCwgImFjdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTog
U04gVXRpbGl0aWVzOiBDcmVhdGUgSW5jaWRlbnQgaW4gU2VydmljZU5vdyIsICJ3b3JrZmxvd19p
ZCI6IDM5LCAiZGVzY3JpcHRpb24iOiBudWxsfSwgeyJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFt
cGxlX3NuX3V0aWxpdGllc19jcmVhdGVfdGFza19pbl9zZXJ2aWNlbm93IiwgIm9iamVjdF90eXBl
IjogInRhc2siLCAidXVpZCI6IG51bGwsICJhY3Rpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6
IFNOIFV0aWxpdGllczogQ3JlYXRlIFRhc2sgaW4gU2VydmljZU5vdyIsICJ3b3JrZmxvd19pZCI6
IDM4LCAiZGVzY3JpcHRpb24iOiBudWxsfV0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTM2MjU4
MjEwMDAzLCAiZGVzdGluYXRpb25faGFuZGxlIjogImZuX3NlcnZpY2Vfbm93IiwgImlkIjogMzAs
ICJkZXNjcmlwdGlvbiI6IHsiY29udGVudCI6ICJBIGZ1bmN0aW9uIHRoYXQgc2VuZHMgVGFzayBv
ciBJbmNpZGVudCBpbmZvcm1hdGlvbiB0byBhIGN1c3RvbSBlbmRwb2ludCBpbiBTZXJ2aWNlTm93
IGluIG9yZGVyIHRvIGNyZWF0ZSBhbiBhc3NvY2lhdGVkIFNlcnZpY2VOb3cgcmVjb3JkIiwgImZv
cm1hdCI6ICJ0ZXh0In19XSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAicmVndWxhdG9ycyI6IG51
bGwsICJpbmNpZGVudF90eXBlcyI6IFt7ImNyZWF0ZV9kYXRlIjogMTUzNjU3MDM0Mjc4MiwgImRl
c2NyaXB0aW9uIjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJleHBvcnRf
a2V5IjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJpZCI6IDAsICJuYW1l
IjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJ1cGRhdGVfZGF0ZSI6IDE1
MzY1NzAzNDI3ODIsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFh
MCIsICJlbmFibGVkIjogZmFsc2UsICJzeXN0ZW0iOiBmYWxzZSwgInBhcmVudF9pZCI6IG51bGws
ICJoaWRkZW4iOiBmYWxzZX1dLCAic2NyaXB0cyI6IFtdLCAidHlwZXMiOiBbXSwgIm1lc3NhZ2Vf
ZGVzdGluYXRpb25zIjogW3sidXVpZCI6ICI1OWM0MWYzZC04YTkzLTQyMDUtYTIzZC0xNzA2YzFl
NDhmNjEiLCAiZXhwb3J0X2tleSI6ICJmbl9zZXJ2aWNlX25vdyIsICJuYW1lIjogImZuX3NlcnZp
Y2Vfbm93IiwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZm5f
c2VydmljZV9ub3ciLCAiZXhwZWN0X2FjayI6IHRydWUsICJ1c2VycyI6IFsiaW50ZWdyYXRpb25z
QHJlcy5jb20iXX1dLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgInJvbGVzIjogW10s
ICJmaWVsZHMiOiBbeyJvcGVyYXRpb25zIjogW10sICJyZWFkX29ubHkiOiB0cnVlLCAidXVpZCI6
ICJjM2YwZTNlZC0yMWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAidGVtcGxhdGVzIjogW10s
ICJ0eXBlX2lkIjogMCwgImNob3NlbiI6IGZhbHNlLCAidGV4dCI6ICJTaW11bGF0aW9uIiwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9p
bmNfdHJhaW5pbmciLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNpZGVudCBpcyBhIHNpbXVs
YXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBpcyByZWFkLW9ubHkuIiwg
InJpY2hfdGV4dCI6IGZhbHNlLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJwcmVmaXgiOiBudWxs
LCAiaW50ZXJuYWwiOiBmYWxzZSwgInZhbHVlcyI6IFtdLCAiYmxhbmtfb3B0aW9uIjogZmFsc2Us
ICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiY2hhbmdlYWJsZSI6IHRydWUsICJoaWRlX25vdGlm
aWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAzOCwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIn0sIHsib3Bl
cmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0
IjogInNuX2V4dGVuZF9yZXF1ZXN0IiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4Ijog
bnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAxMjIsICJyZWFkX29ubHkiOiBmYWxzZSwg
InV1aWQiOiAiNDcyZTlhZGEtZjdjNi00YWM5LWEwMGUtZjg2ZDlhYmRiZmM5IiwgImNob3NlbiI6
IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAiOiAiVXNlIGlmIHlvdSB3YW50
IHRvIHNlbmQgZXh0cmEgaW5mb3JtYXRpb24gdG8gU2VydmljZU5vdy4gSXQgaXMgYSBTdHJpbmcg
cmVwcmVzZW50YXRpb24gb2YgYSBEaWN0aW9uYXJ5IHdpdGggdGhlIEtleSBhbmQgVmFsdWUgYmVp
bmcgYXBwZW5kZWQgdG8gdGhlIFJlcXVlc3QgT2JqZWN0IHRoYXQgaXMgc2VudCB0byBTZXJ2aWNl
Tm93IGVuZHBvaW50IiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRl
bXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3NuX2V4dGVuZF9yZXF1ZXN0
IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICJcIlwiXCJ7XCJh
c3NpZ25fdG9fZ3JvdXBcIjogXCJJVCBTZWN1cml0eVwifVwiXCJcIiIsICJuYW1lIjogInNuX2V4
dGVuZF9yZXF1ZXN0IiwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVz
IjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJt
cyI6IHt9LCAidGV4dCI6ICJpbmNpZGVudF9pZCIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInBy
ZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogOTQsICJyZWFkX29ubHkiOiBm
YWxzZSwgInV1aWQiOiAiM2YzNWYxYTktZjVkNi00NDBhLWE4MjUtNjZhMzQwYWVhZWZlIiwgImNo
b3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAidG9vbHRpcCI6ICIiLCAiaW50
ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBv
cnRfa2V5IjogIl9fZnVuY3Rpb24vaW5jaWRlbnRfaWQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBm
YWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogImluY2lkZW50X2lkIiwgImRlZmF1bHRf
Y2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInZhbHVlcyI6
IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMi
OiB7fSwgInRleHQiOiAidGFza19pZCIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6
IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogOTUsICJyZWFkX29ubHkiOiBmYWxzZSwg
InV1aWQiOiAiOTU4ZjA5NTMtOGI2Zi00NDcyLWI3ODYtYjlhZTQzNTFkZGZlIiwgImNob3NlbiI6
IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAidG9vbHRpcCI6ICIiLCAiaW50ZXJuYWwi
OiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5
IjogIl9fZnVuY3Rpb24vdGFza19pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxh
Y2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAidGFza19pZCIsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2
ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjog
MTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAic25fdHJhY2tfY2hhbmdlcyIsICJi
bGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwg
ImlkIjogMTAzLCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogImZkNWRlZjUxLWNiYjktNGNl
OC1hZmY4LTUyNGY0MzhlYmEyOSIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAiYm9v
bGVhbiIsICJ0b29sdGlwIjogIkZsYWcgd2hldGhlciB0byB0cmFjayBpbiBzbl9leHRlcm5hbF90
aWNrZXRfc3RhdHVzIGRhdGEgdGFibGUiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6
IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vc25fdHJh
Y2tfY2hhbmdlcyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAi
IiwgIm5hbWUiOiAic25fdHJhY2tfY2hhbmdlcyIsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIi
OiBmYWxzZSwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEs
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAic25faW5pdF93b3JrX25vdGUiLCAiYmxh
bmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJp
ZCI6IDEwNCwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICI5ZmIwNzBkNy1mYzVhLTRjYTEt
OGUyZS1mYzk0MGU1M2M4NTciLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQi
LCAidG9vbHRpcCI6ICJBIGN1c3RvbSBzdHJpbmcgb2YgdGV4dCB0byBiZSBhZGRlZCBhcyBpbml0
aWFsIHdvcmtfbm90ZSBpbiBTZXJ2aWNlTm93IiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3Rl
eHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3Nu
X2luaXRfd29ya19ub3RlIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRl
ciI6ICJUaGlzIEluY2lkZW50IG9yaWdpbmF0ZWQgZnJvbSBvdXIgQ3liZXIgU2VjdXJpdHkgVGVh
bSB1c2luZyB0aGUgSUJNIFJlc2lsaWVudCBwbGF0Zm9ybSIsICJuYW1lIjogInNuX2luaXRfd29y
a19ub3RlIiwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW119
XSwgIm92ZXJyaWRlcyI6IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTM2MjYxOTgyMDUwfQ==
"""
    )
