# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_ansible"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_ansible package"""
    reload_params = {"package": u"fn_ansible",
                    "incident_fields": [], 
                    "action_fields": [u"ansible_hosts", u"ansible_module", u"ansible_module_arguments", u"ansible_playbook_name", u"ansible_playbook_variables"], 
                    "function_params": [u"ansible_hosts", u"ansible_module", u"ansible_parameters", u"ansible_playbook_name"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_ansible"], 
                    "functions": [u"fn_ansible", u"fn_ansible_module"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_ansible__run_a_module", u"example_ansible__run_a_playbook_from_an_incident", u"example_run_an_ansible_playbook_on_an_artifact"], 
                    "actions": [u"Example: Ansible - Run a Module", u"Example: Ansible - Run a Playbook", u"Example: Ansible - Run a Playbook from an Artifact"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     ansible_hosts
    #     ansible_module
    #     ansible_module_arguments
    #     ansible_playbook_name
    #     ansible_playbook_variables
    #   Function inputs:
    #     ansible_hosts
    #     ansible_module
    #     ansible_parameters
    #     ansible_playbook_name
    #   Message Destinations:
    #     fn_ansible
    #   Functions:
    #     fn_ansible
    #     fn_ansible_module
    #   Workflows:
    #     example_ansible__run_a_module
    #     example_ansible__run_a_playbook_from_an_incident
    #     example_run_an_ansible_playbook_on_an_artifact
    #   Rules:
    #     Example: Ansible - Run a Module
    #     Example: Ansible - Run a Playbook
    #     Example: Ansible - Run a Playbook from an Artifact


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogImEzODkyODI2LTIyNzkt
NDlhZi05OTNjLWY3YzcwZTY5ZjNiNiIsICJkZXNjcmlwdGlvbiI6ICJNZXJnZSBhcnRpZmFjdF92
YWx1ZSB3aXRoIGFuc2libGUgcGFyYW1ldGVycyB0byBydW4gYSBQbGF5Ym9vayIsICJvYmplY3Rf
dHlwZSI6ICJhcnRpZmFjdCIsICJleHBvcnRfa2V5IjogImV4YW1wbGVfcnVuX2FuX2Fuc2libGVf
cGxheWJvb2tfb25fYW5fYXJ0aWZhY3QiLCAid29ya2Zsb3dfaWQiOiAyNCwgImxhc3RfbW9kaWZp
ZWRfYnkiOiAiYUBleGFtcGxlLmNvbSIsICJjb250ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lv
bj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0
dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0
dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRw
Oi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0
dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5v
cmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hN
TFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5v
cmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9ydW5fYW5fYW5zaWJsZV9wbGF5Ym9va19v
bl9hbl9hcnRpZmFjdFwiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTogQW5z
aWJsZSAtIFJ1biBhIFBsYXlib29rIG9uIGFuIEFydGlmYWN0XCI+PGRvY3VtZW50YXRpb24+TWVy
Z2UgYXJ0aWZhY3RfdmFsdWUgd2l0aCBhbnNpYmxlIHBhcmFtZXRlcnMgdG8gcnVuIGEgUGxheWJv
b2s8L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48
b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFha2dscmk8L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2Vy
dmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xNHYwb3g4XCIgbmFtZT1cIkFuc2libGUgUGxheWJv
b2tcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNp
bGllbnQ6ZnVuY3Rpb24gdXVpZD1cImYzNGZhYjMzLTU0ZDgtNDhmYi1hYTc0LTUzMGFmMjU5NTdh
OVwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaWYgbGVuKHJl
c3VsdHNbJ2NvbnRlbnQnXS5rZXlzKCkpID09IDA6XFxuICBub3RlID0gdVxcXCJObyByZXN1bHRz
IHJldHVybmVkIG9uIHBhcmFtZXRlcnM6IHt9XFxcIi5mb3JtYXQocmVzdWx0c1snaW5wdXRzJ10p
XFxuZWxzZTpcXG4gIGZvciBpdGVtIGluIHJlc3VsdHNbJ2NvbnRlbnQnXTpcXG4gICAgbm90ZSA9
IHVcXFwie30gLSB7fVxcXFxue31cXFwiLmZvcm1hdChpdGVtLCByZXN1bHRzWydpbnB1dHMnXSwg
c3RyKHJlc3VsdHNbJ2NvbnRlbnQnXVtpdGVtXVsnZGV0YWlsJ10pKVxcblxcbmluY2lkZW50LmFk
ZE5vdGUoaGVscGVyLmNyZWF0ZVBsYWluVGV4dChub3RlKSlcIixcInByZV9wcm9jZXNzaW5nX3Nj
cmlwdFwiOlwiaW5wdXRzLmFuc2libGVfcGxheWJvb2tfbmFtZSA9IHJ1bGUucHJvcGVydGllcy5h
bnNpYmxlX3BsYXlib29rX25hbWVcXG5hcnRpZmFjdF92YWx1ZSA9IHUnYXJ0aWZhY3RfdmFsdWU9
e30nLmZvcm1hdChhcnRpZmFjdC52YWx1ZSlcXG5pZiBydWxlLnByb3BlcnRpZXMuYW5zaWJsZV9w
bGF5Ym9va192YXJpYWJsZXM6XFxuICBpbnB1dHMuYW5zaWJsZV9wYXJhbWV0ZXJzID0gdSc7Jy5q
b2luKChydWxlLnByb3BlcnRpZXMuYW5zaWJsZV9wbGF5Ym9va192YXJpYWJsZXMsIGFydGlmYWN0
X3ZhbHVlKSlcXG5lbHNlOlxcbiAgaW5wdXRzLmFuc2libGVfcGFyYW1ldGVycyA9IGFydGlmYWN0
X3ZhbHVlXFxuXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5j
b21pbmc+U2VxdWVuY2VGbG93XzFha2dscmk8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZs
b3dfMG56cjNweTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2Vx
dWVuY2VGbG93XzFha2dscmlcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJn
ZXRSZWY9XCJTZXJ2aWNlVGFza18xNHYwb3g4XCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzFs
aDRiZW9cIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBuenIzcHk8L2luY29taW5nPjwvZW5kRXZl
bnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wbnpyM3B5XCIgc291cmNlUmVmPVwi
U2VydmljZVRhc2tfMTR2MG94OFwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzFsaDRiZW9cIi8+PHRl
eHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlv
dXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1c
IkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0
YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1c
IlRleHRBbm5vdGF0aW9uXzBjMnkyanZcIj48dGV4dD5SZXN1bHRzIGFkZGVkIHRvIGEgbm90ZTwv
dGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzF0OTU3
aTJcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xNHYwb3g4XCIgdGFyZ2V0UmVmPVwiVGV4dEFu
bm90YXRpb25fMGMyeTJqdlwiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQ
TU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwi
IGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0
RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRp
OkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1
N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBt
bmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1c
IlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIg
d2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBt
bmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNz
b2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRp
OkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzE0djBveDhcIiBpZD1cIlNlcnZp
Y2VUYXNrXzE0djBveDhfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIx
MDBcIiB4PVwiMjYxXCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1O
RWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xYWtnbHJpXCIgaWQ9XCJTZXF1ZW5jZUZs
b3dfMWFrZ2xyaV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIyNjFcIiB4c2k6dHlwZT1c
Im9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjIyOS41XCIgeT1cIjE4NC41XCIvPjwvYnBt
bmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIkVuZEV2ZW50XzFsaDRiZW9cIiBpZD1cIkVuZEV2ZW50XzFsaDRiZW9fZGlcIj48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI0MjZcIiB5PVwiMTg4XCIv
PjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBc
IiB4PVwiNDQ0XCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNo
YXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMG56cjNweVwi
IGlkPVwiU2VxdWVuY2VGbG93XzBuenIzcHlfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjM2MVwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
NDI2XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFi
ZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIzOTMuNVwiIHk9
XCIxODQuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpC
UE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8wYzJ5Mmp2XCIgaWQ9XCJUZXh0
QW5ub3RhdGlvbl8wYzJ5Mmp2X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI2MVwiIHdpZHRo
PVwiMTg2XCIgeD1cIjM1MFwiIHk9XCI2NVwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzF0OTU3aTJcIiBpZD1cIkFzc29jaWF0
aW9uXzF0OTU3aTJfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjM1NVwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMTcwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDA3XCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIxMjZcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBN
TlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgIndvcmtmbG93X2lk
IjogImV4YW1wbGVfcnVuX2FuX2Fuc2libGVfcGxheWJvb2tfb25fYW5fYXJ0aWZhY3QiLCAidmVy
c2lvbiI6IDN9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU3MjUyMjcwNjUzNSwgImNyZWF0b3Jf
aWQiOiAiYUBleGFtcGxlLmNvbSIsICJhY3Rpb25zIjogW10sICJwcm9ncmFtbWF0aWNfbmFtZSI6
ICJleGFtcGxlX3J1bl9hbl9hbnNpYmxlX3BsYXlib29rX29uX2FuX2FydGlmYWN0IiwgIm5hbWUi
OiAiRXhhbXBsZTogQW5zaWJsZSAtIFJ1biBhIFBsYXlib29rIG9uIGFuIEFydGlmYWN0In0sIHsi
dXVpZCI6ICI3OWMwODM3Yy03NTIyLTQ5NzktYmE2Yi0wN2E5NDJiNzRmZmUiLCAiZGVzY3JpcHRp
b24iOiAiUnVuIGEgcGxheWJvb2sgZnJvbSBhIEluY2lkZW50IHdpdGggc3BlY2lmaWMgaG9zdHMg
YW5kIHBhcmFtZXRlcnMiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiZXhwb3J0X2tleSI6
ICJleGFtcGxlX2Fuc2libGVfX3J1bl9hX3BsYXlib29rX2Zyb21fYW5faW5jaWRlbnQiLCAid29y
a2Zsb3dfaWQiOiAyMywgImxhc3RfbW9kaWZpZWRfYnkiOiAiYUBleGFtcGxlLmNvbSIsICJjb250
ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+
PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUy
NC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAx
MDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAw
NTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUy
NC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIg
eG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9
XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVz
cGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBs
ZV9hbnNpYmxlX19ydW5fYV9wbGF5Ym9va19mcm9tX2FuX2luY2lkZW50XCIgaXNFeGVjdXRhYmxl
PVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBBbnNpYmxlIC0gUnVuIGEgUGxheWJvb2tcIj48ZG9j
dW1lbnRhdGlvbj5SdW4gYSBwbGF5Ym9vayBmcm9tIGEgSW5jaWRlbnQgd2l0aCBzcGVjaWZpYyBo
b3N0cyBhbmQgcGFyYW1ldGVyczwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0
RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMTRkZWZnYjwvb3V0Z29pbmc+
PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzE5dTQ5dGlcIiBuYW1l
PVwiQW5zaWJsZSBQbGF5Ym9va1wiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5z
aW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiZjM0ZmFiMzMtNTRkOC00OGZi
LWFhNzQtNTMwYWYyNTk1N2E5XCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2Ny
aXB0XCI6XCJpZiBsZW4ocmVzdWx0c1snY29udGVudCddLmtleXMoKSkgPT0gMDpcXG4gIG5vdGUg
PSB1XFxcIk5vIHJlc3VsdHMgcmV0dXJuZWQgb24gcGFyYW1ldGVyczoge31cXFwiLmZvcm1hdChy
ZXN1bHRzWydpbnB1dHMnXSlcXG5lbHNlOlxcbiAgZm9yIGl0ZW0gaW4gcmVzdWx0c1snY29udGVu
dCddOlxcbiAgICBub3RlID0gdVxcXCJ7fSAtIHt9XFxcXG57fVxcXCIuZm9ybWF0KGl0ZW0sIHJl
c3VsdHNbJ2lucHV0cyddLCBzdHIocmVzdWx0c1snY29udGVudCddW2l0ZW1dWydkZXRhaWwnXSkp
XFxuXFxuaW5jaWRlbnQuYWRkTm90ZShoZWxwZXIuY3JlYXRlUGxhaW5UZXh0KG5vdGUpKVwiLFwi
cHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuYW5zaWJsZV9wbGF5Ym9va19uYW1lID0g
cnVsZS5wcm9wZXJ0aWVzLmFuc2libGVfcGxheWJvb2tfbmFtZVxcbmlucHV0cy5hbnNpYmxlX3Bh
cmFtZXRlcnMgPSBydWxlLnByb3BlcnRpZXMuYW5zaWJsZV9wbGF5Ym9va192YXJpYWJsZXNcIn08
L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5j
ZUZsb3dfMTRkZWZnYjwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xcGk5MW15PC9v
dXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMTRk
ZWZnYlwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZp
Y2VUYXNrXzE5dTQ5dGlcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMTRxcWZkcVwiPjxpbmNv
bWluZz5TZXF1ZW5jZUZsb3dfMXBpOTFteTwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VG
bG93IGlkPVwiU2VxdWVuY2VGbG93XzFwaTkxbXlcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18x
OXU0OXRpXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMTRxcWZkcVwiLz48dGV4dEFubm90YXRpb24g
aWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBo
ZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25f
MXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRl
eHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRp
b25fMXRqNmM3ZVwiPjx0ZXh0PlJldHVybiB0aGUgcmVzdWx0cyBpbiBhbiBpbmNpZGVudCBub3Rl
PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXVk
Y2ZscVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzE5dTQ5dGlcIiB0YXJnZXRSZWY9XCJUZXh0
QW5ub3RhdGlvbl8xdGo2YzdlXCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwi
QlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVk
XCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3Rh
cnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1u
ZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwi
MTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlk
PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBc
IiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJB
c3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1u
ZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMTl1NDl0aVwiIGlkPVwiU2Vy
dmljZVRhc2tfMTl1NDl0aV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1c
IjEwMFwiIHg9XCIyNjdcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQ
TU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzE0ZGVmZ2JcIiBpZD1cIlNlcXVlbmNl
Rmxvd18xNGRlZmdiX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI2N1wiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMjMyLjVcIiB5PVwiMTg0XCIvPjwvYnBt
bmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIkVuZEV2ZW50XzE0cXFmZHFcIiBpZD1cIkVuZEV2ZW50XzE0cXFmZHFfZGlcIj48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI0MjhcIiB5PVwiMTg4XCIv
PjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBc
IiB4PVwiNDQ2XCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNo
YXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMXBpOTFteVwi
IGlkPVwiU2VxdWVuY2VGbG93XzFwaTkxbXlfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjM2N1wi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
NDI4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFi
ZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIzOTcuNVwiIHk9
XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBN
TlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMXRqNmM3ZVwiIGlkPVwiVGV4dEFu
bm90YXRpb25fMXRqNmM3ZV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNTVcIiB3aWR0aD1c
IjE2OVwiIHg9XCIzNTNcIiB5PVwiNzNcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBN
TkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xdWRjZmxxXCIgaWQ9XCJBc3NvY2lhdGlv
bl8xdWRjZmxxX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzNjBcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjE2OVwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQwN1wiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMTI4XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5Q
bGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ3b3JrZmxvd19pZCI6
ICJleGFtcGxlX2Fuc2libGVfX3J1bl9hX3BsYXlib29rX2Zyb21fYW5faW5jaWRlbnQiLCAidmVy
c2lvbiI6IDZ9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU3MjUyMjY3NTAyNywgImNyZWF0b3Jf
aWQiOiAiYUBleGFtcGxlLmNvbSIsICJhY3Rpb25zIjogW10sICJwcm9ncmFtbWF0aWNfbmFtZSI6
ICJleGFtcGxlX2Fuc2libGVfX3J1bl9hX3BsYXlib29rX2Zyb21fYW5faW5jaWRlbnQiLCAibmFt
ZSI6ICJFeGFtcGxlOiBBbnNpYmxlIC0gUnVuIGEgUGxheWJvb2sifSwgeyJ1dWlkIjogIjlhMGMy
OGIwLWE3NWItNDY0Mi05MmYyLTY4NzQzMDc0Yjc3NSIsICJkZXNjcmlwdGlvbiI6ICJSdW4gYW4g
QW5zaWJsZSBtb2R1bGUgZm9yIGFkLWhvYyBvcGVyYXRpb25zIiwgIm9iamVjdF90eXBlIjogImlu
Y2lkZW50IiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9hbnNpYmxlX19ydW5fYV9tb2R1bGUiLCAi
d29ya2Zsb3dfaWQiOiAyNSwgImxhc3RfbW9kaWZpZWRfYnkiOiAiYUBleGFtcGxlLmNvbSIsICJj
b250ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThc
Ij8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEw
MDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4v
MjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIw
MTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEw
MDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1u
XCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4
c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5h
bWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhh
bXBsZV9hbnNpYmxlX19ydW5fYV9tb2R1bGVcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1c
IkV4YW1wbGU6IEFuc2libGUgLSBSdW4gYSBNb2R1bGVcIj48ZG9jdW1lbnRhdGlvbj5SdW4gYW4g
QW5zaWJsZSBtb2R1bGUgZm9yIGFkLWhvYyBvcGVyYXRpb25zPC9kb2N1bWVudGF0aW9uPjxzdGFy
dEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18x
MHhnNXhxPC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRh
c2tfMXZxcmdneFwiIG5hbWU9XCJBbnNpYmxlIE1vZHVsZVwiIHJlc2lsaWVudDp0eXBlPVwiZnVu
Y3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiNzM5
YmRmZDgtYzEzNS00Njg0LTkzYzAtNzFmZDdkZDIwZTM0XCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0
X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpZiBsZW4ocmVzdWx0c1snY29udGVudCddLmtleXMoKSkg
PT0gMDpcXG4gIG5vdGUgPSB1XFxcIk5vIHJlc3VsdHMgcmV0dXJuZWQgb24gcGFyYW1ldGVyczog
e31cXFwiLmZvcm1hdChyZXN1bHRzWydpbnB1dHMnXSlcXG5lbHNlOlxcbiAgZm9yIGl0ZW0gaW4g
cmVzdWx0c1snY29udGVudCddOlxcbiAgICBub3RlID0gdVxcXCJ7fSAtIHt9XFxcXG57fVxcXCIu
Zm9ybWF0KGl0ZW0sIHJlc3VsdHNbJ2lucHV0cyddLCBzdHIocmVzdWx0c1snY29udGVudCddW2l0
ZW1dWydkZXRhaWwnXSkpXFxuXFxuaW5jaWRlbnQuYWRkTm90ZShoZWxwZXIuY3JlYXRlUGxhaW5U
ZXh0KG5vdGUpKVwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuYW5zaWJsZV9t
b2R1bGUgPSBydWxlLnByb3BlcnRpZXMuYW5zaWJsZV9tb2R1bGVcXG5pbnB1dHMuYW5zaWJsZV9w
YXJhbWV0ZXJzID0gcnVsZS5wcm9wZXJ0aWVzLmFuc2libGVfbW9kdWxlX2FyZ3VtZW50c1xcbmlu
cHV0cy5hbnNpYmxlX2hvc3RzID0gcnVsZS5wcm9wZXJ0aWVzLmFuc2libGVfaG9zdHNcXG5cIn08
L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5j
ZUZsb3dfMTB4ZzV4cTwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wYjRldnlpPC9v
dXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMTB4
ZzV4cVwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZp
Y2VUYXNrXzF2cXJnZ3hcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMWFwYXdlclwiPjxpbmNv
bWluZz5TZXF1ZW5jZUZsb3dfMGI0ZXZ5aTwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VG
bG93IGlkPVwiU2VxdWVuY2VGbG93XzBiNGV2eWlcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18x
dnFyZ2d4XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMWFwYXdlclwiLz48dGV4dEFubm90YXRpb24g
aWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBo
ZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25f
MXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRl
eHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRp
b25fMWMzMWcyMFwiPjx0ZXh0PlJldHVybiB0aGUgcmVzdWx0cyBpbiBhbiBpbmNpZGVudCBub3Rl
PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMDM4
dHE1bFwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzF2cXJnZ3hcIiB0YXJnZXRSZWY9XCJUZXh0
QW5ub3RhdGlvbl8xYzMxZzIwXCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwi
QlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVk
XCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3Rh
cnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1u
ZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwi
MTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlk
PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBc
IiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJB
c3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1u
ZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMXZxcmdneFwiIGlkPVwiU2Vy
dmljZVRhc2tfMXZxcmdneF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1c
IjEwMFwiIHg9XCIyNTVcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQ
TU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzEweGc1eHFcIiBpZD1cIlNlcXVlbmNl
Rmxvd18xMHhnNXhxX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI1NVwiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMjI2LjVcIiB5PVwiMTg0XCIvPjwvYnBt
bmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIkVuZEV2ZW50XzFhcGF3ZXJcIiBpZD1cIkVuZEV2ZW50XzFhcGF3ZXJfZGlcIj48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI0MjJcIiB5PVwiMTg4XCIv
PjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBc
IiB4PVwiNDQwXCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNo
YXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMGI0ZXZ5aVwi
IGlkPVwiU2VxdWVuY2VGbG93XzBiNGV2eWlfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjM1NVwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
NDIyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFi
ZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIzODguNVwiIHk9
XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBN
TlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWMzMWcyMFwiIGlkPVwiVGV4dEFu
bm90YXRpb25fMWMzMWcyMF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNTZcIiB3aWR0aD1c
IjI0NFwiIHg9XCIzMjhcIiB5PVwiNzVcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBN
TkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8wMzh0cTVsXCIgaWQ9XCJBc3NvY2lhdGlv
bl8wMzh0cTVsX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzNTJcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjE3M1wiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQxMVwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMTMxXCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5Q
bGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ3b3JrZmxvd19pZCI6
ICJleGFtcGxlX2Fuc2libGVfX3J1bl9hX21vZHVsZSIsICJ2ZXJzaW9uIjogM30sICJsYXN0X21v
ZGlmaWVkX3RpbWUiOiAxNTcyNTIyNjkwNTE1LCAiY3JlYXRvcl9pZCI6ICJhQGV4YW1wbGUuY29t
IiwgImFjdGlvbnMiOiBbXSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfYW5zaWJsZV9f
cnVuX2FfbW9kdWxlIiwgIm5hbWUiOiAiRXhhbXBsZTogQW5zaWJsZSAtIFJ1biBhIE1vZHVsZSJ9
XSwgImFjdGlvbnMiOiBbeyJsb2dpY190eXBlIjogImFsbCIsICJuYW1lIjogIkV4YW1wbGU6IEFu
c2libGUgLSBSdW4gYSBNb2R1bGUiLCAidmlld19pdGVtcyI6IFt7InNob3dfaWYiOiBudWxsLCAi
ZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxz
ZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogIjliOGY4YmRiLWE3ZGMtNGFh
OC05M2FjLTk0YzFjMzdhY2IzNSIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hvd19pZiI6IG51
bGwsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAic2hvd19saW5rX2hlYWRlciI6
IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiMDk2NDI5YTktODky
NS00YzkxLTlhMGItMzdiMDJhNWMyMDg5IiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lm
IjogbnVsbCwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJzaG93X2xpbmtfaGVh
ZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICI3MjNlOTdk
Yy0zNzEwLTQ5OTEtYTc4NC0xMzFkMzgwZWJmZTAiLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgInR5
cGUiOiAxLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX2Fuc2libGVfX3J1bl9hX21vZHVsZSJdLCAi
b2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlk
IjogImQ0ZWM5MTNkLWRmYjAtNDg1Ni1iMTM2LTAzMGIyYTdjZjg3YiIsICJhdXRvbWF0aW9ucyI6
IFtdLCAiZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBBbnNpYmxlIC0gUnVuIGEgTW9kdWxlIiwgImNv
bmRpdGlvbnMiOiBbXSwgImlkIjogNDQsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdfSwgeyJs
b2dpY190eXBlIjogImFsbCIsICJuYW1lIjogIkV4YW1wbGU6IEFuc2libGUgLSBSdW4gYSBQbGF5
Ym9vayIsICJ2aWV3X2l0ZW1zIjogW3sic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogImFj
dGlvbmludm9jYXRpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJm
aWVsZF91dWlkIiwgImNvbnRlbnQiOiAiOTUzZWE1N2ItNWY3NS00MDc2LTk0ZjEtNGYzZWY1YTdh
YmQyIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUi
OiAiYWN0aW9uaW52b2NhdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50
IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICIxYTk4NGQ5Ny1jYjdiLTRiNzAtOGRjOS05OTYw
OWNhZTlkZTIiLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgInR5cGUiOiAxLCAid29ya2Zsb3dzIjog
WyJleGFtcGxlX2Fuc2libGVfX3J1bl9hX3BsYXlib29rX2Zyb21fYW5faW5jaWRlbnQiXSwgIm9i
amVjdF90eXBlIjogImluY2lkZW50IiwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6
ICIwNWY1MmIwMy03YjQ4LTQzZmMtOGU5YS0wM2JiNWRmNzI5OTEiLCAiYXV0b21hdGlvbnMiOiBb
XSwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTogQW5zaWJsZSAtIFJ1biBhIFBsYXlib29rIiwgImNv
bmRpdGlvbnMiOiBbXSwgImlkIjogNDUsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdfSwgeyJs
b2dpY190eXBlIjogImFsbCIsICJuYW1lIjogIkV4YW1wbGU6IEFuc2libGUgLSBSdW4gYSBQbGF5
Ym9vayBmcm9tIGFuIEFydGlmYWN0IiwgInZpZXdfaXRlbXMiOiBbeyJzaG93X2lmIjogbnVsbCwg
ImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFs
c2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICI5NTNlYTU3Yi01Zjc1LTQw
NzYtOTRmMS00ZjNlZjVhN2FiZDIiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3dfaWYiOiBu
dWxsLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNob3dfbGlua19oZWFkZXIi
OiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogIjFhOTg0ZDk3LWNi
N2ItNGI3MC04ZGM5LTk5NjA5Y2FlOWRlMiIsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAidHlwZSI6
IDEsICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfcnVuX2FuX2Fuc2libGVfcGxheWJvb2tfb25fYW5f
YXJ0aWZhY3QiXSwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInRpbWVvdXRfc2Vjb25kcyI6
IDg2NDAwLCAidXVpZCI6ICIzYmUyMDJiMS05M2IzLTRlZWItODUyOS0xZTljYzNlOTIxY2UiLCAi
YXV0b21hdGlvbnMiOiBbXSwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTogQW5zaWJsZSAtIFJ1biBh
IFBsYXlib29rIGZyb20gYW4gQXJ0aWZhY3QiLCAiY29uZGl0aW9ucyI6IFtdLCAiaWQiOiA0Niwg
Im1lc3NhZ2VfZGVzdGluYXRpb25zIjogW119XSwgImxheW91dHMiOiBbXSwgImV4cG9ydF9mb3Jt
YXRfdmVyc2lvbiI6IDIsICJpZCI6IDkzLCAiaW5kdXN0cmllcyI6IG51bGwsICJwaGFzZXMiOiBb
XSwgImFjdGlvbl9vcmRlciI6IFtdLCAiZ2VvcyI6IG51bGwsICJsb2NhbGUiOiBudWxsLCAic2Vy
dmVyX3ZlcnNpb24iOiB7Im1ham9yIjogMzEsICJ2ZXJzaW9uIjogIjMxLjAuNDI1NCIsICJidWls
ZF9udW1iZXIiOiA0MjU0LCAibWlub3IiOiAwfSwgInRpbWVmcmFtZXMiOiBudWxsLCAid29ya3Nw
YWNlcyI6IFtdLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJmdW5jdGlvbnMiOiBbeyJkaXNwbGF5
X25hbWUiOiAiQW5zaWJsZSBQbGF5Ym9vayIsICJkZXNjcmlwdGlvbiI6IHsiY29udGVudCI6ICJB
bnNpYmxlIGlzIHNpbXBsZSBJVCBlbmdpbmUgZm9yIGF1dG9tYXRpb24sIGl0IGlzIGRlc2lnbmVk
IGZvciBtYW5hZ2UgbWFueSBzeXN0ZW1zLCByYXRoZXIgdGhhbiBqdXN0IG9uZSBhdCBhIHRpbWUu
IiwgImZvcm1hdCI6ICJ0ZXh0In0sICJjcmVhdG9yIjogeyJkaXNwbGF5X25hbWUiOiAiYWJsZSBi
YWtlciIsICJ0eXBlIjogInVzZXIiLCAiaWQiOiAzLCAibmFtZSI6ICJhQGV4YW1wbGUuY29tIn0s
ICJ2aWV3X2l0ZW1zIjogW3sic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rp
b24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwg
ImNvbnRlbnQiOiAiZmIwNzVkOWQtODA0OC00ZTdmLWE3MGMtMmIzZjM3YTVmNDJiIiwgInN0ZXBf
bGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlv
biIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAi
Y29udGVudCI6ICI4NzZmMjdiZS1kZjY2LTQ4MjctOTM4OS1lZWEyZDExOGFiNjQiLCAic3RlcF9s
YWJlbCI6IG51bGx9XSwgImV4cG9ydF9rZXkiOiAiZm5fYW5zaWJsZSIsICJ1dWlkIjogImYzNGZh
YjMzLTU0ZDgtNDhmYi1hYTc0LTUzMGFmMjU5NTdhOSIsICJsYXN0X21vZGlmaWVkX2J5IjogeyJk
aXNwbGF5X25hbWUiOiAiYWJsZSBiYWtlciIsICJ0eXBlIjogInVzZXIiLCAiaWQiOiAzLCAibmFt
ZSI6ICJhQGV4YW1wbGUuY29tIn0sICJ2ZXJzaW9uIjogMiwgIndvcmtmbG93cyI6IFt7ImRlc2Ny
aXB0aW9uIjogbnVsbCwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgImFjdGlvbnMiOiBbXSwg
Im5hbWUiOiAiRXhhbXBsZTogQW5zaWJsZSAtIFJ1biBhIFBsYXlib29rIiwgIndvcmtmbG93X2lk
IjogMjMsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX2Fuc2libGVfX3J1bl9hX3BsYXli
b29rX2Zyb21fYW5faW5jaWRlbnQiLCAidXVpZCI6IG51bGx9LCB7ImRlc2NyaXB0aW9uIjogbnVs
bCwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImFjdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhh
bXBsZTogQW5zaWJsZSAtIFJ1biBhIFBsYXlib29rIG9uIGFuIEFydGlmYWN0IiwgIndvcmtmbG93
X2lkIjogMjQsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3J1bl9hbl9hbnNpYmxlX3Bs
YXlib29rX29uX2FuX2FydGlmYWN0IiwgInV1aWQiOiBudWxsfSwgeyJkZXNjcmlwdGlvbiI6IG51
bGwsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJhY3Rpb25zIjogW10sICJuYW1lIjogIkZp
bmQgRmlsZXMgd2l0aCBBbnNpYmxlIiwgIndvcmtmbG93X2lkIjogMjYsICJwcm9ncmFtbWF0aWNf
bmFtZSI6ICJmaWxlX2ZpbGVzX3dpdGhfYW5zaWJsZSIsICJ1dWlkIjogbnVsbH1dLCAibGFzdF9t
b2RpZmllZF90aW1lIjogMTU3MjUyMjE0NTMyMSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJmbl9h
bnNpYmxlIiwgImlkIjogMTUsICJuYW1lIjogImZuX2Fuc2libGUifSwgeyJkaXNwbGF5X25hbWUi
OiAiQW5zaWJsZSBNb2R1bGUiLCAiZGVzY3JpcHRpb24iOiB7ImNvbnRlbnQiOiAiUnVuIGFuIEFu
c2libGUgTW9kdWxlIiwgImZvcm1hdCI6ICJ0ZXh0In0sICJjcmVhdG9yIjogeyJkaXNwbGF5X25h
bWUiOiAiYWJsZSBiYWtlciIsICJ0eXBlIjogInVzZXIiLCAiaWQiOiAzLCAibmFtZSI6ICJhQGV4
YW1wbGUuY29tIn0sICJ2aWV3X2l0ZW1zIjogW3sic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBl
IjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJm
aWVsZF91dWlkIiwgImNvbnRlbnQiOiAiZmY5ZGMwMTQtZjY4Yi00MTUxLTk5YzYtMDg3OTIxMjkz
ODUwIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUi
OiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZp
ZWxkX3V1aWQiLCAiY29udGVudCI6ICI4NzZmMjdiZS1kZjY2LTQ4MjctOTM4OS1lZWEyZDExOGFi
NjQiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6
ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmll
bGRfdXVpZCIsICJjb250ZW50IjogIjA1YzNlYTNmLWI3ZWYtNDMwMC1iY2U5LTA2ZGZiOTMwOTE4
MCIsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAiZXhwb3J0X2tleSI6ICJmbl9hbnNpYmxlX21vZHVs
ZSIsICJ1dWlkIjogIjczOWJkZmQ4LWMxMzUtNDY4NC05M2MwLTcxZmQ3ZGQyMGUzNCIsICJsYXN0
X21vZGlmaWVkX2J5IjogeyJkaXNwbGF5X25hbWUiOiAiYWJsZSBiYWtlciIsICJ0eXBlIjogInVz
ZXIiLCAiaWQiOiAzLCAibmFtZSI6ICJhQGV4YW1wbGUuY29tIn0sICJ2ZXJzaW9uIjogMiwgIndv
cmtmbG93cyI6IFt7ImRlc2NyaXB0aW9uIjogbnVsbCwgIm9iamVjdF90eXBlIjogImluY2lkZW50
IiwgImFjdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTogQW5zaWJsZSAtIFJ1biBhIE1vZHVs
ZSIsICJ3b3JrZmxvd19pZCI6IDI1LCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9hbnNp
YmxlX19ydW5fYV9tb2R1bGUiLCAidXVpZCI6IG51bGx9XSwgImxhc3RfbW9kaWZpZWRfdGltZSI6
IDE1NzI1MjIxNDUzMjEsICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAiZm5fYW5zaWJsZSIsICJpZCI6
IDE2LCAibmFtZSI6ICJmbl9hbnNpYmxlX21vZHVsZSJ9XSwgIm5vdGlmaWNhdGlvbnMiOiBudWxs
LCAicmVndWxhdG9ycyI6IG51bGwsICJpbmNpZGVudF90eXBlcyI6IFt7ImNyZWF0ZV9kYXRlIjog
MTU3MjUyODE3MjcwMiwgImRlc2NyaXB0aW9uIjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGlu
dGVybmFsKSIsICJleHBvcnRfa2V5IjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFs
KSIsICJpZCI6IDAsICJuYW1lIjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIs
ICJ1cGRhdGVfZGF0ZSI6IDE1NzI1MjgxNzI3MDIsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFl
OC1hZDM5LTRhMDAwNDA0NGFhMCIsICJlbmFibGVkIjogZmFsc2UsICJzeXN0ZW0iOiBmYWxzZSwg
InBhcmVudF9pZCI6IG51bGwsICJoaWRkZW4iOiBmYWxzZX1dLCAic2NyaXB0cyI6IFtdLCAidHlw
ZXMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3sidXVpZCI6ICI3ZDIwNGNkZS1lMDI4
LTRiYWQtODVmYS1hODcxNTM2MjJlNjkiLCAiZXhwb3J0X2tleSI6ICJmbl9hbnNpYmxlIiwgIm5h
bWUiOiAiZm5fYW5zaWJsZSIsICJkZXN0aW5hdGlvbl90eXBlIjogMCwgInByb2dyYW1tYXRpY19u
YW1lIjogImZuX2Fuc2libGUiLCAiZXhwZWN0X2FjayI6IHRydWUsICJ1c2VycyI6IFsiYUBleGFt
cGxlLmNvbSJdfV0sICJpbmNpZGVudF9hcnRpZmFjdF90eXBlcyI6IFtdLCAicm9sZXMiOiBbXSwg
ImZpZWxkcyI6IFt7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAwLCAib3BlcmF0aW9uX3Bl
cm1zIjoge30sICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJw
cmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDUxLCAicmVhZF9vbmx5Ijog
dHJ1ZSwgInV1aWQiOiAiYzNmMGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgImNo
b3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJib29sZWFuIiwgInRvb2x0aXAiOiAiV2hldGhl
ciB0aGUgaW5jaWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRo
aXMgZmllbGQgaXMgcmVhZC1vbmx5LiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0Ijog
ZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQvaW5jX3RyYWlu
aW5nIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJuYW1lIjogImluY190cmFpbmluZyIs
ICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwg
InZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogNiwgIm9wZXJhdGlv
bl9wZXJtcyI6IHt9LCAidGV4dCI6ICJBbnNpYmxlIE1vZHVsZSBBcmd1bWVudHMiLCAiYmxhbmtf
b3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJjaGFuZ2VhYmxlIjogdHJ1
ZSwgImlkIjogMjI0LCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjA5NjQyOWE5LTg5MjUt
NGM5MS05YTBiLTM3YjAyYTVjMjA4OSIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAi
dGV4dCIsICJ0b29sdGlwIjogIiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFs
c2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9hbnNp
YmxlX21vZHVsZV9hcmd1bWVudHMiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNl
aG9sZGVyIjogInBhcmFtPXZhbHVlO3BhcmFtPXZhbHVlOy4uLiIsICJuYW1lIjogImFuc2libGVf
bW9kdWxlX2FyZ3VtZW50cyIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZSwgInJlcXVpcmVkIjogImFsd2F5cyIsICJ2YWx1ZXMiOiBbXX0sIHsi
b3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDYsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRl
eHQiOiAiQW5zaWJsZSBIb3N0cyIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6ICJw
cm9wZXJ0aWVzIiwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyMjMsICJyZWFkX29ubHkiOiBm
YWxzZSwgInV1aWQiOiAiNzIzZTk3ZGMtMzcxMC00OTkxLWE3ODQtMTMxZDM4MGViZmUwIiwgImNo
b3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAiOiAiIiwgImludGVy
bmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0
X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL2Fuc2libGVfaG9zdHMiLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIlVzZSBwYXR0ZXJucyBmb3IgZ3JvdXAgbmFtZSIs
ICJuYW1lIjogImFuc2libGVfaG9zdHMiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9j
aG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAidmFsdWVzIjog
W119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiA2LCAib3BlcmF0aW9uX3Blcm1zIjog
e30sICJ0ZXh0IjogIkFuc2libGUgTW9kdWxlIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJl
Zml4IjogInByb3BlcnRpZXMiLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDIyMSwgInJlYWRf
b25seSI6IGZhbHNlLCAidXVpZCI6ICI5YjhmOGJkYi1hN2RjLTRhYTgtOTNhYy05NGMxYzM3YWNi
MzUiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICIi
LCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10s
ICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRpb24vYW5zaWJsZV9tb2R1bGUiLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogImFuc2libGVf
bW9kdWxlIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6
IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25z
IjogW10sICJ0eXBlX2lkIjogNiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJBbnNp
YmxlIFBsYXlib29rIE5hbWUiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiAicHJv
cGVydGllcyIsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMjIyLCAicmVhZF9vbmx5IjogZmFs
c2UsICJ1dWlkIjogIjk1M2VhNTdiLTVmNzUtNDA3Ni05NGYxLTRmM2VmNWE3YWJkMiIsICJjaG9z
ZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIiIsICJpbnRlcm5h
bCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9r
ZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9hbnNpYmxlX3BsYXlib29rX25hbWUiLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIkVudGVyIHRhcmdldCBhbnNpYmxlIHBs
YXlib29rIG5hbWUiLCAibmFtZSI6ICJhbnNpYmxlX3BsYXlib29rX25hbWUiLCAiZGVwcmVjYXRl
ZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJyZXF1aXJlZCI6
ICJhbHdheXMiLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiA2
LCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogIkFuc2libGUgUGxheWJvb2sgVmFyaWFi
bGVzIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAiY2hh
bmdlYWJsZSI6IHRydWUsICJpZCI6IDIyMCwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICIx
YTk4NGQ5Ny1jYjdiLTRiNzAtOGRjOS05OTYwOWNhZTlkZTIiLCAiY2hvc2VuIjogZmFsc2UsICJp
bnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJQbGVhc2UgZW50ZXIgdmFyaWFibGUgbmFt
ZSBhbmQgY29ycmVzcG9uZGluZyB2YWx1ZS4gRXhhbXBsZTogY3VzdG9tZXI9dGVzdCxkaXNhYmxl
PXRydWUiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVz
IjogW10sICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRpb24vYW5zaWJsZV9wbGF5Ym9va192
YXJpYWJsZXMiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogInBh
cmFtPXZhbHVlO3BhcmFtPXZhbHVlOy4uLiIsICJuYW1lIjogImFuc2libGVfcGxheWJvb2tfdmFy
aWFibGVzIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6
IGZhbHNlLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJhbnNpYmxlX3BsYXlib29rX25hbWUiLCAi
Ymxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUs
ICJpZCI6IDIyNSwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJmYjA3NWQ5ZC04MDQ4LTRl
N2YtYTcwYy0yYjNmMzdhNWY0MmIiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRl
eHQiLCAidG9vbHRpcCI6ICIiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vYW5zaWJsZV9wbGF5
Ym9va19uYW1lIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIi
LCAibmFtZSI6ICJhbnNpYmxlX3BsYXlib29rX25hbWUiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAi
ZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAi
dmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlv
bl9wZXJtcyI6IHt9LCAidGV4dCI6ICJhbnNpYmxlX3BhcmFtZXRlcnMiLCAiYmxhbmtfb3B0aW9u
IjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDIyNiwg
InJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICI4NzZmMjdiZS1kZjY2LTQ4MjctOTM4OS1lZWEy
ZDExOGFiNjQiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRp
cCI6ICIiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVz
IjogW10sICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vYW5zaWJsZV9wYXJhbWV0ZXJzIiwgImhp
ZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJhbnNp
YmxlX3BhcmFtZXRlcnMiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9p
ZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImFuc2libGVfaG9zdHMiLCAi
Ymxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUs
ICJpZCI6IDIyOCwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICIwNWMzZWEzZi1iN2VmLTQz
MDAtYmNlOS0wNmRmYjkzMDkxODAiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRl
eHQiLCAidG9vbHRpcCI6ICJob3N0IG5hbWUgcGF0dGVybiBvciBncm91cCBmb3IgbW9kdWxlIGV4
ZWN1dGlvbiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0
ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9hbnNpYmxlX2hvc3RzIiwgImhpZGVf
bm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJhbnNpYmxl
X2hvc3RzIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6
IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25z
IjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiYW5z
aWJsZV9tb2R1bGUiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hh
bmdlYWJsZSI6IHRydWUsICJpZCI6IDIyNywgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJm
ZjlkYzAxNC1mNjhiLTQxNTEtOTljNi0wODc5MjEyOTM4NTAiLCAiY2hvc2VuIjogZmFsc2UsICJp
bnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJjb21tYW5kIGFuZCBwYXJtZXRlcnMgdG8g
cnVuIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6
IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2Fuc2libGVfbW9kdWxlIiwgImhpZGVfbm90
aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJhbnNpYmxlX21v
ZHVsZSIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZSwgInJlcXVpcmVkIjogImFsd2F5cyIsICJ2YWx1ZXMiOiBbXX1dLCAib3ZlcnJpZGVzIjog
W10sICJleHBvcnRfZGF0ZSI6IDE1NzI1MjgxNzAyMjh9
"""
    )