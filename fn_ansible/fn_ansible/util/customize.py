# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_ansible/"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_ansible/ package"""
    reload_params = {"package": u"fn_ansible/",
                    "incident_fields": [], 
                    "action_fields": [u"ansible_hosts", u"ansible_module", u"ansible_module_arguments", u"ansible_playbook_name", u"ansible_playbook_variables"], 
                    "function_params": [u"ansible_hosts", u"ansible_module", u"ansible_parameters", u"ansible_playbook_name"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_ansible"], 
                    "functions": [u"fn_ansible", u"fn_ansible_module"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_ansible__run_a_module", u"example_ansible__run_a_playbook_from_an_incident", u"example_run_an_ansible_playbook_on_an_artifact"], 
                    "actions": [u"Example: Ansible - Run a Module", u"Example: Ansible - Run a Playbook", u"Example: Ansible - Run a Playbook from an Artifact"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     ansible_hosts
    #     ansible_module
    #     ansible_module_arguments
    #     ansible_playbook_name
    #     ansible_playbook_variables
    #   Function inputs:
    #     ansible_hosts
    #     ansible_module
    #     ansible_parameters
    #     ansible_playbook_name
    #   Message Destinations:
    #     fn_ansible
    #   Functions:
    #     fn_ansible
    #     fn_ansible_module
    #   Workflows:
    #     example_ansible__run_a_module
    #     example_ansible__run_a_playbook_from_an_incident
    #     example_run_an_ansible_playbook_on_an_artifact
    #   Rules:
    #     Example: Ansible - Run a Module
    #     Example: Ansible - Run a Playbook
    #     Example: Ansible - Run a Playbook from an Artifact


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogIjc5YzA4MzdjLTc1MjIt
NDk3OS1iYTZiLTA3YTk0MmI3NGZmZSIsICJkZXNjcmlwdGlvbiI6ICJSdW4gYSBwbGF5Ym9vayBm
cm9tIGEgSW5jaWRlbnQgd2l0aCBzcGVjaWZpYyBob3N0cyBhbmQgcGFyYW1ldGVycyIsICJvYmpl
Y3RfdHlwZSI6ICJpbmNpZGVudCIsICJleHBvcnRfa2V5IjogImV4YW1wbGVfYW5zaWJsZV9fcnVu
X2FfcGxheWJvb2tfZnJvbV9hbl9pbmNpZGVudCIsICJ3b3JrZmxvd19pZCI6IDIzLCAibGFzdF9t
b2RpZmllZF9ieSI6ICJhQGV4YW1wbGUuY29tIiwgImNvbnRlbnQiOiB7InhtbCI6ICI8P3htbCB2
ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJo
dHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRp
PVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2Rj
PVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1c
Imh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50
PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3
LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIw
MDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11
bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX2Fuc2libGVfX3J1bl9hX3BsYXli
b29rX2Zyb21fYW5faW5jaWRlbnRcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1w
bGU6IEFuc2libGUgLSBSdW4gYSBQbGF5Ym9va1wiPjxkb2N1bWVudGF0aW9uPlJ1biBhIHBsYXli
b29rIGZyb20gYSBJbmNpZGVudCB3aXRoIHNwZWNpZmljIGhvc3RzIGFuZCBwYXJhbWV0ZXJzPC9k
b2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdv
aW5nPlNlcXVlbmNlRmxvd18xNGRlZmdiPC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZpY2VU
YXNrIGlkPVwiU2VydmljZVRhc2tfMTl1NDl0aVwiIG5hbWU9XCJBbnNpYmxlIFBsYXlib29rXCIg
cmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50
OmZ1bmN0aW9uIHV1aWQ9XCJmMzRmYWIzMy01NGQ4LTQ4ZmItYWE3NC01MzBhZjI1OTU3YTlcIj57
XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImltcG9ydCByZVxcblxc
bnBwID0gJyhcXFxcXFxcXHgxYlxcXFxbXFxcXGQqKDtcXFxcZCopKm0pJ1xcbm5vdGUgPSB1Jydc
XG5cXG5pZiBsZW4ocmVzdWx0c1snY29udGVudCddLmtleXMoKSkgPT0gMDpcXG4gIG5vdGUgPSB1
XFxcIk5vIHJlc3VsdHMgcmV0dXJuZWQgb24gcGFyYW1ldGVyczoge31cXFwiLmZvcm1hdChyZXN1
bHRzWydpbnB1dHMnXSlcXG5lbHNlOlxcblxcbiAgZm9yIGl0ZW0gaW4gcmVzdWx0c1snY29udGVu
dCddOlxcbiAgICBub3RlID0gbm90ZSArIHVcXFwie30gLSB7fVxcXFxuXFxcIi5mb3JtYXQoaXRl
bSwgcmVzdWx0c1snaW5wdXRzJ10pXFxuICAgIG5vdGUgPSBub3RlICsgcmUuc3ViKHBwLCAnJywg
cmVzdWx0c1snY29udGVudCddW2l0ZW1dWydkZXRhaWwnXSkucmVwbGFjZSgnXFxcXFxcXFxyXFxc
XFxcXFxuJywgJ1xcXFxcXFxcbicpICsgJ1xcXFxuJ1xcblxcbmluY2lkZW50LmFkZE5vdGUoaGVs
cGVyLmNyZWF0ZVBsYWluVGV4dChub3RlKSlcIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwi
aW5wdXRzLmFuc2libGVfcGxheWJvb2tfbmFtZSA9IHJ1bGUucHJvcGVydGllcy5hbnNpYmxlX3Bs
YXlib29rX25hbWVcXG5pbnB1dHMuYW5zaWJsZV9wYXJhbWV0ZXJzID0gcnVsZS5wcm9wZXJ0aWVz
LmFuc2libGVfcGxheWJvb2tfdmFyaWFibGVzXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRl
bnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzE0ZGVmZ2I8L2luY29taW5nPjxv
dXRnb2luZz5TZXF1ZW5jZUZsb3dfMXBpOTFteTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2Vx
dWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzE0ZGVmZ2JcIiBzb3VyY2VSZWY9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18xOXU0OXRpXCIvPjxlbmRFdmVu
dCBpZD1cIkVuZEV2ZW50XzE0cXFmZHFcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFwaTkxbXk8
L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xcGk5
MW15XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMTl1NDl0aVwiIHRhcmdldFJlZj1cIkVuZEV2
ZW50XzE0cXFmZHFcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5
dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9u
Pjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFy
dEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0
ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzF0ajZjN2VcIj48dGV4dD5SZXR1cm4g
dGhlIHJlc3VsdHMgaW4gYW4gaW5jaWRlbnQgbm90ZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxh
c3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzF1ZGNmbHFcIiBzb3VyY2VSZWY9XCJTZXJ2aWNl
VGFza18xOXU0OXRpXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMXRqNmM3ZVwiLz48L3By
b2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQ
TU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBt
bmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3Rh
cnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwi
MzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6
QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVu
dD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRf
ZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5
PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50
PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxv
bWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBc
Ii8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1c
IlNlcnZpY2VUYXNrXzE5dTQ5dGlcIiBpZD1cIlNlcnZpY2VUYXNrXzE5dTQ5dGlfZGlcIj48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMjY3XCIgeT1cIjE2Nlwi
Lz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVl
bmNlRmxvd18xNGRlZmdiXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMTRkZWZnYl9kaVwiPjxvbWdkaTp3
YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9t
Z2RpOndheXBvaW50IHg9XCIyNjdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwi
Lz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIw
XCIgeD1cIjIzMi41XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBN
TkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8xNHFxZmRxXCIg
aWQ9XCJFbmRFdmVudF8xNHFxZmRxX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdp
ZHRoPVwiMzZcIiB4PVwiNDI4XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjQ0NlwiIHk9XCIyMjdcIi8+PC9i
cG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5F
bGVtZW50PVwiU2VxdWVuY2VGbG93XzFwaTkxbXlcIiBpZD1cIlNlcXVlbmNlRmxvd18xcGk5MW15
X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzNjdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQyOFwiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MTNcIiB3aWR0aD1cIjBcIiB4PVwiMzk3LjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJl
bD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRB
bm5vdGF0aW9uXzF0ajZjN2VcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzF0ajZjN2VfZGlcIj48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjU1XCIgd2lkdGg9XCIxNjlcIiB4PVwiMzUzXCIgeT1cIjczXCIv
PjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2Np
YXRpb25fMXVkY2ZscVwiIGlkPVwiQXNzb2NpYXRpb25fMXVkY2ZscV9kaVwiPjxvbWdkaTp3YXlw
b2ludCB4PVwiMzYwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNjlcIi8+PG9tZ2Rp
OndheXBvaW50IHg9XCI0MDdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEyOFwiLz48
L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+
PC9kZWZpbml0aW9ucz4iLCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9hbnNpYmxlX19ydW5fYV9w
bGF5Ym9va19mcm9tX2FuX2luY2lkZW50IiwgInZlcnNpb24iOiAyMX0sICJsYXN0X21vZGlmaWVk
X3RpbWUiOiAxNTYxNDk5NTQ3OTkwLCAiY3JlYXRvcl9pZCI6ICJhQGV4YW1wbGUuY29tIiwgImFj
dGlvbnMiOiBbXSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfYW5zaWJsZV9fcnVuX2Ff
cGxheWJvb2tfZnJvbV9hbl9pbmNpZGVudCIsICJuYW1lIjogIkV4YW1wbGU6IEFuc2libGUgLSBS
dW4gYSBQbGF5Ym9vayJ9LCB7InV1aWQiOiAiYTM4OTI4MjYtMjI3OS00OWFmLTk5M2MtZjdjNzBl
NjlmM2I2IiwgImRlc2NyaXB0aW9uIjogIk1lcmdlIGFydGlmYWN0X3ZhbHVlIHdpdGggYW5zaWJs
ZSBwYXJhbWV0ZXJzIHRvIHJ1biBhIFBsYXlib29rIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0
IiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9ydW5fYW5fYW5zaWJsZV9wbGF5Ym9va19vbl9hbl9h
cnRpZmFjdCIsICJ3b3JrZmxvd19pZCI6IDI2LCAibGFzdF9tb2RpZmllZF9ieSI6ICJhQGV4YW1w
bGUuY29tIiwgImNvbnRlbnQiOiB7InhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rp
bmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3Bl
Yy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3Jn
L3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3Jn
L3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9z
cGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5p
Ym0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVt
YVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNl
XCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nl
c3MgaWQ9XCJleGFtcGxlX3J1bl9hbl9hbnNpYmxlX3BsYXlib29rX29uX2FuX2FydGlmYWN0XCIg
aXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBBbnNpYmxlIC0gUnVuIGEgUGxh
eWJvb2sgb24gYW4gQXJ0aWZhY3RcIj48ZG9jdW1lbnRhdGlvbj5NZXJnZSBhcnRpZmFjdF92YWx1
ZSB3aXRoIGFuc2libGUgcGFyYW1ldGVycyB0byBydW4gYSBQbGF5Ym9vazwvZG9jdW1lbnRhdGlv
bj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5j
ZUZsb3dfMWFrZ2xyaTwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNl
cnZpY2VUYXNrXzE0djBveDhcIiBuYW1lPVwiQW5zaWJsZSBQbGF5Ym9va1wiIHJlc2lsaWVudDp0
eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1
dWlkPVwiZjM0ZmFiMzMtNTRkOC00OGZiLWFhNzQtNTMwYWYyNTk1N2E5XCI+e1wiaW5wdXRzXCI6
e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbXBvcnQgcmVcXG5cXG5wcCA9IHUnKFxc
XFxcXFxceDFiXFxcXFtcXFxcZCooO1xcXFxkKikqbSknXFxubm90ZSA9IHUnJ1xcblxcbmlmIGxl
bihyZXN1bHRzWydjb250ZW50J10ua2V5cygpKSA9PSAwOlxcbiAgbm90ZSA9IHVcXFwiTm8gcmVz
dWx0cyByZXR1cm5lZCBvbiBwYXJhbWV0ZXJzOiB7fVxcXCIuZm9ybWF0KHJlc3VsdHNbJ2lucHV0
cyddKVxcbmVsc2U6XFxuXFxuICBmb3IgaXRlbSBpbiByZXN1bHRzWydjb250ZW50J106XFxuICAg
IG5vdGUgPSBub3RlICsgdVxcXCJ7fSAtIHt9XFxcXG5cXFwiLmZvcm1hdChpdGVtLCByZXN1bHRz
WydpbnB1dHMnXSlcXG4gICAgbm90ZSA9IG5vdGUgKyByZS5zdWIocHAsICcnLCByZXN1bHRzWydj
b250ZW50J11baXRlbV1bJ2RldGFpbCddKS5yZXBsYWNlKCdcXFxcXFxcXHJcXFxcXFxcXG4nLCAn
XFxcXFxcXFxuJykgKyAnXFxcXG4nXFxuXFxuaW5jaWRlbnQuYWRkTm90ZShoZWxwZXIuY3JlYXRl
UGxhaW5UZXh0KG5vdGUpKVwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuYW5z
aWJsZV9wbGF5Ym9va19uYW1lID0gcnVsZS5wcm9wZXJ0aWVzLmFuc2libGVfcGxheWJvb2tfbmFt
ZVxcbmFydGlmYWN0X3ZhbHVlID0gdSdhcnRpZmFjdF92YWx1ZT17fScuZm9ybWF0KGFydGlmYWN0
LnZhbHVlKVxcbmlmIHJ1bGUucHJvcGVydGllcy5hbnNpYmxlX3BsYXlib29rX3ZhcmlhYmxlczpc
XG4gIGlucHV0cy5hbnNpYmxlX3BhcmFtZXRlcnMgPSB1JzsnLmpvaW4oKHJ1bGUucHJvcGVydGll
cy5hbnNpYmxlX3BsYXlib29rX3ZhcmlhYmxlcywgYXJ0aWZhY3RfdmFsdWUpKVxcbmVsc2U6XFxu
ICBpbnB1dHMuYW5zaWJsZV9wYXJhbWV0ZXJzID0gYXJ0aWZhY3RfdmFsdWVcXG5cIn08L3Jlc2ls
aWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3df
MWFrZ2xyaTwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wbnpyM3B5PC9vdXRnb2lu
Zz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMWFrZ2xyaVwi
IHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNr
XzE0djBveDhcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMWxoNGJlb1wiPjxpbmNvbWluZz5T
ZXF1ZW5jZUZsb3dfMG56cjNweTwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlk
PVwiU2VxdWVuY2VGbG93XzBuenIzcHlcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xNHYwb3g4
XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMWxoNGJlb1wiLz48dGV4dEFubm90YXRpb24gaWQ9XCJU
ZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90
ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0
OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5v
dGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMGMy
eTJqdlwiPjx0ZXh0PlJlc3VsdHMgYWRkZWQgdG8gYSBub3RlPC90ZXh0PjwvdGV4dEFubm90YXRp
b24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXQ5NTdpMlwiIHNvdXJjZVJlZj1cIlNl
cnZpY2VUYXNrXzE0djBveDhcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8wYzJ5Mmp2XCIv
PjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1u
ZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwi
PjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9
XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lk
dGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2Jw
bW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5F
bGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4
eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5
OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVs
ZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2Rp
XCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVt
ZW50PVwiU2VydmljZVRhc2tfMTR2MG94OFwiIGlkPVwiU2VydmljZVRhc2tfMTR2MG94OF9kaVwi
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIyNjFcIiB5PVwi
MTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwi
U2VxdWVuY2VGbG93XzFha2dscmlcIiBpZD1cIlNlcXVlbmNlRmxvd18xYWtnbHJpX2RpXCI+PG9t
Z2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwi
Lz48b21nZGk6d2F5cG9pbnQgeD1cIjI2MVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwi
MjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0
aD1cIjBcIiB4PVwiMjI5LjVcIiB5PVwiMTg0LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBt
bmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMWxo
NGJlb1wiIGlkPVwiRW5kRXZlbnRfMWxoNGJlb19kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MzZcIiB3aWR0aD1cIjM2XCIgeD1cIjQyNlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI0NDRcIiB5PVwiMjI3
XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRn
ZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18wbnpyM3B5XCIgaWQ9XCJTZXF1ZW5jZUZsb3df
MG56cjNweV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzYxXCIgeHNpOnR5cGU9XCJvbWdkYzpQ
b2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0MjZcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjM5My41XCIgeT1cIjE4NC41XCIvPjwvYnBtbmRp
OkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVu
dD1cIlRleHRBbm5vdGF0aW9uXzBjMnkyanZcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzBjMnkyanZf
ZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjYxXCIgd2lkdGg9XCIxODZcIiB4PVwiMzUwXCIg
eT1cIjY1XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50
PVwiQXNzb2NpYXRpb25fMXQ5NTdpMlwiIGlkPVwiQXNzb2NpYXRpb25fMXQ5NTdpMl9kaVwiPjxv
bWdkaTp3YXlwb2ludCB4PVwiMzU1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNzBc
Ii8+PG9tZ2RpOndheXBvaW50IHg9XCI0MDdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjEyNlwiLz48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBN
TkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9ydW5fYW5f
YW5zaWJsZV9wbGF5Ym9va19vbl9hbl9hcnRpZmFjdCIsICJ2ZXJzaW9uIjogMTZ9LCAibGFzdF9t
b2RpZmllZF90aW1lIjogMTU2MTQ5OTcyMDk0OSwgImNyZWF0b3JfaWQiOiAiYUBleGFtcGxlLmNv
bSIsICJhY3Rpb25zIjogW10sICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3J1bl9hbl9h
bnNpYmxlX3BsYXlib29rX29uX2FuX2FydGlmYWN0IiwgIm5hbWUiOiAiRXhhbXBsZTogQW5zaWJs
ZSAtIFJ1biBhIFBsYXlib29rIG9uIGFuIEFydGlmYWN0In0sIHsidXVpZCI6ICI5YTBjMjhiMC1h
NzViLTQ2NDItOTJmMi02ODc0MzA3NGI3NzUiLCAiZGVzY3JpcHRpb24iOiAiUnVuIGFuIEFuc2li
bGUgbW9kdWxlIGZvciBhZC1ob2Mgb3BlcmF0aW9ucyIsICJvYmplY3RfdHlwZSI6ICJpbmNpZGVu
dCIsICJleHBvcnRfa2V5IjogImV4YW1wbGVfYW5zaWJsZV9fcnVuX2FfbW9kdWxlIiwgIndvcmtm
bG93X2lkIjogMjQsICJsYXN0X21vZGlmaWVkX2J5IjogImFAZXhhbXBsZS5jb20iLCAiY29udGVu
dCI6IHsieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/Pjxk
ZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQv
TU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAw
NTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUy
NC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQv
RElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHht
bG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwi
aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3Bh
Y2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVf
YW5zaWJsZV9fcnVuX2FfbW9kdWxlXCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFt
cGxlOiBBbnNpYmxlIC0gUnVuIGEgTW9kdWxlXCI+PGRvY3VtZW50YXRpb24+UnVuIGFuIEFuc2li
bGUgbW9kdWxlIGZvciBhZC1ob2Mgb3BlcmF0aW9uczwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVu
dCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMTB4ZzV4
cTwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzF2
cXJnZ3hcIiBuYW1lPVwiQW5zaWJsZSBNb2R1bGVcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9u
XCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cIjczOWJkZmQ4
LWMxMzUtNDY4NC05M2MwLTcxZmQ3ZGQyMGUzNFwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9j
ZXNzaW5nX3NjcmlwdFwiOlwiaW1wb3J0IHJlXFxuXFxucHAgPSAnKFxcXFxcXFxceDFiXFxcXFtc
XFxcZCooO1xcXFxkKikqbSknXFxubm90ZSA9IHUnJ1xcblxcbmlmIGxlbihyZXN1bHRzWydjb250
ZW50J10ua2V5cygpKSA9PSAwOlxcbiAgbm90ZSA9IHVcXFwiTm8gcmVzdWx0cyByZXR1cm5lZCBv
biBwYXJhbWV0ZXJzOiB7fVxcXCIuZm9ybWF0KHJlc3VsdHNbJ2lucHV0cyddKVxcbmVsc2U6XFxu
XFxuICBmb3IgaXRlbSBpbiByZXN1bHRzWydjb250ZW50J106XFxuICAgIG5vdGUgPSB1XFxcInt9
IC0ge31cXFxcblxcXCIuZm9ybWF0KGl0ZW0sIHJlc3VsdHNbJ2lucHV0cyddKVxcbiAgICBub3Rl
ID0gbm90ZSArIHJlLnN1YihwcCwgJycsIHJlc3VsdHNbJ2NvbnRlbnQnXVtpdGVtXVsnZGV0YWls
J10pLnJlcGxhY2UoJ1xcXFxcXFxcclxcXFxcXFxcbicsICdcXFxcXFxcXG4nKSArICdcXFxcbidc
XG5cXG5pbmNpZGVudC5hZGROb3RlKGhlbHBlci5jcmVhdGVQbGFpblRleHQobm90ZSkpXCIsXCJw
cmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5hbnNpYmxlX21vZHVsZSA9IHJ1bGUucHJv
cGVydGllcy5hbnNpYmxlX21vZHVsZVxcbmlucHV0cy5hbnNpYmxlX3BhcmFtZXRlcnMgPSBydWxl
LnByb3BlcnRpZXMuYW5zaWJsZV9tb2R1bGVfYXJndW1lbnRzXFxuaW5wdXRzLmFuc2libGVfaG9z
dHMgPSBydWxlLnByb3BlcnRpZXMuYW5zaWJsZV9ob3N0c1xcblwifTwvcmVzaWxpZW50OmZ1bmN0
aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18xMHhnNXhxPC9p
bmNvbWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzBiNGV2eWk8L291dGdvaW5nPjwvc2Vydmlj
ZVRhc2s+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xMHhnNXhxXCIgc291cmNlUmVm
PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMXZxcmdneFwi
Lz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8xYXBhd2VyXCI+PGluY29taW5nPlNlcXVlbmNlRmxv
d18wYjRldnlpPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5j
ZUZsb3dfMGI0ZXZ5aVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzF2cXJnZ3hcIiB0YXJnZXRS
ZWY9XCJFbmRFdmVudF8xYXBhd2VyXCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0
aW9uXzFreHhpeXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0
QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNl
UmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4
eGl5dFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xYzMxZzIwXCI+PHRl
eHQ+UmV0dXJuIHRoZSByZXN1bHRzIGluIGFuIGluY2lkZW50IG5vdGU8L3RleHQ+PC90ZXh0QW5u
b3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wMzh0cTVsXCIgc291cmNlUmVm
PVwiU2VydmljZVRhc2tfMXZxcmdneFwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFjMzFn
MjBcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+
PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFu
ZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1c
IiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZc
IiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9t
Z2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdcIiB5PVwiMjIzXCIv
PjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUg
YnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlv
bl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIg
eD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBi
cG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9uXzFzZXVq
NDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9XCJvbWdkYzpQ
b2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBt
bkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18xdnFyZ2d4XCIgaWQ9XCJTZXJ2aWNlVGFza18xdnFyZ2d4
X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjI1NVwi
IHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1l
bnQ9XCJTZXF1ZW5jZUZsb3dfMTB4ZzV4cVwiIGlkPVwiU2VxdWVuY2VGbG93XzEweGc1eHFfZGlc
Ij48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwi
MjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjU1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwi
IHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wi
IHdpZHRoPVwiMFwiIHg9XCIyMjYuNVwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwv
YnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRf
MWFwYXdlclwiIGlkPVwiRW5kRXZlbnRfMWFwYXdlcl9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjQyMlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFi
ZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI0NDBcIiB5PVwi
MjI3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1O
RWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18wYjRldnlpXCIgaWQ9XCJTZXF1ZW5jZUZs
b3dfMGI0ZXZ5aV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzU1XCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0MjJcIiB4c2k6dHlwZT1c
Im9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjM4OC41XCIgeT1cIjE4NFwiLz48L2JwbW5k
aTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1l
bnQ9XCJUZXh0QW5ub3RhdGlvbl8xYzMxZzIwXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xYzMxZzIw
X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI1NlwiIHdpZHRoPVwiMjQ0XCIgeD1cIjMyOFwi
IHk9XCI3NVwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVu
dD1cIkFzc29jaWF0aW9uXzAzOHRxNWxcIiBpZD1cIkFzc29jaWF0aW9uXzAzOHRxNWxfZGlcIj48
b21nZGk6d2F5cG9pbnQgeD1cIjM1MlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTcz
XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDExXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIxMzFcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQ
TU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgIndvcmtmbG93X2lkIjogImV4YW1wbGVfYW5zaWJs
ZV9fcnVuX2FfbW9kdWxlIiwgInZlcnNpb24iOiAxMn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAx
NTYxNDk5Njk2NjE5LCAiY3JlYXRvcl9pZCI6ICJhQGV4YW1wbGUuY29tIiwgImFjdGlvbnMiOiBb
XSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfYW5zaWJsZV9fcnVuX2FfbW9kdWxlIiwg
Im5hbWUiOiAiRXhhbXBsZTogQW5zaWJsZSAtIFJ1biBhIE1vZHVsZSJ9XSwgImFjdGlvbnMiOiBb
eyJsb2dpY190eXBlIjogImFsbCIsICJuYW1lIjogIkV4YW1wbGU6IEFuc2libGUgLSBSdW4gYSBN
b2R1bGUiLCAidmlld19pdGVtcyI6IFt7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJh
Y3Rpb25pbnZvY2F0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAi
ZmllbGRfdXVpZCIsICJjb250ZW50IjogIjliOGY4YmRiLWE3ZGMtNGFhOC05M2FjLTk0YzFjMzdh
Y2IzNSIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBl
IjogImFjdGlvbmludm9jYXRpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVu
dCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiMDk2NDI5YTktODkyNS00YzkxLTlhMGItMzdi
MDJhNWMyMDg5IiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxk
X3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJl
bGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICI3MjNlOTdkYy0zNzEwLTQ5OTEtYTc4
NC0xMzFkMzgwZWJmZTAiLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgInR5cGUiOiAxLCAid29ya2Zs
b3dzIjogWyJleGFtcGxlX2Fuc2libGVfX3J1bl9hX21vZHVsZSJdLCAib2JqZWN0X3R5cGUiOiAi
aW5jaWRlbnQiLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImQ0ZWM5MTNkLWRm
YjAtNDg1Ni1iMTM2LTAzMGIyYTdjZjg3YiIsICJhdXRvbWF0aW9ucyI6IFtdLCAiZXhwb3J0X2tl
eSI6ICJFeGFtcGxlOiBBbnNpYmxlIC0gUnVuIGEgTW9kdWxlIiwgImNvbmRpdGlvbnMiOiBbXSwg
ImlkIjogNDEsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdfSwgeyJsb2dpY190eXBlIjogImFs
bCIsICJuYW1lIjogIkV4YW1wbGU6IEFuc2libGUgLSBSdW4gYSBQbGF5Ym9vayIsICJ2aWV3X2l0
ZW1zIjogW3sic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24i
LCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNv
bnRlbnQiOiAiOTUzZWE1N2ItNWY3NS00MDc2LTk0ZjEtNGYzZWY1YTdhYmQyIiwgInN0ZXBfbGFi
ZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2Nh
dGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQi
LCAiY29udGVudCI6ICIxYTk4NGQ5Ny1jYjdiLTRiNzAtOGRjOS05OTYwOWNhZTlkZTIiLCAic3Rl
cF9sYWJlbCI6IG51bGx9XSwgInR5cGUiOiAxLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX2Fuc2li
bGVfX3J1bl9hX3BsYXlib29rX2Zyb21fYW5faW5jaWRlbnQiXSwgIm9iamVjdF90eXBlIjogImlu
Y2lkZW50IiwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6ICIwNWY1MmIwMy03YjQ4
LTQzZmMtOGU5YS0wM2JiNWRmNzI5OTEiLCAiYXV0b21hdGlvbnMiOiBbXSwgImV4cG9ydF9rZXki
OiAiRXhhbXBsZTogQW5zaWJsZSAtIFJ1biBhIFBsYXlib29rIiwgImNvbmRpdGlvbnMiOiBbXSwg
ImlkIjogNDIsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdfSwgeyJsb2dpY190eXBlIjogImFs
bCIsICJuYW1lIjogIkV4YW1wbGU6IEFuc2libGUgLSBSdW4gYSBQbGF5Ym9vayBmcm9tIGFuIEFy
dGlmYWN0IiwgInZpZXdfaXRlbXMiOiBbeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAi
YWN0aW9uaW52b2NhdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50Ijog
ImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICI5NTNlYTU3Yi01Zjc1LTQwNzYtOTRmMS00ZjNlZjVh
N2FiZDIiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlw
ZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1l
bnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogIjFhOTg0ZDk3LWNiN2ItNGI3MC04ZGM5LTk5
NjA5Y2FlOWRlMiIsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAidHlwZSI6IDEsICJ3b3JrZmxvd3Mi
OiBbImV4YW1wbGVfcnVuX2FuX2Fuc2libGVfcGxheWJvb2tfb25fYW5fYXJ0aWZhY3QiXSwgIm9i
amVjdF90eXBlIjogImFydGlmYWN0IiwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6
ICIzYmUyMDJiMS05M2IzLTRlZWItODUyOS0xZTljYzNlOTIxY2UiLCAiYXV0b21hdGlvbnMiOiBb
XSwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTogQW5zaWJsZSAtIFJ1biBhIFBsYXlib29rIGZyb20g
YW4gQXJ0aWZhY3QiLCAiY29uZGl0aW9ucyI6IFtdLCAiaWQiOiA0MywgIm1lc3NhZ2VfZGVzdGlu
YXRpb25zIjogW119XSwgImxheW91dHMiOiBbXSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIs
ICJpZCI6IDIyLCAiaW5kdXN0cmllcyI6IG51bGwsICJwaGFzZXMiOiBbXSwgImFjdGlvbl9vcmRl
ciI6IFtdLCAiZ2VvcyI6IG51bGwsICJsb2NhbGUiOiBudWxsLCAic2VydmVyX3ZlcnNpb24iOiB7
Im1ham9yIjogMzEsICJ2ZXJzaW9uIjogIjMxLjAuNDI1NCIsICJidWlsZF9udW1iZXIiOiA0MjU0
LCAibWlub3IiOiAwfSwgInRpbWVmcmFtZXMiOiBudWxsLCAid29ya3NwYWNlcyI6IFtdLCAiYXV0
b21hdGljX3Rhc2tzIjogW10sICJmdW5jdGlvbnMiOiBbeyJkaXNwbGF5X25hbWUiOiAiQW5zaWJs
ZSBQbGF5Ym9vayIsICJkZXNjcmlwdGlvbiI6IHsiY29udGVudCI6ICJBbnNpYmxlIGlzIHNpbXBs
ZSBJVCBlbmdpbmUgZm9yIGF1dG9tYXRpb24sIGl0IGlzIGRlc2lnbmVkIGZvciBtYW5hZ2UgbWFu
eSBzeXN0ZW1zLCByYXRoZXIgdGhhbiBqdXN0IG9uZSBhdCBhIHRpbWUuIiwgImZvcm1hdCI6ICJ0
ZXh0In0sICJjcmVhdG9yIjogeyJkaXNwbGF5X25hbWUiOiAiYWJsZSBiYWtlciIsICJ0eXBlIjog
InVzZXIiLCAiaWQiOiAzLCAibmFtZSI6ICJhQGV4YW1wbGUuY29tIn0sICJ2aWV3X2l0ZW1zIjog
W3sic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5r
X2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiZmIw
NzVkOWQtODA0OC00ZTdmLWE3MGMtMmIzZjM3YTVmNDJiIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwg
eyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtf
aGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICI4NzZm
MjdiZS1kZjY2LTQ4MjctOTM4OS1lZWEyZDExOGFiNjQiLCAic3RlcF9sYWJlbCI6IG51bGx9XSwg
ImV4cG9ydF9rZXkiOiAiZm5fYW5zaWJsZSIsICJ1dWlkIjogImYzNGZhYjMzLTU0ZDgtNDhmYi1h
YTc0LTUzMGFmMjU5NTdhOSIsICJsYXN0X21vZGlmaWVkX2J5IjogeyJkaXNwbGF5X25hbWUiOiAi
YWJsZSBiYWtlciIsICJ0eXBlIjogInVzZXIiLCAiaWQiOiAzLCAibmFtZSI6ICJhQGV4YW1wbGUu
Y29tIn0sICJ2ZXJzaW9uIjogNSwgIndvcmtmbG93cyI6IFt7ImRlc2NyaXB0aW9uIjogbnVsbCwg
Im9iamVjdF90eXBlIjogImluY2lkZW50IiwgImFjdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBs
ZTogQW5zaWJsZSAtIFJ1biBhIFBsYXlib29rIiwgIndvcmtmbG93X2lkIjogMjMsICJwcm9ncmFt
bWF0aWNfbmFtZSI6ICJleGFtcGxlX2Fuc2libGVfX3J1bl9hX3BsYXlib29rX2Zyb21fYW5faW5j
aWRlbnQiLCAidXVpZCI6IG51bGx9LCB7ImRlc2NyaXB0aW9uIjogbnVsbCwgIm9iamVjdF90eXBl
IjogImFydGlmYWN0IiwgImFjdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTogQW5zaWJsZSAt
IFJ1biBhIFBsYXlib29rIG9uIGFuIEFydGlmYWN0IiwgIndvcmtmbG93X2lkIjogMjYsICJwcm9n
cmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3J1bl9hbl9hbnNpYmxlX3BsYXlib29rX29uX2FuX2Fy
dGlmYWN0IiwgInV1aWQiOiBudWxsfV0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTYxNDk2NjQ2
NDQ5LCAiZGVzdGluYXRpb25faGFuZGxlIjogImZuX2Fuc2libGUiLCAiaWQiOiAyMywgIm5hbWUi
OiAiZm5fYW5zaWJsZSJ9LCB7ImRpc3BsYXlfbmFtZSI6ICJBbnNpYmxlIE1vZHVsZSIsICJkZXNj
cmlwdGlvbiI6IHsiY29udGVudCI6ICJSdW4gYW4gQW5zaWJsZSBNb2R1bGUiLCAiZm9ybWF0Ijog
InRleHQifSwgImNyZWF0b3IiOiB7ImRpc3BsYXlfbmFtZSI6ICJhYmxlIGJha2VyIiwgInR5cGUi
OiAidXNlciIsICJpZCI6IDMsICJuYW1lIjogImFAZXhhbXBsZS5jb20ifSwgInZpZXdfaXRlbXMi
OiBbeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xp
bmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJm
ZjlkYzAxNC1mNjhiLTQxNTEtOTljNi0wODc5MjEyOTM4NTAiLCAic3RlcF9sYWJlbCI6IG51bGx9
LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlu
a19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogIjg3
NmYyN2JlLWRmNjYtNDgyNy05Mzg5LWVlYTJkMTE4YWI2NCIsICJzdGVwX2xhYmVsIjogbnVsbH0s
IHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5r
X2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiMDVj
M2VhM2YtYjdlZi00MzAwLWJjZTktMDZkZmI5MzA5MTgwIiwgInN0ZXBfbGFiZWwiOiBudWxsfV0s
ICJleHBvcnRfa2V5IjogImZuX2Fuc2libGVfbW9kdWxlIiwgInV1aWQiOiAiNzM5YmRmZDgtYzEz
NS00Njg0LTkzYzAtNzFmZDdkZDIwZTM0IiwgImxhc3RfbW9kaWZpZWRfYnkiOiB7ImRpc3BsYXlf
bmFtZSI6ICJhYmxlIGJha2VyIiwgInR5cGUiOiAidXNlciIsICJpZCI6IDMsICJuYW1lIjogImFA
ZXhhbXBsZS5jb20ifSwgInZlcnNpb24iOiA0LCAid29ya2Zsb3dzIjogW3siZGVzY3JpcHRpb24i
OiBudWxsLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiYWN0aW9ucyI6IFtdLCAibmFtZSI6
ICJFeGFtcGxlOiBBbnNpYmxlIC0gUnVuIGEgTW9kdWxlIiwgIndvcmtmbG93X2lkIjogMjQsICJw
cm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX2Fuc2libGVfX3J1bl9hX21vZHVsZSIsICJ1dWlk
IjogbnVsbH1dLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU2MTQ5NjY0NjQ0OSwgImRlc3RpbmF0
aW9uX2hhbmRsZSI6ICJmbl9hbnNpYmxlIiwgImlkIjogMjQsICJuYW1lIjogImZuX2Fuc2libGVf
bW9kdWxlIn1dLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwgImlu
Y2lkZW50X3R5cGVzIjogW3siY3JlYXRlX2RhdGUiOiAxNTYxNDk5NzQ2MzY3LCAiZGVzY3JpcHRp
b24iOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAi
Q3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImlkIjogMCwgIm5hbWUiOiAiQ3Vz
dG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgInVwZGF0ZV9kYXRlIjogMTU2MTQ5OTc0
NjM2NywgInV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4LWFkMzktNGEwMDA0MDQ0YWEwIiwgImVu
YWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVsbCwgImhpZGRl
biI6IGZhbHNlfV0sICJzY3JpcHRzIjogW10sICJ0eXBlcyI6IFtdLCAibWVzc2FnZV9kZXN0aW5h
dGlvbnMiOiBbeyJ1dWlkIjogIjdkMjA0Y2RlLWUwMjgtNGJhZC04NWZhLWE4NzE1MzYyMmU2OSIs
ICJleHBvcnRfa2V5IjogImZuX2Fuc2libGUiLCAibmFtZSI6ICJmbl9hbnNpYmxlIiwgImRlc3Rp
bmF0aW9uX3R5cGUiOiAwLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZm5fYW5zaWJsZSIsICJleHBl
Y3RfYWNrIjogdHJ1ZSwgInVzZXJzIjogWyJhQGV4YW1wbGUuY29tIl19XSwgImluY2lkZW50X2Fy
dGlmYWN0X3R5cGVzIjogW10sICJyb2xlcyI6IFtdLCAiZmllbGRzIjogW3sib3BlcmF0aW9ucyI6
IFtdLCAidHlwZV9pZCI6IDAsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiU2ltdWxh
dGlvbiIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxl
IjogdHJ1ZSwgImlkIjogNTEsICJyZWFkX29ubHkiOiB0cnVlLCAidXVpZCI6ICJjM2YwZTNlZC0y
MWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBl
IjogImJvb2xlYW4iLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNpZGVudCBpcyBhIHNpbXVs
YXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBpcyByZWFkLW9ubHkuIiwg
ImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAi
ZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5pbmciLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlv
bnMiOiBbXSwgInR5cGVfaWQiOiA2LCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogIkFu
c2libGUgUGxheWJvb2sgVmFyaWFibGVzIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4
IjogInByb3BlcnRpZXMiLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDE3MiwgInJlYWRfb25s
eSI6IGZhbHNlLCAidXVpZCI6ICIxYTk4NGQ5Ny1jYjdiLTRiNzAtOGRjOS05OTYwOWNhZTlkZTIi
LCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJQbGVh
c2UgZW50ZXIgdmFyaWFibGUgbmFtZSBhbmQgY29ycmVzcG9uZGluZyB2YWx1ZS4gRXhhbXBsZTog
Y3VzdG9tZXI9dGVzdCxkaXNhYmxlPXRydWUiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4
dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRp
b24vYW5zaWJsZV9wbGF5Ym9va192YXJpYWJsZXMiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxz
ZSwgInBsYWNlaG9sZGVyIjogIkVudGVyIHBsYXlib29rIHZhcmlhYmxlcyBpbiBjb3JyZWN0IGZv
cm1hdCIsICJuYW1lIjogImFuc2libGVfcGxheWJvb2tfdmFyaWFibGVzIiwgImRlcHJlY2F0ZWQi
OiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW119
LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiA2LCAib3BlcmF0aW9uX3Blcm1zIjoge30s
ICJ0ZXh0IjogIkFuc2libGUgTW9kdWxlIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4
IjogInByb3BlcnRpZXMiLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDE3OCwgInJlYWRfb25s
eSI6IGZhbHNlLCAidXVpZCI6ICI5YjhmOGJkYi1hN2RjLTRhYTgtOTNhYy05NGMxYzM3YWNiMzUi
LCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICIiLCAi
aW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJl
eHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRpb24vYW5zaWJsZV9tb2R1bGUiLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogImFuc2libGVfbW9k
dWxlIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZh
bHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjog
W10sICJ0eXBlX2lkIjogNiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJBbnNpYmxl
IFBsYXlib29rIE5hbWUiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiAicHJvcGVy
dGllcyIsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMTczLCAicmVhZF9vbmx5IjogZmFsc2Us
ICJ1dWlkIjogIjk1M2VhNTdiLTVmNzUtNDA3Ni05NGYxLTRmM2VmNWE3YWJkMiIsICJjaG9zZW4i
OiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIiIsICJpbnRlcm5hbCI6
IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXki
OiAiYWN0aW9uaW52b2NhdGlvbi9hbnNpYmxlX3BsYXlib29rX25hbWUiLCAiaGlkZV9ub3RpZmlj
YXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIkVudGVyIHRhcmdldCBhbnNpYmxlIHBsYXli
b29rIG5hbWUiLCAibmFtZSI6ICJhbnNpYmxlX3BsYXlib29rX25hbWUiLCAiZGVwcmVjYXRlZCI6
IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJyZXF1aXJlZCI6ICJh
bHdheXMiLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiA2LCAi
b3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogIkFuc2libGUgSG9zdHMiLCAiYmxhbmtfb3B0
aW9uIjogZmFsc2UsICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJjaGFuZ2VhYmxlIjogdHJ1ZSwg
ImlkIjogMTc5LCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjcyM2U5N2RjLTM3MTAtNDk5
MS1hNzg0LTEzMWQzODBlYmZlMCIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4
dCIsICJ0b29sdGlwIjogIiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2Us
ICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9hbnNpYmxl
X2hvc3RzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICJVc2Ug
cGF0dGVybnMgZm9yIGdyb3VwIG5hbWUiLCAibmFtZSI6ICJhbnNpYmxlX2hvc3RzIiwgImRlcHJl
Y2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAicmVxdWly
ZWQiOiAiYWx3YXlzIiwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lk
IjogNiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJBbnNpYmxlIE1vZHVsZSBBcmd1
bWVudHMiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJj
aGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMTgwLCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjog
IjA5NjQyOWE5LTg5MjUtNGM5MS05YTBiLTM3YjAyYTVjMjA4OSIsICJjaG9zZW4iOiBmYWxzZSwg
ImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIiIsICJpbnRlcm5hbCI6IGZhbHNlLCAi
cmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiYWN0aW9u
aW52b2NhdGlvbi9hbnNpYmxlX21vZHVsZV9hcmd1bWVudHMiLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogImFuc2libGVfbW9kdWxlX2FyZ3Vt
ZW50cyIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZSwgInJlcXVpcmVkIjogImFsd2F5cyIsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6
IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImFuc2li
bGVfcGxheWJvb2tfbmFtZSIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGws
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMTc0LCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlk
IjogImZiMDc1ZDlkLTgwNDgtNGU3Zi1hNzBjLTJiM2YzN2E1ZjQyYiIsICJjaG9zZW4iOiBmYWxz
ZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIiIsICJpbnRlcm5hbCI6IGZhbHNl
LCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19m
dW5jdGlvbi9hbnNpYmxlX3BsYXlib29rX25hbWUiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxz
ZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogImFuc2libGVfcGxheWJvb2tfbmFtZSIsICJk
ZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInJl
cXVpcmVkIjogImFsd2F5cyIsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlw
ZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImFuc2libGVfcGFyYW1l
dGVycyIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxl
IjogdHJ1ZSwgImlkIjogMTc1LCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjg3NmYyN2Jl
LWRmNjYtNDgyNy05Mzg5LWVlYTJkMTE4YWI2NCIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5
cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0
IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9hbnNp
YmxlX3BhcmFtZXRlcnMiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVy
IjogIiIsICJuYW1lIjogImFuc2libGVfcGFyYW1ldGVycyIsICJkZXByZWNhdGVkIjogZmFsc2Us
ICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfSwgeyJvcGVy
YXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQi
OiAiYW5zaWJsZV9tb2R1bGUiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxs
LCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDE3NiwgInJlYWRfb25seSI6IGZhbHNlLCAidXVp
ZCI6ICJmZjlkYzAxNC1mNjhiLTQxNTEtOTljNi0wODc5MjEyOTM4NTAiLCAiY2hvc2VuIjogZmFs
c2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJjb21tYW5kIGFuZCBwYXJtZXRl
cnMgdG8gcnVuIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBs
YXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2Fuc2libGVfbW9kdWxlIiwgImhp
ZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJhbnNp
YmxlX21vZHVsZSIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2
ZXIiOiBmYWxzZSwgInJlcXVpcmVkIjogImFsd2F5cyIsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0
aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0Ijog
ImFuc2libGVfaG9zdHMiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAi
Y2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDE3NywgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6
ICIwNWMzZWEzZi1iN2VmLTQzMDAtYmNlOS0wNmRmYjkzMDkxODAiLCAiY2hvc2VuIjogZmFsc2Us
ICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJob3N0IG5hbWUgcGF0dGVybiBvciBn
cm91cCBmb3IgbW9kdWxlIGV4ZWN1dGlvbiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0
IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9hbnNp
YmxlX2hvc3RzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIi
LCAibmFtZSI6ICJhbnNpYmxlX2hvc3RzIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRf
Y2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInZhbHVlcyI6
IFtdfV0sICJvdmVycmlkZXMiOiBbXSwgImV4cG9ydF9kYXRlIjogMTU2MTQ5OTc0NDYxN30=
"""
    )