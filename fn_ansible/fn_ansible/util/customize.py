# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_ansible"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_ansible package"""
    reload_params = {"package": u"fn_ansible",
                    "incident_fields": [], 
                    "action_fields": [u"ansible_playbook_name", u"ansible_playbook_variables"], 
                    "function_params": [u"ansible_parameters", u"ansible_playbook_name"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_ansible"], 
                    "functions": [u"fn_ansible"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_run_a_ansible_playbook"], 
                    "actions": [u"Example: Ansible - Run a playbook"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     ansible_playbook_name
    #     ansible_playbook_variables
    #   Function inputs:
    #     ansible_parameters
    #     ansible_playbook_name
    #   Message Destinations:
    #     fn_ansible
    #   Functions:
    #     fn_ansible
    #   Workflows:
    #     example_run_a_ansible_playbook
    #   Rules:
    #     Example: Ansible - Run a playbook


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMSwgImJ1aWxkX251bWJl
ciI6IDc2LCAidmVyc2lvbiI6ICIzMS4xLjc2In0sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAy
LCAiaWQiOiA1NiwgImV4cG9ydF9kYXRlIjogMTU1MDA3NTA1MzQwNCwgImZpZWxkcyI6IFt7Imlk
IjogNTEsICJuYW1lIjogImluY190cmFpbmluZyIsICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAicHJl
Zml4IjogbnVsbCwgInR5cGVfaWQiOiAwLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNpZGVu
dCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBpcyBy
ZWFkLW9ubHkuIiwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJoaWRlX25vdGlmaWNhdGlvbiI6
IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxz
ZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiYzNm
MGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9w
ZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiB0cnVlLCAiY2hh
bmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5jaWRl
bnQvaW5jX3RyYWluaW5nIiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwg
eyJpZCI6IDIwMCwgIm5hbWUiOiAiYW5zaWJsZV9wbGF5Ym9va192YXJpYWJsZXMiLCAidGV4dCI6
ICJBbnNpYmxlIHBsYXlib29rIHZhcmlhYmxlcyIsICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJ0
eXBlX2lkIjogNiwgInRvb2x0aXAiOiAiUGxlYXNlIGVudGVyIHZhcmlhYmxlIG5hbWUgYW5kIGNv
cnJlc3BvbmRpbmcgdmFsdWUuIEV4YW1wbGU6IGN1c3RvbWVyPXRlc3QsZGlzYWJsZT10cnVlIiwg
InBsYWNlaG9sZGVyIjogIkVudGVyIHBsYXlib29rIHZhcmlhYmxlcyBpbiBjb3JyZWN0IGZvcm1h
dCIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNo
b3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19v
cHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjFhOTg0ZDk3LWNiN2It
NGI3MC04ZGM5LTk5NjA5Y2FlOWRlMiIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVy
bXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjog
dHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9u
L2Fuc2libGVfcGxheWJvb2tfdmFyaWFibGVzIiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRl
ZCI6IGZhbHNlfSwgeyJpZCI6IDE5OSwgIm5hbWUiOiAiYW5zaWJsZV9wbGF5Ym9va19uYW1lIiwg
InRleHQiOiAiQW5zaWJsZSBQbGF5Ym9vayBOYW1lIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwg
InR5cGVfaWQiOiA2LCAidG9vbHRpcCI6ICIiLCAicGxhY2Vob2xkZXIiOiAiRW50ZXIgdGFyZ2V0
IGFuc2libGUgcGxheWJvb2sgbmFtZSIsICJpbnB1dF90eXBlIjogInRleHQiLCAicmVxdWlyZWQi
OiAiYWx3YXlzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwg
ImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2Us
ICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICI5NTNlYTU3Yi01Zjc1LTQwNzYtOTRmMS00ZjNl
ZjVhN2FiZDIiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1
ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3Rl
eHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9hbnNpYmxlX3BsYXli
b29rX25hbWUiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjog
MTk2LCAibmFtZSI6ICJhbnNpYmxlX3BsYXlib29rX25hbWUiLCAidGV4dCI6ICJhbnNpYmxlX3Bs
YXlib29rX25hbWUiLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAi
IiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAicmVxdWlyZWQiOiAi
YWx3YXlzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJp
bnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICJmYjA3NWQ5ZC04MDQ4LTRlN2YtYTcwYy0yYjNmMzdh
NWY0MmIiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMi
OiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQi
OiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9hbnNpYmxlX3BsYXlib29rX25hbWUi
LCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMTkzLCAibmFt
ZSI6ICJhbnNpYmxlX3BhcmFtZXRlcnMiLCAidGV4dCI6ICJhbnNpYmxlX3BhcmFtZXRlcnMiLCAi
cHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiIiwgInBsYWNlaG9sZGVy
IjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwg
ImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFu
a19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjg3NmYyN2JlLWRm
NjYtNDgyNy05Mzg5LWVlYTJkMTE4YWI2NCIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25f
cGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxl
IjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2Fu
c2libGVfcGFyYW1ldGVycyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX1d
LCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1NTAwNzUxMzA5NTUsICJjcmVh
dGVfZGF0ZSI6IDE1NTAwNzUxMzA5NTUsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5
LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChp
bnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5h
bCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZW5hYmxl
ZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjog
ZmFsc2UsICJpZCI6IDB9XSwgInBoYXNlcyI6IFtdLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJv
dmVycmlkZXMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3sibmFtZSI6ICJmbl9hbnNp
YmxlIiwgInByb2dyYW1tYXRpY19uYW1lIjogImZuX2Fuc2libGUiLCAiZGVzdGluYXRpb25fdHlw
ZSI6IDAsICJleHBlY3RfYWNrIjogdHJ1ZSwgInVzZXJzIjogWyJzdXNhaG9vMUBpbi5pYm0uY29t
IiwgIm1hcmsuc2NoZXJmbGluZ0BpYm0uY29tIl0sICJ1dWlkIjogIjdkMjA0Y2RlLWUwMjgtNGJh
ZC04NWZhLWE4NzE1MzYyMmU2OSIsICJleHBvcnRfa2V5IjogImZuX2Fuc2libGUifV0sICJhY3Rp
b25zIjogW3siaWQiOiA0OCwgIm5hbWUiOiAiRXhhbXBsZTogQW5zaWJsZSAtIFJ1biBhIHBsYXli
b29rIiwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiY29uZGl0aW9ucyI6
IFt7Im1ldGhvZCI6ICJlcXVhbHMiLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFjdC50eXBlIiwgInZh
bHVlIjogIlN5c3RlbSBOYW1lIiwgInR5cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IG51bGx9
XSwgImF1dG9tYXRpb25zIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAid29ya2Zs
b3dzIjogWyJleGFtcGxlX3J1bl9hX2Fuc2libGVfcGxheWJvb2siXSwgInZpZXdfaXRlbXMiOiBb
eyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91
dWlkIiwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJjb250ZW50IjogIjk1M2Vh
NTdiLTVmNzUtNDA3Ni05NGYxLTRmM2VmNWE3YWJkMiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFs
c2V9LCB7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZp
ZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgImNvbnRlbnQiOiAi
MWE5ODRkOTctY2I3Yi00YjcwLThkYzktOTk2MDljYWU5ZGUyIiwgInNob3dfbGlua19oZWFkZXIi
OiBmYWxzZX1dLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImY4NDkxZGE2LTA2
ODktNGQ5Yi04MzVkLWRiOTE3NDRkYzEzNCIsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IEFuc2li
bGUgLSBSdW4gYSBwbGF5Ym9vayIsICJsb2dpY190eXBlIjogImFsbCJ9XSwgImxheW91dHMiOiBb
XSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAidGltZWZyYW1lcyI6IG51bGwsICJsb2NhbGUiOiBu
dWxsLCAiaW5kdXN0cmllcyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwgImdlb3MiOiBudWxs
LCAidGFza19vcmRlciI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJ0eXBlcyI6IFtdLCAic2Ny
aXB0cyI6IFtdLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7
IndvcmtmbG93X2lkIjogMzIsICJuYW1lIjogIkV4YW1wbGU6IFJ1biBhIEFuc2libGUgcGxheWJv
b2siLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9ydW5fYV9hbnNpYmxlX3BsYXlib29r
IiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImRlc2NyaXB0aW9uIjogIlJ1biBvbmUgcGxh
eWJvb2sgZm9yIGEgZ2l2ZW4gaG9zdCBhbmQgcGFzcyB2YWx1ZXMgZm9yIHByZWRlZmluZWQgcGxh
eWJvb2sgdmFyaWFibGVzLiIsICJjcmVhdG9yX2lkIjogInN1c2Fob28xQGluLmlibS5jb20iLCAi
bGFzdF9tb2RpZmllZF9ieSI6ICJzdXNhaG9vMUBpbi5pYm0uY29tIiwgImxhc3RfbW9kaWZpZWRf
dGltZSI6IDE1NTAwNzUwMDk1NDYsICJleHBvcnRfa2V5IjogImV4YW1wbGVfcnVuX2FfYW5zaWJs
ZV9wbGF5Ym9vayIsICJ1dWlkIjogImNhZjMyODUyLWQxYTEtNDhiNS05MGNlLWViNDYzODA2NWVm
YyIsICJjb250ZW50IjogeyJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX3J1bl9hX2Fuc2libGVfcGxh
eWJvb2siLCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/
PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1
MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIw
MTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEw
MDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1
MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwi
IHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNp
PVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1l
c3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1w
bGVfcnVuX2FfYW5zaWJsZV9wbGF5Ym9va1wiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwi
RXhhbXBsZTogUnVuIGEgQW5zaWJsZSBwbGF5Ym9va1wiPjxkb2N1bWVudGF0aW9uPlJ1biBvbmUg
cGxheWJvb2sgZm9yIGEgZ2l2ZW4gaG9zdCBhbmQgcGFzcyB2YWx1ZXMgZm9yIHByZWRlZmluZWQg
cGxheWJvb2sgdmFyaWFibGVzLjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0
RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMHNxd2EyNzwvb3V0Z29pbmc+
PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzFja3RqcWxcIiBuYW1l
PVwiQW5zaWJsZVwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVu
dHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiZjM0ZmFiMzMtNTRkOC00OGZiLWFhNzQtNTMw
YWYyNTk1N2E5XCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJp
bmNpZGVudC5hZGROb3RlKHN0cihyZXN1bHRzKSlcIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwi
OlwiaW5wdXRzLmFuc2libGVfcGxheWJvb2tfbmFtZSA9IHJ1bGUucHJvcGVydGllcy5hbnNpYmxl
X3BsYXlib29rX25hbWVcXG5pbnB1dHMuYW5zaWJsZV9wYXJhbWV0ZXJzID0gcnVsZS5wcm9wZXJ0
aWVzLmFuc2libGVfcGxheWJvb2tfdmFyaWFibGVzXCIsXCJyZXN1bHRfbmFtZVwiOlwiXCJ9PC9y
ZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VG
bG93XzBzcXdhMjc8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMWY5djJ6aTwvb3V0
Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBzcXdh
MjdcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNl
VGFza18xY2t0anFsXCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzB0ZjFxeDVcIj48aW5jb21p
bmc+U2VxdWVuY2VGbG93XzFmOXYyemk8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxv
dyBpZD1cIlNlcXVlbmNlRmxvd18xZjl2MnppXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWNr
dGpxbFwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzB0ZjFxeDVcIi8+PHRleHRBbm5vdGF0aW9uIGlk
PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVy
ZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFz
ZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9u
XzBneDY3bjRcIj48dGV4dD5GdW5jdGlvbiByZXNwb25zaWJsZSBmb3IgcnVubmluZyBhIHNwZWNp
ZmllZCBwbGF5Ym9vayBmb3IgYSBnaXZlbiBob3N0IGFuZCBzcGVjaWZpZWQgdmFsdWVzIGZvciBw
cmVkZWZpbmVkIHBsYXlib29rIHZhcmlhYmxlcy4gUmV0dXJucyBzdGF0dXMgb2YgYWxsIGRlZmlu
ZWQgY29tbWFuZHMgaW4gdGFyZ2V0IHBsYXlib29rLjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxh
c3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFveWlpZGtcIiBzb3VyY2VSZWY9XCJTZXJ2aWNl
VGFza18xY2t0anFsXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMGd4NjduNFwiLz48L3By
b2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQ
TU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBt
bmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3Rh
cnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwi
MzZcIiB4PVwiMTY0XCIgeT1cIjE4NVwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1OVwiIHk9XCIyMjBcIi8+PC9icG1uZGk6
QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVu
dD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRf
ZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5
PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50
PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxv
bWdkaTp3YXlwb2ludCB4PVwiMTcxXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMTdc
Ii8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1c
IlNlcnZpY2VUYXNrXzFja3RqcWxcIiBpZD1cIlNlcnZpY2VUYXNrXzFja3RqcWxfZGlcIj48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMzQ3XCIgeT1cIjE2M1wi
Lz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVl
bmNlRmxvd18wc3F3YTI3XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMHNxd2EyN19kaVwiPjxvbWdkaTp3
YXlwb2ludCB4PVwiMjAwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDNcIi8+PG9t
Z2RpOndheXBvaW50IHg9XCIzNDdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwM1wi
Lz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEyXCIgd2lkdGg9XCI5
MFwiIHg9XCIyMjguNVwiIHk9XCIxODJcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQ
TU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMHRmMXF4NVwi
IGlkPVwiRW5kRXZlbnRfMHRmMXF4NV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3
aWR0aD1cIjM2XCIgeD1cIjYzN1wiIHk9XCIxODVcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2Rj
OkJvdW5kcyBoZWlnaHQ9XCIxMlwiIHdpZHRoPVwiMFwiIHg9XCI2NTVcIiB5PVwiMjI1XCIvPjwv
YnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1u
RWxlbWVudD1cIlNlcXVlbmNlRmxvd18xZjl2MnppXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMWY5djJ6
aV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDQ3XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwi
IHk9XCIyMDNcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2MzdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjIwM1wiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjEyXCIgd2lkdGg9XCI5MFwiIHg9XCI0OTdcIiB5PVwiMTgyXCIvPjwvYnBtbmRpOkJQTU5MYWJl
bD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRB
bm5vdGF0aW9uXzBneDY3bjRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzBneDY3bjRfZGlcIj48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjgxXCIgd2lkdGg9XCIyNTlcIiB4PVwiNDMxXCIgeT1cIjdcIi8+
PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lh
dGlvbl8xb3lpaWRrXCIgaWQ9XCJBc3NvY2lhdGlvbl8xb3lpaWRrX2RpXCI+PG9tZ2RpOndheXBv
aW50IHg9XCI0MzhcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE2NFwiLz48b21nZGk6
d2F5cG9pbnQgeD1cIjUxOVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiODhcIi8+PC9i
cG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwv
ZGVmaW5pdGlvbnM+IiwgInZlcnNpb24iOiAyOH0sICJhY3Rpb25zIjogW119XSwgInJvbGVzIjog
W10sICJ3b3Jrc3BhY2VzIjogW10sICJmdW5jdGlvbnMiOiBbeyJpZCI6IDI5LCAibmFtZSI6ICJm
bl9hbnNpYmxlIiwgImRpc3BsYXlfbmFtZSI6ICJBbnNpYmxlIiwgImRlc2NyaXB0aW9uIjogeyJm
b3JtYXQiOiAidGV4dCIsICJjb250ZW50IjogIkFuc2libGUgaXMgc2ltcGxlIElUIGVuZ2luZSBm
b3IgYXV0b21hdGlvbiwgaXQgaXMgZGVzaWduZWQgZm9yIG1hbmFnZSBtYW55IHN5c3RlbXMsIHJh
dGhlciB0aGFuIGp1c3Qgb25lIGF0IGEgdGltZS4ifSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJm
bl9hbnNpYmxlIiwgImV4cG9ydF9rZXkiOiAiZm5fYW5zaWJsZSIsICJ1dWlkIjogImYzNGZhYjMz
LTU0ZDgtNDhmYi1hYTc0LTUzMGFmMjU5NTdhOSIsICJ2ZXJzaW9uIjogMTIsICJjcmVhdG9yIjog
eyJpZCI6IDUsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJzdXNhaG9vMUBpbi5pYm0uY29tIiwg
ImRpc3BsYXlfbmFtZSI6ICJTdWRpcCBTYWhvbyJ9LCAibGFzdF9tb2RpZmllZF9ieSI6IHsiaWQi
OiA1LCAidHlwZSI6ICJ1c2VyIiwgIm5hbWUiOiAic3VzYWhvbzFAaW4uaWJtLmNvbSIsICJkaXNw
bGF5X25hbWUiOiAiU3VkaXAgU2Fob28ifSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NTAwNzQ4
MDM1OTksICJ2aWV3X2l0ZW1zIjogW3sic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVs
bCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAi
Y29udGVudCI6ICJmYjA3NWQ5ZC04MDQ4LTRlN2YtYTcwYy0yYjNmMzdhNWY0MmIiLCAic2hvd19s
aW5rX2hlYWRlciI6IGZhbHNlfSwgeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxs
LCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJj
b250ZW50IjogIjg3NmYyN2JlLWRmNjYtNDgyNy05Mzg5LWVlYTJkMTE4YWI2NCIsICJzaG93X2xp
bmtfaGVhZGVyIjogZmFsc2V9XSwgIndvcmtmbG93cyI6IFt7IndvcmtmbG93X2lkIjogMzIsICJu
YW1lIjogIkV4YW1wbGU6IFJ1biBhIEFuc2libGUgcGxheWJvb2siLCAicHJvZ3JhbW1hdGljX25h
bWUiOiAiZXhhbXBsZV9ydW5fYV9hbnNpYmxlX3BsYXlib29rIiwgIm9iamVjdF90eXBlIjogImFy
dGlmYWN0IiwgImRlc2NyaXB0aW9uIjogbnVsbCwgInV1aWQiOiBudWxsLCAiYWN0aW9ucyI6IFtd
fV19XX0=
"""
    )