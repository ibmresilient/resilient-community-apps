# (c) Copyright IBM Corp. 2010, 2019. All Rights Reserved.
# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_ansible"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_ansible package"""
    reload_params = {"package": u"fn_ansible",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"ansible_param1", u"ansible_param2", u"ansible_param3", u"host", u"playbook_name"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_ansible"], 
                    "functions": [u"fn_ansible"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_run_a_ansible_playbook"], 
                    "actions": [u"Example: Ansible - Run a playbook"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     ansible_param1
    #     ansible_param2
    #     ansible_param3
    #     host
    #     playbook_name
    #   Message Destinations:
    #     fn_ansible
    #   Functions:
    #     fn_ansible
    #   Workflows:
    #     example_run_a_ansible_playbook
    #   Rules:
    #     Example: Ansible - Run a playbook


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMSwgImJ1aWxkX251bWJl
ciI6IDc2LCAidmVyc2lvbiI6ICIzMS4xLjc2In0sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAy
LCAiaWQiOiAzOCwgImV4cG9ydF9kYXRlIjogMTU0NzAyNTI0MTU5OSwgImZpZWxkcyI6IFt7Imlk
IjogNTEsICJuYW1lIjogImluY190cmFpbmluZyIsICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAicHJl
Zml4IjogbnVsbCwgInR5cGVfaWQiOiAwLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNpZGVu
dCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBpcyBy
ZWFkLW9ubHkuIiwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJoaWRlX25vdGlmaWNhdGlvbiI6
IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxz
ZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiYzNm
MGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9w
ZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiB0cnVlLCAiY2hh
bmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5jaWRl
bnQvaW5jX3RyYWluaW5nIiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwg
eyJpZCI6IDE5NiwgIm5hbWUiOiAicGxheWJvb2tfbmFtZSIsICJ0ZXh0IjogInBsYXlib29rX25h
bWUiLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiIiwgInBsYWNl
aG9sZGVyIjogIiIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBm
YWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2Us
ICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogImZiMDc1
ZDlkLTgwNDgtNGU3Zi1hNzBjLTJiM2YzN2E1ZjQyYiIsICJvcGVyYXRpb25zIjogW10sICJvcGVy
YXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFu
Z2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0
aW9uL3BsYXlib29rX25hbWUiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9
LCB7ImlkIjogMTk3LCAibmFtZSI6ICJob3N0IiwgInRleHQiOiAiaG9zdCIsICJwcmVmaXgiOiBu
dWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6ICIiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlu
cHV0X3R5cGUiOiAidGV4dCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjog
ZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiMzExZWRjMzEtMmIxYS00MDNhLWEw
MGItY2UzMWM2ZjhmYmZkIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9
LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAi
cmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vaG9zdCIsICJ0ZW1w
bGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQiOiAxOTMsICJuYW1lIjogImFu
c2libGVfcGFyYW0xIiwgInRleHQiOiAiYW5zaWJsZV9wYXJhbTEiLCAicHJlZml4IjogbnVsbCwg
InR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiIiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90
eXBlIjogInRleHQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNl
LCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxz
ZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjg3NmYyN2JlLWRmNjYtNDgyNy05Mzg5LWVl
YTJkMTE4YWI2NCIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZh
bHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hf
dGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2Fuc2libGVfcGFyYW0xIiwg
InRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDE5NCwgIm5hbWUi
OiAiYW5zaWJsZV9wYXJhbTIiLCAidGV4dCI6ICJhbnNpYmxlX3BhcmFtMiIsICJwcmVmaXgiOiBu
dWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6ICIiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlu
cHV0X3R5cGUiOiAidGV4dCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjog
ZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiYTczM2ZkZDItNTJkZS00MTc4LWEx
MDgtZWNmYThlMzJkNTBlIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9
LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAi
cmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vYW5zaWJsZV9wYXJh
bTIiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMTk1LCAi
bmFtZSI6ICJhbnNpYmxlX3BhcmFtMyIsICJ0ZXh0IjogImFuc2libGVfcGFyYW0zIiwgInByZWZp
eCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjogIiIsICJwbGFjZWhvbGRlciI6ICIi
LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJjaG9z
ZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0
aW9uIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICIxY2M3ZTBhMS0xN2UzLTQ0
ZmYtYTY3ZS1hMWMxZTAwZDA0NzMiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9uX3Blcm1z
Ijoge30sICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRy
dWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9hbnNpYmxl
X3BhcmFtMyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX1dLCAiaW5jaWRl
bnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1NDcwMjU1Njg0NTMsICJjcmVhdGVfZGF0ZSI6
IDE1NDcwMjU1Njg0NTMsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0
NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCki
LCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAibmFt
ZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZW5hYmxlZCI6IGZhbHNl
LCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2UsICJp
ZCI6IDB9XSwgInBoYXNlcyI6IFtdLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJvdmVycmlkZXMi
OiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3sibmFtZSI6ICJmbl9hbnNpYmxlIiwgInBy
b2dyYW1tYXRpY19uYW1lIjogImZuX2Fuc2libGUiLCAiZGVzdGluYXRpb25fdHlwZSI6IDAsICJl
eHBlY3RfYWNrIjogdHJ1ZSwgInVzZXJzIjogWyJzdXNhaG9vMUBpbi5pYm0uY29tIiwgIm1hcmsu
c2NoZXJmbGluZ0BpYm0uY29tIl0sICJ1dWlkIjogIjdkMjA0Y2RlLWUwMjgtNGJhZC04NWZhLWE4
NzE1MzYyMmU2OSIsICJleHBvcnRfa2V5IjogImZuX2Fuc2libGUifV0sICJhY3Rpb25zIjogW3si
aWQiOiA0OCwgIm5hbWUiOiAiRXhhbXBsZTogQW5zaWJsZSAtIFJ1biBhIHBsYXlib29rIiwgInR5
cGUiOiAxLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiY29uZGl0aW9ucyI6IFt7Im1ldGhv
ZCI6ICJlcXVhbHMiLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFjdC50eXBlIiwgInZhbHVlIjogIlN5
c3RlbSBOYW1lIiwgInR5cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IG51bGx9XSwgImF1dG9t
YXRpb25zIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAid29ya2Zsb3dzIjogWyJl
eGFtcGxlX3J1bl9hX2Fuc2libGVfcGxheWJvb2siXSwgInZpZXdfaXRlbXMiOiBbXSwgInRpbWVv
dXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6ICJmODQ5MWRhNi0wNjg5LTRkOWItODM1ZC1kYjkx
NzQ0ZGMxMzQiLCAiZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBBbnNpYmxlIC0gUnVuIGEgcGxheWJv
b2siLCAibG9naWNfdHlwZSI6ICJhbGwifV0sICJsYXlvdXRzIjogW10sICJub3RpZmljYXRpb25z
IjogbnVsbCwgInRpbWVmcmFtZXMiOiBudWxsLCAibG9jYWxlIjogbnVsbCwgImluZHVzdHJpZXMi
OiBudWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJnZW9zIjogbnVsbCwgInRhc2tfb3JkZXIiOiBb
XSwgImFjdGlvbl9vcmRlciI6IFtdLCAidHlwZXMiOiBbXSwgInNjcmlwdHMiOiBbXSwgImluY2lk
ZW50X2FydGlmYWN0X3R5cGVzIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ3b3JrZmxvd19pZCI6IDMy
LCAibmFtZSI6ICJFeGFtcGxlOiBSdW4gYSBBbnNpYmxlIHBsYXlib29rIiwgInByb2dyYW1tYXRp
Y19uYW1lIjogImV4YW1wbGVfcnVuX2FfYW5zaWJsZV9wbGF5Ym9vayIsICJvYmplY3RfdHlwZSI6
ICJhcnRpZmFjdCIsICJkZXNjcmlwdGlvbiI6ICIiLCAiY3JlYXRvcl9pZCI6ICJzdXNhaG9vMUBp
bi5pYm0uY29tIiwgImxhc3RfbW9kaWZpZWRfYnkiOiAic3VzYWhvbzFAaW4uaWJtLmNvbSIsICJs
YXN0X21vZGlmaWVkX3RpbWUiOiAxNTQ3MDI1MjI0MzM5LCAiZXhwb3J0X2tleSI6ICJleGFtcGxl
X3J1bl9hX2Fuc2libGVfcGxheWJvb2siLCAidXVpZCI6ICJjYWYzMjg1Mi1kMWExLTQ4YjUtOTBj
ZS1lYjQ2MzgwNjVlZmMiLCAiY29udGVudCI6IHsid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9ydW5f
YV9hbnNpYmxlX3BsYXlib29rIiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rp
bmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3Bl
Yy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3Jn
L3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3Jn
L3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9z
cGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5p
Ym0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVt
YVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNl
XCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nl
c3MgaWQ9XCJleGFtcGxlX3J1bl9hX2Fuc2libGVfcGxheWJvb2tcIiBpc0V4ZWN1dGFibGU9XCJ0
cnVlXCIgbmFtZT1cIkV4YW1wbGU6IFJ1biBhIEFuc2libGUgcGxheWJvb2tcIj48ZG9jdW1lbnRh
dGlvbi8+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2Vx
dWVuY2VGbG93XzBzcXdhMjc8L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9
XCJTZXJ2aWNlVGFza18xY2t0anFsXCIgbmFtZT1cIkFuc2libGVcIiByZXNpbGllbnQ6dHlwZT1c
ImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1c
ImYzNGZhYjMzLTU0ZDgtNDhmYi1hYTc0LTUzMGFmMjU5NTdhOVwiPntcImlucHV0c1wiOntcImZi
MDc1ZDlkLTgwNDgtNGU3Zi1hNzBjLTJiM2YzN2E1ZjQyYlwiOntcImlucHV0X3R5cGVcIjpcInN0
YXRpY1wiLFwic3RhdGljX2lucHV0XCI6e1wibXVsdGlzZWxlY3RfdmFsdWVcIjpbXSxcInRleHRf
dmFsdWVcIjpcInBsYXlib29rMVwifX19LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwic3Rk
b3V0ID0gcmVzdWx0c1sndmFsdWUnXVsnc3Rkb3V0J11cXG5zdGRlcnIgPSByZXN1bHRzWyd2YWx1
ZSddWydzdGRlcnInXVxcbmluY2lkZW50LmFkZE5vdGUoc3Rkb3V0KVxcbmluY2lkZW50LmFkZE5v
dGUoc3JkZXJyKVwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuaG9zdCA9IGFy
dGlmYWN0LnZhbHVlXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48
aW5jb21pbmc+U2VxdWVuY2VGbG93XzBzcXdhMjc8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5j
ZUZsb3dfMWY5djJ6aTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwi
U2VxdWVuY2VGbG93XzBzcXdhMjdcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0
YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18xY2t0anFsXCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50
XzB0ZjFxeDVcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFmOXYyemk8L2luY29taW5nPjwvZW5k
RXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xZjl2MnppXCIgc291cmNlUmVm
PVwiU2VydmljZVRhc2tfMWNrdGpxbFwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzB0ZjFxeDVcIi8+
PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0
IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBp
ZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1c
IiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vzcz48YnBtbmRp
OkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5F
bGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFz
eG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjRc
IiB5PVwiMTg1XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwi
IHdpZHRoPVwiOTBcIiB4PVwiMTU5XCIgeT1cIjIyMFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90
YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlv
bl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50
IHg9XCIxNzFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIxN1wiLz48b21nZGk6d2F5
cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBt
bmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tf
MWNrdGpxbFwiIGlkPVwiU2VydmljZVRhc2tfMWNrdGpxbF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIzNDdcIiB5PVwiMTYzXCIvPjwvYnBtbmRpOkJQ
TU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzBzcXdh
MjdcIiBpZD1cIlNlcXVlbmNlRmxvd18wc3F3YTI3X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIy
MDBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwM1wiLz48b21nZGk6d2F5cG9pbnQg
eD1cIjM0N1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjAzXCIvPjxicG1uZGk6QlBN
TkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTJcIiB3aWR0aD1cIjBcIiB4PVwiMjczLjVc
IiB5PVwiMTgyXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRp
OkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzB0ZjFxeDVcIiBpZD1cIkVuZEV2ZW50
XzB0ZjFxeDVfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9
XCI2MzdcIiB5PVwiMTg1XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMTJcIiB3aWR0aD1cIjBcIiB4PVwiNjU1XCIgeT1cIjIyNVwiLz48L2JwbW5kaTpCUE1OTGFi
ZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1
ZW5jZUZsb3dfMWY5djJ6aVwiIGlkPVwiU2VxdWVuY2VGbG93XzFmOXYyemlfZGlcIj48b21nZGk6
d2F5cG9pbnQgeD1cIjQ0N1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjAzXCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiNjM3XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDNc
Ii8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxMlwiIHdpZHRoPVwi
MFwiIHg9XCI1NDJcIiB5PVwiMTgyXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1O
RWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9u
cz4iLCAidmVyc2lvbiI6IDN9LCAiYWN0aW9ucyI6IFtdfV0sICJyb2xlcyI6IFtdLCAid29ya3Nw
YWNlcyI6IFtdLCAiZnVuY3Rpb25zIjogW3siaWQiOiAyOSwgIm5hbWUiOiAiZm5fYW5zaWJsZSIs
ICJkaXNwbGF5X25hbWUiOiAiQW5zaWJsZSIsICJkZXNjcmlwdGlvbiI6IHsiZm9ybWF0IjogInRl
eHQiLCAiY29udGVudCI6ICJBbnNpYmxlIGlzIHNpbXBsZSBJVCBlbmdpbmUgZm9yIGF1dG9tYXRp
b24sIGl0IGlzIGRlc2lnbmVkIGZvciBtYW5hZ2UgbWFueSBzeXN0ZW1zLCByYXRoZXIgdGhhbiBq
dXN0IG9uZSBhdCBhIHRpbWUuIn0sICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAiZm5fYW5zaWJsZSIs
ICJleHBvcnRfa2V5IjogImZuX2Fuc2libGUiLCAidXVpZCI6ICJmMzRmYWIzMy01NGQ4LTQ4ZmIt
YWE3NC01MzBhZjI1OTU3YTkiLCAidmVyc2lvbiI6IDUsICJjcmVhdG9yIjogeyJpZCI6IDUsICJ0
eXBlIjogInVzZXIiLCAibmFtZSI6ICJzdXNhaG9vMUBpbi5pYm0uY29tIiwgImRpc3BsYXlfbmFt
ZSI6ICJTdWRpcCBTYWhvbyJ9LCAibGFzdF9tb2RpZmllZF9ieSI6IHsiaWQiOiA1LCAidHlwZSI6
ICJ1c2VyIiwgIm5hbWUiOiAic3VzYWhvbzFAaW4uaWJtLmNvbSIsICJkaXNwbGF5X25hbWUiOiAi
U3VkaXAgU2Fob28ifSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NDcwMjQ4NTEzOTksICJ2aWV3
X2l0ZW1zIjogW3sic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQi
OiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICIz
MTFlZGMzMS0yYjFhLTQwM2EtYTAwYi1jZTMxYzZmOGZiZmQiLCAic2hvd19saW5rX2hlYWRlciI6
IGZhbHNlfSwgeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6
ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogImZi
MDc1ZDlkLTgwNDgtNGU3Zi1hNzBjLTJiM2YzN2E1ZjQyYiIsICJzaG93X2xpbmtfaGVhZGVyIjog
ZmFsc2V9LCB7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50Ijog
ImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiODc2
ZjI3YmUtZGY2Ni00ODI3LTkzODktZWVhMmQxMThhYjY0IiwgInNob3dfbGlua19oZWFkZXIiOiBm
YWxzZX0sIHsic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAi
ZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICJhNzMz
ZmRkMi01MmRlLTQxNzgtYTEwOC1lY2ZhOGUzMmQ1MGUiLCAic2hvd19saW5rX2hlYWRlciI6IGZh
bHNlfSwgeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJm
aWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogIjFjYzdl
MGExLTE3ZTMtNDRmZi1hNjdlLWExYzFlMDBkMDQ3MyIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFs
c2V9XSwgIndvcmtmbG93cyI6IFt7IndvcmtmbG93X2lkIjogMzIsICJuYW1lIjogIkV4YW1wbGU6
IFJ1biBhIEFuc2libGUgcGxheWJvb2siLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9y
dW5fYV9hbnNpYmxlX3BsYXlib29rIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImRlc2Ny
aXB0aW9uIjogbnVsbCwgInV1aWQiOiBudWxsLCAiYWN0aW9ucyI6IFtdfV19XX0=
"""
    )