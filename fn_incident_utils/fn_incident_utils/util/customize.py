# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_incident_utils"""

try:
    from resilient import ImportDefinition
except ImportError:
    # Support Apps running on resilient-circuits < v35.0.195
    from resilient_circuits.util import ImportDefinition


def codegen_reload_data():
    """
    Parameters required reload codegen for the fn_incident_utils package
    """
    return {
        "package": u"fn_incident_utils",
        "message_destinations": [u"fn_incident_utils"],
        "functions": [u"incident_utils_close_incident"],
        "workflows": [u"example_close_incident"],
        "actions": [u"Example: Close Incident"],
        "incident_fields": [],
        "incident_artifact_types": [],
        "datatables": [],
        "automatic_tasks": [],
        "scripts": []
    }


def customization_data(client=None):
    """
    Returns a Generator of ImportDefinitions (Customizations).
    Install them using `resilient-circuits customize`

    Contents:
    - Message Destinations:
        - fn_incident_utils
    - Functions:
        - incident_utils_close_incident
    - Workflows:
        - example_close_incident
    - Rules:
        - Example: Close Incident
    """

    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFt7ImV2YWx1YXRpb25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJpbmNpZGVu
dC5wbGFuX3N0YXR1cyIsICJtZXRob2QiOiAiZXF1YWxzIiwgInR5cGUiOiBudWxsLCAidmFsdWUi
OiAiQWN0aXZlIn1dLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IENs
b3NlIEluY2lkZW50IiwgImlkIjogMTUsICJsb2dpY190eXBlIjogImFsbCIsICJtZXNzYWdlX2Rl
c3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBDbG9zZSBJbmNpZGVudCIsICJvYmpl
Y3RfdHlwZSI6ICJpbmNpZGVudCIsICJ0YWdzIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQw
MCwgInR5cGUiOiAxLCAidXVpZCI6ICJkOTljOWQ0OS1hODIxLTRmNWQtOWM5Mi0yODY1Mzk2ZDYy
YzgiLCAidmlld19pdGVtcyI6IFt7ImNvbnRlbnQiOiAiZjFmZTM2YTUtZGYyNy00OWYwLTg1ZDMt
ODM0OTg3ZWU0ZjY5IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFj
dGlvbmludm9jYXRpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFs
c2UsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX2Nsb3NlX2lu
Y2lkZW50Il19XSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTkyODA3
NTcwNzIwLCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjogMiwgImV4dGVuc2lvbnMiOiBbXSwgImZp
ZWxkcyI6IFt7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2luY2lkZW50X2lkIiwgImhpZGVfbm90aWZp
Y2F0aW9uIjogZmFsc2UsICJpZCI6IDE4MSwgImlucHV0X3R5cGUiOiAibnVtYmVyIiwgImludGVy
bmFsIjogZmFsc2UsICJpc190cmFja2VkIjogZmFsc2UsICJuYW1lIjogImluY2lkZW50X2lkIiwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAi
IiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJlcXVpcmVkIjogImFsd2F5
cyIsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4
dCI6ICJpbmNpZGVudF9pZCIsICJ0b29sdGlwIjogIiIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjog
ImIxM2E0MGUzLWU3ZmYtNDY0ZS05NjZjLWFlYTgzZWI1YWJiOSIsICJ2YWx1ZXMiOiBbXX0sIHsi
YWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxj
dWxhdGVkIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVm
YXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBv
cnRfa2V5IjogIl9fZnVuY3Rpb24vY2xvc2VfZmllbGRzIiwgImhpZGVfbm90aWZpY2F0aW9uIjog
ZmFsc2UsICJpZCI6IDE4MiwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNl
LCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJjbG9zZV9maWVsZHMiLCAib3BlcmF0aW9u
X3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4
IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjog
W10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAiY2xvc2VfZmllbGRzIiwgInRvb2x0aXAiOiAi
QSBKU09OIFN0cmluZyBvZiB0aGUgZmllbGRzIHJlcXVpcmVkIHRvIGNsb3NlIGFuIEluY2lkZW50
IGUuZy46IHsnZmllbGQxJzondmFsdWUxJywnZmllbGQyJzondmFsdWUyJ30iLCAidHlwZV9pZCI6
IDExLCAidXVpZCI6ICI3YWQwNjI0NS1jMmE2LTRhYjQtODNmZC00ZWFjMWRlYjgzZWUiLCAidmFs
dWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4i
OiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6
IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL2luY2lkZW50X3V0aWxzX2Ns
b3NlX2ZpZWxkcyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAxODMsICJpbnB1
dF90eXBlIjogInRleHRhcmVhIiwgImludGVybmFsIjogZmFsc2UsICJpc190cmFja2VkIjogZmFs
c2UsICJuYW1lIjogImluY2lkZW50X3V0aWxzX2Nsb3NlX2ZpZWxkcyIsICJvcGVyYXRpb25fcGVy
bXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogImUuZy46IHsnZmllbGQx
JzondmFsdWUxJywnZmllbGQyJzondmFsdWUyJ30gIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwg
InJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1w
bGF0ZXMiOiBbXSwgInRleHQiOiAiSW5jaWRlbnQgVXRpbHMgQ2xvc2UgRmllbGRzIiwgInRvb2x0
aXAiOiAiRW50ZXIgYSBKU09OIFN0cmluZyBvZiB0aGUgZmllbGRzIHJlcXVpcmVkIHRvIGNsb3Nl
IGFuIEluY2lkZW50IiwgInR5cGVfaWQiOiA2LCAidXVpZCI6ICJmMWZlMzZhNS1kZjI3LTQ5ZjAt
ODVkMy04MzQ5ODdlZTRmNjkiLCAidmFsdWVzIjogW119LCB7ImV4cG9ydF9rZXkiOiAiaW5jaWRl
bnQvaW50ZXJuYWxfY3VzdG9taXphdGlvbnNfZmllbGQiLCAiaWQiOiAwLCAiaW5wdXRfdHlwZSI6
ICJ0ZXh0IiwgImludGVybmFsIjogdHJ1ZSwgIm5hbWUiOiAiaW50ZXJuYWxfY3VzdG9taXphdGlv
bnNfZmllbGQiLCAicmVhZF9vbmx5IjogdHJ1ZSwgInRleHQiOiAiQ3VzdG9taXphdGlvbnMgRmll
bGQgKGludGVybmFsKSIsICJ0eXBlX2lkIjogMCwgInV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4
LWFkMzktNGEwMDA0MDQ0YWExIn1dLCAiZnVuY3Rpb25zIjogW3siY3JlYXRvciI6IHsiZGlzcGxh
eV9uYW1lIjogIlNhYmluYSBDemVybmVja2EiLCAiaWQiOiAxLCAibmFtZSI6ICJzYWJpbmEuY3pl
cm5lY2thMUBpZS5pYm0uY29tIiwgInR5cGUiOiAidXNlciJ9LCAiZGVzY3JpcHRpb24iOiB7ImZv
cm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAiRnVuY3Rpb24gdGhhdCB0YWtlcyBhbiBpbmNpZGVu
dF9pZCBhbmQgYSBKU09OIFN0cmluZyBvZiBmaWVsZF9uYW1lIGFuZCBmaWVsZF92YWx1ZSBwYWly
cyB0byBjbG9zZSBhbiBJbmNpZGVudC4ifSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJmbl9pbmNp
ZGVudF91dGlscyIsICJkaXNwbGF5X25hbWUiOiAiSW5jaWRlbnQgVXRpbHM6IENsb3NlIEluY2lk
ZW50IiwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnRfdXRpbHNfY2xvc2VfaW5jaWRlbnQiLCAiaWQi
OiAzLCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9uYW1lIjogIlNhYmluYSBDemVybmVj
a2EiLCAiaWQiOiAxLCAibmFtZSI6ICJzYWJpbmEuY3plcm5lY2thMUBpZS5pYm0uY29tIiwgInR5
cGUiOiAidXNlciJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU5MjI0NjgxMjI4NiwgIm5hbWUi
OiAiaW5jaWRlbnRfdXRpbHNfY2xvc2VfaW5jaWRlbnQiLCAidGFncyI6IFtdLCAidXVpZCI6ICI3
YTExNTZmNy1hMDBkLTRmNzUtODAzNS1hNDFmNDBhYzk4MGYiLCAidmVyc2lvbiI6IDIsICJ2aWV3
X2l0ZW1zIjogW3siY29udGVudCI6ICJiMTNhNDBlMy1lN2ZmLTQ2NGUtOTY2Yy1hZWE4M2ViNWFi
YjkiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIs
ICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwi
OiBudWxsfSwgeyJjb250ZW50IjogIjdhZDA2MjQ1LWMyYTYtNGFiNC04M2ZkLTRlYWMxZGViODNl
ZSIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwg
InNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6
IG51bGx9XSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImRlc2NyaXB0aW9uIjogbnVs
bCwgIm5hbWUiOiAiRXhhbXBsZTogQ2xvc2UgSW5jaWRlbnQiLCAib2JqZWN0X3R5cGUiOiAiaW5j
aWRlbnQiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9jbG9zZV9pbmNpZGVudCIsICJ0
YWdzIjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogNH1dfV0sICJnZW9zIjogbnVs
bCwgImdyb3VwcyI6IG51bGwsICJpZCI6IDgsICJpbmJvdW5kX21haWxib3hlcyI6IG51bGwsICJp
bmNpZGVudF9hcnRpZmFjdF90eXBlcyI6IFtdLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVf
ZGF0ZSI6IDE2MDY4MjU5ODg4OTIsICJjcmVhdGVfZGF0ZSI6IDE2MDY4MjU5ODg4OTIsICJ1dWlk
IjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6
ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0
b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBh
Y2thZ2VzIChpbnRlcm5hbCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJw
YXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgImluZHVzdHJpZXMi
OiBudWxsLCAibGF5b3V0cyI6IFtdLCAibG9jYWxlIjogbnVsbCwgIm1lc3NhZ2VfZGVzdGluYXRp
b25zIjogW3siYXBpX2tleXMiOiBbImZiNWI5MGM1LTc1MDEtNDBhOS1hZmRmLTRkOTFiZDZlYWEx
YyJdLCAiZGVzdGluYXRpb25fdHlwZSI6IDAsICJleHBlY3RfYWNrIjogdHJ1ZSwgImV4cG9ydF9r
ZXkiOiAiZm5faW5jaWRlbnRfdXRpbHMiLCAibmFtZSI6ICJmbl9pbmNpZGVudF91dGlscyIsICJw
cm9ncmFtbWF0aWNfbmFtZSI6ICJmbl9pbmNpZGVudF91dGlscyIsICJ0YWdzIjogW10sICJ1c2Vy
cyI6IFsic2FiaW5hLmN6ZXJuZWNrYTFAaWUuaWJtLmNvbSJdLCAidXVpZCI6ICIzNmU5ZjNmYy1j
M2U5LTRiY2YtODViZC1hYjIyNDQ2YzI0NjEifV0sICJub3RpZmljYXRpb25zIjogbnVsbCwgIm92
ZXJyaWRlcyI6IFtdLCAicGhhc2VzIjogW10sICJyZWd1bGF0b3JzIjogbnVsbCwgInJvbGVzIjog
W10sICJzY3JpcHRzIjogW10sICJzZXJ2ZXJfdmVyc2lvbiI6IHsiYnVpbGRfbnVtYmVyIjogNTYz
NCwgIm1ham9yIjogMzYsICJtaW5vciI6IDAsICJ2ZXJzaW9uIjogIjM2LjAuNTYzNCJ9LCAidGFn
cyI6IFtdLCAidGFza19vcmRlciI6IFtdLCAidGltZWZyYW1lcyI6IG51bGwsICJ0eXBlcyI6IFtd
LCAid29ya2Zsb3dzIjogW3siYWN0aW9ucyI6IFtdLCAiY29udGVudCI6IHsidmVyc2lvbiI6IDQ1
LCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9jbG9zZV9pbmNpZGVudCIsICJ4bWwiOiAiPD94bWwg
dmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwi
aHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5k
aT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdk
Yz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9
XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVu
dD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3
dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8y
MDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2Ft
dW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9jbG9zZV9pbmNpZGVudFwiIGlz
RXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTogQ2xvc2UgSW5jaWRlbnRcIj48ZG9j
dW1lbnRhdGlvbj5BbiBleGFtcGxlIHdvcmtmbG93IHdoaWNoIHRha2VzIGFuIGluY2lkZW50X2lk
IGFuZCBvcHRpb25hbCBjbG9zZV9maWVsZHMgaW4gb3JkZXIgdG8gY2xvc2UgYW4gSW5jaWRlbnQu
PC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91
dGdvaW5nPlNlcXVlbmNlRmxvd18xa204cTlvPC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZp
Y2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMHE2OTJzMlwiIG5hbWU9XCJJbmNpZGVudCBVdGlsczog
Q2xvc2UgSW5jaWRlbnRcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVs
ZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cIjdhMTE1NmY3LWEwMGQtNGY3NS04MDM1
LWE0MWY0MGFjOTgwZlwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwi
Olwibm90ZV90ZXh0ID0gXFxcIlJlc3VsdCBmcm9tIEV4YW1wbGU6IENsb3NlIEluY2lkZW50IG9u
IEluY2lkZW50IHswfTogJmx0O3N0cm9uZyZndDt7MX0mbHQ7L3N0cm9uZyZndDtcXFwiLmZvcm1h
dChyZXN1bHRzLmlucHV0c1snaW5jaWRlbnRfaWQnXSwgXFxcXFxcblxcXCJzdWNjZXNzXFxcIiBp
ZiByZXN1bHRzLnN1Y2Nlc3MgZWxzZSBcXFwiZmFpbHVyZS4mbHQ7YnImZ3Q7UmVhc29uOiB7fVxc
XCIuZm9ybWF0KHJlc3VsdHMucmVhc29uKSlcXG5pbmNpZGVudC5hZGROb3RlKGhlbHBlci5jcmVh
dGVSaWNoVGV4dChub3RlX3RleHQpKVwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1
dHMuaW5jaWRlbnRfaWQgPSBpbmNpZGVudC5pZFxcbml1X2Nsb3NlX2ZpZWxkcyA9IHJ1bGUucHJv
cGVydGllcy5pbmNpZGVudF91dGlsc19jbG9zZV9maWVsZHMuY29udGVudFxcbmlucHV0cy5jbG9z
ZV9maWVsZHMgPSB1XFxcInt9XFxcIi5mb3JtYXQoaXVfY2xvc2VfZmllbGRzKVwifTwvcmVzaWxp
ZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18x
a204cTlvPC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzB2eWNuZ288L291dGdvaW5n
Pjwvc2VydmljZVRhc2s+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xa204cTlvXCIg
c291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tf
MHE2OTJzMlwiLz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wNmRsM29kXCI+PGluY29taW5nPlNl
cXVlbmNlRmxvd18wdnljbmdvPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9
XCJTZXF1ZW5jZUZsb3dfMHZ5Y25nb1wiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzBxNjkyczJc
IiB0YXJnZXRSZWY9XCJFbmRFdmVudF8wNmRsM29kXCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRl
eHRBbm5vdGF0aW9uXzFmNW93ZzBcIj48dGV4dD48IVtDREFUQVtJbnB1dHM6XG5pbmNpZGVudF9p
ZCwgY2xvc2VfZmllbGRzXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlk
PVwiQXNzb2NpYXRpb25fMDI3cjVxcFwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzBxNjkyczJc
IiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xZjVvd2cwXCIvPjx0ZXh0QW5ub3RhdGlvbiBp
ZD1cIlRleHRBbm5vdGF0aW9uXzFqZG9lMXNcIj48dGV4dD48IVtDREFUQVtPdXRwdXQ6XG5DbG9z
ZXMgdGhlIEluY2lkZW50IHNob3VsZCByZWZsZWN0IHRoZSBhY3Rpb24gYWZ0ZXIgdGhlIGZ1bmN0
aW9uIHJ1bnMuIEEgTm90ZSBpcyBjcmVhdGVkIHdpdGggdGhlIGZ1bmN0aW9uIHJlc3VsdHMuXG5d
XT48L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8w
MHljb3dtXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMHE2OTJzMlwiIHRhcmdldFJlZj1cIlRl
eHRBbm5vdGF0aW9uXzFqZG9lMXNcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9
XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmlu
ZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJT
dGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJw
bW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9
XCIxNTdcIiB5PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+
PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wcTY5MnMyXCIgaWQ9
XCJTZXJ2aWNlVGFza18wcTY5MnMyX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdp
ZHRoPVwiMTAwXCIgeD1cIjM1MlwiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1u
ZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMWttOHE5b1wiIGlkPVwiU2Vx
dWVuY2VGbG93XzFrbThxOW9fZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjc1XCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIyNzVc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1c
IjM1MlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxh
YmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMjkwXCIgeT1c
IjE5OS41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQ
TU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFmNW93ZzBcIiBpZD1cIlRleHRB
bm5vdGF0aW9uXzFmNW93ZzBfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjU4XCIgd2lkdGg9
XCI5OFwiIHg9XCIyMzFcIiB5PVwiMzNcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBN
TkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8wMjdyNXFwXCIgaWQ9XCJBc3NvY2lhdGlv
bl8wMjdyNXFwX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzNjhcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjE2NlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjMwNVwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiOTFcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hh
cGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xamRvZTFzXCIgaWQ9XCJUZXh0QW5ub3Rh
dGlvbl8xamRvZTFzX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI3OVwiIHdpZHRoPVwiMTg5
XCIgeD1cIjQ2NVwiIHk9XCIxMlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRn
ZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzAweWNvd21cIiBpZD1cIkFzc29jaWF0aW9uXzAw
eWNvd21fZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQ0M1wiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMTY3XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTIxXCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCI5MVwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBi
cG1uRWxlbWVudD1cIkVuZEV2ZW50XzA2ZGwzb2RcIiBpZD1cIkVuZEV2ZW50XzA2ZGwzb2RfZGlc
Ij48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI1OTYuODAzNzk3
NDY4MzU0NFwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI2MTQuODAzNzk3NDY4MzU0NFwiIHk9XCIyMjdcIi8+
PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJw
bW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzB2eWNuZ29cIiBpZD1cIlNlcXVlbmNlRmxvd18wdnlj
bmdvX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0NTJcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjU5N1wiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNTI0LjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5M
YWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRp
YWdyYW0+PC9kZWZpbml0aW9ucz4ifSwgImNvbnRlbnRfdmVyc2lvbiI6IDQ1LCAiY3JlYXRvcl9p
ZCI6ICJzYWJpbmEuY3plcm5lY2thMUBpZS5pYm0uY29tIiwgImRlc2NyaXB0aW9uIjogIkFuIGV4
YW1wbGUgd29ya2Zsb3cgd2hpY2ggdGFrZXMgYW4gaW5jaWRlbnRfaWQgYW5kIG9wdGlvbmFsIGNs
b3NlX2ZpZWxkcyBpbiBvcmRlciB0byBjbG9zZSBhbiBJbmNpZGVudC4iLCAiZXhwb3J0X2tleSI6
ICJleGFtcGxlX2Nsb3NlX2luY2lkZW50IiwgImxhc3RfbW9kaWZpZWRfYnkiOiAic2FiaW5hLmN6
ZXJuZWNrYTFAaWUuaWJtLmNvbSIsICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTkyMzk3OTM0MzI0
LCAibmFtZSI6ICJFeGFtcGxlOiBDbG9zZSBJbmNpZGVudCIsICJvYmplY3RfdHlwZSI6ICJpbmNp
ZGVudCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX2Nsb3NlX2luY2lkZW50IiwgInRh
Z3MiOiBbXSwgInV1aWQiOiAiMzQ4ZDEwZjctMTRlMy00MmJmLThlZjgtNTgzNGZhZWIyNWIxIiwg
IndvcmtmbG93X2lkIjogNH1dLCAid29ya3NwYWNlcyI6IFtdfQ==
""")
