# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_incident_utils"""

try:
    from resilient import ImportDefinition
except ImportError:
    # Support Apps running on resilient-circuits < v35.0.195
    from resilient_circuits.util import ImportDefinition


def codegen_reload_data():
    """
    Parameters required reload codegen for the fn_incident_utils package
    """
    return {
        "package": u"fn_incident_utils",
        "message_destinations": [u"fn_incident_utils"],
        "functions": [u"incident_utils_close_incident"],
        "workflows": [u"example_close_incident"],
        "actions": [u"Example: Close Incident"],
        "incident_fields": [],
        "incident_artifact_types": [],
        "datatables": [],
        "automatic_tasks": [],
        "scripts": []
    }


def customization_data(client=None):
    """
    Returns a Generator of ImportDefinitions (Customizations).
    Install them using `resilient-circuits customize`

    Contents:
    - Message Destinations:
        - fn_incident_utils
    - Functions:
        - incident_utils_close_incident
    - Workflows:
        - example_close_incident
    - Rules:
        - Example: Close Incident
    """

    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IENs
b3NlIEluY2lkZW50IiwgImlkIjogMTUsICJsb2dpY190eXBlIjogImFsbCIsICJtZXNzYWdlX2Rl
c3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBDbG9zZSBJbmNpZGVudCIsICJvYmpl
Y3RfdHlwZSI6ICJpbmNpZGVudCIsICJ0YWdzIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQw
MCwgInR5cGUiOiAxLCAidXVpZCI6ICJkOTljOWQ0OS1hODIxLTRmNWQtOWM5Mi0yODY1Mzk2ZDYy
YzgiLCAidmlld19pdGVtcyI6IFt7ImNvbnRlbnQiOiAiZjFmZTM2YTUtZGYyNy00OWYwLTg1ZDMt
ODM0OTg3ZWU0ZjY5IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFj
dGlvbmludm9jYXRpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFs
c2UsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX2Nsb3NlX2lu
Y2lkZW50Il19XSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTkyMzE5
NTE5MDMwLCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjogMiwgImV4dGVuc2lvbnMiOiBbXSwgImZp
ZWxkcyI6IFt7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2Nsb3NlX2ZpZWxkcyIsICJoaWRlX25vdGlm
aWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAxODIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJu
YWwiOiBmYWxzZSwgImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAiY2xvc2VfZmllbGRzIiwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAi
IiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogImNsb3NlX2ZpZWxkcyIsICJ0
b29sdGlwIjogIkEgSlNPTiBTdHJpbmcgb2YgdGhlIGZpZWxkcyByZXF1aXJlZCB0byBjbG9zZSBh
biBJbmNpZGVudCBlLmcuOiB7J2ZpZWxkMSc6J3ZhbHVlMScsJ2ZpZWxkMic6J3ZhbHVlMid9Iiwg
InR5cGVfaWQiOiAxMSwgInV1aWQiOiAiN2FkMDYyNDUtYzJhNi00YWI0LTgzZmQtNGVhYzFkZWI4
M2VlIiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFu
a19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVl
LCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRl
cHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9pbmNpZGVudF9pZCIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAxODEsICJpbnB1dF90eXBlIjogIm51
bWJlciIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJp
bmNpZGVudF9pZCIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBs
YWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyZXF1
aXJlZCI6ICJhbHdheXMiLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0
ZXMiOiBbXSwgInRleHQiOiAiaW5jaWRlbnRfaWQiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6
IDExLCAidXVpZCI6ICJiMTNhNDBlMy1lN2ZmLTQ2NGUtOTY2Yy1hZWE4M2ViNWFiYjkiLCAidmFs
dWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4i
OiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6
IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL2luY2lkZW50X3V0aWxzX2Ns
b3NlX2ZpZWxkcyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAxODMsICJpbnB1
dF90eXBlIjogInRleHRhcmVhIiwgImludGVybmFsIjogZmFsc2UsICJpc190cmFja2VkIjogZmFs
c2UsICJuYW1lIjogImluY2lkZW50X3V0aWxzX2Nsb3NlX2ZpZWxkcyIsICJvcGVyYXRpb25fcGVy
bXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogImUuZy46IHsnZmllbGQx
JzondmFsdWUxJywnZmllbGQyJzondmFsdWUyJ30gIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwg
InJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1w
bGF0ZXMiOiBbXSwgInRleHQiOiAiSW5jaWRlbnQgVXRpbHMgQ2xvc2UgRmllbGRzIiwgInRvb2x0
aXAiOiAiRW50ZXIgYSBKU09OIFN0cmluZyBvZiB0aGUgZmllbGRzIHJlcXVpcmVkIHRvIGNsb3Nl
IGFuIEluY2lkZW50IiwgInR5cGVfaWQiOiA2LCAidXVpZCI6ICJmMWZlMzZhNS1kZjI3LTQ5ZjAt
ODVkMy04MzQ5ODdlZTRmNjkiLCAidmFsdWVzIjogW119LCB7ImV4cG9ydF9rZXkiOiAiaW5jaWRl
bnQvaW50ZXJuYWxfY3VzdG9taXphdGlvbnNfZmllbGQiLCAiaWQiOiAwLCAiaW5wdXRfdHlwZSI6
ICJ0ZXh0IiwgImludGVybmFsIjogdHJ1ZSwgIm5hbWUiOiAiaW50ZXJuYWxfY3VzdG9taXphdGlv
bnNfZmllbGQiLCAicmVhZF9vbmx5IjogdHJ1ZSwgInRleHQiOiAiQ3VzdG9taXphdGlvbnMgRmll
bGQgKGludGVybmFsKSIsICJ0eXBlX2lkIjogMCwgInV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4
LWFkMzktNGEwMDA0MDQ0YWExIn1dLCAiZnVuY3Rpb25zIjogW3siY3JlYXRvciI6IHsiZGlzcGxh
eV9uYW1lIjogIlNhYmluYSBDemVybmVja2EiLCAiaWQiOiAxLCAibmFtZSI6ICJzYWJpbmEuY3pl
cm5lY2thMUBpZS5pYm0uY29tIiwgInR5cGUiOiAidXNlciJ9LCAiZGVzY3JpcHRpb24iOiB7ImZv
cm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAiRnVuY3Rpb24gdGhhdCB0YWtlcyBhbiBpbmNpZGVu
dF9pZCBhbmQgYSBKU09OIFN0cmluZyBvZiBmaWVsZF9uYW1lIGFuZCBmaWVsZF92YWx1ZSBwYWly
cyB0byBjbG9zZSBhbiBJbmNpZGVudC4ifSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJmbl9pbmNp
ZGVudF91dGlscyIsICJkaXNwbGF5X25hbWUiOiAiSW5jaWRlbnQgVXRpbHM6IENsb3NlIEluY2lk
ZW50IiwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnRfdXRpbHNfY2xvc2VfaW5jaWRlbnQiLCAiaWQi
OiAzLCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9uYW1lIjogIlNhYmluYSBDemVybmVj
a2EiLCAiaWQiOiAxLCAibmFtZSI6ICJzYWJpbmEuY3plcm5lY2thMUBpZS5pYm0uY29tIiwgInR5
cGUiOiAidXNlciJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU5MjI0NjgxMjI4NiwgIm5hbWUi
OiAiaW5jaWRlbnRfdXRpbHNfY2xvc2VfaW5jaWRlbnQiLCAidGFncyI6IFtdLCAidXVpZCI6ICI3
YTExNTZmNy1hMDBkLTRmNzUtODAzNS1hNDFmNDBhYzk4MGYiLCAidmVyc2lvbiI6IDIsICJ2aWV3
X2l0ZW1zIjogW3siY29udGVudCI6ICJiMTNhNDBlMy1lN2ZmLTQ2NGUtOTY2Yy1hZWE4M2ViNWFi
YjkiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIs
ICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwi
OiBudWxsfSwgeyJjb250ZW50IjogIjdhZDA2MjQ1LWMyYTYtNGFiNC04M2ZkLTRlYWMxZGViODNl
ZSIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwg
InNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6
IG51bGx9XSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImRlc2NyaXB0aW9uIjogbnVs
bCwgIm5hbWUiOiAiRXhhbXBsZTogQ2xvc2UgSW5jaWRlbnQiLCAib2JqZWN0X3R5cGUiOiAiaW5j
aWRlbnQiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9jbG9zZV9pbmNpZGVudCIsICJ0
YWdzIjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogNH1dfV0sICJnZW9zIjogbnVs
bCwgImdyb3VwcyI6IG51bGwsICJpZCI6IDUsICJpbmJvdW5kX21haWxib3hlcyI6IG51bGwsICJp
bmNpZGVudF9hcnRpZmFjdF90eXBlcyI6IFtdLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVf
ZGF0ZSI6IDE2MDU2MzI1MTYyMzMsICJjcmVhdGVfZGF0ZSI6IDE2MDU2MzI1MTYyMzMsICJ1dWlk
IjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6
ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0
b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBh
Y2thZ2VzIChpbnRlcm5hbCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJw
YXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgImluZHVzdHJpZXMi
OiBudWxsLCAibGF5b3V0cyI6IFtdLCAibG9jYWxlIjogbnVsbCwgIm1lc3NhZ2VfZGVzdGluYXRp
b25zIjogW3siYXBpX2tleXMiOiBbXSwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2Fj
ayI6IHRydWUsICJleHBvcnRfa2V5IjogImZuX2luY2lkZW50X3V0aWxzIiwgIm5hbWUiOiAiZm5f
aW5jaWRlbnRfdXRpbHMiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZm5faW5jaWRlbnRfdXRpbHMi
LCAidGFncyI6IFtdLCAidXNlcnMiOiBbInNhYmluYS5jemVybmVja2ExQGllLmlibS5jb20iXSwg
InV1aWQiOiAiMzZlOWYzZmMtYzNlOS00YmNmLTg1YmQtYWIyMjQ0NmMyNDYxIn1dLCAibm90aWZp
Y2F0aW9ucyI6IG51bGwsICJvdmVycmlkZXMiOiBbXSwgInBoYXNlcyI6IFtdLCAicmVndWxhdG9y
cyI6IG51bGwsICJyb2xlcyI6IFtdLCAic2NyaXB0cyI6IFtdLCAic2VydmVyX3ZlcnNpb24iOiB7
ImJ1aWxkX251bWJlciI6IDU2MzQsICJtYWpvciI6IDM2LCAibWlub3IiOiAwLCAidmVyc2lvbiI6
ICIzNi4wLjU2MzQifSwgInRhZ3MiOiBbXSwgInRhc2tfb3JkZXIiOiBbXSwgInRpbWVmcmFtZXMi
OiBudWxsLCAidHlwZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImNvbnRl
bnQiOiB7InZlcnNpb24iOiA0MSwgIndvcmtmbG93X2lkIjogImV4YW1wbGVfY2xvc2VfaW5jaWRl
bnQiLCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/Pjxk
ZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQv
TU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAw
NTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUy
NC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQv
RElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHht
bG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwi
aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3Bh
Y2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVf
Y2xvc2VfaW5jaWRlbnRcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IENs
b3NlIEluY2lkZW50XCI+PGRvY3VtZW50YXRpb24+QW4gZXhhbXBsZSB3b3JrZmxvdyB3aGljaCB0
YWtlcyBhbiBpbmNpZGVudF9pZCBhbmQgb3B0aW9uYWwgY2xvc2VfZmllbGRzIGluIG9yZGVyIHRv
IGNsb3NlIGFuIEluY2lkZW50LjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0
RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMWttOHE5bzwvb3V0Z29pbmc+
PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzBxNjkyczJcIiBuYW1l
PVwiSW5jaWRlbnQgVXRpbHM6IENsb3NlIEluY2lkZW50XCIgcmVzaWxpZW50OnR5cGU9XCJmdW5j
dGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI3YTEx
NTZmNy1hMDBkLTRmNzUtODAzNS1hNDFmNDBhYzk4MGZcIj57XCJpbnB1dHNcIjp7fSxcInBvc3Rf
cHJvY2Vzc2luZ19zY3JpcHRcIjpcIm5vdGVfdGV4dCA9IFxcXCImbHQ7YiZndDtSZXN1bHQgZnJv
bSBFeGFtcGxlOiBDbG9zZSBJbmNpZGVudCZsdDsvYiZndDsmbHQ7YnImZ3Q7IHswfVxcXCIuZm9y
bWF0KHN0cihyZXN1bHRzKSlcXG5pbmNpZGVudC5hZGROb3RlKGhlbHBlci5jcmVhdGVSaWNoVGV4
dChub3RlX3RleHQpKVwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuaW5jaWRl
bnRfaWQgPSBpbmNpZGVudC5pZFxcbml1X2Nsb3NlX2ZpZWxkcyA9IHJ1bGUucHJvcGVydGllcy5p
bmNpZGVudF91dGlsc19jbG9zZV9maWVsZHMuY29udGVudFxcbmlucHV0cy5jbG9zZV9maWVsZHMg
PSBcXFwie31cXFwiLmZvcm1hdChpdV9jbG9zZV9maWVsZHMpXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rp
b24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFrbThxOW88L2lu
Y29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMHZ5Y25nbzwvb3V0Z29pbmc+PC9zZXJ2aWNl
VGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzFrbThxOW9cIiBzb3VyY2VSZWY9
XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wcTY5MnMyXCIv
PjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzA2ZGwzb2RcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93
XzB2eWNuZ288L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNl
Rmxvd18wdnljbmdvXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMHE2OTJzMlwiIHRhcmdldFJl
Zj1cIkVuZEV2ZW50XzA2ZGwzb2RcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRp
b25fMWY1b3dnMFwiPjx0ZXh0PjwhW0NEQVRBW0lucHV0czpcbmluY2lkZW50X2lkLCBjbG9zZV9m
aWVsZHNdXT48L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lh
dGlvbl8wMjdyNXFwXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMHE2OTJzMlwiIHRhcmdldFJl
Zj1cIlRleHRBbm5vdGF0aW9uXzFmNW93ZzBcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFu
bm90YXRpb25fMWpkb2Uxc1wiPjx0ZXh0PjwhW0NEQVRBW091dHB1dDpcbkNsb3NlcyB0aGUgSW5j
aWRlbnQgc2hvdWxkIHJlZmxlY3QgdGhlIGFjdGlvbiBhZnRlciB0aGUgZnVuY3Rpb24gcnVucy4g
QSBOb3RlIGlzIGNyZWF0ZWQgd2l0aCB0aGUgZnVuY3Rpb24gcmVzdWx0cy5cbl1dPjwvdGV4dD48
L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzAweWNvd21cIiBz
b3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wcTY5MnMyXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRp
b25fMWpkb2Uxc1wiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFn
cmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwi
QlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRf
MTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5M
YWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9
XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQ
TU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzBxNjkyczJcIiBpZD1cIlNlcnZpY2VU
YXNrXzBxNjkyczJfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBc
IiB4PVwiMzUyXCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRn
ZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xa204cTlvXCIgaWQ9XCJTZXF1ZW5jZUZsb3df
MWttOHE5b19kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQ
b2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIyNzVcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI3NVwiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzUyXCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2Rj
OkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyOTBcIiB5PVwiMTk5LjVcIi8+
PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJw
bW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWY1b3dnMFwiIGlkPVwiVGV4dEFubm90YXRpb25f
MWY1b3dnMF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNThcIiB3aWR0aD1cIjk4XCIgeD1c
IjIzMVwiIHk9XCIzM1wiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1u
RWxlbWVudD1cIkFzc29jaWF0aW9uXzAyN3I1cXBcIiBpZD1cIkFzc29jaWF0aW9uXzAyN3I1cXBf
ZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjM2OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMTY2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzA1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2lu
dFwiIHk9XCI5MVwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIlRleHRBbm5vdGF0aW9uXzFqZG9lMXNcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFqZG9l
MXNfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjc5XCIgd2lkdGg9XCIxODlcIiB4PVwiNDY1
XCIgeT1cIjEyXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVt
ZW50PVwiQXNzb2NpYXRpb25fMDB5Y293bVwiIGlkPVwiQXNzb2NpYXRpb25fMDB5Y293bV9kaVwi
PjxvbWdkaTp3YXlwb2ludCB4PVwiNDQzXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIx
NjdcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1MjFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjkxXCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50
PVwiRW5kRXZlbnRfMDZkbDNvZFwiIGlkPVwiRW5kRXZlbnRfMDZkbDNvZF9kaVwiPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjU5Ni44MDM3OTc0NjgzNTQ0XCIg
eT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIg
d2lkdGg9XCIwXCIgeD1cIjYxNC44MDM3OTc0NjgzNTQ0XCIgeT1cIjIyN1wiLz48L2JwbW5kaTpC
UE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9
XCJTZXF1ZW5jZUZsb3dfMHZ5Y25nb1wiIGlkPVwiU2VxdWVuY2VGbG93XzB2eWNuZ29fZGlcIj48
b21nZGk6d2F5cG9pbnQgeD1cIjQ1MlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2
XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTk3XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdp
ZHRoPVwiMFwiIHg9XCI1MjQuNVwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBt
bmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2Rl
ZmluaXRpb25zPiJ9LCAiY29udGVudF92ZXJzaW9uIjogNDEsICJjcmVhdG9yX2lkIjogInNhYmlu
YS5jemVybmVja2ExQGllLmlibS5jb20iLCAiZGVzY3JpcHRpb24iOiAiQW4gZXhhbXBsZSB3b3Jr
ZmxvdyB3aGljaCB0YWtlcyBhbiBpbmNpZGVudF9pZCBhbmQgb3B0aW9uYWwgY2xvc2VfZmllbGRz
IGluIG9yZGVyIHRvIGNsb3NlIGFuIEluY2lkZW50LiIsICJleHBvcnRfa2V5IjogImV4YW1wbGVf
Y2xvc2VfaW5jaWRlbnQiLCAibGFzdF9tb2RpZmllZF9ieSI6ICJzYWJpbmEuY3plcm5lY2thMUBp
ZS5pYm0uY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1OTIzMTkzMzM5NDQsICJuYW1lIjog
IkV4YW1wbGU6IENsb3NlIEluY2lkZW50IiwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgInBy
b2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfY2xvc2VfaW5jaWRlbnQiLCAidGFncyI6IFtdLCAi
dXVpZCI6ICIzNDhkMTBmNy0xNGUzLTQyYmYtOGVmOC01ODM0ZmFlYjI1YjEiLCAid29ya2Zsb3df
aWQiOiA0fV0sICJ3b3Jrc3BhY2VzIjogW119
""")
