# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_incident_utils"""

try:
    from resilient import ImportDefinition
except ImportError:
    # Support Apps running on resilient-circuits < v35.0.195
    from resilient_circuits.util import ImportDefinition


def codegen_reload_data():
    """
    Parameters required reload codegen for the fn_incident_utils package
    """
    return {
        "package": u"fn_incident_utils",
        "message_destinations": [u"fn_incident_utils"],
        "functions": [u"incident_utils_close_incident"],
        "workflows": [u"example_close_incident"],
        "actions": [u"Example: Close Incident"],
        "incident_fields": [],
        "incident_artifact_types": [],
        "datatables": [],
        "automatic_tasks": [],
        "scripts": []
    }


def customization_data(client=None):
    """
    Returns a Generator of ImportDefinitions (Customizations).
    Install them using `resilient-circuits customize`

    Contents:
    - Message Destinations:
        - fn_incident_utils
    - Functions:
        - incident_utils_close_incident
    - Workflows:
        - example_close_incident
    - Rules:
        - Example: Close Incident
    """

    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IENs
b3NlIEluY2lkZW50IiwgImlkIjogMTUsICJsb2dpY190eXBlIjogImFsbCIsICJtZXNzYWdlX2Rl
c3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBDbG9zZSBJbmNpZGVudCIsICJvYmpl
Y3RfdHlwZSI6ICJpbmNpZGVudCIsICJ0YWdzIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQw
MCwgInR5cGUiOiAxLCAidXVpZCI6ICJkOTljOWQ0OS1hODIxLTRmNWQtOWM5Mi0yODY1Mzk2ZDYy
YzgiLCAidmlld19pdGVtcyI6IFt7ImNvbnRlbnQiOiAiZjFmZTM2YTUtZGYyNy00OWYwLTg1ZDMt
ODM0OTg3ZWU0ZjY5IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFj
dGlvbmludm9jYXRpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFs
c2UsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX2Nsb3NlX2lu
Y2lkZW50Il19XSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTkyMzk5
MDUxODkzLCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjogMiwgImV4dGVuc2lvbnMiOiBbXSwgImZp
ZWxkcyI6IFt7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2Nsb3NlX2ZpZWxkcyIsICJoaWRlX25vdGlm
aWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAxODIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJu
YWwiOiBmYWxzZSwgImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAiY2xvc2VfZmllbGRzIiwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAi
IiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogImNsb3NlX2ZpZWxkcyIsICJ0
b29sdGlwIjogIkEgSlNPTiBTdHJpbmcgb2YgdGhlIGZpZWxkcyByZXF1aXJlZCB0byBjbG9zZSBh
biBJbmNpZGVudCBlLmcuOiB7J2ZpZWxkMSc6J3ZhbHVlMScsJ2ZpZWxkMic6J3ZhbHVlMid9Iiwg
InR5cGVfaWQiOiAxMSwgInV1aWQiOiAiN2FkMDYyNDUtYzJhNi00YWI0LTgzZmQtNGVhYzFkZWI4
M2VlIiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFu
a19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVl
LCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRl
cHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9pbmNpZGVudF9pZCIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAxODEsICJpbnB1dF90eXBlIjogIm51
bWJlciIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJp
bmNpZGVudF9pZCIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBs
YWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyZXF1
aXJlZCI6ICJhbHdheXMiLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0
ZXMiOiBbXSwgInRleHQiOiAiaW5jaWRlbnRfaWQiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6
IDExLCAidXVpZCI6ICJiMTNhNDBlMy1lN2ZmLTQ2NGUtOTY2Yy1hZWE4M2ViNWFiYjkiLCAidmFs
dWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4i
OiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6
IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL2luY2lkZW50X3V0aWxzX2Ns
b3NlX2ZpZWxkcyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAxODMsICJpbnB1
dF90eXBlIjogInRleHRhcmVhIiwgImludGVybmFsIjogZmFsc2UsICJpc190cmFja2VkIjogZmFs
c2UsICJuYW1lIjogImluY2lkZW50X3V0aWxzX2Nsb3NlX2ZpZWxkcyIsICJvcGVyYXRpb25fcGVy
bXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogImUuZy46IHsnZmllbGQx
JzondmFsdWUxJywnZmllbGQyJzondmFsdWUyJ30gIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwg
InJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1w
bGF0ZXMiOiBbXSwgInRleHQiOiAiSW5jaWRlbnQgVXRpbHMgQ2xvc2UgRmllbGRzIiwgInRvb2x0
aXAiOiAiRW50ZXIgYSBKU09OIFN0cmluZyBvZiB0aGUgZmllbGRzIHJlcXVpcmVkIHRvIGNsb3Nl
IGFuIEluY2lkZW50IiwgInR5cGVfaWQiOiA2LCAidXVpZCI6ICJmMWZlMzZhNS1kZjI3LTQ5ZjAt
ODVkMy04MzQ5ODdlZTRmNjkiLCAidmFsdWVzIjogW119LCB7ImV4cG9ydF9rZXkiOiAiaW5jaWRl
bnQvaW50ZXJuYWxfY3VzdG9taXphdGlvbnNfZmllbGQiLCAiaWQiOiAwLCAiaW5wdXRfdHlwZSI6
ICJ0ZXh0IiwgImludGVybmFsIjogdHJ1ZSwgIm5hbWUiOiAiaW50ZXJuYWxfY3VzdG9taXphdGlv
bnNfZmllbGQiLCAicmVhZF9vbmx5IjogdHJ1ZSwgInRleHQiOiAiQ3VzdG9taXphdGlvbnMgRmll
bGQgKGludGVybmFsKSIsICJ0eXBlX2lkIjogMCwgInV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4
LWFkMzktNGEwMDA0MDQ0YWExIn1dLCAiZnVuY3Rpb25zIjogW3siY3JlYXRvciI6IHsiZGlzcGxh
eV9uYW1lIjogIlNhYmluYSBDemVybmVja2EiLCAiaWQiOiAxLCAibmFtZSI6ICJzYWJpbmEuY3pl
cm5lY2thMUBpZS5pYm0uY29tIiwgInR5cGUiOiAidXNlciJ9LCAiZGVzY3JpcHRpb24iOiB7ImZv
cm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAiRnVuY3Rpb24gdGhhdCB0YWtlcyBhbiBpbmNpZGVu
dF9pZCBhbmQgYSBKU09OIFN0cmluZyBvZiBmaWVsZF9uYW1lIGFuZCBmaWVsZF92YWx1ZSBwYWly
cyB0byBjbG9zZSBhbiBJbmNpZGVudC4ifSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJmbl9pbmNp
ZGVudF91dGlscyIsICJkaXNwbGF5X25hbWUiOiAiSW5jaWRlbnQgVXRpbHM6IENsb3NlIEluY2lk
ZW50IiwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnRfdXRpbHNfY2xvc2VfaW5jaWRlbnQiLCAiaWQi
OiAzLCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9uYW1lIjogIlNhYmluYSBDemVybmVj
a2EiLCAiaWQiOiAxLCAibmFtZSI6ICJzYWJpbmEuY3plcm5lY2thMUBpZS5pYm0uY29tIiwgInR5
cGUiOiAidXNlciJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU5MjI0NjgxMjI4NiwgIm5hbWUi
OiAiaW5jaWRlbnRfdXRpbHNfY2xvc2VfaW5jaWRlbnQiLCAidGFncyI6IFtdLCAidXVpZCI6ICI3
YTExNTZmNy1hMDBkLTRmNzUtODAzNS1hNDFmNDBhYzk4MGYiLCAidmVyc2lvbiI6IDIsICJ2aWV3
X2l0ZW1zIjogW3siY29udGVudCI6ICJiMTNhNDBlMy1lN2ZmLTQ2NGUtOTY2Yy1hZWE4M2ViNWFi
YjkiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIs
ICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwi
OiBudWxsfSwgeyJjb250ZW50IjogIjdhZDA2MjQ1LWMyYTYtNGFiNC04M2ZkLTRlYWMxZGViODNl
ZSIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwg
InNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6
IG51bGx9XSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImRlc2NyaXB0aW9uIjogbnVs
bCwgIm5hbWUiOiAiRXhhbXBsZTogQ2xvc2UgSW5jaWRlbnQiLCAib2JqZWN0X3R5cGUiOiAiaW5j
aWRlbnQiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9jbG9zZV9pbmNpZGVudCIsICJ0
YWdzIjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogNH1dfV0sICJnZW9zIjogbnVs
bCwgImdyb3VwcyI6IG51bGwsICJpZCI6IDcsICJpbmJvdW5kX21haWxib3hlcyI6IG51bGwsICJp
bmNpZGVudF9hcnRpZmFjdF90eXBlcyI6IFtdLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVf
ZGF0ZSI6IDE2MDU3MDYwMTA5MzYsICJjcmVhdGVfZGF0ZSI6IDE2MDU3MDYwMTA5MzYsICJ1dWlk
IjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6
ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0
b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBh
Y2thZ2VzIChpbnRlcm5hbCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJw
YXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgImluZHVzdHJpZXMi
OiBudWxsLCAibGF5b3V0cyI6IFtdLCAibG9jYWxlIjogbnVsbCwgIm1lc3NhZ2VfZGVzdGluYXRp
b25zIjogW3siYXBpX2tleXMiOiBbXSwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2Fj
ayI6IHRydWUsICJleHBvcnRfa2V5IjogImZuX2luY2lkZW50X3V0aWxzIiwgIm5hbWUiOiAiZm5f
aW5jaWRlbnRfdXRpbHMiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZm5faW5jaWRlbnRfdXRpbHMi
LCAidGFncyI6IFtdLCAidXNlcnMiOiBbInNhYmluYS5jemVybmVja2ExQGllLmlibS5jb20iXSwg
InV1aWQiOiAiMzZlOWYzZmMtYzNlOS00YmNmLTg1YmQtYWIyMjQ0NmMyNDYxIn1dLCAibm90aWZp
Y2F0aW9ucyI6IG51bGwsICJvdmVycmlkZXMiOiBbXSwgInBoYXNlcyI6IFtdLCAicmVndWxhdG9y
cyI6IG51bGwsICJyb2xlcyI6IFtdLCAic2NyaXB0cyI6IFtdLCAic2VydmVyX3ZlcnNpb24iOiB7
ImJ1aWxkX251bWJlciI6IDU2MzQsICJtYWpvciI6IDM2LCAibWlub3IiOiAwLCAidmVyc2lvbiI6
ICIzNi4wLjU2MzQifSwgInRhZ3MiOiBbXSwgInRhc2tfb3JkZXIiOiBbXSwgInRpbWVmcmFtZXMi
OiBudWxsLCAidHlwZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImNvbnRl
bnQiOiB7InZlcnNpb24iOiA0NSwgIndvcmtmbG93X2lkIjogImV4YW1wbGVfY2xvc2VfaW5jaWRl
bnQiLCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/Pjxk
ZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQv
TU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAw
NTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUy
NC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQv
RElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHht
bG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwi
aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3Bh
Y2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVf
Y2xvc2VfaW5jaWRlbnRcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IENs
b3NlIEluY2lkZW50XCI+PGRvY3VtZW50YXRpb24+QW4gZXhhbXBsZSB3b3JrZmxvdyB3aGljaCB0
YWtlcyBhbiBpbmNpZGVudF9pZCBhbmQgb3B0aW9uYWwgY2xvc2VfZmllbGRzIGluIG9yZGVyIHRv
IGNsb3NlIGFuIEluY2lkZW50LjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0
RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMWttOHE5bzwvb3V0Z29pbmc+
PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzBxNjkyczJcIiBuYW1l
PVwiSW5jaWRlbnQgVXRpbHM6IENsb3NlIEluY2lkZW50XCIgcmVzaWxpZW50OnR5cGU9XCJmdW5j
dGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI3YTEx
NTZmNy1hMDBkLTRmNzUtODAzNS1hNDFmNDBhYzk4MGZcIj57XCJpbnB1dHNcIjp7fSxcInBvc3Rf
cHJvY2Vzc2luZ19zY3JpcHRcIjpcIm5vdGVfdGV4dCA9IFxcXCJSZXN1bHQgZnJvbSBFeGFtcGxl
OiBDbG9zZSBJbmNpZGVudCBvbiBJbmNpZGVudCB7MH06ICZsdDtzdHJvbmcmZ3Q7ezF9Jmx0Oy9z
dHJvbmcmZ3Q7XFxcIi5mb3JtYXQocmVzdWx0cy5pbnB1dHNbJ2luY2lkZW50X2lkJ10sIFxcXFxc
XG5cXFwic3VjY2Vzc1xcXCIgaWYgcmVzdWx0cy5zdWNjZXNzIGVsc2UgXFxcImZhaWx1cmUuJmx0
O2JyJmd0O1JlYXNvbjoge31cXFwiLmZvcm1hdChyZXN1bHRzLnJlYXNvbikpXFxuaW5jaWRlbnQu
YWRkTm90ZShoZWxwZXIuY3JlYXRlUmljaFRleHQobm90ZV90ZXh0KSlcIixcInByZV9wcm9jZXNz
aW5nX3NjcmlwdFwiOlwiaW5wdXRzLmluY2lkZW50X2lkID0gaW5jaWRlbnQuaWRcXG5pdV9jbG9z
ZV9maWVsZHMgPSBydWxlLnByb3BlcnRpZXMuaW5jaWRlbnRfdXRpbHNfY2xvc2VfZmllbGRzLmNv
bnRlbnRcXG5pbnB1dHMuY2xvc2VfZmllbGRzID0gdVxcXCJ7fVxcXCIuZm9ybWF0KGl1X2Nsb3Nl
X2ZpZWxkcylcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNv
bWluZz5TZXF1ZW5jZUZsb3dfMWttOHE5bzwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxv
d18wdnljbmdvPC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1
ZW5jZUZsb3dfMWttOHE5b1wiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdl
dFJlZj1cIlNlcnZpY2VUYXNrXzBxNjkyczJcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMDZk
bDNvZFwiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMHZ5Y25nbzwvaW5jb21pbmc+PC9lbmRFdmVu
dD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzB2eWNuZ29cIiBzb3VyY2VSZWY9XCJT
ZXJ2aWNlVGFza18wcTY5MnMyXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMDZkbDNvZFwiLz48dGV4
dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xZjVvd2cwXCI+PHRleHQ+PCFbQ0RBVEFb
SW5wdXRzOlxuaW5jaWRlbnRfaWQsIGNsb3NlX2ZpZWxkc11dPjwvdGV4dD48L3RleHRBbm5vdGF0
aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzAyN3I1cXBcIiBzb3VyY2VSZWY9XCJT
ZXJ2aWNlVGFza18wcTY5MnMyXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWY1b3dnMFwi
Lz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xamRvZTFzXCI+PHRleHQ+PCFb
Q0RBVEFbT3V0cHV0OlxuQ2xvc2VzIHRoZSBJbmNpZGVudCBzaG91bGQgcmVmbGVjdCB0aGUgYWN0
aW9uIGFmdGVyIHRoZSBmdW5jdGlvbiBydW5zLiBBIE5vdGUgaXMgY3JlYXRlZCB3aXRoIHRoZSBm
dW5jdGlvbiByZXN1bHRzLlxuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9u
IGlkPVwiQXNzb2NpYXRpb25fMDB5Y293bVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzBxNjky
czJcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xamRvZTFzXCIvPjwvcHJvY2Vzcz48YnBt
bmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJw
bW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNo
YXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1
NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIx
NjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+
PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2Vydmlj
ZVRhc2tfMHE2OTJzMlwiIGlkPVwiU2VydmljZVRhc2tfMHE2OTJzMl9kaVwiPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIzNTJcIiB5PVwiMTY2XCIvPjwvYnBt
bmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93
XzFrbThxOW9cIiBpZD1cIlNlcXVlbmNlRmxvd18xa204cTlvX2RpXCI+PG9tZ2RpOndheXBvaW50
IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5
cG9pbnQgeD1cIjI3NVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdk
aTp3YXlwb2ludCB4PVwiMjc1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+
PG9tZ2RpOndheXBvaW50IHg9XCIzNTJcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIw
NlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9
XCIwXCIgeD1cIjI5MFwiIHk9XCIxOTkuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6
QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8x
ZjVvd2cwXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xZjVvd2cwX2RpXCI+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCI1OFwiIHdpZHRoPVwiOThcIiB4PVwiMjMxXCIgeT1cIjMzXCIvPjwvYnBtbmRpOkJQ
TU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMDI3cjVx
cFwiIGlkPVwiQXNzb2NpYXRpb25fMDI3cjVxcF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzY4
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNjZcIi8+PG9tZ2RpOndheXBvaW50IHg9
XCIzMDVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjkxXCIvPjwvYnBtbmRpOkJQTU5F
ZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWpkb2Ux
c1wiIGlkPVwiVGV4dEFubm90YXRpb25fMWpkb2Uxc19kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiNzlcIiB3aWR0aD1cIjE4OVwiIHg9XCI0NjVcIiB5PVwiMTJcIi8+PC9icG1uZGk6QlBNTlNo
YXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8wMHljb3dtXCIg
aWQ9XCJBc3NvY2lhdGlvbl8wMHljb3dtX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0NDNcIiB4
c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE2N1wiLz48b21nZGk6d2F5cG9pbnQgeD1cIjUy
MVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiOTFcIi8+PC9icG1uZGk6QlBNTkVkZ2U+
PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8wNmRsM29kXCIgaWQ9XCJF
bmRFdmVudF8wNmRsM29kX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwi
MzZcIiB4PVwiNTk2LjgwMzc5NzQ2ODM1NDRcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVs
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNjE0LjgwMzc5NzQ2
ODM1NDRcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+
PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18wdnljbmdvXCIgaWQ9
XCJTZXF1ZW5jZUZsb3dfMHZ5Y25nb19kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDUyXCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1OTdc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjUyNC41XCIgeT1cIjE4
NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBs
YW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+In0sICJjb250ZW50X3ZlcnNp
b24iOiA0NSwgImNyZWF0b3JfaWQiOiAic2FiaW5hLmN6ZXJuZWNrYTFAaWUuaWJtLmNvbSIsICJk
ZXNjcmlwdGlvbiI6ICJBbiBleGFtcGxlIHdvcmtmbG93IHdoaWNoIHRha2VzIGFuIGluY2lkZW50
X2lkIGFuZCBvcHRpb25hbCBjbG9zZV9maWVsZHMgaW4gb3JkZXIgdG8gY2xvc2UgYW4gSW5jaWRl
bnQuIiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9jbG9zZV9pbmNpZGVudCIsICJsYXN0X21vZGlm
aWVkX2J5IjogInNhYmluYS5jemVybmVja2ExQGllLmlibS5jb20iLCAibGFzdF9tb2RpZmllZF90
aW1lIjogMTU5MjM5NzkzNDMyNCwgIm5hbWUiOiAiRXhhbXBsZTogQ2xvc2UgSW5jaWRlbnQiLCAi
b2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9j
bG9zZV9pbmNpZGVudCIsICJ0YWdzIjogW10sICJ1dWlkIjogIjM0OGQxMGY3LTE0ZTMtNDJiZi04
ZWY4LTU4MzRmYWViMjViMSIsICJ3b3JrZmxvd19pZCI6IDR9XSwgIndvcmtzcGFjZXMiOiBbXX0=
""")
