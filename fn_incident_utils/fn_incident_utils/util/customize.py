# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_incident_utils"""

try:
    from resilient import ImportDefinition
except ImportError:
    # Support Apps running on resilient-circuits < v35.0.195
    from resilient_circuits.util import ImportDefinition


def codegen_reload_data():
    """
    Parameters required reload codegen for the fn_incident_utils package
    """
    return {
        "package": u"fn_incident_utils",
        "message_destinations": [u"fn_incident_utils"],
        "functions": [u"incident_utils_close_incident"],
        "workflows": [u"example_close_incident"],
        "actions": [u"Example: Close Incident"],
        "incident_fields": [],
        "incident_artifact_types": [],
        "datatables": [],
        "automatic_tasks": [],
        "scripts": []
    }


def customization_data(client=None):
    """
    Returns a Generator of ImportDefinitions (Customizations).
    Install them using `resilient-circuits customize`

    Contents:
    - Message Destinations:
        - fn_incident_utils
    - Functions:
        - incident_utils_close_incident
    - Workflows:
        - example_close_incident
    - Rules:
        - Example: Close Incident
    """

    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IENs
b3NlIEluY2lkZW50IiwgImlkIjogMTUsICJsb2dpY190eXBlIjogImFsbCIsICJtZXNzYWdlX2Rl
c3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBDbG9zZSBJbmNpZGVudCIsICJvYmpl
Y3RfdHlwZSI6ICJpbmNpZGVudCIsICJ0YWdzIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQw
MCwgInR5cGUiOiAxLCAidXVpZCI6ICJkOTljOWQ0OS1hODIxLTRmNWQtOWM5Mi0yODY1Mzk2ZDYy
YzgiLCAidmlld19pdGVtcyI6IFt7ImNvbnRlbnQiOiAiZjFmZTM2YTUtZGYyNy00OWYwLTg1ZDMt
ODM0OTg3ZWU0ZjY5IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFj
dGlvbmludm9jYXRpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFs
c2UsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX2Nsb3NlX2lu
Y2lkZW50Il19XSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTkyMjUy
MDQ3NDA4LCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjogMiwgImV4dGVuc2lvbnMiOiBbXSwgImZp
ZWxkcyI6IFt7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2Nsb3NlX2ZpZWxkcyIsICJoaWRlX25vdGlm
aWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAxODIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJu
YWwiOiBmYWxzZSwgImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAiY2xvc2VfZmllbGRzIiwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAi
IiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogImNsb3NlX2ZpZWxkcyIsICJ0
b29sdGlwIjogIkEgSlNPTiBTdHJpbmcgb2YgdGhlIGZpZWxkcyByZXF1aXJlZCB0byBjbG9zZSBh
biBJbmNpZGVudCBlLmcuOiB7J2ZpZWxkMSc6J3ZhbHVlMScsJ2ZpZWxkMic6J3ZhbHVlMid9Iiwg
InR5cGVfaWQiOiAxMSwgInV1aWQiOiAiN2FkMDYyNDUtYzJhNi00YWI0LTgzZmQtNGVhYzFkZWI4
M2VlIiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFu
a19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVl
LCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRl
cHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9pbmNpZGVudF9pZCIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAxODEsICJpbnB1dF90eXBlIjogIm51
bWJlciIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJp
bmNpZGVudF9pZCIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBs
YWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyZXF1
aXJlZCI6ICJhbHdheXMiLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0
ZXMiOiBbXSwgInRleHQiOiAiaW5jaWRlbnRfaWQiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6
IDExLCAidXVpZCI6ICJiMTNhNDBlMy1lN2ZmLTQ2NGUtOTY2Yy1hZWE4M2ViNWFiYjkiLCAidmFs
dWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4i
OiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6
IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL2luY2lkZW50X3V0aWxzX2Ns
b3NlX2ZpZWxkcyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAxODMsICJpbnB1
dF90eXBlIjogInRleHQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgImlzX3RyYWNrZWQiOiBmYWxzZSwg
Im5hbWUiOiAiaW5jaWRlbnRfdXRpbHNfY2xvc2VfZmllbGRzIiwgIm9wZXJhdGlvbl9wZXJtcyI6
IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiZS5nLjogeydmaWVsZDEnOid2
YWx1ZTEnLCdmaWVsZDInOid2YWx1ZTInfSAiLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAicmVh
ZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRl
cyI6IFtdLCAidGV4dCI6ICJJbmNpZGVudCBVdGlscyBDbG9zZSBGaWVsZHMiLCAidG9vbHRpcCI6
ICJFbnRlciBhIEpTT04gU3RyaW5nIG9mIHRoZSBmaWVsZHMgcmVxdWlyZWQgdG8gY2xvc2UgYW4g
SW5jaWRlbnQiLCAidHlwZV9pZCI6IDYsICJ1dWlkIjogImYxZmUzNmE1LWRmMjctNDlmMC04NWQz
LTgzNDk4N2VlNGY2OSIsICJ2YWx1ZXMiOiBbXX0sIHsiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9p
bnRlcm5hbF9jdXN0b21pemF0aW9uc19maWVsZCIsICJpZCI6IDAsICJpbnB1dF90eXBlIjogInRl
eHQiLCAiaW50ZXJuYWwiOiB0cnVlLCAibmFtZSI6ICJpbnRlcm5hbF9jdXN0b21pemF0aW9uc19m
aWVsZCIsICJyZWFkX29ubHkiOiB0cnVlLCAidGV4dCI6ICJDdXN0b21pemF0aW9ucyBGaWVsZCAo
aW50ZXJuYWwpIiwgInR5cGVfaWQiOiAwLCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQz
OS00YTAwMDQwNDRhYTEifV0sICJmdW5jdGlvbnMiOiBbeyJjcmVhdG9yIjogeyJkaXNwbGF5X25h
bWUiOiAiU2FiaW5hIEN6ZXJuZWNrYSIsICJpZCI6IDEsICJuYW1lIjogInNhYmluYS5jemVybmVj
a2ExQGllLmlibS5jb20iLCAidHlwZSI6ICJ1c2VyIn0sICJkZXNjcmlwdGlvbiI6IHsiZm9ybWF0
IjogInRleHQiLCAiY29udGVudCI6ICJGdW5jdGlvbiB0aGF0IHRha2VzIGFuIGluY2lkZW50X2lk
IGFuZCBhIEpTT04gU3RyaW5nIG9mIGZpZWxkX25hbWUgYW5kIGZpZWxkX3ZhbHVlIHBhaXJzIHRv
IGNsb3NlIGFuIEluY2lkZW50LiJ9LCAiZGVzdGluYXRpb25faGFuZGxlIjogImZuX2luY2lkZW50
X3V0aWxzIiwgImRpc3BsYXlfbmFtZSI6ICJJbmNpZGVudCBVdGlsczogQ2xvc2UgSW5jaWRlbnQi
LCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudF91dGlsc19jbG9zZV9pbmNpZGVudCIsICJpZCI6IDMs
ICJsYXN0X21vZGlmaWVkX2J5IjogeyJkaXNwbGF5X25hbWUiOiAiU2FiaW5hIEN6ZXJuZWNrYSIs
ICJpZCI6IDEsICJuYW1lIjogInNhYmluYS5jemVybmVja2ExQGllLmlibS5jb20iLCAidHlwZSI6
ICJ1c2VyIn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTkyMjQ2ODEyMjg2LCAibmFtZSI6ICJp
bmNpZGVudF91dGlsc19jbG9zZV9pbmNpZGVudCIsICJ0YWdzIjogW10sICJ1dWlkIjogIjdhMTE1
NmY3LWEwMGQtNGY3NS04MDM1LWE0MWY0MGFjOTgwZiIsICJ2ZXJzaW9uIjogMiwgInZpZXdfaXRl
bXMiOiBbeyJjb250ZW50IjogImIxM2E0MGUzLWU3ZmYtNDY0ZS05NjZjLWFlYTgzZWI1YWJiOSIs
ICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNo
b3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51
bGx9LCB7ImNvbnRlbnQiOiAiN2FkMDYyNDUtYzJhNi00YWI0LTgzZmQtNGVhYzFkZWI4M2VlIiwg
ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hv
d19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVs
bH1dLCAid29ya2Zsb3dzIjogW3siYWN0aW9ucyI6IFtdLCAiZGVzY3JpcHRpb24iOiBudWxsLCAi
bmFtZSI6ICJFeGFtcGxlOiBDbG9zZSBJbmNpZGVudCIsICJvYmplY3RfdHlwZSI6ICJpbmNpZGVu
dCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX2Nsb3NlX2luY2lkZW50IiwgInRhZ3Mi
OiBbXSwgInV1aWQiOiBudWxsLCAid29ya2Zsb3dfaWQiOiA0fV19XSwgImdlb3MiOiBudWxsLCAi
Z3JvdXBzIjogbnVsbCwgImlkIjogNCwgImluYm91bmRfbWFpbGJveGVzIjogbnVsbCwgImluY2lk
ZW50X2FydGlmYWN0X3R5cGVzIjogW10sICJpbmNpZGVudF90eXBlcyI6IFt7InVwZGF0ZV9kYXRl
IjogMTYwNTExNTU0ODAzNCwgImNyZWF0ZV9kYXRlIjogMTYwNTExNTU0ODAzNCwgInV1aWQiOiAi
YmZlZWMyZDQtMzc3MC0xMWU4LWFkMzktNGEwMDA0MDQ0YWEwIiwgImRlc2NyaXB0aW9uIjogIkN1
c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJleHBvcnRfa2V5IjogIkN1c3RvbWl6
YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJuYW1lIjogIkN1c3RvbWl6YXRpb24gUGFja2Fn
ZXMgKGludGVybmFsKSIsICJlbmFibGVkIjogZmFsc2UsICJzeXN0ZW0iOiBmYWxzZSwgInBhcmVu
dF9pZCI6IG51bGwsICJoaWRkZW4iOiBmYWxzZSwgImlkIjogMH1dLCAiaW5kdXN0cmllcyI6IG51
bGwsICJsYXlvdXRzIjogW10sICJsb2NhbGUiOiBudWxsLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMi
OiBbeyJhcGlfa2V5cyI6IFtdLCAiZGVzdGluYXRpb25fdHlwZSI6IDAsICJleHBlY3RfYWNrIjog
dHJ1ZSwgImV4cG9ydF9rZXkiOiAiZm5faW5jaWRlbnRfdXRpbHMiLCAibmFtZSI6ICJmbl9pbmNp
ZGVudF91dGlscyIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl9pbmNpZGVudF91dGlscyIsICJ0
YWdzIjogW10sICJ1c2VycyI6IFsic2FiaW5hLmN6ZXJuZWNrYTFAaWUuaWJtLmNvbSJdLCAidXVp
ZCI6ICIzNmU5ZjNmYy1jM2U5LTRiY2YtODViZC1hYjIyNDQ2YzI0NjEifV0sICJub3RpZmljYXRp
b25zIjogbnVsbCwgIm92ZXJyaWRlcyI6IFtdLCAicGhhc2VzIjogW10sICJyZWd1bGF0b3JzIjog
bnVsbCwgInJvbGVzIjogW10sICJzY3JpcHRzIjogW10sICJzZXJ2ZXJfdmVyc2lvbiI6IHsiYnVp
bGRfbnVtYmVyIjogNTYzNCwgIm1ham9yIjogMzYsICJtaW5vciI6IDAsICJ2ZXJzaW9uIjogIjM2
LjAuNTYzNCJ9LCAidGFncyI6IFtdLCAidGFza19vcmRlciI6IFtdLCAidGltZWZyYW1lcyI6IG51
bGwsICJ0eXBlcyI6IFtdLCAid29ya2Zsb3dzIjogW3siYWN0aW9ucyI6IFtdLCAiY29udGVudCI6
IHsidmVyc2lvbiI6IDE2LCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9jbG9zZV9pbmNpZGVudCIs
ICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmlu
aXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RF
TFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQv
RElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RD
XCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwi
IHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6
eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRw
Oi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1c
Imh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9jbG9z
ZV9pbmNpZGVudFwiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTogQ2xvc2Ug
SW5jaWRlbnRcIj48ZG9jdW1lbnRhdGlvbj5BbiBleGFtcGxlIHdvcmtmbG93IHdoaWNoIHRha2Vz
IGFuIGluY2lkZW50X2lkIGFuZCBvcHRpb25hbCBjbG9zZV9maWVsZHMgaW4gb3JkZXIgdG8gY2xv
c2UgYW4gSW5jaWRlbnQuPC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVu
dF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xa204cTlvPC9vdXRnb2luZz48L3N0
YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMHE2OTJzMlwiIG5hbWU9XCJJ
bmNpZGVudCBVdGlsczogQ2xvc2UgSW5jaWRlbnRcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9u
XCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cIjdhMTE1NmY3
LWEwMGQtNGY3NS04MDM1LWE0MWY0MGFjOTgwZlwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9j
ZXNzaW5nX3NjcmlwdFwiOlwibm90ZV90ZXh0ID0gXFxcIiZsdDtiJmd0O1Jlc3VsdCBmcm9tIEV4
YW1wbGU6IENsb3NlIEluY2lkZW50Jmx0Oy9iJmd0OyZsdDticiZndDsgezB9XFxcIi5mb3JtYXQo
c3RyKHJlc3VsdHMpKVxcbmluY2lkZW50LmFkZE5vdGUoaGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5v
dGVfdGV4dCkpXCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5pbmNpZGVudF9p
ZCA9IGluY2lkZW50LmlkXFxuaW5wdXRzLmNsb3NlX2ZpZWxkcyA9IHJ1bGUucHJvcGVydGllcy5p
bmNpZGVudF91dGlsc19jbG9zZV9maWVsZHNcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVu
c2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMWttOHE5bzwvaW5jb21pbmc+PG91
dGdvaW5nPlNlcXVlbmNlRmxvd18wdnljbmdvPC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1
ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMWttOHE5b1wiIHNvdXJjZVJlZj1cIlN0YXJ0RXZl
bnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzBxNjkyczJcIi8+PGVuZEV2ZW50
IGlkPVwiRW5kRXZlbnRfMDZkbDNvZFwiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMHZ5Y25nbzwv
aW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzB2eWNu
Z29cIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wcTY5MnMyXCIgdGFyZ2V0UmVmPVwiRW5kRXZl
bnRfMDZkbDNvZFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xZjVvd2cw
XCI+PHRleHQ+PCFbQ0RBVEFbSW5wdXRzOlxuaW5jaWRlbnRfaWQsIGNsb3NlX2ZpZWxkc11dPjwv
dGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzAyN3I1
cXBcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wcTY5MnMyXCIgdGFyZ2V0UmVmPVwiVGV4dEFu
bm90YXRpb25fMWY1b3dnMFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8x
amRvZTFzXCI+PHRleHQ+PCFbQ0RBVEFbT3V0cHV0OlxuQ2xvc2VzIHRoZSBJbmNpZGVudCBzaG91
bGQgcmVmbGVjdCB0aGUgYWN0aW9uIGFmdGVyIHRoZSBmdW5jdGlvbiBydW5zLiBBIE5vdGUgaXMg
Y3JlYXRlZCB3aXRoIHRoZSBmdW5jdGlvbiByZXN1bHRzLlxuXV0+PC90ZXh0PjwvdGV4dEFubm90
YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMDB5Y293bVwiIHNvdXJjZVJlZj1c
IlNlcnZpY2VUYXNrXzBxNjkyczJcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xamRvZTFz
XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxi
cG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVf
MVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIg
aWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIg
d2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48
L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJw
bW5FbGVtZW50PVwiU2VydmljZVRhc2tfMHE2OTJzMlwiIGlkPVwiU2VydmljZVRhc2tfMHE2OTJz
Ml9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIzNTJc
IiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVt
ZW50PVwiU2VxdWVuY2VGbG93XzFrbThxOW9cIiBpZD1cIlNlcXVlbmNlRmxvd18xa204cTlvX2Rp
XCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI3NVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjc1XCIgeHNpOnR5cGU9XCJvbWdkYzpQ
b2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIzNTJcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjI5MFwiIHk9XCIxOTkuNVwiLz48L2JwbW5kaTpC
UE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9
XCJUZXh0QW5ub3RhdGlvbl8xZjVvd2cwXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xZjVvd2cwX2Rp
XCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI1OFwiIHdpZHRoPVwiOThcIiB4PVwiMjMxXCIgeT1c
IjMzXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwi
QXNzb2NpYXRpb25fMDI3cjVxcFwiIGlkPVwiQXNzb2NpYXRpb25fMDI3cjVxcF9kaVwiPjxvbWdk
aTp3YXlwb2ludCB4PVwiMzY4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNjZcIi8+
PG9tZ2RpOndheXBvaW50IHg9XCIzMDVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjkx
XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4
dEFubm90YXRpb25fMWpkb2Uxc1wiIGlkPVwiVGV4dEFubm90YXRpb25fMWpkb2Uxc19kaVwiPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiNzlcIiB3aWR0aD1cIjE4OVwiIHg9XCI0NjVcIiB5PVwiMTJc
Ii8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3Nv
Y2lhdGlvbl8wMHljb3dtXCIgaWQ9XCJBc3NvY2lhdGlvbl8wMHljb3dtX2RpXCI+PG9tZ2RpOndh
eXBvaW50IHg9XCI0NDNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE2N1wiLz48b21n
ZGk6d2F5cG9pbnQgeD1cIjUyMVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiOTFcIi8+
PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVu
dF8wNmRsM29kXCIgaWQ9XCJFbmRFdmVudF8wNmRsM29kX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNTk2LjgwMzc5NzQ2ODM1NDRcIiB5PVwiMTg4XCIv
PjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBc
IiB4PVwiNjE0LjgwMzc5NzQ2ODM1NDRcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48
L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNl
Rmxvd18wdnljbmdvXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMHZ5Y25nb19kaVwiPjxvbWdkaTp3YXlw
b2ludCB4PVwiNDUyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2Rp
OndheXBvaW50IHg9XCI1OTdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48
YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIg
eD1cIjUyNC41XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVk
Z2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+
In0sICJjb250ZW50X3ZlcnNpb24iOiAxNiwgImNyZWF0b3JfaWQiOiAic2FiaW5hLmN6ZXJuZWNr
YTFAaWUuaWJtLmNvbSIsICJkZXNjcmlwdGlvbiI6ICJBbiBleGFtcGxlIHdvcmtmbG93IHdoaWNo
IHRha2VzIGFuIGluY2lkZW50X2lkIGFuZCBvcHRpb25hbCBjbG9zZV9maWVsZHMgaW4gb3JkZXIg
dG8gY2xvc2UgYW4gSW5jaWRlbnQuIiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9jbG9zZV9pbmNp
ZGVudCIsICJsYXN0X21vZGlmaWVkX2J5IjogInNhYmluYS5jemVybmVja2ExQGllLmlibS5jb20i
LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU5MjI0ODkxNDc5MiwgIm5hbWUiOiAiRXhhbXBsZTog
Q2xvc2UgSW5jaWRlbnQiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAicHJvZ3JhbW1hdGlj
X25hbWUiOiAiZXhhbXBsZV9jbG9zZV9pbmNpZGVudCIsICJ0YWdzIjogW10sICJ1dWlkIjogIjM0
OGQxMGY3LTE0ZTMtNDJiZi04ZWY4LTU4MzRmYWViMjViMSIsICJ3b3JrZmxvd19pZCI6IDR9XSwg
IndvcmtzcGFjZXMiOiBbXX0=
""")
