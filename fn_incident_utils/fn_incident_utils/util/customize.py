# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_incident_utils"""

try:
    from resilient import ImportDefinition
except ImportError:
    # Support Apps running on resilient-circuits < v35.0.195
    from resilient_circuits.util import ImportDefinition


def codegen_reload_data():
    """
    Parameters required reload codegen for the fn_incident_utils package
    """
    return {
        "package": u"fn_incident_utils",
        "message_destinations": [u"fn_incident_utils"],
        "functions": [u"incident_utils_close_an_incident"],
        "workflows": [u"example_close_an_incident"],
        "actions": [u"Example: Close an Incident"],
        "incident_fields": [],
        "incident_artifact_types": [],
        "datatables": [],
        "automatic_tasks": [],
        "scripts": []
    }


def customization_data(client=None):
    """
    Returns a Generator of ImportDefinitions (Customizations).
    Install them using `resilient-circuits customize`

    Contents:
    - Message Destinations:
        - fn_incident_utils
    - Functions:
        - incident_utils_close_an_incident
    - Workflows:
        - example_close_an_incident
    - Rules:
        - Example: Close an Incident
    """

    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IENs
b3NlIGFuIEluY2lkZW50IiwgImlkIjogMTQsICJsb2dpY190eXBlIjogImFsbCIsICJtZXNzYWdl
X2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBDbG9zZSBhbiBJbmNpZGVudCIs
ICJvYmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJ0YWdzIjogW10sICJ0aW1lb3V0X3NlY29uZHMi
OiA4NjQwMCwgInR5cGUiOiAxLCAidXVpZCI6ICJhYjMzMTYxNC04YjkwLTQyNDItYjkyOS0yYWNh
MzBiNmY3NmMiLCAidmlld19pdGVtcyI6IFt7ImNvbnRlbnQiOiAiZjFmZTM2YTUtZGYyNy00OWYw
LTg1ZDMtODM0OTg3ZWU0ZjY5IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBl
IjogImFjdGlvbmludm9jYXRpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVy
IjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX2Ns
b3NlX2FuX2luY2lkZW50Il19XSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAiZXhwb3J0X2RhdGUi
OiAxNTkyMjA4MDc3NDgzLCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjogMiwgImV4dGVuc2lvbnMi
OiBbXSwgImZpZWxkcyI6IFt7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29w
dGlvbiI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJj
aG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVj
YXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2luY2lkZW50X2lkIiwgImhp
ZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDE4MSwgImlucHV0X3R5cGUiOiAibnVtYmVy
IiwgImludGVybmFsIjogZmFsc2UsICJpc190cmFja2VkIjogZmFsc2UsICJuYW1lIjogImluY2lk
ZW50X2lkIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vo
b2xkZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJlcXVpcmVk
IjogImFsd2F5cyIsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6
IFtdLCAidGV4dCI6ICJpbmNpZGVudF9pZCIsICJ0b29sdGlwIjogIiIsICJ0eXBlX2lkIjogMTEs
ICJ1dWlkIjogImIxM2E0MGUzLWU3ZmYtNDY0ZS05NjZjLWFlYTgzZWI1YWJiOSIsICJ2YWx1ZXMi
OiBbXX0sIHsiYWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFs
c2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZh
bHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFs
c2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vY2xvc2VfZmllbGRzIiwgImhpZGVfbm90aWZp
Y2F0aW9uIjogZmFsc2UsICJpZCI6IDE4MiwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5h
bCI6IGZhbHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJjbG9zZV9maWVsZHMiLCAi
b3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIi
LCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2Us
ICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAiY2xvc2VfZmllbGRzIiwgInRv
b2x0aXAiOiAiQSBKU09OIFN0cmluZyBvZiB0aGUgZmllbGRzIHJlcXVpcmVkIHRvIGNsb3NlIGFu
IEluY2lkZW50IGUuZy46IFwieydmaWVsZDEnOid2YWx1ZTEnLCdmaWVsZDInOid2YWx1ZTInfVwi
IiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiN2FkMDYyNDUtYzJhNi00YWI0LTgzZmQtNGVhYzFk
ZWI4M2VlIiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJi
bGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0
cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwg
ImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9pbmNp
ZGVudF91dGlsc19jbG9zZV9maWVsZHMiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlk
IjogMTgzLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJpc190cmFj
a2VkIjogZmFsc2UsICJuYW1lIjogImluY2lkZW50X3V0aWxzX2Nsb3NlX2ZpZWxkcyIsICJvcGVy
YXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogImUuZy46
IFwieydmaWVsZDEnOid2YWx1ZTEnLCdmaWVsZDInOid2YWx1ZTInfVwiICIsICJwcmVmaXgiOiAi
cHJvcGVydGllcyIsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFn
cyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIkluY2lkZW50IFV0aWxzIENsb3NlIEZp
ZWxkcyIsICJ0b29sdGlwIjogIkVudGVyIGEgSlNPTiBTdHJpbmcgb2YgdGhlIGZpZWxkcyByZXF1
aXJlZCB0byBjbG9zZSBhbiBJbmNpZGVudCIsICJ0eXBlX2lkIjogNiwgInV1aWQiOiAiZjFmZTM2
YTUtZGYyNy00OWYwLTg1ZDMtODM0OTg3ZWU0ZjY5IiwgInZhbHVlcyI6IFtdfSwgeyJleHBvcnRf
a2V5IjogImluY2lkZW50L2ludGVybmFsX2N1c3RvbWl6YXRpb25zX2ZpZWxkIiwgImlkIjogMCwg
ImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IHRydWUsICJuYW1lIjogImludGVybmFs
X2N1c3RvbWl6YXRpb25zX2ZpZWxkIiwgInJlYWRfb25seSI6IHRydWUsICJ0ZXh0IjogIkN1c3Rv
bWl6YXRpb25zIEZpZWxkIChpbnRlcm5hbCkiLCAidHlwZV9pZCI6IDAsICJ1dWlkIjogImJmZWVj
MmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMSJ9XSwgImZ1bmN0aW9ucyI6IFt7ImNyZWF0
b3IiOiB7ImRpc3BsYXlfbmFtZSI6ICJTYWJpbmEgQ3plcm5lY2thIiwgImlkIjogMSwgIm5hbWUi
OiAic2FiaW5hLmN6ZXJuZWNrYTFAaWUuaWJtLmNvbSIsICJ0eXBlIjogInVzZXIifSwgImRlc2Ny
aXB0aW9uIjogeyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50IjogIkZ1bmN0aW9uIHRoYXQgdGFr
ZXMgYSBKU09OIFN0cmluZyBvZiBmaWVsZCBhbmQgdmFsdWUgcGFpcnMgdG8gY2xvc2UgYW4gSW5j
aWRlbnQuIn0sICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAiZm5faW5jaWRlbnRfdXRpbHMiLCAiZGlz
cGxheV9uYW1lIjogIkluY2lkZW50IFV0aWxzOiBDbG9zZSBhbiBJbmNpZGVudCIsICJleHBvcnRf
a2V5IjogImluY2lkZW50X3V0aWxzX2Nsb3NlX2FuX2luY2lkZW50IiwgImlkIjogMiwgImxhc3Rf
bW9kaWZpZWRfYnkiOiB7ImRpc3BsYXlfbmFtZSI6ICJTYWJpbmEgQ3plcm5lY2thIiwgImlkIjog
MSwgIm5hbWUiOiAic2FiaW5hLmN6ZXJuZWNrYTFAaWUuaWJtLmNvbSIsICJ0eXBlIjogInVzZXIi
fSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1OTIxNzMzNjM3NTQsICJuYW1lIjogImluY2lkZW50
X3V0aWxzX2Nsb3NlX2FuX2luY2lkZW50IiwgInRhZ3MiOiBbXSwgInV1aWQiOiAiMTdmNmJmNTkt
ZmExNC00YzU2LWE1MDYtMjU4NWQyZTdkYTA3IiwgInZlcnNpb24iOiAxLCAidmlld19pdGVtcyI6
IFt7ImNvbnRlbnQiOiAiYjEzYTQwZTMtZTdmZi00NjRlLTk2NmMtYWVhODNlYjVhYmI5IiwgImVs
ZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19p
ZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0s
IHsiY29udGVudCI6ICI3YWQwNjI0NS1jMmE2LTRhYjQtODNmZC00ZWFjMWRlYjgzZWUiLCAiZWxl
bWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lm
IjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfV0s
ICJ3b3JrZmxvd3MiOiBbeyJhY3Rpb25zIjogW10sICJkZXNjcmlwdGlvbiI6IG51bGwsICJuYW1l
IjogIkV4YW1wbGU6IENsb3NlIGFuIEluY2lkZW50IiwgIm9iamVjdF90eXBlIjogImluY2lkZW50
IiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfY2xvc2VfYW5faW5jaWRlbnQiLCAidGFn
cyI6IFtdLCAidXVpZCI6IG51bGwsICJ3b3JrZmxvd19pZCI6IDN9XX1dLCAiZ2VvcyI6IG51bGws
ICJncm91cHMiOiBudWxsLCAiaWQiOiAxLCAiaW5ib3VuZF9tYWlsYm94ZXMiOiBudWxsLCAiaW5j
aWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgImluY2lkZW50X3R5cGVzIjogW3sidXBkYXRlX2Rh
dGUiOiAxNjA1MDE5OTY5ODkzLCAiY3JlYXRlX2RhdGUiOiAxNjA1MDE5OTY5ODkzLCAidXVpZCI6
ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZGVzY3JpcHRpb24iOiAi
Q3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9t
aXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNr
YWdlcyAoaW50ZXJuYWwpIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFy
ZW50X2lkIjogbnVsbCwgImhpZGRlbiI6IGZhbHNlLCAiaWQiOiAwfV0sICJpbmR1c3RyaWVzIjog
bnVsbCwgImxheW91dHMiOiBbXSwgImxvY2FsZSI6IG51bGwsICJtZXNzYWdlX2Rlc3RpbmF0aW9u
cyI6IFt7ImFwaV9rZXlzIjogW10sICJkZXN0aW5hdGlvbl90eXBlIjogMCwgImV4cGVjdF9hY2si
OiB0cnVlLCAiZXhwb3J0X2tleSI6ICJmbl9pbmNpZGVudF91dGlscyIsICJuYW1lIjogImZuX2lu
Y2lkZW50X3V0aWxzIiwgInByb2dyYW1tYXRpY19uYW1lIjogImZuX2luY2lkZW50X3V0aWxzIiwg
InRhZ3MiOiBbXSwgInVzZXJzIjogWyJzYWJpbmEuY3plcm5lY2thMUBpZS5pYm0uY29tIl0sICJ1
dWlkIjogIjM2ZTlmM2ZjLWMzZTktNGJjZi04NWJkLWFiMjI0NDZjMjQ2MSJ9XSwgIm5vdGlmaWNh
dGlvbnMiOiBudWxsLCAib3ZlcnJpZGVzIjogW10sICJwaGFzZXMiOiBbXSwgInJlZ3VsYXRvcnMi
OiBudWxsLCAicm9sZXMiOiBbXSwgInNjcmlwdHMiOiBbXSwgInNlcnZlcl92ZXJzaW9uIjogeyJi
dWlsZF9udW1iZXIiOiA1NjM0LCAibWFqb3IiOiAzNiwgIm1pbm9yIjogMCwgInZlcnNpb24iOiAi
MzYuMC41NjM0In0sICJ0YWdzIjogW10sICJ0YXNrX29yZGVyIjogW10sICJ0aW1lZnJhbWVzIjog
bnVsbCwgInR5cGVzIjogW10sICJ3b3JrZmxvd3MiOiBbeyJhY3Rpb25zIjogW10sICJjb250ZW50
IjogeyJ2ZXJzaW9uIjogMTIsICJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX2Nsb3NlX2FuX2luY2lk
ZW50IiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48
ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0
L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEw
MDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1
MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0
L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4
bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1c
Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNw
YWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxl
X2Nsb3NlX2FuX2luY2lkZW50XCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxl
OiBDbG9zZSBhbiBJbmNpZGVudFwiPjxkb2N1bWVudGF0aW9uPkFuIGV4YW1wbGUgd29ya2Zsb3cg
d2hpY2ggdGFrZXMgYW4gaW5jaWRlbnRfaWQgYW5kIGFsbG93cyB0byBzcGVjaWZ5IGNsb3NlX2Zp
ZWxkcyBpbiBvcmRlciB0byBjbG9zZSBhbiBJbmNpZGVudC48L2RvY3VtZW50YXRpb24+PHN0YXJ0
RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFn
czc1Zmg8L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFz
a18wdjJ0dm03XCIgbmFtZT1cIkluY2lkZW50IFV0aWxzOiBDbG9zZSBhbiBJbmNpZGVudFwiIHJl
c2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpm
dW5jdGlvbiB1dWlkPVwiMTdmNmJmNTktZmExNC00YzU2LWE1MDYtMjU4NWQyZTdkYTA3XCI+e1wi
aW5wdXRzXCI6e30sXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5pbmNpZGVudF9p
ZCA9IGluY2lkZW50X2lkXFxuaW5wdXRzLmNsb3NlX2ZpZWxkcyA9IHJ1bGUucHJvcGVydGllcy5p
bmNpZGVudF91dGlsc19jbG9zZV9maWVsZHNcIixcInJlc3VsdF9uYW1lXCI6XCJcIn08L3Jlc2ls
aWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3df
MWdzNzVmaDwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xMGcyNGY5PC9vdXRnb2lu
Zz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMWdzNzVmaFwi
IHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNr
XzB2MnR2bTdcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMTNoMHRsaFwiPjxpbmNvbWluZz5T
ZXF1ZW5jZUZsb3dfMTBnMjRmOTwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlk
PVwiU2VxdWVuY2VGbG93XzEwZzI0ZjlcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wdjJ0dm03
XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMTNoMHRsaFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJU
ZXh0QW5ub3RhdGlvbl8xNWFzNTJ5XCI+PHRleHQ+PCFbQ0RBVEFbSW5wdXRzOlxuaW5jaWRlbnRf
aWQsIGNsb3NlX2ZpZWxkc1xuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9u
IGlkPVwiQXNzb2NpYXRpb25fMWNhdTB5cVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzB2MnR2
bTdcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xNWFzNTJ5XCIvPjx0ZXh0QW5ub3RhdGlv
biBpZD1cIlRleHRBbm5vdGF0aW9uXzBvcmpyN2hcIj48dGV4dD48IVtDREFUQVtPdXRwdXQ6XG5D
bG9zZXMgdGhlIEluY2lkZW50XV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9u
IGlkPVwiQXNzb2NpYXRpb25fMWpsaXl3dFwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzB2MnR2
bTdcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8wb3JqcjdoXCIvPjwvcHJvY2Vzcz48YnBt
bmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJw
bW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNo
YXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1
NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIx
NjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+
PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2Vydmlj
ZVRhc2tfMHYydHZtN1wiIGlkPVwiU2VydmljZVRhc2tfMHYydHZtN19kaVwiPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIzMzNcIiB5PVwiMTY2XCIvPjwvYnBt
bmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93
XzFnczc1ZmhcIiBpZD1cIlNlcXVlbmNlRmxvd18xZ3M3NWZoX2RpXCI+PG9tZ2RpOndheXBvaW50
IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5
cG9pbnQgeD1cIjI2MlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdk
aTp3YXlwb2ludCB4PVwiMjYyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+
PG9tZ2RpOndheXBvaW50IHg9XCIzMzNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIw
NlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9
XCIwXCIgeD1cIjI3N1wiIHk9XCIxOTkuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6
QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8xM2gwdGxo
XCIgaWQ9XCJFbmRFdmVudF8xM2gwdGxoX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwi
IHdpZHRoPVwiMzZcIiB4PVwiNTg0XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjYwMlwiIHk9XCIyMjdcIi8+
PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJw
bW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzEwZzI0ZjlcIiBpZD1cIlNlcXVlbmNlRmxvd18xMGcy
NGY5X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0MzNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjUwOVwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTA5XCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1ODRcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjUyNFwiIHk9XCIxOTkuNVwiLz48L2Jw
bW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVs
ZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xNWFzNTJ5XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xNWFz
NTJ5X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI2MFwiIHdpZHRoPVwiMTA2XCIgeD1cIjIz
MlwiIHk9XCI2MVwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxl
bWVudD1cIkFzc29jaWF0aW9uXzFjYXUweXFcIiBpZD1cIkFzc29jaWF0aW9uXzFjYXUweXFfZGlc
Ij48b21nZGk6d2F5cG9pbnQgeD1cIjM0OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwi
MTY2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzExXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwi
IHk9XCIxMjFcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1l
bnQ9XCJUZXh0QW5ub3RhdGlvbl8wb3JqcjdoXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8wb3Jqcjdo
X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI3NFwiIHdpZHRoPVwiMTAyXCIgeD1cIjQ2N1wi
IHk9XCI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVu
dD1cIkFzc29jaWF0aW9uXzFqbGl5d3RcIiBpZD1cIkFzc29jaWF0aW9uXzFqbGl5d3RfZGlcIj48
b21nZGk6d2F5cG9pbnQgeD1cIjQyNlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTY5
XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDc1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIxMjhcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQ
TU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+In0sICJjb250ZW50X3ZlcnNpb24iOiAxMiwgImNyZWF0
b3JfaWQiOiAic2FiaW5hLmN6ZXJuZWNrYTFAaWUuaWJtLmNvbSIsICJkZXNjcmlwdGlvbiI6ICJB
biBleGFtcGxlIHdvcmtmbG93IHdoaWNoIHRha2VzIGFuIGluY2lkZW50X2lkIGFuZCBhbGxvd3Mg
dG8gc3BlY2lmeSBjbG9zZV9maWVsZHMgaW4gb3JkZXIgdG8gY2xvc2UgYW4gSW5jaWRlbnQuIiwg
ImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9jbG9zZV9hbl9pbmNpZGVudCIsICJsYXN0X21vZGlmaWVk
X2J5IjogInNhYmluYS5jemVybmVja2ExQGllLmlibS5jb20iLCAibGFzdF9tb2RpZmllZF90aW1l
IjogMTU5MjE3ODc3MjA2MSwgIm5hbWUiOiAiRXhhbXBsZTogQ2xvc2UgYW4gSW5jaWRlbnQiLCAi
b2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9j
bG9zZV9hbl9pbmNpZGVudCIsICJ0YWdzIjogW10sICJ1dWlkIjogImFmMDM0OGJiLTNmOGUtNDgw
MC05YjU0LTJjMzU1ZTZiN2QxNyIsICJ3b3JrZmxvd19pZCI6IDN9XSwgIndvcmtzcGFjZXMiOiBb
XX0=
""")
