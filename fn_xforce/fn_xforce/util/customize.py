# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_xforce"""

try:
    from resilient import ImportDefinition
except ImportError:
    # Support Apps running on resilient-circuits < v35.0.195
    from resilient_circuits.util import ImportDefinition


def codegen_reload_data():
    """
    Parameters required reload codegen for the fn_xforce package
    """
    return {
        "package": u"fn_xforce",
        "message_destinations": [u"fn_xforce"],
        "functions": [u"xforce_query_collection", u"xforce_get_collection_by_id"],
        "workflows": [u"example_return_top_3_entries_from_collections", u"example_xforce_query_collections", u"example_xforce_collection_by_id"],
        "actions": [u"Example: X-Force Query from Artifact", u"Example: X-Force Return Top 3 from Collection(s)", u"Example: X-Force Query Collection by ID"],
        "incident_fields": [],
        "incident_artifact_types": [],
        "datatables": [],
        "automatic_tasks": [],
        "scripts": []
    }


def customization_data(client=None):
    """
    Returns a Generator of ImportDefinitions (Customizations).
    Install them using `resilient-circuits customize`

    Contents:
    - Message Destinations:
        - fn_xforce
    - Functions:
        - xforce_query_collection
        - xforce_get_collection_by_id
    - Workflows:
        - example_return_top_3_entries_from_collections
        - example_xforce_query_collections
        - example_xforce_collection_by_id
    - Rules:
        - Example: X-Force Query from Artifact
        - Example: X-Force Return Top 3 from Collection(s)
        - Example: X-Force Query Collection by ID
    """

    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFt7ImV2YWx1YXRpb25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFj
dC50eXBlIiwgIm1ldGhvZCI6ICJpbiIsICJ0eXBlIjogbnVsbCwgInZhbHVlIjogWyJJUCBBZGRy
ZXNzIiwgIkROUyBOYW1lIiwgIlVSTCIsICJNYWx3YXJlIE1ENSBIYXNoIiwgIk1hbHdhcmUgU0hB
LTEgSGFzaCIsICJTdHJpbmciLCAiTWFsd2FyZSBTSEEtMjU2IEhhc2giXX1dLCAiZW5hYmxlZCI6
IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFgtRm9yY2UgUXVlcnkgQ29sbGVjdGlvbiBi
eSBJRCIsICJpZCI6IDIxLCAibG9naWNfdHlwZSI6ICJhbGwiLCAibWVzc2FnZV9kZXN0aW5hdGlv
bnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTogWC1Gb3JjZSBRdWVyeSBDb2xsZWN0aW9uIGJ5IElE
IiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInRhZ3MiOiBbXSwgInRpbWVvdXRfc2Vjb25k
cyI6IDg2NDAwLCAidHlwZSI6IDEsICJ1dWlkIjogIjljMjliNDMxLWQ3Y2QtNGMzZi1iYWVlLTdl
OWMxMDJkZmMwYSIsICJ2aWV3X2l0ZW1zIjogW10sICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfeGZv
cmNlX2NvbGxlY3Rpb25fYnlfaWQiXX0sIHsiYXV0b21hdGlvbnMiOiBbXSwgImNvbmRpdGlvbnMi
OiBbeyJldmFsdWF0aW9uX2lkIjogbnVsbCwgImZpZWxkX25hbWUiOiAiYXJ0aWZhY3QudHlwZSIs
ICJtZXRob2QiOiAiaW4iLCAidHlwZSI6IG51bGwsICJ2YWx1ZSI6IFsiSVAgQWRkcmVzcyIsICJE
TlMgTmFtZSIsICJVUkwiLCAiTWFsd2FyZSBNRDUgSGFzaCIsICJNYWx3YXJlIFNIQS0xIEhhc2gi
LCAiU3RyaW5nIiwgIk1hbHdhcmUgU0hBLTI1NiBIYXNoIl19XSwgImVuYWJsZWQiOiB0cnVlLCAi
ZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBYLUZvcmNlIFF1ZXJ5IGZyb20gQXJ0aWZhY3QiLCAiaWQi
OiAyMiwgImxvZ2ljX3R5cGUiOiAiYWxsIiwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10sICJu
YW1lIjogIkV4YW1wbGU6IFgtRm9yY2UgUXVlcnkgZnJvbSBBcnRpZmFjdCIsICJvYmplY3RfdHlw
ZSI6ICJhcnRpZmFjdCIsICJ0YWdzIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInR5
cGUiOiAxLCAidXVpZCI6ICJmODhhODhlNi03YzJiLTRjZWUtOGVkOC01YjA5MzUxNTA4MmQiLCAi
dmlld19pdGVtcyI6IFtdLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX3hmb3JjZV9xdWVyeV9jb2xs
ZWN0aW9ucyJdfSwgeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29uZGl0aW9ucyI6IFt7ImV2YWx1YXRp
b25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFjdC50eXBlIiwgIm1ldGhvZCI6ICJp
biIsICJ0eXBlIjogbnVsbCwgInZhbHVlIjogWyJJUCBBZGRyZXNzIiwgIkROUyBOYW1lIiwgIlVS
TCIsICJNYWx3YXJlIE1ENSBIYXNoIiwgIk1hbHdhcmUgU0hBLTEgSGFzaCIsICJTdHJpbmciLCAi
TWFsd2FyZSBTSEEtMjU2IEhhc2giXX1dLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5Ijog
IkV4YW1wbGU6IFgtRm9yY2UgUmV0dXJuIFRvcCAzIGZyb20gQ29sbGVjdGlvbihzKSIsICJpZCI6
IDIzLCAibG9naWNfdHlwZSI6ICJhbGwiLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgIm5h
bWUiOiAiRXhhbXBsZTogWC1Gb3JjZSBSZXR1cm4gVG9wIDMgZnJvbSBDb2xsZWN0aW9uKHMpIiwg
Im9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInRhZ3MiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6
IDg2NDAwLCAidHlwZSI6IDEsICJ1dWlkIjogImRmYWFlNTFkLTUxMjMtNGEzYy05OTFmLWE1ZDY5
M2IyNmQyMSIsICJ2aWV3X2l0ZW1zIjogW10sICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfcmV0dXJu
X3RvcF8zX2VudHJpZXNfZnJvbV9jb2xsZWN0aW9ucyJdfV0sICJhdXRvbWF0aWNfdGFza3MiOiBb
XSwgImV4cG9ydF9kYXRlIjogMTU5OTY3NDE5MzM5NCwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6
IDIsICJmaWVsZHMiOiBbeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRp
b24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hv
c2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0
ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi94Zm9yY2VfcXVlcnkiLCAiaGlk
ZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogMTg3LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0Iiwg
ImludGVybmFsIjogZmFsc2UsICJpc190cmFja2VkIjogZmFsc2UsICJuYW1lIjogInhmb3JjZV9x
dWVyeSIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9s
ZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyZXF1aXJlZCI6
ICJhbHdheXMiLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBb
XSwgInRleHQiOiAieGZvcmNlX3F1ZXJ5IiwgInRvb2x0aXAiOiAiQSBxdWVyeSB0byBzdWJtaXQg
Zm9yIHNlYXJjaGluZyBYRm9yY2UgQ29sbGVjdGlvbnMiLCAidHlwZV9pZCI6IDExLCAidXVpZCI6
ICI2NDM5ZWM0MC05YzI2LTQ3NWUtOWFiZS1iNzM4NDIyY2E5ZDAiLCAidmFsdWVzIjogW119LCB7
ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiY2Fs
Y3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhw
b3J0X2tleSI6ICJfX2Z1bmN0aW9uL3hmb3JjZV9jb2xsZWN0aW9uX3R5cGUiLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgImlkIjogMTg4LCAiaW5wdXRfdHlwZSI6ICJzZWxlY3QiLCAiaW50
ZXJuYWwiOiBmYWxzZSwgImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAieGZvcmNlX2NvbGxl
Y3Rpb25fdHlwZSIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBs
YWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNo
X3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJ4Zm9y
Y2VfY29sbGVjdGlvbl90eXBlIiwgInRvb2x0aXAiOiAiV2hpY2ggdHlwZSBvZiBjb2xsZWN0aW9u
cyB0byBzZWFyY2guIFB1YmxpYyBvciBwcml2YXRlIGNvbGxlY3Rpb25zIGF2YWlsYWJsZS4iLCAi
dHlwZV9pZCI6IDExLCAidXVpZCI6ICJjZTk5YjY0YS01MjU5LTQzOWMtYWI2MC03MTM3ZjNiODg4
MDYiLCAidmFsdWVzIjogW3siZGVmYXVsdCI6IHRydWUsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRl
biI6IGZhbHNlLCAibGFiZWwiOiAicHVibGljIiwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6
ICIwMjJiYTJhOC05MGQ2LTQzM2UtYmVhNC1lMmNjOGNhMGJiNzQiLCAidmFsdWUiOiA3MH0sIHsi
ZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVs
IjogInByaXZhdGUiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjZmNTdiMWM2LWQwNjYt
NDE4NS1iMzE3LTgxNjFkODc3Mzg5YiIsICJ2YWx1ZSI6IDcxfV19LCB7ImFsbG93X2RlZmF1bHRf
dmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNl
LCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5
X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1
bmN0aW9uL3hmb3JjZV9jb2xsZWN0aW9uX2lkIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2Us
ICJpZCI6IDE4OSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNf
dHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJ4Zm9yY2VfY29sbGVjdGlvbl9pZCIsICJvcGVyYXRp
b25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVm
aXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAicmlj
aF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAieGZv
cmNlX2NvbGxlY3Rpb25faWQiLCAidG9vbHRpcCI6ICJBIGNvbGxlY3Rpb24gSUQgZm9yIHVzZSB3
aXRoIHRoZSBYRm9yY2UgQVBJIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiNTVjNjg2YTUtNDYx
MS00MGJhLWJjODctMjUyNDE0MTc2MGUxIiwgInZhbHVlcyI6IFtdfSwgeyJleHBvcnRfa2V5Ijog
ImluY2lkZW50L2ludGVybmFsX2N1c3RvbWl6YXRpb25zX2ZpZWxkIiwgImlkIjogMCwgImlucHV0
X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IHRydWUsICJuYW1lIjogImludGVybmFsX2N1c3Rv
bWl6YXRpb25zX2ZpZWxkIiwgInJlYWRfb25seSI6IHRydWUsICJ0ZXh0IjogIkN1c3RvbWl6YXRp
b25zIEZpZWxkIChpbnRlcm5hbCkiLCAidHlwZV9pZCI6IDAsICJ1dWlkIjogImJmZWVjMmQ0LTM3
NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMSJ9XSwgImZ1bmN0aW9ucyI6IFt7ImNyZWF0b3IiOiB7
ImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQgU3lzYWRtaW4iLCAiaWQiOiAzLCAibmFtZSI6ICJh
QGEuY29tIiwgInR5cGUiOiAidXNlciJ9LCAiZGVzY3JpcHRpb24iOiB7ImZvcm1hdCI6ICJ0ZXh0
IiwgImNvbnRlbnQiOiAiQSBmdW5jdGlvbiB0aGF0IHRha2VzIGluIGEgcGFyYW1ldGVyIG9mIGEg
eGZvcmNlX2NvbGxlY3Rpb25faWQgYW5kIHRoZW4gc3VibWl0cyB0aGlzIHRvIHRoZSBYLUZvcmNl
IEFQSSB0byBnYXRoZXIgZGF0YSBmb3IgdGhlIHByb3ZpZGVkIGNhc2UuIn0sICJkZXN0aW5hdGlv
bl9oYW5kbGUiOiAiZm5feGZvcmNlIiwgImRpc3BsYXlfbmFtZSI6ICJYLUZvcmNlIFV0aWxpdGll
czogR2V0IENvbGxlY3Rpb24gYnkgSUQiLCAiZXhwb3J0X2tleSI6ICJ4Zm9yY2VfZ2V0X2NvbGxl
Y3Rpb25fYnlfaWQiLCAiaWQiOiAyLCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9uYW1l
IjogImludGVncmF0aW9ucyIsICJpZCI6IDQsICJuYW1lIjogImViMmQxZjdkLTY2NTEtNDE1YS1i
NGZmLWExNGZjZDJmODRmNSIsICJ0eXBlIjogImFwaWtleSJ9LCAibGFzdF9tb2RpZmllZF90aW1l
IjogMTU5OTY2NDM2NTgwMSwgIm5hbWUiOiAieGZvcmNlX2dldF9jb2xsZWN0aW9uX2J5X2lkIiwg
InRhZ3MiOiBbXSwgInV1aWQiOiAiYjc5MmY2ZWMtMmRhYy00MzllLTk1MDQtMTVjZjIzMDYxNDk5
IiwgInZlcnNpb24iOiAyLCAidmlld19pdGVtcyI6IFt7ImNvbnRlbnQiOiAiNTVjNjg2YTUtNDYx
MS00MGJhLWJjODctMjUyNDE0MTc2MGUxIiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVs
ZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVy
IjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAid29ya2Zsb3dzIjogW3siYWN0aW9ucyI6
IFtdLCAiZGVzY3JpcHRpb24iOiBudWxsLCAibmFtZSI6ICJFeGFtcGxlOiBYLUZvcmNlIEdldCBD
b2xsZWN0aW9uIGJ5IElEIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInByb2dyYW1tYXRp
Y19uYW1lIjogImV4YW1wbGVfeGZvcmNlX2NvbGxlY3Rpb25fYnlfaWQiLCAidGFncyI6IFtdLCAi
dXVpZCI6IG51bGwsICJ3b3JrZmxvd19pZCI6IDN9LCB7ImFjdGlvbnMiOiBbXSwgImRlc2NyaXB0
aW9uIjogbnVsbCwgIm5hbWUiOiAiRXhhbXBsZTogWC1Gb3JjZSBSZXR1cm4gVG9wIDMgZnJvbSBD
b2xsZWN0aW9uKHMpIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInByb2dyYW1tYXRpY19u
YW1lIjogImV4YW1wbGVfcmV0dXJuX3RvcF8zX2VudHJpZXNfZnJvbV9jb2xsZWN0aW9ucyIsICJ0
YWdzIjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogMn1dfSwgeyJjcmVhdG9yIjog
eyJkaXNwbGF5X25hbWUiOiAiUmVzaWxpZW50IFN5c2FkbWluIiwgImlkIjogMywgIm5hbWUiOiAi
YUBhLmNvbSIsICJ0eXBlIjogInVzZXIifSwgImRlc2NyaXB0aW9uIjogeyJmb3JtYXQiOiAidGV4
dCIsICJjb250ZW50IjogIkEgZnVuY3Rpb24gdGhhdCBhbGxvd3MgYSB1c2VyIHRvIHN1Ym1pdCBh
IHF1ZXJ5IHRvIHRoZSBYLUZvcmNlIENvbGxlY3Rpb25zIEFQSS4gU3VwcG9ydHMgc2VhcmNoaW5n
IGVpdGhlciBwdWJsaWMgb3IgcHJpdmF0ZSBjb2xsZWN0aW9ucy4ifSwgImRlc3RpbmF0aW9uX2hh
bmRsZSI6ICJmbl94Zm9yY2UiLCAiZGlzcGxheV9uYW1lIjogIlgtRm9yY2UgVXRpbGl0aWVzOiBR
dWVyeSBDb2xsZWN0aW9uIiwgImV4cG9ydF9rZXkiOiAieGZvcmNlX3F1ZXJ5X2NvbGxlY3Rpb24i
LCAiaWQiOiAzLCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9uYW1lIjogImludGVncmF0
aW9ucyIsICJpZCI6IDQsICJuYW1lIjogImViMmQxZjdkLTY2NTEtNDE1YS1iNGZmLWExNGZjZDJm
ODRmNSIsICJ0eXBlIjogImFwaWtleSJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU5OTY2NDM2
NTgwMSwgIm5hbWUiOiAieGZvcmNlX3F1ZXJ5X2NvbGxlY3Rpb24iLCAidGFncyI6IFtdLCAidXVp
ZCI6ICJhNjQ3MzgzOC1kMWZlLTRkNDAtYjI4NC1jNDhkM2I2YTkxZjYiLCAidmVyc2lvbiI6IDIs
ICJ2aWV3X2l0ZW1zIjogW3siY29udGVudCI6ICI2NDM5ZWM0MC05YzI2LTQ3NWUtOWFiZS1iNzM4
NDIyY2E5ZDAiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5j
dGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBf
bGFiZWwiOiBudWxsfSwgeyJjb250ZW50IjogImNlOTliNjRhLTUyNTktNDM5Yy1hYjYwLTcxMzdm
M2I4ODgwNiIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0
aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9s
YWJlbCI6IG51bGx9XSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImRlc2NyaXB0aW9u
IjogbnVsbCwgIm5hbWUiOiAiRXhhbXBsZTogWC1Gb3JjZSBRdWVyeSBDb2xsZWN0aW9uKHMpIiwg
Im9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVf
eGZvcmNlX3F1ZXJ5X2NvbGxlY3Rpb25zIiwgInRhZ3MiOiBbXSwgInV1aWQiOiBudWxsLCAid29y
a2Zsb3dfaWQiOiA0fSwgeyJhY3Rpb25zIjogW10sICJkZXNjcmlwdGlvbiI6IG51bGwsICJuYW1l
IjogIkV4YW1wbGU6IFgtRm9yY2UgUmV0dXJuIFRvcCAzIGZyb20gQ29sbGVjdGlvbihzKSIsICJv
YmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3Jl
dHVybl90b3BfM19lbnRyaWVzX2Zyb21fY29sbGVjdGlvbnMiLCAidGFncyI6IFtdLCAidXVpZCI6
IG51bGwsICJ3b3JrZmxvd19pZCI6IDJ9XX1dLCAiZ2VvcyI6IG51bGwsICJncm91cHMiOiBudWxs
LCAiaWQiOiAyLCAiaW5ib3VuZF9tYWlsYm94ZXMiOiBudWxsLCAiaW5jaWRlbnRfYXJ0aWZhY3Rf
dHlwZXMiOiBbXSwgImluY2lkZW50X3R5cGVzIjogW3sidXBkYXRlX2RhdGUiOiAxNTk5Njc0MTc4
MTY4LCAiY3JlYXRlX2RhdGUiOiAxNTk5Njc0MTc4MTY4LCAidXVpZCI6ICJiZmVlYzJkNC0zNzcw
LTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXphdGlvbiBQ
YWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdl
cyAoaW50ZXJuYWwpIiwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwp
IiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVsbCwg
ImhpZGRlbiI6IGZhbHNlLCAiaWQiOiAwfV0sICJpbmR1c3RyaWVzIjogbnVsbCwgImxheW91dHMi
OiBbXSwgImxvY2FsZSI6IG51bGwsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7ImFwaV9rZXlz
IjogWyJlYjJkMWY3ZC02NjUxLTQxNWEtYjRmZi1hMTRmY2QyZjg0ZjUiXSwgImRlc3RpbmF0aW9u
X3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJleHBvcnRfa2V5IjogImZuX3hmb3JjZSIs
ICJuYW1lIjogImZuX3hmb3JjZSIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl94Zm9yY2UiLCAi
dGFncyI6IFtdLCAidXNlcnMiOiBbXSwgInV1aWQiOiAiOTEyNTE1M2EtN2E1ZC00YmEyLWI5NjMt
NzAxY2M2ZjhhM2QwIn1dLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJvdmVycmlkZXMiOiBbXSwg
InBoYXNlcyI6IFtdLCAicmVndWxhdG9ycyI6IG51bGwsICJyb2xlcyI6IFtdLCAic2NyaXB0cyI6
IFtdLCAic2VydmVyX3ZlcnNpb24iOiB7ImJ1aWxkX251bWJlciI6IDMyLCAibWFqb3IiOiAzNSwg
Im1pbm9yIjogMiwgInZlcnNpb24iOiAiMzUuMi4zMiJ9LCAidGFncyI6IFtdLCAidGFza19vcmRl
ciI6IFtdLCAidGltZWZyYW1lcyI6IG51bGwsICJ0eXBlcyI6IFtdLCAid29ya2Zsb3dzIjogW3si
YWN0aW9ucyI6IFtdLCAiY29udGVudCI6IHsidmVyc2lvbiI6IDUsICJ3b3JrZmxvd19pZCI6ICJl
eGFtcGxlX3hmb3JjZV9jb2xsZWN0aW9uX2J5X2lkIiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwi
MS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3
Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93
d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDov
L3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8y
MDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2No
ZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90
ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX3hmb3JjZV9jb2xsZWN0aW9uX2J5X2lkXCIgaXNF
eGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBYLUZvcmNlIEdldCBDb2xsZWN0aW9u
IGJ5IElEXCI+PGRvY3VtZW50YXRpb24+QW4gZXhhbXBsZSB3b3JrZmxvdyB0aGF0IHRha2VzIGlu
IGEgcGFyYW1ldGVyIG9mIGEgeGZvcmNlX2NvbGxlY3Rpb25faWQgYW5kIHRoZW4gYXR0ZW1wdHMg
dG8gZ2F0aGVyIGVucmljaGluZyBpbmZvcm1hdGlvbiBmb3IgdGhhdCBjb2xsZWN0aW9uIHZpYSB0
aGUgWC1Gb3JjZSBBUEkuPC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVu
dF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wN3BucThzPC9vdXRnb2luZz48L3N0
YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMGNrd2libVwiIG5hbWU9XCJY
LUZvcmNlIFV0aWxpdGllczogR2V0IENvbGxlY3Rpb24uLi5cIiByZXNpbGllbnQ6dHlwZT1cImZ1
bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cImI3
OTJmNmVjLTJkYWMtNDM5ZS05NTA0LTE1Y2YyMzA2MTQ5OVwiPntcImlucHV0c1wiOnt9LFwicG9z
dF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaWYgcmVzdWx0cy5zdWNjZXNzOlxcbiAgdHJ5OlxcbiAg
ICBub3RlVGV4dCA9IFxcXCJcXFwiXFxcIiZsdDticiZndDtUaXRsZSA6Jmx0O2ImZ3Q7ezB9Jmx0
Oy9iJmd0O1xcbiAgICAgICAgICAgICAgICAgICZsdDtiJmd0O0NyZWF0ZWQgOiZsdDsvYiZndDt7
MX0mbHQ7L2EmZ3Q7XFxuICAgICAgICAgICAgICAgICAgJmx0O2ImZ3Q7VGFnczombHQ7L2ImZ3Q7
IHsyfSZsdDsvYiZndDtcXG4gICAgICAgICAgICAgICAgICBcXFwiXFxcIlxcXCIuZm9ybWF0KHJl
c3VsdHMudGl0bGUsIHJlc3VsdHMuY3JlYXRlZCwgcmVzdWx0cy50YWdzKVxcbiAgXFxuICAgIGlu
Y2lkZW50LmFkZE5vdGUoaGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5vdGVUZXh0K3Jlc3VsdHMud2lr
aSkpXFxuICBleGNlcHQ6XFxuICAgICMgbm8gaW5jaWRlbnQgbWF0Y2hlZCB0aGUgcHJvdmlkZWQg
aWRcXG4gICAgIyBhZGQgYSBub3RlIHdpdGggcmVzdWx0cy5jb250ZW50LCB3aGljaCB3aWxsIGlu
Zm9ybSB0aGUgdXNlciBvZiB0aGlzXFxuICAgIGluY2lkZW50LmFkZE5vdGUocmVzdWx0cy5jb250
ZW50KVxcbiAgXFxuICAjIFdlIGhhdmUgYWNjZXNzIHRvIGFuIGF0dHJpYnV0ZSBpbiByZXN1bHRz
IGNhbGxlZCAnd2lraSdcXG4gICMgQXMgYW4gZW5oYW5jZW1lbnQgeW91IGNvdWxkIHNhdmUgdGhp
cyAnd2lraScgdG8gYW4gYXR0YWNobWVudCB0byBoYXZlIGEgSFRNTCBvciBUWFQgZGVzY3JpcHRp
b24gb2YgdGhlIHRocmVhdFwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMueGZv
cmNlX2NvbGxlY3Rpb25faWQgPSBhcnRpZmFjdC52YWx1ZVwiLFwicmVzdWx0X25hbWVcIjpcIlwi
fTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVl
bmNlRmxvd18wN3BucThzPC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFmOTZvb3o8
L291dGdvaW5nPjwvc2VydmljZVRhc2s+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMWtyMzRncFwi
PjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMWY5Nm9vejwvaW5jb21pbmc+PC9lbmRFdmVudD48c2Vx
dWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzA3cG5xOHNcIiBzb3VyY2VSZWY9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wY2t3aWJtXCIvPjxzZXF1ZW5j
ZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMWY5Nm9velwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNr
XzBja3dpYm1cIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8xa3IzNGdwXCIvPjx0ZXh0QW5ub3RhdGlv
biBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93
IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlv
bl8xc2V1ajQ4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwi
VGV4dEFubm90YXRpb25fMWt4eGl5dFwiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBp
ZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVm
aW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1c
IlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2Rj
OkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48
YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIg
eD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFw
ZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRc
IiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFw
ZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlk
PVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48
YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzBja3dpYm1cIiBpZD1c
IlNlcnZpY2VUYXNrXzBja3dpYm1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lk
dGg9XCIxMDBcIiB4PVwiNDE5XCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5k
aTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8xa3IzNGdwXCIgaWQ9XCJFbmRFdmVu
dF8xa3IzNGdwX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4
PVwiNzQxXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjc1OVwiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxh
YmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2Vx
dWVuY2VGbG93XzA3cG5xOHNcIiBpZD1cIlNlcXVlbmNlRmxvd18wN3BucThzX2RpXCI+PG9tZ2Rp
OndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48
b21nZGk6d2F5cG9pbnQgeD1cIjQxOVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2
XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1c
IjBcIiB4PVwiMzA4LjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpC
UE1ORWRnZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFmOTZv
b3pcIiBpZD1cIlNlcXVlbmNlRmxvd18xZjk2b296X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI1
MTlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQg
eD1cIjc0MVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBN
TkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNjMwXCIg
eT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6
QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+In0sICJjb250ZW50
X3ZlcnNpb24iOiA1LCAiY3JlYXRvcl9pZCI6ICJhQGEuY29tIiwgImRlc2NyaXB0aW9uIjogIkFu
IGV4YW1wbGUgd29ya2Zsb3cgdGhhdCB0YWtlcyBpbiBhIHBhcmFtZXRlciBvZiBhIHhmb3JjZV9j
b2xsZWN0aW9uX2lkIGFuZCB0aGVuIGF0dGVtcHRzIHRvIGdhdGhlciBlbnJpY2hpbmcgaW5mb3Jt
YXRpb24gZm9yIHRoYXQgY29sbGVjdGlvbiB2aWEgdGhlIFgtRm9yY2UgQVBJLiIsICJleHBvcnRf
a2V5IjogImV4YW1wbGVfeGZvcmNlX2NvbGxlY3Rpb25fYnlfaWQiLCAibGFzdF9tb2RpZmllZF9i
eSI6ICJhQGEuY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1OTk2NzQxODM0MTksICJuYW1l
IjogIkV4YW1wbGU6IFgtRm9yY2UgR2V0IENvbGxlY3Rpb24gYnkgSUQiLCAib2JqZWN0X3R5cGUi
OiAiYXJ0aWZhY3QiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV94Zm9yY2VfY29sbGVj
dGlvbl9ieV9pZCIsICJ0YWdzIjogW10sICJ1dWlkIjogIjBmNTRlMjdmLThjNGQtNDI4MC1hYTZi
LTZkMjBiYmQyZmI3ZiIsICJ3b3JrZmxvd19pZCI6IDN9LCB7ImFjdGlvbnMiOiBbXSwgImNvbnRl
bnQiOiB7InZlcnNpb24iOiAyLCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9yZXR1cm5fdG9wXzNf
ZW50cmllc19mcm9tX2NvbGxlY3Rpb25zIiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIg
ZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5v
cmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5v
bWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5v
bWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21n
Lm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2ls
aWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hN
TFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWlu
c3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+
PHByb2Nlc3MgaWQ9XCJleGFtcGxlX3JldHVybl90b3BfM19lbnRyaWVzX2Zyb21fY29sbGVjdGlv
bnNcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IFgtRm9yY2UgUmV0dXJu
IFRvcCAzIGZyb20gQ29sbGVjdGlvbihzKVwiPjxkb2N1bWVudGF0aW9uPjwhW0NEQVRBW0FuIGV4
YW1wbGUgd29ya2Zsb3cgdGhhdCB0YWtlcyBpbiBhIHF1ZXJ5IHN0cmluZyBhcyBhIHBhcmFtLiBc
bkl0IHRoZW4gc3VibWl0cyB0aGlzIHF1ZXJ5IHRvIHRoZSBYLUZvcmNlIEFQSSByZXR1cm5pbmcg
Y2FzZSBmaWxlIElEcyBmb3IgZWFjaC5cblRoZSB0b3AgMyBJRCdzIHJldHVybmVkIGFyZSB0aGVu
IHF1ZXJpZWQgdG8gcmV0dXJuIGluZm9ybWF0aW9uIGFib3V0IHRoZSB0aHJlYXQgc2F2aW5nIHRo
ZSBpbmZvIGFzIGEgbm90ZS5dXT48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFy
dEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFuc2lobnQ8L291dGdvaW5n
Pjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wMG5wdWNmXCIgbmFt
ZT1cIlgtRm9yY2UgVXRpbGl0aWVzOiBRdWVyeSBDb2xsZWN0aS4uLlwiIHJlc2lsaWVudDp0eXBl
PVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlk
PVwiYTY0NzM4MzgtZDFmZS00ZDQwLWIyODQtYzQ4ZDNiNmE5MWY2XCI+e1wiaW5wdXRzXCI6e1wi
Y2U5OWI2NGEtNTI1OS00MzljLWFiNjAtNzEzN2YzYjg4ODA2XCI6e1wiaW5wdXRfdHlwZVwiOlwi
c3RhdGljXCIsXCJzdGF0aWNfaW5wdXRcIjp7XCJtdWx0aXNlbGVjdF92YWx1ZVwiOltdLFwic2Vs
ZWN0X3ZhbHVlXCI6XCIwMjJiYTJhOC05MGQ2LTQzM2UtYmVhNC1lMmNjOGNhMGJiNzRcIn19fSxc
InBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlmIHJlc3VsdHMubnVtX29mX2Nhc2VmaWxlcyAh
PSAwOlxcbiAgbm90ZVRleHQgPSBcXFwiXFxcIlxcXCImbHQ7YiZndDtYLUZvcmNlIFF1ZXJ5IHN0
YXR1cyZsdDsvYiZndDsmbHQ7YnImZ3Q7VG90YWwgbWF0Y2hlZCBjYXNlIGZpbGVzIDombHQ7YiZn
dDt7MH0mbHQ7L2ImZ3Q7Jmx0O2JyJmd0O05vdyBzZWFyY2hpbmcgdG9wIDMgcmVzdWx0c1xcXCJc
XFwiXFxcIi5mb3JtYXQocmVzdWx0cy5udW1fb2ZfY2FzZWZpbGVzKVxcbiAgaW5jaWRlbnQuYWRk
Tm90ZShoZWxwZXIuY3JlYXRlUmljaFRleHQobm90ZVRleHQpKVwiLFwicHJlX3Byb2Nlc3Npbmdf
c2NyaXB0XCI6XCJpZiBhcnRpZmFjdC52YWx1ZSBpcyBub3QgTm9uZTpcXG4gIGlucHV0cy54Zm9y
Y2VfcXVlcnkgPSBhcnRpZmFjdC52YWx1ZVwiLFwicmVzdWx0X25hbWVcIjpcInhmb3JjZWNhc2Vm
aWxlc1wifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5n
PlNlcXVlbmNlRmxvd18xbnNpaG50PC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzF0
aWJlYXQ8L291dGdvaW5nPjwvc2VydmljZVRhc2s+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNl
Rmxvd18xbnNpaG50XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVm
PVwiU2VydmljZVRhc2tfMDBucHVjZlwiLz48cGFyYWxsZWxHYXRld2F5IGlkPVwiUGFyYWxsZWxH
YXRld2F5XzFhNTZjenBcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzF0aWJlYXQ8L2luY29taW5n
PjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMTJtNzdzOTwvb3V0Z29pbmc+PG91dGdvaW5nPlNlcXVl
bmNlRmxvd18wamU2MTk5PC9vdXRnb2luZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFkaGpubGM8
L291dGdvaW5nPjwvcGFyYWxsZWxHYXRld2F5PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNr
XzA2NXhndDNcIiBuYW1lPVwiWC1Gb3JjZSBVdGlsaXRpZXM6IEdldCBDb2xsZWN0aW9uLi4uXCIg
cmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50
OmZ1bmN0aW9uIHV1aWQ9XCJiNzkyZjZlYy0yZGFjLTQzOWUtOTUwNC0xNWNmMjMwNjE0OTlcIj57
XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlmIHJlc3VsdHMuc3Vj
Y2VzczpcXG4gIG5vdGVUZXh0ID0gXFxcIlxcXCJcXFwiJmx0O2JyJmd0O1RpdGxlIDombHQ7YiZn
dDt7MH0mbHQ7L2ImZ3Q7XFxuICAgICAgICAgICAgICAgICZsdDtiJmd0O0NyZWF0ZWQgOiZsdDsv
YiZndDt7MX0mbHQ7L2EmZ3Q7XFxuICAgICAgICAgICAgICAgICZsdDtiJmd0O1RhZ3M6Jmx0Oy9i
Jmd0OyB7Mn0mbHQ7L2ImZ3Q7XFxuICAgICAgICAgICAgICAgIFxcXCJcXFwiXFxcIi5mb3JtYXQo
cmVzdWx0cy50aXRsZSwgcmVzdWx0cy5jcmVhdGVkLCByZXN1bHRzLnRhZ3MpXFxuICBcXG4gIGlu
Y2lkZW50LmFkZE5vdGUoaGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5vdGVUZXh0K3Jlc3VsdHMud2lr
aSkpXFxuICBcXG4gICNXZSBoYXZlIGFjY2VzcyB0byBhbiBhdHRyaWJ1dGUgaW4gcmVzdWx0cyBj
YWxsZWQgJ3dpa2knXFxuICAjIEFzIGFuIGVuaGFuY2VtZW50IHlvdSBjb3VsZCBzYXZlIHRoaXMg
J3dpa2knIHRvIGFuIGF0dGFjaG1lbnQgdG8gaGF2ZSBhIEhUTUwgb3IgVFhUIGRlc2NyaXB0aW9u
IG9mIHRoZSB0aHJlYXRcIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaWYgd29ya2Zsb3cu
cHJvcGVydGllcy54Zm9yY2VjYXNlZmlsZXNbXFxcIm51bV9vZl9jYXNlZmlsZXNcXFwiXSAhPSAw
OlxcbiAgaW5wdXRzLnhmb3JjZV9jb2xsZWN0aW9uX2lkID0gd29ya2Zsb3cucHJvcGVydGllcy54
Zm9yY2VjYXNlZmlsZXNbXFxcImNhc2VfZmlsZXNcXFwiXVswXVtcXFwiY2FzZUZpbGVJRFxcXCJd
XCIsXCJyZXN1bHRfbmFtZVwiOlwiXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25F
bGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzEybTc3czk8L2luY29taW5nPjxvdXRnb2lu
Zz5TZXF1ZW5jZUZsb3dfMXYwMXhvYjwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VG
bG93IGlkPVwiU2VxdWVuY2VGbG93XzF0aWJlYXRcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18w
MG5wdWNmXCIgdGFyZ2V0UmVmPVwiUGFyYWxsZWxHYXRld2F5XzFhNTZjenBcIi8+PHNlcXVlbmNl
RmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xMm03N3M5XCIgc291cmNlUmVmPVwiUGFyYWxsZWxHYXRl
d2F5XzFhNTZjenBcIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wNjV4Z3QzXCIvPjxzZXJ2aWNl
VGFzayBpZD1cIlNlcnZpY2VUYXNrXzA5eDg0a2JcIiBuYW1lPVwiWC1Gb3JjZSBVdGlsaXRpZXM6
IEdldCBDb2xsZWN0aW9uLi4uXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNp
b25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCJiNzkyZjZlYy0yZGFjLTQzOWUt
OTUwNC0xNWNmMjMwNjE0OTlcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3Jp
cHRcIjpcImlmIHJlc3VsdHMuc3VjY2VzczpcXG4gIG5vdGVUZXh0ID0gXFxcIlxcXCJcXFwiJmx0
O2JyJmd0O1RpdGxlIDombHQ7YiZndDt7MH0mbHQ7L2ImZ3Q7XFxuICAgICAgICAgICAgICAgICZs
dDtiJmd0O0NyZWF0ZWQgOiZsdDsvYiZndDt7MX0mbHQ7L2EmZ3Q7XFxuICAgICAgICAgICAgICAg
ICZsdDtiJmd0O1RhZ3M6Jmx0Oy9iJmd0OyB7Mn0mbHQ7L2ImZ3Q7XFxuICAgICAgICAgICAgICAg
IFxcXCJcXFwiXFxcIi5mb3JtYXQocmVzdWx0cy50aXRsZSwgcmVzdWx0cy5jcmVhdGVkLCByZXN1
bHRzLnRhZ3MpXFxuICBcXG4gIGluY2lkZW50LmFkZE5vdGUoaGVscGVyLmNyZWF0ZVJpY2hUZXh0
KG5vdGVUZXh0K3Jlc3VsdHMud2lraSkpXFxuICBcXG4gICNXZSBoYXZlIGFjY2VzcyB0byBhbiBh
dHRyaWJ1dGUgaW4gcmVzdWx0cyBjYWxsZWQgJ3dpa2knXFxuICAjIEFzIGFuIGVuaGFuY2VtZW50
IHlvdSBjb3VsZCBzYXZlIHRoaXMgJ3dpa2knIHRvIGFuIGF0dGFjaG1lbnQgdG8gaGF2ZSBhIEhU
TUwgb3IgVFhUIGRlc2NyaXB0aW9uIG9mIHRoZSB0aHJlYXRcIixcInByZV9wcm9jZXNzaW5nX3Nj
cmlwdFwiOlwiaWYgd29ya2Zsb3cucHJvcGVydGllcy54Zm9yY2VjYXNlZmlsZXNbXFxcIm51bV9v
Zl9jYXNlZmlsZXNcXFwiXSAmZ3Q7PSAyOlxcbiAgaW5wdXRzLnhmb3JjZV9jb2xsZWN0aW9uX2lk
ID0gd29ya2Zsb3cucHJvcGVydGllcy54Zm9yY2VjYXNlZmlsZXNbXFxcImNhc2VfZmlsZXNcXFwi
XVsxXVtcXFwiY2FzZUZpbGVJRFxcXCJdXCIsXCJyZXN1bHRfbmFtZVwiOlwiXCJ9PC9yZXNpbGll
bnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBq
ZTYxOTk8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMTl3a2lzMjwvb3V0Z29pbmc+
PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBqZTYxOTlcIiBz
b3VyY2VSZWY9XCJQYXJhbGxlbEdhdGV3YXlfMWE1NmN6cFwiIHRhcmdldFJlZj1cIlNlcnZpY2VU
YXNrXzA5eDg0a2JcIi8+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMGJsc3lycVwiIG5h
bWU9XCJYLUZvcmNlIFV0aWxpdGllczogR2V0IENvbGxlY3Rpb24uLi5cIiByZXNpbGllbnQ6dHlw
ZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVp
ZD1cImI3OTJmNmVjLTJkYWMtNDM5ZS05NTA0LTE1Y2YyMzA2MTQ5OVwiPntcImlucHV0c1wiOnt9
LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaWYgcmVzdWx0cy5zdWNjZXNzOlxcbiAgbm90
ZVRleHQgPSBcXFwiXFxcIlxcXCImbHQ7YnImZ3Q7VGl0bGUgOiZsdDtiJmd0O3swfSZsdDsvYiZn
dDtcXG4gICAgICAgICAgICAgICAgJmx0O2ImZ3Q7Q3JlYXRlZCA6Jmx0Oy9iJmd0O3sxfSZsdDsv
YSZndDtcXG4gICAgICAgICAgICAgICAgJmx0O2ImZ3Q7VGFnczombHQ7L2ImZ3Q7IHsyfSZsdDsv
YiZndDtcXG4gICAgICAgICAgICAgICAgXFxcIlxcXCJcXFwiLmZvcm1hdChyZXN1bHRzLnRpdGxl
LCByZXN1bHRzLmNyZWF0ZWQsIHJlc3VsdHMudGFncylcXG4gIFxcbiAgaW5jaWRlbnQuYWRkTm90
ZShoZWxwZXIuY3JlYXRlUmljaFRleHQobm90ZVRleHQrcmVzdWx0cy53aWtpKSlcXG4gIFxcbiAg
I1dlIGhhdmUgYWNjZXNzIHRvIGFuIGF0dHJpYnV0ZSBpbiByZXN1bHRzIGNhbGxlZCAnd2lraSdc
XG4gICMgQXMgYW4gZW5oYW5jZW1lbnQgeW91IGNvdWxkIHNhdmUgdGhpcyAnd2lraScgdG8gYW4g
YXR0YWNobWVudCB0byBoYXZlIGEgSFRNTCBvciBUWFQgZGVzY3JpcHRpb24gb2YgdGhlIHRocmVh
dFwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpZiB3b3JrZmxvdy5wcm9wZXJ0aWVzLnhm
b3JjZWNhc2VmaWxlc1tcXFwibnVtX29mX2Nhc2VmaWxlc1xcXCJdICZndDs9IDM6XFxuICBpbnB1
dHMueGZvcmNlX2NvbGxlY3Rpb25faWQgPSB3b3JrZmxvdy5wcm9wZXJ0aWVzLnhmb3JjZWNhc2Vm
aWxlc1tcXFwiY2FzZV9maWxlc1xcXCJdWzJdW1xcXCJjYXNlRmlsZUlEXFxcIl1cIn08L3Jlc2ls
aWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3df
MWRoam5sYzwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xdG84bW4wPC9vdXRnb2lu
Zz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMWRoam5sY1wi
IHNvdXJjZVJlZj1cIlBhcmFsbGVsR2F0ZXdheV8xYTU2Y3pwXCIgdGFyZ2V0UmVmPVwiU2Vydmlj
ZVRhc2tfMGJsc3lycVwiLz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wdWx0Y2g1XCI+PGluY29t
aW5nPlNlcXVlbmNlRmxvd18xdjAxeG9iPC9pbmNvbWluZz48aW5jb21pbmc+U2VxdWVuY2VGbG93
XzE5d2tpczI8L2luY29taW5nPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMXRvOG1uMDwvaW5jb21p
bmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzF2MDF4b2JcIiBz
b3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wNjV4Z3QzXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMHVs
dGNoNVwiLz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzE5d2tpczJcIiBzb3VyY2VS
ZWY9XCJTZXJ2aWNlVGFza18wOXg4NGtiXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMHVsdGNoNVwi
Lz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzF0bzhtbjBcIiBzb3VyY2VSZWY9XCJT
ZXJ2aWNlVGFza18wYmxzeXJxXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMHVsdGNoNVwiLz48dGV4
dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91
ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwi
QXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRh
cmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwi
VGV4dEFubm90YXRpb25fMWZ0cXhkZlwiPjx0ZXh0PlF1ZXJ5IHRvcCAzIGNhc2UgZmlsZXMgY29u
Y3VycmVudGx5LjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29j
aWF0aW9uXzB4bjVxaDdcIiBzb3VyY2VSZWY9XCJQYXJhbGxlbEdhdGV3YXlfMWE1NmN6cFwiIHRh
cmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFmdHF4ZGZcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBN
TkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1l
bnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBt
bkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9k
aVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9
XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lk
dGg9XCI5MFwiIHg9XCIxNTdcIiB5PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5k
aTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlv
bl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5k
aTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFz
ZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1c
IjE2OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2lu
dCB4PVwiMTUzXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6
QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wMG5w
dWNmXCIgaWQ9XCJTZXJ2aWNlVGFza18wMG5wdWNmX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9
XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjI1OVwiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNo
YXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMW5zaWhudFwi
IGlkPVwiU2VxdWVuY2VGbG93XzFuc2lobnRfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
MjU5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFi
ZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyMjguNVwiIHk9
XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBN
TlNoYXBlIGJwbW5FbGVtZW50PVwiUGFyYWxsZWxHYXRld2F5XzFhNTZjenBcIiBpZD1cIlBhcmFs
bGVsR2F0ZXdheV8xYTU2Y3pwX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI1MFwiIHdpZHRo
PVwiNTBcIiB4PVwiNDI3XCIgeT1cIjE4MVwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjQ1MlwiIHk9XCIyMzRcIi8+PC9icG1u
ZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIlNlcnZpY2VUYXNrXzA2NXhndDNcIiBpZD1cIlNlcnZpY2VUYXNrXzA2NXhndDNfZGlc
Ij48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiNTUwXCIgeT1c
IjU2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwi
U2VxdWVuY2VGbG93XzF0aWJlYXRcIiBpZD1cIlNlcXVlbmNlRmxvd18xdGliZWF0X2RpXCI+PG9t
Z2RpOndheXBvaW50IHg9XCIzNTlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwi
Lz48b21nZGk6d2F5cG9pbnQgeD1cIjQyN1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwi
MjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0
aD1cIjBcIiB4PVwiMzkzXCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6
QlBNTkVkZ2U+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xMm03
N3M5XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMTJtNzdzOV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwi
NDUyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxODFcIi8+PG9tZ2RpOndheXBvaW50
IHg9XCI0NTJcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjk2XCIvPjxvbWdkaTp3YXlw
b2ludCB4PVwiNTUwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI5NlwiLz48YnBtbmRp
OkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjQ2
N1wiIHk9XCIxMzEuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJw
bW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wOXg4NGtiXCIgaWQ9XCJT
ZXJ2aWNlVGFza18wOXg4NGtiX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRo
PVwiMTAwXCIgeD1cIjU1MFwiIHk9XCIxNzhcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6
QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMGplNjE5OVwiIGlkPVwiU2VxdWVu
Y2VGbG93XzBqZTYxOTlfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQ3N1wiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTE0XCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1MTRcIiB4
c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIxOFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjU1
MFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjE4XCIvPjxicG1uZGk6QlBNTkxhYmVs
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNTI5XCIgeT1cIjIw
NVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hh
cGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wYmxzeXJxXCIgaWQ9XCJTZXJ2aWNlVGFza18w
YmxzeXJxX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1c
IjU1MFwiIHk9XCIzMjlcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBt
bkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMWRoam5sY1wiIGlkPVwiU2VxdWVuY2VGbG93XzFkaGpu
bGNfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQ1MlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjMxXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDUyXCIgeHNpOnR5cGU9XCJvbWdkYzpQ
b2ludFwiIHk9XCIzNjlcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1NTBcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjM2OVwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjQ2N1wiIHk9XCIyOTNcIi8+PC9icG1uZGk6QlBN
TkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwi
RW5kRXZlbnRfMHVsdGNoNVwiIGlkPVwiRW5kRXZlbnRfMHVsdGNoNV9kaVwiPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjgyNFwiIHk9XCIyMDBcIi8+PGJwbW5k
aTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI4
NDJcIiB5PVwiMjM5XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJw
bW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xdjAxeG9iXCIgaWQ9XCJT
ZXF1ZW5jZUZsb3dfMXYwMXhvYl9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNjUwXCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI5NlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjczN1wiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiOTZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI3Mzdc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIxOFwiLz48b21nZGk6d2F5cG9pbnQgeD1c
IjgyNFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjE4XCIvPjxicG1uZGk6QlBNTkxh
YmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNzUyXCIgeT1c
IjE1MFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1O
RWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xOXdraXMyXCIgaWQ9XCJTZXF1ZW5jZUZs
b3dfMTl3a2lzMl9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNjUwXCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIyMThcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI4MjRcIiB4c2k6dHlwZT1c
Im9tZ2RjOlBvaW50XCIgeT1cIjIxOFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjczN1wiIHk9XCIxOTZcIi8+PC9icG1uZGk6
QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9
XCJTZXF1ZW5jZUZsb3dfMXRvOG1uMFwiIGlkPVwiU2VxdWVuY2VGbG93XzF0bzhtbjBfZGlcIj48
b21nZGk6d2F5cG9pbnQgeD1cIjY1MFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMzY5
XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNzM3XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIzNjlcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI3MzdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIxOFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjgyNFwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjE4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNzUyXCIgeT1cIjI4Ni41XCIvPjwvYnBtbmRpOkJQTU5M
YWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRl
eHRBbm5vdGF0aW9uXzFmdHF4ZGZcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFmdHF4ZGZfZGlcIj48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjY0XCIgd2lkdGg9XCIxNTVcIiB4PVwiMjg0XCIgeT1cIjYx
XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNz
b2NpYXRpb25fMHhuNXFoN1wiIGlkPVwiQXNzb2NpYXRpb25fMHhuNXFoN19kaVwiPjxvbWdkaTp3
YXlwb2ludCB4PVwiNDQxXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxOTJcIi8+PG9t
Z2RpOndheXBvaW50IHg9XCIzODdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEyNVwi
Lz48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdy
YW0+PC9kZWZpbml0aW9ucz4ifSwgImNvbnRlbnRfdmVyc2lvbiI6IDIsICJjcmVhdG9yX2lkIjog
ImFAYS5jb20iLCAiZGVzY3JpcHRpb24iOiAiQW4gZXhhbXBsZSB3b3JrZmxvdyB0aGF0IHRha2Vz
IGluIGEgcXVlcnkgc3RyaW5nIGFzIGEgcGFyYW0uIFxuSXQgdGhlbiBzdWJtaXRzIHRoaXMgcXVl
cnkgdG8gdGhlIFgtRm9yY2UgQVBJIHJldHVybmluZyBjYXNlIGZpbGUgSURzIGZvciBlYWNoLlxu
VGhlIHRvcCAzIElEJ3MgcmV0dXJuZWQgYXJlIHRoZW4gcXVlcmllZCB0byByZXR1cm4gaW5mb3Jt
YXRpb24gYWJvdXQgdGhlIHRocmVhdCBzYXZpbmcgdGhlIGluZm8gYXMgYSBub3RlLiIsICJleHBv
cnRfa2V5IjogImV4YW1wbGVfcmV0dXJuX3RvcF8zX2VudHJpZXNfZnJvbV9jb2xsZWN0aW9ucyIs
ICJsYXN0X21vZGlmaWVkX2J5IjogImViMmQxZjdkLTY2NTEtNDE1YS1iNGZmLWExNGZjZDJmODRm
NSIsICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTk5NjY0MzY2NDQ4LCAibmFtZSI6ICJFeGFtcGxl
OiBYLUZvcmNlIFJldHVybiBUb3AgMyBmcm9tIENvbGxlY3Rpb24ocykiLCAib2JqZWN0X3R5cGUi
OiAiYXJ0aWZhY3QiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9yZXR1cm5fdG9wXzNf
ZW50cmllc19mcm9tX2NvbGxlY3Rpb25zIiwgInRhZ3MiOiBbXSwgInV1aWQiOiAiOGY2ODlmMTAt
MTBhMC00OWJkLWI3NWQtZjE4ZTg1MGU4YmYzIiwgIndvcmtmbG93X2lkIjogMn0sIHsiYWN0aW9u
cyI6IFtdLCAiY29udGVudCI6IHsidmVyc2lvbiI6IDIsICJ3b3JrZmxvd19pZCI6ICJleGFtcGxl
X3hmb3JjZV9xdWVyeV9jb2xsZWN0aW9ucyIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwi
IGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcu
b3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cu
b21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cu
b21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9t
Zy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNp
bGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9Y
TUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1p
bnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwi
Pjxwcm9jZXNzIGlkPVwiZXhhbXBsZV94Zm9yY2VfcXVlcnlfY29sbGVjdGlvbnNcIiBpc0V4ZWN1
dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IFgtRm9yY2UgUXVlcnkgQ29sbGVjdGlvbihz
KVwiPjxkb2N1bWVudGF0aW9uPkFuIGV4YW1wbGUgd29ya2Zsb3cgdGhhdCB0YWtlcyBpbiBhIHBy
b3ZpZGVkIGFydGlmYWN0IGFzIGEgcXVlcnkgYW5kIHRoZW4gc3VibWl0cyB0aGlzIHRvIHRoZSBY
LUZvcmNlIEFQSSBzZWFyY2hpbmcgY29sbGVjdGlvbnMgZm9yIGNhc2VmaWxlcyByZWxldmFudCB0
byB0aGUgcXVlcnkuPC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVudF8x
NTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wYmwxcm5wPC9vdXRnb2luZz48L3N0YXJ0
RXZlbnQ+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMWpiY2VqbVwiPjxpbmNvbWluZz5TZXF1ZW5j
ZUZsb3dfMHQ3MmtpNDwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2
aWNlVGFza18xY3NsMWRiXCIgbmFtZT1cIlgtRm9yY2U6IFF1ZXJ5IENvbGxlY3Rpb25cIiByZXNp
bGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVu
Y3Rpb24gdXVpZD1cImE2NDczODM4LWQxZmUtNGQ0MC1iMjg0LWM0OGQzYjZhOTFmNlwiPntcImlu
cHV0c1wiOntcImNlOTliNjRhLTUyNTktNDM5Yy1hYjYwLTcxMzdmM2I4ODgwNlwiOntcImlucHV0
X3R5cGVcIjpcInN0YXRpY1wiLFwic3RhdGljX2lucHV0XCI6e1wibXVsdGlzZWxlY3RfdmFsdWVc
IjpbXSxcInNlbGVjdF92YWx1ZVwiOlwiMDIyYmEyYTgtOTBkNi00MzNlLWJlYTQtZTJjYzhjYTBi
Yjc0XCJ9fX0sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpZiByZXN1bHRzLm51bV9vZl9j
YXNlZmlsZXMgIT0gMDpcXG4gIG5vdGVUZXh0ID0gXFxcIlxcXCJcXFwiJmx0O2ImZ3Q7WC1Gb3Jj
ZSBRdWVyeSBzdGF0dXMmbHQ7L2ImZ3Q7Jmx0O2JyJmd0O1RvdGFsIG1hdGNoZWQgY2FzZSBmaWxl
cyA6Jmx0O2ImZ3Q7ezB9Jmx0Oy9iJmd0O1xcXCJcXFwiXFxcIi5mb3JtYXQocmVzdWx0cy5udW1f
b2ZfY2FzZWZpbGVzKVxcbiAgaW5jaWRlbnQuYWRkTm90ZShoZWxwZXIuY3JlYXRlUmljaFRleHQo
bm90ZVRleHQpKVwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMueGZvcmNlX3F1
ZXJ5ID0gYXJ0aWZhY3QudmFsdWVcXG5cIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lv
bkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMGJsMXJucDwvaW5jb21pbmc+PG91dGdv
aW5nPlNlcXVlbmNlRmxvd18wdDcya2k0PC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5j
ZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMGJsMXJucFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRf
MTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzFjc2wxZGJcIi8+PHNlcXVlbmNlRmxv
dyBpZD1cIlNlcXVlbmNlRmxvd18wdDcya2k0XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWNz
bDFkYlwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzFqYmNlam1cIi8+PHRleHRBbm5vdGF0aW9uIGlk
PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVy
ZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFz
ZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwi
QlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVk
XCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3Rh
cnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1u
ZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwi
MTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlk
PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBc
IiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJB
c3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1u
ZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMWpiY2VqbVwiIGlkPVwiRW5kRXZl
bnRfMWpiY2VqbV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIg
eD1cIjcyOFwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI3NDZcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5M
YWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJT
ZXJ2aWNlVGFza18xY3NsMWRiXCIgaWQ9XCJTZXJ2aWNlVGFza18xY3NsMWRiX2RpXCI+PG9tZ2Rj
OkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjQwM1wiIHk9XCIxNjZcIi8+
PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5j
ZUZsb3dfMGJsMXJucFwiIGlkPVwiU2VxdWVuY2VGbG93XzBibDFybnBfZGlcIj48b21nZGk6d2F5
cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdk
aTp3YXlwb2ludCB4PVwiNDAzXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+
PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwi
IHg9XCIzMDAuNVwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5F
ZGdlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHQ3MmtpNFwi
IGlkPVwiU2VxdWVuY2VGbG93XzB0NzJraTRfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjUwM1wi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
NzI4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFi
ZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI2MTUuNVwiIHk9
XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQ
TU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiJ9LCAiY29udGVudF92
ZXJzaW9uIjogMiwgImNyZWF0b3JfaWQiOiAiYUBhLmNvbSIsICJkZXNjcmlwdGlvbiI6ICJBbiBl
eGFtcGxlIHdvcmtmbG93IHRoYXQgdGFrZXMgaW4gYSBwcm92aWRlZCBhcnRpZmFjdCBhcyBhIHF1
ZXJ5IGFuZCB0aGVuIHN1Ym1pdHMgdGhpcyB0byB0aGUgWC1Gb3JjZSBBUEkgc2VhcmNoaW5nIGNv
bGxlY3Rpb25zIGZvciBjYXNlZmlsZXMgcmVsZXZhbnQgdG8gdGhlIHF1ZXJ5LiIsICJleHBvcnRf
a2V5IjogImV4YW1wbGVfeGZvcmNlX3F1ZXJ5X2NvbGxlY3Rpb25zIiwgImxhc3RfbW9kaWZpZWRf
YnkiOiAiZWIyZDFmN2QtNjY1MS00MTVhLWI0ZmYtYTE0ZmNkMmY4NGY1IiwgImxhc3RfbW9kaWZp
ZWRfdGltZSI6IDE1OTk2NjQzNjY2OTIsICJuYW1lIjogIkV4YW1wbGU6IFgtRm9yY2UgUXVlcnkg
Q29sbGVjdGlvbihzKSIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJwcm9ncmFtbWF0aWNf
bmFtZSI6ICJleGFtcGxlX3hmb3JjZV9xdWVyeV9jb2xsZWN0aW9ucyIsICJ0YWdzIjogW10sICJ1
dWlkIjogIjViY2NiNDYwLThmNTctNDYyMS1hYWI2LTQ3NDE1MWI3YzVjMiIsICJ3b3JrZmxvd19p
ZCI6IDR9XSwgIndvcmtzcGFjZXMiOiBbXX0=
""")
