# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_whois_rdap"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_whois_rdap package"""
    reload_params = {"package": u"fn_whois_rdap",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"rdap_depth", u"rdap_query", u"whois_query"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_whois_rdap"], 
                    "functions": [u"rdap_query", u"whois_query"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_rdap_query"], 
                    "actions": [],
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     rdap_depth
    #     rdap_query
    #     whois_query
    #   Message Destinations:
    #     fn_whois_rdap
    #   Functions:
    #     rdap_query
    #     whois_query
    #   Workflows:
    #     example_rdap_query


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogImNjMTk5M2Y2LTFjYzQt
NDg5YS1hYTljLTM0MjFjZWEzNDJjNiIsICJkZXNjcmlwdGlvbiI6ICJUaGlzIHdvcmtmbG93IGdl
bmVyYXRlIFJEQVAgZm9ybWF0dGVkIHJlc3VsdHMgZnJvbSBhbiBJUCBvciBkb21haW4gbmFtZSBh
cnRpZmFjdCIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJleHBvcnRfa2V5IjogImV4YW1w
bGVfcmRhcF9xdWVyeSIsICJ3b3JrZmxvd19pZCI6IDMsICJsYXN0X21vZGlmaWVkX2J5IjogInNl
YW4ub2dvcm1hbkBpYm0uY29tIiwgImNvbnRlbnQiOiB7InhtbCI6ICI8P3htbCB2ZXJzaW9uPVwi
MS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3
Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93
d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDov
L3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8y
MDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2No
ZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90
ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX3JkYXBfcXVlcnlcIiBpc0V4ZWN1dGFibGU9XCJ0
cnVlXCIgbmFtZT1cIkV4YW1wbGU6IFJEQVAgcXVlcnlcIj48ZG9jdW1lbnRhdGlvbj5UaGlzIHdv
cmtmbG93IGdlbmVyYXRlIFJEQVAgZm9ybWF0dGVkIHJlc3VsdHMgZnJvbSBhbiBJUCBvciBkb21h
aW4gbmFtZSBhcnRpZmFjdDwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZl
bnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMXB6Nzlnczwvb3V0Z29pbmc+PC9z
dGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzA2Y2c0ZHRcIiBuYW1lPVwi
UkRBUDogUXVlcnlcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1l
bnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cIjE5YjViYjM3LTlhNGUtNDllYy04MDJhLWZi
YzMwMDZkZTExN1wiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwi
dHJ5OlxcbiAgICBkZXMgPSBhcnRpZmFjdC5kZXNjcmlwdGlvbi5jb250ZW50XFxuZXhjZXB0IEV4
Y2VwdGlvbjpcXG4gIGRlcyA9IE5vbmVcXG5kdW1teSA9e31cXG5kdW1teSA9IHJlc3VsdHNbXFxc
ImNvbnRlbnRcXFwiXVxcblxcbmlmIGRlcyBpcyBOb25lOlxcbiAgbm90ZSA9dVxcXCJcXFwiXFxc
IiZsdDtkaXYmZ3Q7Jmx0O3AmZ3Q7UkRBUCB0aHJlYXQgaW50ZWxsaWdlbmNlOlxcXFxuXFxcXG4g
Jmx0O2JyJmd0OyBQb3NzaWJsZSBkaWN0b25hcnkga2V5czogJmx0O2JyJmd0OyBcXFxcbiB7MH0g
XFxcXG5cXFxcbiAmbHQ7YnImZ3Q7IEFzc29jaWF0ZWQgb2JqZWN0cyAmbHQ7YnImZ3Q7IFxcXFxu
IHsxfSBcXFxcblxcXFxuICZsdDticiZndDsgRE5TIHpvbmU6ICZsdDticiZndDsgXFxcXG4gezJ9
Jmx0O2RpdiZndDsmbHQ7cCZndDtcXFwiXFxcIlxcXCIuZm9ybWF0KGR1bW15LmtleXMoKSwgZHVt
bXkuZ2V0KHUnb2JqZWN0cycpLGR1bW15LmdldCgnZG5zX3pvbmUnKSlcXG4gIGFydGlmYWN0LmRl
c2NyaXB0aW9uID0gaGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5vdGUpXFxuZWxzZTpcXG4gIG5vdGUg
PSBkZXMgKyB1XFxcIlxcXCJcXFwiJmx0O2RpdiZndDsmbHQ7cCZndDtSREFQIHRocmVhdCBpbnRl
bGxpZ2VuY2U6XFxcXG5cXFxcbiAmbHQ7YnImZ3Q7IFBvc3NpYmxlIGRpY3RvbmFyeSBrZXlzOiAm
bHQ7YnImZ3Q7IFxcXFxuIHswfSBcXFxcblxcXFxuICZsdDticiZndDsgQXNzb2NpYXRlZCBvYmpl
Y3RzICZsdDticiZndDsgXFxcXG4gezF9IFxcXFxuXFxcXG4gJmx0O2JyJmd0OyBETlMgem9uZTog
Jmx0O2JyJmd0OyBcXFxcbiB7Mn0mbHQ7ZGl2Jmd0OyZsdDtwJmd0O1xcXCJcXFwiXFxcIi5mb3Jt
YXQoZHVtbXkua2V5cygpLCBkdW1teS5nZXQodSdvYmplY3RzJyksZHVtbXkuZ2V0KCdkbnNfem9u
ZScpKVxcbiAgYXJ0aWZhY3QuZGVzY3JpcHRpb24gPSBoZWxwZXIuY3JlYXRlUmljaFRleHQobm90
ZSlcXG5cXG4jaW5jaWRlbnQuYWRkTm90ZShoZWxwZXIuY3JlYXRlUmljaFRleHQobm90ZVRleHQp
KVwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMucmRhcF9xdWVyeSA9IGFydGlm
YWN0LnZhbHVlXFxuaW5wdXRzLnJkYXBfZGVwdGggPSAwXCIsXCJyZXN1bHRfbmFtZVwiOlwiXCJ9
PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVu
Y2VGbG93XzFwejc5Z3M8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMHBrazhqZjwv
b3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wa2UzdXFoXCI+
PGluY29taW5nPlNlcXVlbmNlRmxvd18wcGtrOGpmPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1
ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMXB6Nzlnc1wiIHNvdXJjZVJlZj1cIlN0YXJ0RXZl
bnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzA2Y2c0ZHRcIi8+PHNlcXVlbmNl
RmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wcGtrOGpmXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tf
MDZjZzRkdFwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzBrZTN1cWhcIi8+PHRleHRBbm5vdGF0aW9u
IGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cg
aGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9u
XzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJU
ZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlk
PVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZp
bmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwi
U3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxi
cG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4
PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBl
PjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwi
IGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBl
PjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9
XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxi
cG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMDZjZzRkdFwiIGlkPVwi
U2VydmljZVRhc2tfMDZjZzRkdF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0
aD1cIjEwMFwiIHg9XCIzNDhcIiB5PVwiMTc3XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRp
OkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzBrZTN1cWhcIiBpZD1cIkVuZEV2ZW50
XzBrZTN1cWhfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9
XCI2MTJcIiB5PVwiMTk5XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNjMwXCIgeT1cIjIzOFwiLz48L2JwbW5kaTpCUE1OTGFi
ZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1
ZW5jZUZsb3dfMXB6Nzlnc1wiIGlkPVwiU2VxdWVuY2VGbG93XzFwejc5Z3NfZGlcIj48b21nZGk6
d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiMjUyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZc
Ii8+PG9tZ2RpOndheXBvaW50IHg9XCIyNTJcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjIxN1wiLz48b21nZGk6d2F5cG9pbnQgeD1cIjM0OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjE3XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNc
IiB3aWR0aD1cIjBcIiB4PVwiMjY3XCIgeT1cIjIwNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxv
d18wcGtrOGpmXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMHBrazhqZl9kaVwiPjxvbWdkaTp3YXlwb2lu
dCB4PVwiNDQ4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMTdcIi8+PG9tZ2RpOndh
eXBvaW50IHg9XCI1MDlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIxN1wiLz48b21n
ZGk6d2F5cG9pbnQgeD1cIjUwOVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjE3XCIv
PjxvbWdkaTp3YXlwb2ludCB4PVwiNjEyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIy
MTdcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRo
PVwiMFwiIHg9XCI1MjRcIiB5PVwiMjEwLjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRp
OkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmlu
aXRpb25zPiIsICJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX3JkYXBfcXVlcnkiLCAidmVyc2lvbiI6
IDF9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU2ODI4Njg3MzQ5MCwgImNyZWF0b3JfaWQiOiAi
c2Vhbi5vZ29ybWFuQGlibS5jb20iLCAiYWN0aW9ucyI6IFtdLCAicHJvZ3JhbW1hdGljX25hbWUi
OiAiZXhhbXBsZV9yZGFwX3F1ZXJ5IiwgIm5hbWUiOiAiRXhhbXBsZTogUkRBUCBxdWVyeSJ9XSwg
ImFjdGlvbnMiOiBbXSwgImxheW91dHMiOiBbXSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIs
ICJpZCI6IDExLCAiaW5kdXN0cmllcyI6IG51bGwsICJwaGFzZXMiOiBbXSwgImFjdGlvbl9vcmRl
ciI6IFtdLCAiZ2VvcyI6IG51bGwsICJsb2NhbGUiOiBudWxsLCAic2VydmVyX3ZlcnNpb24iOiB7
Im1ham9yIjogMzEsICJ2ZXJzaW9uIjogIjMxLjAuNDI1NCIsICJidWlsZF9udW1iZXIiOiA0MjU0
LCAibWlub3IiOiAwfSwgInRpbWVmcmFtZXMiOiBudWxsLCAid29ya3NwYWNlcyI6IFtdLCAiYXV0
b21hdGljX3Rhc2tzIjogW10sICJmdW5jdGlvbnMiOiBbeyJkaXNwbGF5X25hbWUiOiAiUkRBUDog
UXVlcnkiLCAiZGVzY3JpcHRpb24iOiB7ImNvbnRlbnQiOiAiVXNpbmcgaXB3aG9pcyBsaWJyYXJ5
IHRvIG1ha2UgZ2VuZXJhbCBxdWVyaWVzIGluIFJEQVAgZm9ybWF0IiwgImZvcm1hdCI6ICJ0ZXh0
In0sICJjcmVhdG9yIjogeyJkaXNwbGF5X25hbWUiOiAiU2VhbiBPIEdvcm1hbiIsICJ0eXBlIjog
InVzZXIiLCAiaWQiOiA3NywgIm5hbWUiOiAic2Vhbi5vZ29ybWFuQGlibS5jb20ifSwgInZpZXdf
aXRlbXMiOiBbeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJz
aG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVu
dCI6ICI4NWIyYjJiOC1hNjhiLTQzODMtYTAwNC1jYTA2MGZkN2M2YTYiLCAic3RlcF9sYWJlbCI6
IG51bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNo
b3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50
IjogIjA0ZWRkMTlkLWQwMDgtNGFiYy1hMTliLTczMWE5OTk3MzIwZCIsICJzdGVwX2xhYmVsIjog
bnVsbH1dLCAiZXhwb3J0X2tleSI6ICJyZGFwX3F1ZXJ5IiwgInV1aWQiOiAiMTliNWJiMzctOWE0
ZS00OWVjLTgwMmEtZmJjMzAwNmRlMTE3IiwgImxhc3RfbW9kaWZpZWRfYnkiOiB7ImRpc3BsYXlf
bmFtZSI6ICJTZWFuIE8gR29ybWFuIiwgInR5cGUiOiAidXNlciIsICJpZCI6IDc3LCAibmFtZSI6
ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSJ9LCAidmVyc2lvbiI6IDIsICJ3b3JrZmxvd3MiOiBbeyJk
ZXNjcmlwdGlvbiI6IG51bGwsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJhY3Rpb25zIjog
W10sICJuYW1lIjogIkV4YW1wbGU6IFJEQVAgcXVlcnkiLCAid29ya2Zsb3dfaWQiOiAzLCAicHJv
Z3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9yZGFwX3F1ZXJ5IiwgInV1aWQiOiBudWxsfV0sICJs
YXN0X21vZGlmaWVkX3RpbWUiOiAxNTY4Mjg5MTkzNjIyLCAiZGVzdGluYXRpb25faGFuZGxlIjog
ImZuX3dob2lzX3JkYXAiLCAiaWQiOiAzNiwgIm5hbWUiOiAicmRhcF9xdWVyeSJ9LCB7ImRpc3Bs
YXlfbmFtZSI6ICJXSE9JUzogcXVlcnkiLCAiZGVzY3JpcHRpb24iOiB7ImNvbnRlbnQiOiAiVXNp
bmcgaXB3aG9pcyBsaWJyYXJ5IHRvIG1ha2UgZ2VuZXJhbCBxdWVyaWVzIGluIHdob2lzIGZvcm1h
dCIsICJmb3JtYXQiOiAidGV4dCJ9LCAiY3JlYXRvciI6IHsiZGlzcGxheV9uYW1lIjogIlNlYW4g
TyBHb3JtYW4iLCAidHlwZSI6ICJ1c2VyIiwgImlkIjogNzcsICJuYW1lIjogInNlYW4ub2dvcm1h
bkBpYm0uY29tIn0sICJ2aWV3X2l0ZW1zIjogW3sic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBl
IjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJm
aWVsZF91dWlkIiwgImNvbnRlbnQiOiAiOTRhYmJkZGItNmU0NC00MDQzLWFkZGYtYjY4MDU3NjM0
OGYxIiwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJleHBvcnRfa2V5IjogIndob2lzX3F1ZXJ5Iiwg
InV1aWQiOiAiYTA0MGQzY2QtZDE1MS00YzE0LWE2MjItMjYyNjJhYjZhOWI5IiwgImxhc3RfbW9k
aWZpZWRfYnkiOiB7ImRpc3BsYXlfbmFtZSI6ICJTZWFuIE8gR29ybWFuIiwgInR5cGUiOiAidXNl
ciIsICJpZCI6IDc3LCAibmFtZSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSJ9LCAidmVyc2lvbiI6
IDEsICJ3b3JrZmxvd3MiOiBbeyJkZXNjcmlwdGlvbiI6IG51bGwsICJvYmplY3RfdHlwZSI6ICJh
cnRpZmFjdCIsICJhY3Rpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6IFdIT0lTIHF1ZXJ5Iiwg
IndvcmtmbG93X2lkIjogNCwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfd2hvaXNfcXVl
cnkiLCAidXVpZCI6IG51bGx9XSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NjgyODkyNzUyMzUs
ICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAiZm5fd2hvaXNfcmRhcCIsICJpZCI6IDM3LCAibmFtZSI6
ICJ3aG9pc19xdWVyeSJ9XSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAicmVndWxhdG9ycyI6IG51
bGwsICJpbmNpZGVudF90eXBlcyI6IFt7ImNyZWF0ZV9kYXRlIjogMTU2ODI5MjU3MjEyNCwgImRl
c2NyaXB0aW9uIjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJleHBvcnRf
a2V5IjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJpZCI6IDAsICJuYW1l
IjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJ1cGRhdGVfZGF0ZSI6IDE1
NjgyOTI1NzIxMjQsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFh
MCIsICJlbmFibGVkIjogZmFsc2UsICJzeXN0ZW0iOiBmYWxzZSwgInBhcmVudF9pZCI6IG51bGws
ICJoaWRkZW4iOiBmYWxzZX1dLCAic2NyaXB0cyI6IFtdLCAidHlwZXMiOiBbXSwgIm1lc3NhZ2Vf
ZGVzdGluYXRpb25zIjogW3sidXVpZCI6ICJhMTNmZjI4ZS01Y2RlLTRhNTItYTM3Mi04Zjk0ODQ4
M2QzMmUiLCAiZXhwb3J0X2tleSI6ICJmbl93aG9pc19yZGFwIiwgIm5hbWUiOiAiZm5fd2hvaXNf
cmRhcCIsICJkZXN0aW5hdGlvbl90eXBlIjogMCwgInByb2dyYW1tYXRpY19uYW1lIjogImZuX3do
b2lzX3JkYXAiLCAiZXhwZWN0X2FjayI6IHRydWUsICJ1c2VycyI6IFsic2Vhbi5vZ29ybWFuQGli
bS5jb20iXX1dLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgInJvbGVzIjogW10sICJm
aWVsZHMiOiBbeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMCwgIm9wZXJhdGlvbl9wZXJt
cyI6IHt9LCAidGV4dCI6ICJTaW11bGF0aW9uIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJl
Zml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyMjMsICJyZWFkX29ubHkiOiB0
cnVlLCAidXVpZCI6ICJjM2YwZTNlZC0yMWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAiY2hv
c2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAidG9vbHRpcCI6ICJXaGV0aGVy
IHRoZSBpbmNpZGVudCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhp
cyBmaWVsZCBpcyByZWFkLW9ubHkuIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBm
YWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5p
bmciLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwg
ImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAi
dmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlv
bl9wZXJtcyI6IHt9LCAidGV4dCI6ICJ3aG9pc19xdWVyeSIsICJibGFua19vcHRpb24iOiBmYWxz
ZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMzEwLCAicmVhZF9v
bmx5IjogZmFsc2UsICJ1dWlkIjogIjk0YWJiZGRiLTZlNDQtNDA0My1hZGRmLWI2ODA1NzYzNDhm
MSIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIklQ
LCBVUkwgb3IgRE5TIHZhbHVlIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxz
ZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3dob2lzX3F1ZXJ5
IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICJpYm0uY29tIiwg
Im5hbWUiOiAid2hvaXNfcXVlcnkiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9z
ZW5fYnlfc2VydmVyIjogZmFsc2UsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAidmFsdWVzIjogW119
LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9
LCAidGV4dCI6ICJyZGFwX2RlcHRoIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4Ijog
bnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAzMDksICJyZWFkX29ubHkiOiBmYWxzZSwg
InV1aWQiOiAiODViMmIyYjgtYTY4Yi00MzgzLWEwMDQtY2EwNjBmZDdjNmE2IiwgImNob3NlbiI6
IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAidG9vbHRpcCI6ICIxIiwgImludGVybmFs
IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tl
eSI6ICJfX2Z1bmN0aW9uL3JkYXBfZGVwdGgiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwg
InBsYWNlaG9sZGVyIjogIjEiLCAibmFtZSI6ICJyZGFwX2RlcHRoIiwgImRlcHJlY2F0ZWQiOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3
YXlzIiwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJv
cGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAicmRhcF9xdWVyeSIsICJibGFua19vcHRpb24i
OiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMzA4LCAi
cmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjA0ZWRkMTlkLWQwMDgtNGFiYy1hMTliLTczMWE5
OTk3MzIwZCIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlw
IjogIklQIG9yIGRvbWFpbiBuYW1lIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBm
YWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3JkYXBfcXVl
cnkiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogImlibS5jb20i
LCAibmFtZSI6ICJyZGFwX3F1ZXJ5IiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hv
c2VuX2J5X3NlcnZlciI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInZhbHVlcyI6IFtd
fV0sICJvdmVycmlkZXMiOiBbXSwgImV4cG9ydF9kYXRlIjogMTU2ODI5MjU3MTYxOX0=
"""
    )