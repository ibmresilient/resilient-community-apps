# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_whois_rdap"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_whois_rdap package"""
    reload_params = {"package": u"fn_whois_rdap",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"rdap_depth"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_whois_rdap"], 
                    "functions": [u"rdap_query"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_rdap_query"], 
                    "actions": [],
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     rdap_depth
    #   Message Destinations:
    #     fn_whois_rdap
    #   Functions:
    #     rdap_query
    #   Workflows:
    #     example_rdap_query


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogImNjMTk5M2Y2LTFjYzQt
NDg5YS1hYTljLTM0MjFjZWEzNDJjNiIsICJkZXNjcmlwdGlvbiI6ICJUaGlzIHdvcmtmbG93IGdl
bmVyYXRlIFJEQVAgZm9ybWF0dGVkIHJlc3VsdHMgZnJvbSBhbiBJUCBvciBkb21haW4gbmFtZSBh
cnRpZmFjdCIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJleHBvcnRfa2V5IjogImV4YW1w
bGVfcmRhcF9xdWVyeSIsICJ3b3JrZmxvd19pZCI6IDk2LCAibGFzdF9tb2RpZmllZF9ieSI6ICJz
ZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJjb250ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1c
IjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3
dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8v
d3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6
Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcv
MjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNj
aGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcv
dGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9yZGFwX3F1ZXJ5XCIgaXNFeGVjdXRhYmxlPVwi
dHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBSREFQIHF1ZXJ5XCI+PGRvY3VtZW50YXRpb24+VGhpcyB3
b3JrZmxvdyBnZW5lcmF0ZSBSREFQIGZvcm1hdHRlZCByZXN1bHRzIGZyb20gYW4gSVAgb3IgZG9t
YWluIG5hbWUgYXJ0aWZhY3Q8L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFwejc5Z3M8L291dGdvaW5nPjwv
c3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wNmNnNGR0XCIgbmFtZT1c
IlJEQVA6IFF1ZXJ5XCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVt
ZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCIxOWI1YmIzNy05YTRlLTQ5ZWMtODAyYS1m
YmMzMDA2ZGUxMTdcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpc
IlxcbmlmIHJlc3VsdHNbXFxcInN1Y2Nlc3NcXFwiXTpcXG4gICMgV2UgaGF2ZSByZXN1bHRzXFxu
ICBub3RlVGV4dCA9IHVcXFwiXFxcIlxcXCJSREFQIFF1ZXJ5IHJhbiBhZ2FpbnN0IGlucHV0ICZs
dDtiJmd0O3swfSZsdDsvYiZndDsmbHQ7YnImZ3Q7IFJlc3VsdHMgZm91bmQ6ICZsdDticiZndDtc
XFwiXFxcIlxcXCIuZm9ybWF0KHJlc3VsdHMuaW5wdXRzW1xcXCJyZGFwX3F1ZXJ5XFxcIl0pXFxu
ICBcXFwiXFxcIlxcXCJcXG4gIGZvciBrZXksIHZhbCBpbiByZXN1bHRzLmRvbWFpbl9kZXRhaWxz
Lml0ZW1zKCk6XFxuICAgIG5vdGVUZXh0ICs9IHUnJycmbHQ7YiZndDsgezB9IDogezF9JycnLmZv
cm1hdChrZXksdmFsKVxcbiAgXFxcIlxcXCJcXFwiXFxuICBub3RlVGV4dCArPSB1XFxcIlxcXCJc
XFwiJmx0O2JyJmd0OyZsdDtiJmd0OyB7MH0mbHQ7L2ImZ3Q7IDogezF9IFxcXCJcXFwiXFxcIi5m
b3JtYXQocmVzdWx0cy5jb250ZW50LmFzbl9kZXNjcmlwdGlvbiwgcmVzdWx0cy5jb250ZW50LnF1
ZXJ5XSlcXG5lbHNlOlxcbiAgbm90ZVRleHQgPSB1XFxcIlxcXCJcXFwiUkRBUCBRdWVyeSByYW4g
YWdhaW5zdCBpbnB1dCAmbHQ7YiZndDt7MH0mbHQ7L2ImZ3Q7Jmx0O2JyJmd0OyBObyByZXN1bHRz
IGZvdW5kXFxcIlxcXCJcXFwiLmZvcm1hdChyZXN1bHRzLmlucHV0c1tcXFwicmRhcF9xdWVyeVxc
XCJdKVxcbmluY2lkZW50LmFkZE5vdGUoaGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5vdGVUZXh0KSlc
IixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLnJkYXBfcXVlcnkgPSBhcnRpZmFj
dC52YWx1ZVxcbmlucHV0cy5yZGFwX2RlcHRoID0gYXJ0aWZhY3QucmRhcF9kZXB0aFwiLFwicmVz
dWx0X25hbWVcIjpcIlwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+
PGluY29taW5nPlNlcXVlbmNlRmxvd18xcHo3OWdzPC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVu
Y2VGbG93XzBwa2s4amY8L291dGdvaW5nPjwvc2VydmljZVRhc2s+PGVuZEV2ZW50IGlkPVwiRW5k
RXZlbnRfMGtlM3VxaFwiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMHBrazhqZjwvaW5jb21pbmc+
PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzFwejc5Z3NcIiBzb3Vy
Y2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wNmNn
NGR0XCIvPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMHBrazhqZlwiIHNvdXJjZVJl
Zj1cIlNlcnZpY2VUYXNrXzA2Y2c0ZHRcIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8wa2UzdXFoXCIv
Pjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIj48dGV4dD5TdGFy
dCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24g
aWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3ht
XCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiLz48L3Byb2Nlc3M+PGJwbW5k
aTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1u
RWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFw
ZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVh
c3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYy
XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBc
IiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5v
dGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRp
b25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2lu
dCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndh
eXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2Jw
bW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNr
XzA2Y2c0ZHRcIiBpZD1cIlNlcnZpY2VUYXNrXzA2Y2c0ZHRfZGlcIj48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMzQ4XCIgeT1cIjE3N1wiLz48L2JwbW5kaTpC
UE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8wa2UzdXFo
XCIgaWQ9XCJFbmRFdmVudF8wa2UzdXFoX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwi
IHdpZHRoPVwiMzZcIiB4PVwiNjEyXCIgeT1cIjE5OVwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjYzMFwiIHk9XCIyMzhcIi8+
PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJw
bW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFwejc5Z3NcIiBpZD1cIlNlcXVlbmNlRmxvd18xcHo3
OWdzX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI1MlwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjUyXCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIyMTdcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIzNDhcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIxN1wiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjI2N1wiIHk9XCIyMDVcIi8+PC9icG1u
ZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1l
bnQ9XCJTZXF1ZW5jZUZsb3dfMHBrazhqZlwiIGlkPVwiU2VxdWVuY2VGbG93XzBwa2s4amZfZGlc
Ij48b21nZGk6d2F5cG9pbnQgeD1cIjQ0OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwi
MjE3XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTA5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwi
IHk9XCIyMTdcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1MDlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjIxN1wiLz48b21nZGk6d2F5cG9pbnQgeD1cIjYxMlwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjE3XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNTI0XCIgeT1cIjIxMC41XCIvPjwvYnBtbmRpOkJQ
TU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBN
TkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9yZGFwX3F1
ZXJ5IiwgInZlcnNpb24iOiAxfSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NjY1Njc4Njc4NzIs
ICJjcmVhdG9yX2lkIjogInNlYW4ub2dvcm1hbkBpYm0uY29tIiwgImFjdGlvbnMiOiBbXSwgInBy
b2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfcmRhcF9xdWVyeSIsICJuYW1lIjogIkV4YW1wbGU6
IFJEQVAgcXVlcnkifV0sICJhY3Rpb25zIjogW10sICJsYXlvdXRzIjogW10sICJleHBvcnRfZm9y
bWF0X3ZlcnNpb24iOiAyLCAiaWQiOiAxODAsICJpbmR1c3RyaWVzIjogbnVsbCwgInBoYXNlcyI6
IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJnZW9zIjogbnVsbCwgImxvY2FsZSI6IG51bGwsICJz
ZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgInZlcnNpb24iOiAiMzEuMC40MjU0IiwgImJ1
aWxkX251bWJlciI6IDQyNTQsICJtaW5vciI6IDB9LCAidGltZWZyYW1lcyI6IG51bGwsICJ3b3Jr
c3BhY2VzIjogW10sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImZ1bmN0aW9ucyI6IFt7ImRpc3Bs
YXlfbmFtZSI6ICJSREFQOiBRdWVyeSIsICJkZXNjcmlwdGlvbiI6IHsiY29udGVudCI6ICJVc2lu
ZyBpcHdob2lzIGxpYnJhcnkgdG8gbWFrZSBnZW5lcmFsIHF1ZXJpZXMgaXMgUkRBUCBmb3JtYXQi
LCAiZm9ybWF0IjogInRleHQifSwgImNyZWF0b3IiOiB7ImRpc3BsYXlfbmFtZSI6ICJTZWFuIE8g
R29ybWFuIiwgInR5cGUiOiAidXNlciIsICJpZCI6IDc3LCAibmFtZSI6ICJzZWFuLm9nb3JtYW5A
aWJtLmNvbSJ9LCAidmlld19pdGVtcyI6IFt7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6
ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmll
bGRfdXVpZCIsICJjb250ZW50IjogIjg1YjJiMmI4LWE2OGItNDM4My1hMDA0LWNhMDYwZmQ3YzZh
NiIsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAiZXhwb3J0X2tleSI6ICJyZGFwX3F1ZXJ5IiwgInV1
aWQiOiAiMTliNWJiMzctOWE0ZS00OWVjLTgwMmEtZmJjMzAwNmRlMTE3IiwgImxhc3RfbW9kaWZp
ZWRfYnkiOiB7ImRpc3BsYXlfbmFtZSI6ICJTZWFuIE8gR29ybWFuIiwgInR5cGUiOiAidXNlciIs
ICJpZCI6IDc3LCAibmFtZSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSJ9LCAidmVyc2lvbiI6IDEs
ICJ3b3JrZmxvd3MiOiBbeyJkZXNjcmlwdGlvbiI6IG51bGwsICJvYmplY3RfdHlwZSI6ICJhcnRp
ZmFjdCIsICJhY3Rpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6IFJEQVAgcXVlcnkiLCAid29y
a2Zsb3dfaWQiOiA5NiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfcmRhcF9xdWVyeSIs
ICJ1dWlkIjogbnVsbH1dLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU2NjU2NDc5NDA4NiwgImRl
c3RpbmF0aW9uX2hhbmRsZSI6ICJmbl93aG9pc19yZGFwIiwgImlkIjogMTIxLCAibmFtZSI6ICJy
ZGFwX3F1ZXJ5In1dLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwg
ImluY2lkZW50X3R5cGVzIjogW3siY3JlYXRlX2RhdGUiOiAxNTY2NTY4MzQ3ODMxLCAiZGVzY3Jp
cHRpb24iOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXki
OiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImlkIjogMCwgIm5hbWUiOiAi
Q3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgInVwZGF0ZV9kYXRlIjogMTU2NjU2
ODM0NzgzMSwgInV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4LWFkMzktNGEwMDA0MDQ0YWEwIiwg
ImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVsbCwgImhp
ZGRlbiI6IGZhbHNlfV0sICJzY3JpcHRzIjogW10sICJ0eXBlcyI6IFtdLCAibWVzc2FnZV9kZXN0
aW5hdGlvbnMiOiBbeyJ1dWlkIjogImExM2ZmMjhlLTVjZGUtNGE1Mi1hMzcyLThmOTQ4NDgzZDMy
ZSIsICJleHBvcnRfa2V5IjogImZuX3dob2lzX3JkYXAiLCAibmFtZSI6ICJmbl93aG9pc19yZGFw
IiwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZm5fd2hvaXNf
cmRhcCIsICJleHBlY3RfYWNrIjogdHJ1ZSwgInVzZXJzIjogWyJzZWFuLm9nb3JtYW5AaWJtLmNv
bSJdfV0sICJpbmNpZGVudF9hcnRpZmFjdF90eXBlcyI6IFtdLCAicm9sZXMiOiBbXSwgImZpZWxk
cyI6IFt7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAwLCAib3BlcmF0aW9uX3Blcm1zIjog
e30sICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgi
OiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDIyMywgInJlYWRfb25seSI6IHRydWUs
ICJ1dWlkIjogImMzZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIsICJjaG9zZW4i
OiBmYWxzZSwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJ0b29sdGlwIjogIldoZXRoZXIgdGhl
IGluY2lkZW50IGlzIGEgc2ltdWxhdGlvbiBvciBhIHJlZ3VsYXIgaW5jaWRlbnQuICBUaGlzIGZp
ZWxkIGlzIHJlYWQtb25seS4iLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogImluY2lkZW50L2luY190cmFpbmluZyIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAiZGVw
cmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1
ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Bl
cm1zIjoge30sICJ0ZXh0IjogInJkYXBfZGVwdGgiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJw
cmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDc1OSwgInJlYWRfb25seSI6
IGZhbHNlLCAidXVpZCI6ICI4NWIyYjJiOC1hNjhiLTQzODMtYTAwNC1jYTA2MGZkN2M2YTYiLCAi
Y2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJ0b29sdGlwIjogIjEiLCAi
aW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJl
eHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vcmRhcF9kZXB0aCIsICJoaWRlX25vdGlmaWNhdGlvbiI6
IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiMSIsICJuYW1lIjogInJkYXBfZGVwdGgiLCAiZGVwcmVj
YXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJyZXF1aXJl
ZCI6ICJhbHdheXMiLCAidmFsdWVzIjogW119XSwgIm92ZXJyaWRlcyI6IFtdLCAiZXhwb3J0X2Rh
dGUiOiAxNTY2NTY4MzQ1NzcyfQ==
"""
    )