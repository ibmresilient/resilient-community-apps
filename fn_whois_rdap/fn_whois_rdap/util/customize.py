# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_whois_rdap"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_whois_rdap package"""
    reload_params = {"package": u"fn_whois_rdap",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"rdap_depth", u"rdap_query", u"whois_query"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_whois_rdap"], 
                    "functions": [u"rdap_query", u"whois_query"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_rdap_query", u"example_whois_query"], 
                    "actions": [u"Run rdap query against Artifact", u"Run whois query against Artifact"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     rdap_depth
    #     rdap_query
    #     whois_query
    #   Message Destinations:
    #     fn_whois_rdap
    #   Functions:
    #     rdap_query
    #     whois_query
    #   Workflows:
    #     example_rdap_query
    #     example_whois_query
    #   Rules:
    #     Run rdap query against Artifact
    #     Run whois query against Artifact


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMiwgIm1pbm9yIjogMCwgImJ1aWxkX251bWJl
ciI6IDQ1MDIsICJ2ZXJzaW9uIjogIjMyLjAuNDUwMiJ9LCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9u
IjogMiwgImlkIjogNzcsICJleHBvcnRfZGF0ZSI6IDE1Njg1NjE2MTk4NzAsICJmaWVsZHMiOiBb
eyJpZCI6IDU5LCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAidGV4dCI6ICJTaW11bGF0aW9uIiwg
InByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMCwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5j
aWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQg
aXMgcmVhZC1vbmx5LiIsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjog
ImMzZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIsICJvcGVyYXRpb25zIjogW10s
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogdHJ1ZSwg
ImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImlu
Y2lkZW50L2luY190cmFpbmluZyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxz
ZX0sIHsiaWQiOiAzMjQsICJuYW1lIjogInJkYXBfZGVwdGgiLCAidGV4dCI6ICJyZGFwX2RlcHRo
IiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjogIkNhbiBiZSAwLCAx
IG9yIDIiLCAicGxhY2Vob2xkZXIiOiAiMCIsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJyZXF1
aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZh
bHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBm
YWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjg1YjJiMmI4LWE2OGItNDM4My1hMDA0
LWNhMDYwZmQ3YzZhNiIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwg
InZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJp
Y2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3JkYXBfZGVwdGgiLCAi
dGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMzIzLCAibmFtZSI6
ICJyZGFwX3F1ZXJ5IiwgInRleHQiOiAicmRhcF9xdWVyeSIsICJwcmVmaXgiOiBudWxsLCAidHlw
ZV9pZCI6IDExLCAidG9vbHRpcCI6ICJJUCwgVVJMIG9yIEROUyBBcnRpZmFjdCIsICJwbGFjZWhv
bGRlciI6ICJpYm0uY29tIiwgImlucHV0X3R5cGUiOiAidGV4dCIsICJyZXF1aXJlZCI6ICJhbHdh
eXMiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVs
dF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVy
bmFsIjogZmFsc2UsICJ1dWlkIjogIjA0ZWRkMTlkLWQwMDgtNGFiYy1hMTliLTczMWE5OTk3MzIw
ZCIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtd
LCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3JkYXBfcXVlcnkiLCAidGVtcGxhdGVzIjog
W10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMzIyLCAibmFtZSI6ICJ3aG9pc19xdWVy
eSIsICJ0ZXh0IjogIndob2lzX3F1ZXJ5IiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEs
ICJ0b29sdGlwIjogIklQLCBVUkwgb3IgRE5TIEFydGlmYWN0IiwgInBsYWNlaG9sZGVyIjogImli
bS5jb20iLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInJlcXVpcmVkIjogImFsd2F5cyIsICJoaWRl
X25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxz
ZSwgInV1aWQiOiAiOTRhYmJkZGItNmU0NC00MDQzLWFkZGYtYjY4MDU3NjM0OGYxIiwgIm9wZXJh
dGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29u
bHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBv
cnRfa2V5IjogIl9fZnVuY3Rpb24vd2hvaXNfcXVlcnkiLCAidGVtcGxhdGVzIjogW10sICJkZXBy
ZWNhdGVkIjogZmFsc2V9XSwgImluY2lkZW50X3R5cGVzIjogW3sidXBkYXRlX2RhdGUiOiAxNTY5
NTEwNjM5ODk2LCAiY3JlYXRlX2RhdGUiOiAxNTY5NTEwNjM5ODk2LCAidXVpZCI6ICJiZmVlYzJk
NC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXph
dGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQ
YWNrYWdlcyAoaW50ZXJuYWwpIiwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50
ZXJuYWwpIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjog
bnVsbCwgImhpZGRlbiI6IGZhbHNlLCAiaWQiOiAwfV0sICJwaGFzZXMiOiBbXSwgImF1dG9tYXRp
Y190YXNrcyI6IFtdLCAib3ZlcnJpZGVzIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7
Im5hbWUiOiAiZm5fd2hvaXNfcmRhcCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl93aG9pc19y
ZGFwIiwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJ1c2VycyI6
IFsic2Vhbi5vZ29ybWFuQGlibS5jb20iXSwgInV1aWQiOiAiYTEzZmYyOGUtNWNkZS00YTUyLWEz
NzItOGY5NDg0ODNkMzJlIiwgImV4cG9ydF9rZXkiOiAiZm5fd2hvaXNfcmRhcCJ9XSwgImFjdGlv
bnMiOiBbeyJpZCI6IDgwLCAibmFtZSI6ICJSdW4gcmRhcCBxdWVyeSBhZ2FpbnN0IEFydGlmYWN0
IiwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiY29uZGl0aW9ucyI6IFt7
Im1ldGhvZCI6ICJpbiIsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5cGUiLCAidmFsdWUiOiBb
IklQIEFkZHJlc3MiLCAiRE5TIE5hbWUiLCAiVVJMIl0sICJ0eXBlIjogbnVsbCwgImV2YWx1YXRp
b25faWQiOiBudWxsfV0sICJhdXRvbWF0aW9ucyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMi
OiBbXSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV9yZGFwX3F1ZXJ5Il0sICJ2aWV3X2l0ZW1zIjog
W10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAiNTNjNjlmZGQtYTU3NS00YmE3
LTg2ZjEtNmJkMjk5NzBlYjA4IiwgImV4cG9ydF9rZXkiOiAiUnVuIHJkYXAgcXVlcnkgYWdhaW5z
dCBBcnRpZmFjdCIsICJsb2dpY190eXBlIjogImFsbCJ9LCB7ImlkIjogODEsICJuYW1lIjogIlJ1
biB3aG9pcyBxdWVyeSBhZ2FpbnN0IEFydGlmYWN0IiwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUi
OiAiYXJ0aWZhY3QiLCAiY29uZGl0aW9ucyI6IFt7Im1ldGhvZCI6ICJpbiIsICJmaWVsZF9uYW1l
IjogImFydGlmYWN0LnR5cGUiLCAidmFsdWUiOiBbIklQIEFkZHJlc3MiLCAiRE5TIE5hbWUiLCAi
VVJMIl0sICJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiBudWxsfV0sICJhdXRvbWF0aW9u
cyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgIndvcmtmbG93cyI6IFsiZXhhbXBs
ZV93aG9pc19xdWVyeSJdLCAidmlld19pdGVtcyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0
MDAsICJ1dWlkIjogIjU4Y2JjOThjLTY2YWItNDdkYy05NWE5LTc0ZGQ5ZGYzNDI3YyIsICJleHBv
cnRfa2V5IjogIlJ1biB3aG9pcyBxdWVyeSBhZ2FpbnN0IEFydGlmYWN0IiwgImxvZ2ljX3R5cGUi
OiAiYWxsIn1dLCAibGF5b3V0cyI6IFtdLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJ0aW1lZnJh
bWVzIjogbnVsbCwgImxvY2FsZSI6IG51bGwsICJpbmR1c3RyaWVzIjogbnVsbCwgInJlZ3VsYXRv
cnMiOiBudWxsLCAiZ2VvcyI6IG51bGwsICJ0YXNrX29yZGVyIjogW10sICJhY3Rpb25fb3JkZXIi
OiBbXSwgInR5cGVzIjogW10sICJzY3JpcHRzIjogW10sICJpbmNpZGVudF9hcnRpZmFjdF90eXBl
cyI6IFtdLCAid29ya2Zsb3dzIjogW3sid29ya2Zsb3dfaWQiOiA1NiwgIm5hbWUiOiAiRXhhbXBs
ZTogV2hvaXMgcXVlcnkiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV93aG9pc19xdWVy
eSIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJkZXNjcmlwdGlvbiI6ICJUaGlzIHdvcmtm
bG93IGdlbmVyYXRlcyBSREFQIGZvcm1hdHRlZCByZXN1bHRzIGZyb20gYW4gSVAsIFVSTCBvciBE
TlMgQXJ0aWZhY3QiLCAiY3JlYXRvcl9pZCI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJsYXN0
X21vZGlmaWVkX2J5IjogInNlYW4ub2dvcm1hbkBpYm0uY29tIiwgImxhc3RfbW9kaWZpZWRfdGlt
ZSI6IDE1Njg1NjE0ODAyODUsICJleHBvcnRfa2V5IjogImV4YW1wbGVfd2hvaXNfcXVlcnkiLCAi
dXVpZCI6ICJkNjRkZjBiMy0yYTI4LTQ1NGEtODc1Mi1iMWIxYTRiZGU2MmIiLCAiY29udGVudCI6
IHsid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV93aG9pc19xdWVyeSIsICJ4bWwiOiAiPD94bWwgdmVy
c2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0
cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1c
Imh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1c
Imh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJo
dHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1c
Imh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53
My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAx
L1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5k
YS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV93aG9pc19xdWVyeVwiIGlzRXhlY3V0
YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTogV2hvaXMgcXVlcnlcIj48ZG9jdW1lbnRhdGlv
bj5UaGlzIHdvcmtmbG93IGdlbmVyYXRlcyBSREFQIGZvcm1hdHRlZCByZXN1bHRzIGZyb20gYW4g
SVAsIFVSTCBvciBETlMgQXJ0aWZhY3Q8L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJT
dGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzF0dHkwdG48L291dGdv
aW5nPjwvc3RhcnRFdmVudD48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wZjZ1dWw0XCI+PGluY29t
aW5nPlNlcXVlbmNlRmxvd18xZXY2bThtPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZs
b3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMXR0eTB0blwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1
YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzE3NWh0N3lcIi8+PHNlcnZpY2VUYXNrIGlk
PVwiU2VydmljZVRhc2tfMTc1aHQ3eVwiIG5hbWU9XCJXSE9JUzogcXVlcnlcIiByZXNpbGllbnQ6
dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24g
dXVpZD1cImEwNDBkM2NkLWQxNTEtNGMxNC1hNjIyLTI2MjYyYWI2YTliOVwiPntcImlucHV0c1wi
Ont9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwidHJ5OlxcbiAgZGVzID0gYXJ0aWZhY3Qu
ZGVzY3JpcHRpb24uY29udGVudFxcbmV4Y2VwdCBFeGNlcHRpb246XFxuICBkZXMgPSBOb25lXFxu
XFxuaWYgcmVzdWx0c1tcXFwic3VjY2Vzc1xcXCJdOlxcbiAgaWYgZGVzIGlzIE5vbmU6XFxuICAg
IG5vdGUgPSB1XFxcIlxcXCJcXFwiJmx0O2RpdiZndDsmbHQ7cCZndDsmbHQ7YnImZ3Q7Jmx0O2Im
Z3Q7V0hPSVMgdGhyZWF0IGludGVsbGlnZW5jZSBhdCB7Mn06Jmx0Oy9iJmd0OyZsdDsvYnImZ3Q7
XFxcXG5cXFxcblxcbiAgICAmbHQ7YnImZ3Q7Jmx0O2ImZ3Q7ezB9Jmx0Oy9iJmd0OyZsdDsvYnIm
Z3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9wJmd0O1xcXFxuXFxcXG5cXG4gICAgJmx0O2RpdiZndDsmbHQ7
cCZndDsmbHQ7YnImZ3Q7Jmx0O2ImZ3Q7IFBvc3NpYmxlIGFjY2Vzc2libGUga2V5czombHQ7L2Im
Z3Q7Jmx0Oy9iciZndDtcXFxcblxcXFxuXFxuICAgICZsdDticiZndDsmbHQ7YiZndDt7MX0mbHQ7
L2ImZ3Q7Jmx0Oy9iciZndDtcXFxcblxcXFxuXFxcIlxcXCJcXFwiLmZvcm1hdChyZXN1bHRzW1xc
XCJjb250ZW50XFxcIl1bXFxcImRpc3BsYXlfY29udGVudFxcXCJdLHJlc3VsdHNbXFxcImNvbnRl
bnRcXFwiXS5rZXlzKCksIHJlc3VsdHNbXFxcIm1ldHJpY3NcXFwiXVtcXFwidGltZXN0YW1wXFxc
Il0pXFxuICAgIGFydGlmYWN0LmRlc2NyaXB0aW9uID0gaGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5v
dGUpXFxuICBlbHNlOlxcbiAgICBub3RlID1kZXMgK3VcXFwiXFxcIlxcXCImbHQ7ZGl2Jmd0OyZs
dDtwJmd0OyZsdDticiZndDsmbHQ7YiZndDtXSE9JUyB0aHJlYXQgaW50ZWxsaWdlbmNlIGF0IHsy
fTombHQ7L2ImZ3Q7Jmx0Oy9iciZndDtcXFxcblxcXFxuXFxuICAgICZsdDticiZndDsmbHQ7YiZn
dDt7MH0mbHQ7L2ImZ3Q7Jmx0Oy9iciZndDsmbHQ7L2RpdiZndDsmbHQ7L3AmZ3Q7XFxcXG5cXFxc
blxcbiAgICAmbHQ7ZGl2Jmd0OyZsdDtwJmd0OyZsdDticiZndDsmbHQ7YiZndDsgUG9zc2libGUg
YWNjZXNzaWJsZSBrZXlzOiZsdDsvYiZndDsmbHQ7L2JyJmd0O1xcXFxuXFxcXG5cXG4gICAgJmx0
O2JyJmd0OyZsdDtiJmd0O3sxfSZsdDsvYiZndDsmbHQ7L2JyJmd0O1xcXFxuXFxcXG5cXFwiXFxc
IlxcXCIuZm9ybWF0KHJlc3VsdHNbXFxcImNvbnRlbnRcXFwiXVtcXFwiZGlzcGxheV9jb250ZW50
XFxcIl0scmVzdWx0c1tcXFwiY29udGVudFxcXCJdLmtleXMoKSwgcmVzdWx0c1tcXFwibWV0cmlj
c1xcXCJdW1xcXCJ0aW1lc3RhbXBcXFwiXSlcXG4gICAgYXJ0aWZhY3QuZGVzY3JpcHRpb24gPSBo
ZWxwZXIuY3JlYXRlUmljaFRleHQobm90ZSlcXG5lbHNlOlxcbiAgbm90ZSA9IHVcXFwiXFxcIlxc
XCJXSE9JUyB0aHJlYXQgaW50ZWxsaWdlbmNlIGF0IHt9OlxcXFxuXFxcXG4gIFRoaXMgQXJ0aWZh
Y3QgaGFzIG5vIGFucyByZWdpc3RyeSBpbmZvcm1hdGlvbiwgXFxcXG5cXFxcbiBzbyBubyBpbnRl
bGxpZ2VuY2Ugd2FzIGdhdGhlcmVkLiAgXFxcXG5cXFxcblxcXCJcXFwiXFxcIi5mb3JtYXQocmVz
dWx0c1tcXFwibWV0cmljc1xcXCJdW1xcXCJ0aW1lc3RhbXBcXFwiXSlcXG4gIGFydGlmYWN0LmRl
c2NyaXB0aW9uID0gaGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5vdGUpXCIsXCJwcmVfcHJvY2Vzc2lu
Z19zY3JpcHRcIjpcImlucHV0cy53aG9pc19xdWVyeSA9IGFydGlmYWN0LnZhbHVlXCIsXCJyZXN1
bHRfbmFtZVwiOlwiXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48
aW5jb21pbmc+U2VxdWVuY2VGbG93XzF0dHkwdG48L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5j
ZUZsb3dfMWV2Nm04bTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwi
U2VxdWVuY2VGbG93XzFldjZtOG1cIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xNzVodDd5XCIg
dGFyZ2V0UmVmPVwiRW5kRXZlbnRfMGY2dXVsNFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0
PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwi
IHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0
aW9uXzFreHhpeXRcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlh
Z3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1c
IkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1O
TGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdcIiB5
PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRo
PVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0
aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2OVwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8wZjZ1dWw0XCIgaWQ9XCJFbmRFdmVudF8wZjZ1
dWw0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNTIy
XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEz
XCIgd2lkdGg9XCIwXCIgeD1cIjU0MFwiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VG
bG93XzF0dHkwdG5cIiBpZD1cIlNlcXVlbmNlRmxvd18xdHR5MHRuX2RpXCI+PG9tZ2RpOndheXBv
aW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6
d2F5cG9pbnQgeD1cIjMwOFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxi
cG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4
PVwiMjUzXCIgeT1cIjE4NC41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRn
ZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzE3NWh0N3lcIiBp
ZD1cIlNlcnZpY2VUYXNrXzE3NWh0N3lfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIg
d2lkdGg9XCIxMDBcIiB4PVwiMzA4XCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJw
bW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xZXY2bThtXCIgaWQ9XCJT
ZXF1ZW5jZUZsb3dfMWV2Nm04bV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDA4XCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1MjJcIiB4
c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjQ2NVwiIHk9XCIxODRcIi8+
PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48
L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ2ZXJzaW9uIjogN30sICJhY3Rp
b25zIjogW119LCB7IndvcmtmbG93X2lkIjogNTEsICJuYW1lIjogIkV4YW1wbGU6IFJEQVAgcXVl
cnkiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9yZGFwX3F1ZXJ5IiwgIm9iamVjdF90
eXBlIjogImFydGlmYWN0IiwgImRlc2NyaXB0aW9uIjogIlRoaXMgd29ya2Zsb3cgZ2VuZXJhdGVz
IFJEQVAgZm9ybWF0dGVkIHJlc3VsdHMgZnJvbSBhbiBJUCwgVVJMIG9yIEROUyBBcnRpZmFjdCIs
ICJjcmVhdG9yX2lkIjogInNlYW4ub2dvcm1hbkBpYm0uY29tIiwgImxhc3RfbW9kaWZpZWRfYnki
OiAic2Vhbi5vZ29ybWFuQGlibS5jb20iLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU2ODU2MTQy
MDU4NCwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9yZGFwX3F1ZXJ5IiwgInV1aWQiOiAiY2MxOTkz
ZjYtMWNjNC00ODlhLWFhOWMtMzQyMWNlYTM0MmM2IiwgImNvbnRlbnQiOiB7IndvcmtmbG93X2lk
IjogImV4YW1wbGVfcmRhcF9xdWVyeSIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVu
Y29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3Jn
L3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21n
Lm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21n
Lm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5v
cmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGll
bnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxT
Y2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0
YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxw
cm9jZXNzIGlkPVwiZXhhbXBsZV9yZGFwX3F1ZXJ5XCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5h
bWU9XCJFeGFtcGxlOiBSREFQIHF1ZXJ5XCI+PGRvY3VtZW50YXRpb24+VGhpcyB3b3JrZmxvdyBn
ZW5lcmF0ZXMgUkRBUCBmb3JtYXR0ZWQgcmVzdWx0cyBmcm9tIGFuIElQLCBVUkwgb3IgRE5TIEFy
dGlmYWN0PC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3ht
XCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xcHo3OWdzPC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+
PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMDZjZzRkdFwiIG5hbWU9XCJSREFQOiBRdWVy
eVwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2ls
aWVudDpmdW5jdGlvbiB1dWlkPVwiMTliNWJiMzctOWE0ZS00OWVjLTgwMmEtZmJjMzAwNmRlMTE3
XCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJ0cnk6XFxuICBk
ZXMgPSBhcnRpZmFjdC5kZXNjcmlwdGlvbi5jb250ZW50XFxuZXhjZXB0IEV4Y2VwdGlvbjpcXG4g
IGRlcyA9IE5vbmVcXG5cXG5pZiByZXN1bHRzW1xcXCJzdWNjZXNzXFxcIl06XFxuICBpZiBkZXMg
aXMgTm9uZTpcXG4gICAgbm90ZSA9IHVcXFwiXFxcIlxcXCImbHQ7ZGl2Jmd0OyZsdDtwJmd0OyZs
dDticiZndDsmbHQ7YiZndDtSREFQIHRocmVhdCBpbnRlbGxpZ2VuY2UgYXQgezJ9OiZsdDsvYiZn
dDsmbHQ7L2JyJmd0O1xcXFxuXFxcXG5cXG4gICAgJmx0O2JyJmd0OyZsdDtiJmd0O3swfSZsdDsv
YiZndDsmbHQ7L2JyJmd0OyZsdDsvZGl2Jmd0OyZsdDsvcCZndDtcXFxcblxcXFxuXFxuICAgICZs
dDtkaXYmZ3Q7Jmx0O3AmZ3Q7Jmx0O2JyJmd0OyZsdDtiJmd0OyBQb3NzaWJsZSBhY2Nlc3NpYmxl
IGtleXM6Jmx0Oy9iJmd0OyZsdDsvYnImZ3Q7XFxcXG5cXFxcblxcbiAgICAmbHQ7YnImZ3Q7Jmx0
O2ImZ3Q7ezF9Jmx0Oy9iJmd0OyZsdDsvYnImZ3Q7XFxcXG5cXFxcblxcXCJcXFwiXFxcIi5mb3Jt
YXQocmVzdWx0c1tcXFwiY29udGVudFxcXCJdW1xcXCJkaXNwbGF5X2NvbnRlbnRcXFwiXSxyZXN1
bHRzW1xcXCJjb250ZW50XFxcIl0ua2V5cygpLHJlc3VsdHNbXFxcIm1ldHJpY3NcXFwiXVtcXFwi
dGltZXN0YW1wXFxcIl0pXFxuICAgIGFydGlmYWN0LmRlc2NyaXB0aW9uID0gaGVscGVyLmNyZWF0
ZVJpY2hUZXh0KG5vdGUpXFxuICBlbHNlOlxcbiAgICBub3RlID1kZXMgK3VcXFwiXFxcIlxcXCIm
bHQ7ZGl2Jmd0OyZsdDtwJmd0OyZsdDticiZndDsmbHQ7YiZndDtSREFQIHRocmVhdCBpbnRlbGxp
Z2VuY2UgYXQgezJ9OiZsdDsvYiZndDsmbHQ7L2JyJmd0O1xcXFxuXFxcXG5cXG4gICAgJmx0O2Jy
Jmd0OyZsdDtiJmd0O3swfSZsdDsvYiZndDsmbHQ7L2JyJmd0OyZsdDsvZGl2Jmd0OyZsdDsvcCZn
dDtcXFxcblxcXFxuXFxuICAgICZsdDtkaXYmZ3Q7Jmx0O3AmZ3Q7Jmx0O2JyJmd0OyZsdDtiJmd0
OyBQb3NzaWJsZSBhY2Nlc3NpYmxlIGtleXM6Jmx0Oy9iJmd0OyZsdDsvYnImZ3Q7XFxcXG5cXFxc
blxcbiAgICAmbHQ7YnImZ3Q7Jmx0O2ImZ3Q7ezF9Jmx0Oy9iJmd0OyZsdDsvYnImZ3Q7XFxcXG5c
XFxcblxcXCJcXFwiXFxcIi5mb3JtYXQocmVzdWx0c1tcXFwiY29udGVudFxcXCJdW1xcXCJkaXNw
bGF5X2NvbnRlbnRcXFwiXSxyZXN1bHRzW1xcXCJjb250ZW50XFxcIl0ua2V5cygpLHJlc3VsdHNb
XFxcIm1ldHJpY3NcXFwiXVtcXFwidGltZXN0YW1wXFxcIl0pXFxuICAgIGFydGlmYWN0LmRlc2Ny
aXB0aW9uID0gaGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5vdGUpXFxuZWxzZTpcXG4gIG5vdGUgPSB1
XFxcIlxcXCJcXFwiUkRBUCB0aHJlYXQgaW50ZWxsaWdlbmNlIGF0IHt9OlxcXFxuXFxcXG4gIFRo
aXMgQXJ0aWZhY3QgaGFzIG5vIGFucyByZWdpc3RyeSBpbmZvcm1hdGlvbiwgXFxcXG5cXFxcbiBz
byBubyBpbnRlbGxpZ2VuY2Ugd2FzIGdhdGhlcmVkLiAgXFxcXG5cXFxcblxcXCJcXFwiXFxcIi5m
b3JtYXQocmVzdWx0c1tcXFwibWV0cmljc1xcXCJdW1xcXCJ0aW1lc3RhbXBcXFwiXSlcXG4gIGFy
dGlmYWN0LmRlc2NyaXB0aW9uID0gaGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5vdGUpXCIsXCJwcmVf
cHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5yZGFwX3F1ZXJ5ID0gYXJ0aWZhY3QudmFsdWVc
XG5pbnB1dHMucmRhcF9kZXB0aCA9IDBcIixcInJlc3VsdF9uYW1lXCI6XCJcIn08L3Jlc2lsaWVu
dDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMXB6
NzlnczwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wcGtrOGpmPC9vdXRnb2luZz48
L3NlcnZpY2VUYXNrPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzBrZTN1cWhcIj48aW5jb21pbmc+
U2VxdWVuY2VGbG93XzBwa2s4amY8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBp
ZD1cIlNlcXVlbmNlRmxvd18xcHo3OWdzXCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3ht
XCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMDZjZzRkdFwiLz48c2VxdWVuY2VGbG93IGlkPVwi
U2VxdWVuY2VGbG93XzBwa2s4amZcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wNmNnNGR0XCIg
dGFyZ2V0UmVmPVwiRW5kRXZlbnRfMGtlM3VxaFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0
PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwi
IHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0
aW9uXzFreHhpeXRcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlh
Z3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1c
IkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1O
TGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdcIiB5
PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRo
PVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0
aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2OVwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wNmNnNGR0XCIgaWQ9XCJTZXJ2aWNlVGFz
a18wNmNnNGR0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIg
eD1cIjM0OFwiIHk9XCIxNzdcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMGtlM3VxaFwiIGlkPVwiRW5kRXZlbnRfMGtlM3VxaF9k
aVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjYxMlwiIHk9
XCIxOTlcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdp
ZHRoPVwiMFwiIHg9XCI2MzBcIiB5PVwiMjM4XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5k
aTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18x
cHo3OWdzXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMXB6Nzlnc19kaVwiPjxvbWdkaTp3YXlwb2ludCB4
PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBv
aW50IHg9XCIyNTJcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6
d2F5cG9pbnQgeD1cIjI1MlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjE3XCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiMzQ4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMTdc
Ii8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwi
MFwiIHg9XCIyNjdcIiB5PVwiMjA1XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1O
RWRnZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzBwa2s4amZc
IiBpZD1cIlNlcXVlbmNlRmxvd18wcGtrOGpmX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0NDhc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIxN1wiLz48b21nZGk6d2F5cG9pbnQgeD1c
IjUwOVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjE3XCIvPjxvbWdkaTp3YXlwb2lu
dCB4PVwiNTA5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMTdcIi8+PG9tZ2RpOndh
eXBvaW50IHg9XCI2MTJcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIxN1wiLz48YnBt
bmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1c
IjUyNFwiIHk9XCIyMTAuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+
PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+Iiwg
InZlcnNpb24iOiA1MX0sICJhY3Rpb25zIjogW119XSwgInJvbGVzIjogW10sICJ3b3Jrc3BhY2Vz
IjogW10sICJmdW5jdGlvbnMiOiBbeyJpZCI6IDUwLCAibmFtZSI6ICJyZGFwX3F1ZXJ5IiwgImRp
c3BsYXlfbmFtZSI6ICJSREFQOiBRdWVyeSIsICJkZXNjcmlwdGlvbiI6IHsiZm9ybWF0IjogInRl
eHQiLCAiY29udGVudCI6ICJVc2luZyBpcHdob2lzIGxpYnJhcnkgdG8gbWFrZSBnZW5lcmFsIHF1
ZXJpZXMgaW4gUkRBUCBmb3JtYXQifSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJmbl93aG9pc19y
ZGFwIiwgImV4cG9ydF9rZXkiOiAicmRhcF9xdWVyeSIsICJ1dWlkIjogIjE5YjViYjM3LTlhNGUt
NDllYy04MDJhLWZiYzMwMDZkZTExNyIsICJ2ZXJzaW9uIjogOCwgImNyZWF0b3IiOiB7ImlkIjog
MSwgInR5cGUiOiAidXNlciIsICJuYW1lIjogInNlYW4ub2dvcm1hbkBpYm0uY29tIiwgImRpc3Bs
YXlfbmFtZSI6ICJTZWFuIE8gR29ybWFuIn0sICJsYXN0X21vZGlmaWVkX2J5IjogeyJpZCI6IDEs
ICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJkaXNwbGF5
X25hbWUiOiAiU2VhbiBPIEdvcm1hbiJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU2ODU2MTA5
Mzc5NywgInZpZXdfaXRlbXMiOiBbeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxs
LCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJj
b250ZW50IjogIjg1YjJiMmI4LWE2OGItNDM4My1hMDA0LWNhMDYwZmQ3YzZhNiIsICJzaG93X2xp
bmtfaGVhZGVyIjogZmFsc2V9LCB7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGws
ICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNv
bnRlbnQiOiAiMDRlZGQxOWQtZDAwOC00YWJjLWExOWItNzMxYTk5OTczMjBkIiwgInNob3dfbGlu
a19oZWFkZXIiOiBmYWxzZX1dLCAid29ya2Zsb3dzIjogW3sid29ya2Zsb3dfaWQiOiA1MSwgIm5h
bWUiOiAiRXhhbXBsZTogUkRBUCBxdWVyeSIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxl
X3JkYXBfcXVlcnkiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiZGVzY3JpcHRpb24iOiBu
dWxsLCAidXVpZCI6IG51bGwsICJhY3Rpb25zIjogW119XX0sIHsiaWQiOiA1MSwgIm5hbWUiOiAi
d2hvaXNfcXVlcnkiLCAiZGlzcGxheV9uYW1lIjogIldIT0lTOiBxdWVyeSIsICJkZXNjcmlwdGlv
biI6IHsiZm9ybWF0IjogInRleHQiLCAiY29udGVudCI6ICJVc2luZyBpcHdob2lzIGxpYnJhcnkg
dG8gbWFrZSBnZW5lcmFsIHF1ZXJpZXMgaW4gd2hvaXMgZm9ybWF0In0sICJkZXN0aW5hdGlvbl9o
YW5kbGUiOiAiZm5fd2hvaXNfcmRhcCIsICJleHBvcnRfa2V5IjogIndob2lzX3F1ZXJ5IiwgInV1
aWQiOiAiYTA0MGQzY2QtZDE1MS00YzE0LWE2MjItMjYyNjJhYjZhOWI5IiwgInZlcnNpb24iOiA4
LCAiY3JlYXRvciI6IHsiaWQiOiAxLCAidHlwZSI6ICJ1c2VyIiwgIm5hbWUiOiAic2Vhbi5vZ29y
bWFuQGlibS5jb20iLCAiZGlzcGxheV9uYW1lIjogIlNlYW4gTyBHb3JtYW4ifSwgImxhc3RfbW9k
aWZpZWRfYnkiOiB7ImlkIjogMSwgInR5cGUiOiAidXNlciIsICJuYW1lIjogInNlYW4ub2dvcm1h
bkBpYm0uY29tIiwgImRpc3BsYXlfbmFtZSI6ICJTZWFuIE8gR29ybWFuIn0sICJsYXN0X21vZGlm
aWVkX3RpbWUiOiAxNTY4NTYxMTE5MjA1LCAidmlld19pdGVtcyI6IFt7InN0ZXBfbGFiZWwiOiBu
dWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlw
ZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiOTRhYmJkZGItNmU0NC00MDQzLWFkZGYtYjY4
MDU3NjM0OGYxIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX1dLCAid29ya2Zsb3dzIjogW3si
d29ya2Zsb3dfaWQiOiA1NiwgIm5hbWUiOiAiRXhhbXBsZTogV2hvaXMgcXVlcnkiLCAicHJvZ3Jh
bW1hdGljX25hbWUiOiAiZXhhbXBsZV93aG9pc19xdWVyeSIsICJvYmplY3RfdHlwZSI6ICJhcnRp
ZmFjdCIsICJkZXNjcmlwdGlvbiI6IG51bGwsICJ1dWlkIjogbnVsbCwgImFjdGlvbnMiOiBbXX1d
fV19
"""
    )