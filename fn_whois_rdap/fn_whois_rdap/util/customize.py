# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_whois_rdap"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_whois_rdap package"""
    reload_params = {"package": u"fn_whois_rdap",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"rdap_depth", u"rdap_query", u"whois_query"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_whois_rdap"], 
                    "functions": [u"rdap_query", u"whois_query"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_rdap_query", u"example_whois_query"], 
                    "actions": [u"Run rdap query against Artifact", u"Run whois query against Artifact"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     rdap_depth
    #     rdap_query
    #     whois_query
    #   Message Destinations:
    #     fn_whois_rdap
    #   Functions:
    #     rdap_query
    #     whois_query
    #   Workflows:
    #     example_rdap_query
    #     example_whois_query
    #   Rules:
    #     Run rdap query against Artifact
    #     Run whois query against Artifact


    yield ImportDefinition(u"""
eyJsb2NhbGUiOiBudWxsLCAid29ya2Zsb3dzIjogW3siZGVzY3JpcHRpb24iOiAiVGhpcyB3b3Jr
ZmxvdyBnZW5lcmF0ZXMgUkRBUCBmb3JtYXR0ZWQgcmVzdWx0cyBmcm9tIGFuIElQLCBVUkwgb3Ig
RE5TIEFydGlmYWN0IiwgIndvcmtmbG93X2lkIjogNTYsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFj
dCIsICJleHBvcnRfa2V5IjogImV4YW1wbGVfd2hvaXNfcXVlcnkiLCAidXVpZCI6ICJkNjRkZjBi
My0yYTI4LTQ1NGEtODc1Mi1iMWIxYTRiZGU2MmIiLCAibGFzdF9tb2RpZmllZF9ieSI6ICJzZWFu
Lm9nb3JtYW5AaWJtLmNvbSIsICJjb250ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEu
MFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5v
bWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93
d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93
d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3
Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9y
ZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAw
MS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVt
YS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVz
dFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV93aG9pc19xdWVyeVwiIGlzRXhlY3V0YWJsZT1cInRy
dWVcIiBuYW1lPVwiRXhhbXBsZTogV2hvaXMgcXVlcnlcIj48ZG9jdW1lbnRhdGlvbj5UaGlzIHdv
cmtmbG93IGdlbmVyYXRlcyBSREFQIGZvcm1hdHRlZCByZXN1bHRzIGZyb20gYW4gSVAsIFVSTCBv
ciBETlMgQXJ0aWZhY3Q8L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzF0dHkwdG48L291dGdvaW5nPjwvc3Rh
cnRFdmVudD48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wZjZ1dWw0XCI+PGluY29taW5nPlNlcXVl
bmNlRmxvd18xZXY2bThtPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJT
ZXF1ZW5jZUZsb3dfMXR0eTB0blwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRh
cmdldFJlZj1cIlNlcnZpY2VUYXNrXzE3NWh0N3lcIi8+PHNlcnZpY2VUYXNrIGlkPVwiU2Vydmlj
ZVRhc2tfMTc1aHQ3eVwiIG5hbWU9XCJXSE9JUzogcXVlcnlcIiByZXNpbGllbnQ6dHlwZT1cImZ1
bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cImEw
NDBkM2NkLWQxNTEtNGMxNC1hNjIyLTI2MjYyYWI2YTliOVwiPntcImlucHV0c1wiOnt9LFwicG9z
dF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwidHJ5OlxcbiAgZGVzID0gYXJ0aWZhY3QuZGVzY3JpcHRp
b24uY29udGVudFxcbmV4Y2VwdCBFeGNlcHRpb246XFxuICBkZXMgPSBOb25lXFxudHJ5OlxcbiAg
aWYgcmVzdWx0c1tcXFwic3VjY2Vzc1xcXCJdOlxcbiAgICBpZiBkZXMgaXMgTm9uZTpcXG4gICAg
ICBub3RlID0gdVxcXCJcXFwiXFxcIiZsdDtkaXYmZ3Q7Jmx0O3AmZ3Q7Jmx0O2JyJmd0OyZsdDti
Jmd0O1dIT0lTIHRocmVhdCBpbnRlbGxpZ2VuY2UgYXQgezJ9OiZsdDsvYiZndDsmbHQ7L2JyJmd0
O1xcXFxuXFxcXG5cXG4gICAgICAmbHQ7YnImZ3Q7Jmx0O2ImZ3Q7ezB9Jmx0Oy9iJmd0OyZsdDsv
YnImZ3Q7Jmx0Oy9kaXYmZ3Q7Jmx0Oy9wJmd0O1xcXFxuXFxcXG5cXG4gICAgICAmbHQ7ZGl2Jmd0
OyZsdDtwJmd0OyZsdDticiZndDsmbHQ7YiZndDsgUG9zc2libGUgYWNjZXNzaWJsZSBrZXlzOiZs
dDsvYiZndDsmbHQ7L2JyJmd0O1xcXFxuXFxcXG5cXG4gICAgICAmbHQ7YnImZ3Q7Jmx0O2ImZ3Q7
ezF9Jmx0Oy9iJmd0OyZsdDsvYnImZ3Q7XFxcXG5cXFxcblxcXCJcXFwiXFxcIi5mb3JtYXQocmVz
dWx0c1tcXFwiY29udGVudFxcXCJdW1xcXCJkaXNwbGF5X2NvbnRlbnRcXFwiXSwgcmVzdWx0c1tc
XFwiY29udGVudFxcXCJdLmtleXMoKSwgcmVzdWx0c1tcXFwibWV0cmljc1xcXCJdW1xcXCJ0aW1l
c3RhbXBcXFwiXSlcXG4gICAgICBhcnRpZmFjdC5kZXNjcmlwdGlvbiA9IGhlbHBlci5jcmVhdGVS
aWNoVGV4dChub3RlKVxcbiAgICBlbHNlOlxcbiAgICAgIG5vdGUgPXVcXFwiXFxcIlxcXCImbHQ7
ZGl2Jmd0OyZsdDtwJmd0OyZsdDticiZndDsmbHQ7YiZndDtXSE9JUyB0aHJlYXQgaW50ZWxsaWdl
bmNlIGF0IHsyfTombHQ7L2ImZ3Q7Jmx0Oy9iciZndDtcXFxcblxcXFxuXFxuICAgICAgJmx0O2Jy
Jmd0OyZsdDtiJmd0O3swfSZsdDsvYiZndDsmbHQ7L2JyJmd0OyZsdDsvZGl2Jmd0OyZsdDsvcCZn
dDtcXFxcblxcXFxuXFxuICAgICAgJmx0O2RpdiZndDsmbHQ7cCZndDsmbHQ7YnImZ3Q7Jmx0O2Im
Z3Q7IFBvc3NpYmxlIGFjY2Vzc2libGUga2V5czombHQ7L2ImZ3Q7Jmx0Oy9iciZndDtcXFxcblxc
XFxuXFxuICAgICAgJmx0O2JyJmd0OyZsdDtiJmd0O3sxfSZsdDsvYiZndDsmbHQ7L2JyJmd0O1xc
XFxuXFxcXG5cXFwiXFxcIlxcXCIuZm9ybWF0KHJlc3VsdHNbXFxcImNvbnRlbnRcXFwiXVtcXFwi
ZGlzcGxheV9jb250ZW50XFxcIl0sIHJlc3VsdHNbXFxcImNvbnRlbnRcXFwiXS5rZXlzKCksIHJl
c3VsdHNbXFxcIm1ldHJpY3NcXFwiXVtcXFwidGltZXN0YW1wXFxcIl0pICsgZGVzIFxcbiAgICAg
IGFydGlmYWN0LmRlc2NyaXB0aW9uID0gaGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5vdGUpXFxuICBl
bHNlOlxcbiAgICBub3RlID0gdVxcXCJcXFwiXFxcIldIT0lTIHRocmVhdCBpbnRlbGxpZ2VuY2Ug
YXQge306XFxcXG5cXFxcbiAgVGhpcyBBcnRpZmFjdCBoYXMgbm8gYW5zIGFjY2Vzc2libGUgcmVn
aXN0cnkgaW5mb3JtYXRpb24sIFxcXFxuXFxcXG4gc28gbm8gaW50ZWxsaWdlbmNlIHdhcyBnYXRo
ZXJlZC4gIFxcXFxuXFxcXG5cXFwiXFxcIlxcXCIuZm9ybWF0KHJlc3VsdHNbXFxcIm1ldHJpY3Nc
XFwiXVtcXFwidGltZXN0YW1wXFxcIl0pICsgZGVzXFxuICAgIGFydGlmYWN0LmRlc2NyaXB0aW9u
ID0gaGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5vdGUpXFxuZXhjZXB0OlxcbiAgbm90ZSA9IHVcXFwi
XFxcIlxcXCJXSE9JUyB0aHJlYXQgaW50ZWxsaWdlbmNlIGF0IHt9OlxcXFxuXFxcXG4gIFRoaXMg
QXJ0aWZhY3QgaGFzIG5vIGFucyBhY2Nlc3NpYmxlIHJlZ2lzdHJ5IGluZm9ybWF0aW9uLCBcXFxc
blxcXFxuIHNvIG5vIGludGVsbGlnZW5jZSB3YXMgZ2F0aGVyZWQuICBcXFxcblxcXFxuXFxcIlxc
XCJcXFwiLmZvcm1hdChyZXN1bHRzW1xcXCJtZXRyaWNzXFxcIl1bXFxcInRpbWVzdGFtcFxcXCJd
KSArIGRlc1xcbiAgYXJ0aWZhY3QuZGVzY3JpcHRpb24gPSBoZWxwZXIuY3JlYXRlUmljaFRleHQo
bm90ZSlcIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLndob2lzX3F1ZXJ5ID0g
YXJ0aWZhY3QudmFsdWVcIixcInJlc3VsdF9uYW1lXCI6XCJcIn08L3Jlc2lsaWVudDpmdW5jdGlv
bj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMXR0eTB0bjwvaW5j
b21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xZXY2bThtPC9vdXRnb2luZz48L3NlcnZpY2VU
YXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMWV2Nm04bVwiIHNvdXJjZVJlZj1c
IlNlcnZpY2VUYXNrXzE3NWh0N3lcIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8wZjZ1dWw0XCIvPjx0
ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIj48dGV4dD5TdGFydCB5
b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9
XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIg
dGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiLz48L3Byb2Nlc3M+PGJwbW5kaTpC
UE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxl
bWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBi
cG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3ht
X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIg
eT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3
aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBt
bmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0
aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwvYnBt
bmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25f
MXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4
PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndheXBv
aW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2JwbW5k
aTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzBmNnV1
bDRcIiBpZD1cIkVuZEV2ZW50XzBmNnV1bDRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2
XCIgd2lkdGg9XCIzNlwiIHg9XCI1MjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNTQwXCIgeT1cIjIyN1wi
Lz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2Ug
YnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMXR0eTB0blwiIGlkPVwiU2VxdWVuY2VGbG93XzF0
dHkwdG5fZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzA4XCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyNTNcIiB5PVwiMTg0LjVcIi8+PC9icG1uZGk6QlBN
TkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwi
U2VydmljZVRhc2tfMTc1aHQ3eVwiIGlkPVwiU2VydmljZVRhc2tfMTc1aHQ3eV9kaVwiPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIzMDhcIiB5PVwiMTY2XCIv
PjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVu
Y2VGbG93XzFldjZtOG1cIiBpZD1cIlNlcXVlbmNlRmxvd18xZXY2bThtX2RpXCI+PG9tZ2RpOndh
eXBvaW50IHg9XCI0MDhcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21n
ZGk6d2F5cG9pbnQgeD1cIjUyMlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIv
PjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBc
IiB4PVwiNDY1XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVk
Z2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+
IiwgIndvcmtmbG93X2lkIjogImV4YW1wbGVfd2hvaXNfcXVlcnkiLCAidmVyc2lvbiI6IDExfSwg
ImNyZWF0b3JfaWQiOiAic2Vhbi5vZ29ybWFuQGlibS5jb20iLCAiYWN0aW9ucyI6IFtdLCAibGFz
dF9tb2RpZmllZF90aW1lIjogMTU2ODYwMTk2NDA1MSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4
YW1wbGVfd2hvaXNfcXVlcnkiLCAibmFtZSI6ICJFeGFtcGxlOiBXaG9pcyBxdWVyeSJ9LCB7ImRl
c2NyaXB0aW9uIjogIlRoaXMgd29ya2Zsb3cgZ2VuZXJhdGVzIFJEQVAgZm9ybWF0dGVkIHJlc3Vs
dHMgZnJvbSBhbiBJUCwgVVJMIG9yIEROUyBBcnRpZmFjdCIsICJ3b3JrZmxvd19pZCI6IDUxLCAi
b2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX3JkYXBfcXVl
cnkiLCAidXVpZCI6ICJjYzE5OTNmNi0xY2M0LTQ4OWEtYWE5Yy0zNDIxY2VhMzQyYzYiLCAibGFz
dF9tb2RpZmllZF9ieSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJjb250ZW50IjogeyJ4bWwi
OiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25z
IHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHht
bG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4
bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1s
bnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5z
OnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwi
aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3
LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6
Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9yZGFwX3F1ZXJ5
XCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBSREFQIHF1ZXJ5XCI+PGRv
Y3VtZW50YXRpb24+VGhpcyB3b3JrZmxvdyBnZW5lcmF0ZXMgUkRBUCBmb3JtYXR0ZWQgcmVzdWx0
cyBmcm9tIGFuIElQLCBVUkwgb3IgRE5TIEFydGlmYWN0PC9kb2N1bWVudGF0aW9uPjxzdGFydEV2
ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xcHo3
OWdzPC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tf
MDZjZzRkdFwiIG5hbWU9XCJSREFQOiBRdWVyeVwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25c
Ij48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiMTliNWJiMzct
OWE0ZS00OWVjLTgwMmEtZmJjMzAwNmRlMTE3XCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0X3Byb2Nl
c3Npbmdfc2NyaXB0XCI6XCJ0cnk6XFxuICBkZXMgPSBhcnRpZmFjdC5kZXNjcmlwdGlvbi5jb250
ZW50XFxuZXhjZXB0IEV4Y2VwdGlvbjpcXG4gIGRlcyA9IE5vbmVcXG50cnk6XFxuICBpZiByZXN1
bHRzW1xcXCJzdWNjZXNzXFxcIl06XFxuICAgIGlmIGRlcyBpcyBOb25lOlxcbiAgICAgIG5vdGUg
PSB1XFxcIlxcXCJcXFwiJmx0O2RpdiZndDsmbHQ7cCZndDsmbHQ7YnImZ3Q7Jmx0O2ImZ3Q7UkRB
UCB0aHJlYXQgaW50ZWxsaWdlbmNlIGF0IHsyfTombHQ7L2ImZ3Q7Jmx0Oy9iciZndDtcXFxcblxc
XFxuXFxuICAgICAgJmx0O2JyJmd0OyZsdDtiJmd0O3swfSZsdDsvYiZndDsmbHQ7L2JyJmd0OyZs
dDsvZGl2Jmd0OyZsdDsvcCZndDtcXFxcblxcXFxuXFxuICAgICAgJmx0O2RpdiZndDsmbHQ7cCZn
dDsmbHQ7YnImZ3Q7Jmx0O2ImZ3Q7IFBvc3NpYmxlIGFjY2Vzc2libGUga2V5czombHQ7L2ImZ3Q7
Jmx0Oy9iciZndDtcXFxcblxcXFxuXFxuICAgICAgJmx0O2JyJmd0OyZsdDtiJmd0O3sxfSZsdDsv
YiZndDsmbHQ7L2JyJmd0O1xcXFxuXFxcXG5cXFwiXFxcIlxcXCIuZm9ybWF0KHJlc3VsdHNbXFxc
ImNvbnRlbnRcXFwiXVtcXFwiZGlzcGxheV9jb250ZW50XFxcIl0scmVzdWx0c1tcXFwiY29udGVu
dFxcXCJdLmtleXMoKSxyZXN1bHRzW1xcXCJtZXRyaWNzXFxcIl1bXFxcInRpbWVzdGFtcFxcXCJd
KVxcbiAgICAgIGFydGlmYWN0LmRlc2NyaXB0aW9uID0gaGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5v
dGUpXFxuICAgIGVsc2U6XFxuICAgICAgbm90ZSA9dVxcXCJcXFwiXFxcIiZsdDtkaXYmZ3Q7Jmx0
O3AmZ3Q7Jmx0O2JyJmd0OyZsdDtiJmd0O1JEQVAgdGhyZWF0IGludGVsbGlnZW5jZSBhdCB7Mn06
Jmx0Oy9iJmd0OyZsdDsvYnImZ3Q7XFxcXG5cXFxcblxcbiAgICAgICZsdDticiZndDsmbHQ7YiZn
dDt7MH0mbHQ7L2ImZ3Q7Jmx0Oy9iciZndDsmbHQ7L2RpdiZndDsmbHQ7L3AmZ3Q7XFxcXG5cXFxc
blxcbiAgICAgICZsdDtkaXYmZ3Q7Jmx0O3AmZ3Q7Jmx0O2JyJmd0OyZsdDtiJmd0OyBQb3NzaWJs
ZSBhY2Nlc3NpYmxlIGtleXM6Jmx0Oy9iJmd0OyZsdDsvYnImZ3Q7XFxcXG5cXFxcblxcbiAgICAg
ICZsdDticiZndDsmbHQ7YiZndDt7MX0mbHQ7L2ImZ3Q7Jmx0Oy9iciZndDtcXFxcblxcXFxuXFxc
IlxcXCJcXFwiLmZvcm1hdChyZXN1bHRzW1xcXCJjb250ZW50XFxcIl1bXFxcImRpc3BsYXlfY29u
dGVudFxcXCJdLHJlc3VsdHNbXFxcImNvbnRlbnRcXFwiXS5rZXlzKCkscmVzdWx0c1tcXFwibWV0
cmljc1xcXCJdW1xcXCJ0aW1lc3RhbXBcXFwiXSkgKyBkZXNcXG4gICAgICBhcnRpZmFjdC5kZXNj
cmlwdGlvbiA9IGhlbHBlci5jcmVhdGVSaWNoVGV4dChub3RlKVxcbiAgZWxzZTpcXG4gICAgbm90
ZSA9IHVcXFwiXFxcIlxcXCJSREFQIHRocmVhdCBpbnRlbGxpZ2VuY2UgYXQge306XFxcXG5cXFxc
biAgVGhpcyBBcnRpZmFjdCBoYXMgbm8gYW5zIGFjY2Vzc2libGUgcmVnaXN0cnkgaW5mb3JtYXRp
b24sIFxcXFxuXFxcXG4gc28gbm8gaW50ZWxsaWdlbmNlIHdhcyBnYXRoZXJlZC4gIFxcXFxuXFxc
XG5cXFwiXFxcIlxcXCIuZm9ybWF0KHJlc3VsdHNbXFxcIm1ldHJpY3NcXFwiXVtcXFwidGltZXN0
YW1wXFxcIl0pXFxuICAgIGFydGlmYWN0LmRlc2NyaXB0aW9uID0gaGVscGVyLmNyZWF0ZVJpY2hU
ZXh0KG5vdGUpXFxuZXhjZXB0OlxcbiAgbm90ZSA9ICB1XFxcIlxcXCJcXFwiUkRBUCB0aHJlYXQg
aW50ZWxsaWdlbmNlIGF0IHt9OlxcXFxuXFxcXG4gIFRoaXMgQXJ0aWZhY3QgaGFzIG5vIGFucyBh
Y2Nlc3NpYmxlIHJlZ2lzdHJ5IGluZm9ybWF0aW9uLCBcXFxcblxcXFxuIHNvIG5vIGludGVsbGln
ZW5jZSB3YXMgZ2F0aGVyZWQuICBcXFxcblxcXFxuXFxcIlxcXCJcXFwiLmZvcm1hdChyZXN1bHRz
W1xcXCJtZXRyaWNzXFxcIl1bXFxcInRpbWVzdGFtcFxcXCJdKVxcbiAgYXJ0aWZhY3QuZGVzY3Jp
cHRpb24gPSBoZWxwZXIuY3JlYXRlUmljaFRleHQobm90ZSlcIixcInByZV9wcm9jZXNzaW5nX3Nj
cmlwdFwiOlwiaW5wdXRzLnJkYXBfcXVlcnkgPSBhcnRpZmFjdC52YWx1ZVxcbmlucHV0cy5yZGFw
X2RlcHRoID0gMFwiLFwicmVzdWx0X25hbWVcIjpcIlwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwv
ZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18xcHo3OWdzPC9pbmNvbWlu
Zz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzBwa2s4amY8L291dGdvaW5nPjwvc2VydmljZVRhc2s+
PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMGtlM3VxaFwiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3df
MHBrazhqZjwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VG
bG93XzFwejc5Z3NcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9
XCJTZXJ2aWNlVGFza18wNmNnNGR0XCIvPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3df
MHBrazhqZlwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzA2Y2c0ZHRcIiB0YXJnZXRSZWY9XCJF
bmRFdmVudF8wa2UzdXFoXCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFr
eHhpeXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3Rh
dGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwi
U3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwi
Lz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBt
bmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFc
Ij48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlk
PVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdp
ZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9i
cG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1u
RWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFr
eHhpeXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwi
OTlcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5F
bGVtZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9k
aVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIyMjBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIlNlcnZpY2VUYXNrXzA2Y2c0ZHRcIiBpZD1cIlNlcnZpY2VUYXNrXzA2Y2c0ZHRfZGlc
Ij48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMzQ4XCIgeT1c
IjE3N1wiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9
XCJFbmRFdmVudF8wa2UzdXFoXCIgaWQ9XCJFbmRFdmVudF8wa2UzdXFoX2RpXCI+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNjEyXCIgeT1cIjE5OVwiLz48YnBt
bmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1c
IjYzMFwiIHk9XCIyMzhcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48
YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFwejc5Z3NcIiBpZD1c
IlNlcXVlbmNlRmxvd18xcHo3OWdzX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI1Mlwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
MjUyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMTdcIi8+PG9tZ2RpOndheXBvaW50
IHg9XCIzNDhcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIxN1wiLz48YnBtbmRpOkJQ
TU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjI2N1wi
IHk9XCIyMDVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6
QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHBrazhqZlwiIGlkPVwiU2VxdWVu
Y2VGbG93XzBwa2s4amZfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQ0OFwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMjE3XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTA5XCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMTdcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1MDlcIiB4
c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIxN1wiLz48b21nZGk6d2F5cG9pbnQgeD1cIjYx
MlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjE3XCIvPjxicG1uZGk6QlBNTkxhYmVs
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNTI0XCIgeT1cIjIx
MC41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1O
UGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAid29ya2Zsb3dfaWQi
OiAiZXhhbXBsZV9yZGFwX3F1ZXJ5IiwgInZlcnNpb24iOiA1M30sICJjcmVhdG9yX2lkIjogInNl
YW4ub2dvcm1hbkBpYm0uY29tIiwgImFjdGlvbnMiOiBbXSwgImxhc3RfbW9kaWZpZWRfdGltZSI6
IDE1Njg2MDAyMTI3ODUsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3JkYXBfcXVlcnki
LCAibmFtZSI6ICJFeGFtcGxlOiBSREFQIHF1ZXJ5In1dLCAiYWN0aW9ucyI6IFt7Im9iamVjdF90
eXBlIjogImFydGlmYWN0IiwgInR5cGUiOiAxLCAibmFtZSI6ICJSdW4gcmRhcCBxdWVyeSBhZ2Fp
bnN0IEFydGlmYWN0IiwgInZpZXdfaXRlbXMiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAw
LCAid29ya2Zsb3dzIjogWyJleGFtcGxlX3JkYXBfcXVlcnkiXSwgImxvZ2ljX3R5cGUiOiAiYWxs
IiwgImV4cG9ydF9rZXkiOiAiUnVuIHJkYXAgcXVlcnkgYWdhaW5zdCBBcnRpZmFjdCIsICJ1dWlk
IjogIjUzYzY5ZmRkLWE1NzUtNGJhNy04NmYxLTZiZDI5OTcwZWIwOCIsICJhdXRvbWF0aW9ucyI6
IFtdLCAiY29uZGl0aW9ucyI6IFt7InR5cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IG51bGws
ICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5cGUiLCAibWV0aG9kIjogImluIiwgInZhbHVlIjog
WyJJUCBBZGRyZXNzIiwgIkROUyBOYW1lIiwgIlVSTCJdfV0sICJpZCI6IDgwLCAibWVzc2FnZV9k
ZXN0aW5hdGlvbnMiOiBbXX0sIHsib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAidHlwZSI6IDEs
ICJuYW1lIjogIlJ1biB3aG9pcyBxdWVyeSBhZ2FpbnN0IEFydGlmYWN0IiwgInZpZXdfaXRlbXMi
OiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX3do
b2lzX3F1ZXJ5Il0sICJsb2dpY190eXBlIjogImFsbCIsICJleHBvcnRfa2V5IjogIlJ1biB3aG9p
cyBxdWVyeSBhZ2FpbnN0IEFydGlmYWN0IiwgInV1aWQiOiAiNThjYmM5OGMtNjZhYi00N2RjLTk1
YTktNzRkZDlkZjM0MjdjIiwgImF1dG9tYXRpb25zIjogW10sICJjb25kaXRpb25zIjogW3sidHlw
ZSI6IG51bGwsICJldmFsdWF0aW9uX2lkIjogbnVsbCwgImZpZWxkX25hbWUiOiAiYXJ0aWZhY3Qu
dHlwZSIsICJtZXRob2QiOiAiaW4iLCAidmFsdWUiOiBbIklQIEFkZHJlc3MiLCAiRE5TIE5hbWUi
LCAiVVJMIl19XSwgImlkIjogODEsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdfV0sICJsYXlv
dXRzIjogW10sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAyLCAiaWQiOiA4NCwgImluZHVzdHJp
ZXMiOiBudWxsLCAiZnVuY3Rpb25zIjogW3siZGlzcGxheV9uYW1lIjogIlJEQVA6IFF1ZXJ5Iiwg
ImRlc2NyaXB0aW9uIjogeyJjb250ZW50IjogIlVzaW5nIGlwd2hvaXMgbGlicmFyeSB0byBtYWtl
IGdlbmVyYWwgcXVlcmllcyBpbiBSREFQIGZvcm1hdCIsICJmb3JtYXQiOiAidGV4dCJ9LCAiY3Jl
YXRvciI6IHsidHlwZSI6ICJ1c2VyIiwgImRpc3BsYXlfbmFtZSI6ICJTZWFuIE8gR29ybWFuIiwg
ImlkIjogMSwgIm5hbWUiOiAic2Vhbi5vZ29ybWFuQGlibS5jb20ifSwgInZpZXdfaXRlbXMiOiBb
eyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtf
aGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICI4NWIy
YjJiOC1hNjhiLTQzODMtYTAwNC1jYTA2MGZkN2M2YTYiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7
InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19o
ZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogIjA0ZWRk
MTlkLWQwMDgtNGFiYy1hMTliLTczMWE5OTk3MzIwZCIsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAi
ZXhwb3J0X2tleSI6ICJyZGFwX3F1ZXJ5IiwgInV1aWQiOiAiMTliNWJiMzctOWE0ZS00OWVjLTgw
MmEtZmJjMzAwNmRlMTE3IiwgImxhc3RfbW9kaWZpZWRfYnkiOiB7InR5cGUiOiAidXNlciIsICJk
aXNwbGF5X25hbWUiOiAiU2VhbiBPIEdvcm1hbiIsICJpZCI6IDEsICJuYW1lIjogInNlYW4ub2dv
cm1hbkBpYm0uY29tIn0sICJ2ZXJzaW9uIjogOCwgIndvcmtmbG93cyI6IFt7InByb2dyYW1tYXRp
Y19uYW1lIjogImV4YW1wbGVfcmRhcF9xdWVyeSIsICJkZXNjcmlwdGlvbiI6IG51bGwsICJvYmpl
Y3RfdHlwZSI6ICJhcnRpZmFjdCIsICJhY3Rpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6IFJE
QVAgcXVlcnkiLCAid29ya2Zsb3dfaWQiOiA1MSwgInV1aWQiOiBudWxsfV0sICJsYXN0X21vZGlm
aWVkX3RpbWUiOiAxNTY4NTYxMDkzNzk3LCAiZGVzdGluYXRpb25faGFuZGxlIjogImZuX3dob2lz
X3JkYXAiLCAiaWQiOiA1MCwgIm5hbWUiOiAicmRhcF9xdWVyeSJ9LCB7ImRpc3BsYXlfbmFtZSI6
ICJXSE9JUzogcXVlcnkiLCAiZGVzY3JpcHRpb24iOiB7ImNvbnRlbnQiOiAiVXNpbmcgaXB3aG9p
cyBsaWJyYXJ5IHRvIG1ha2UgZ2VuZXJhbCBxdWVyaWVzIGluIHdob2lzIGZvcm1hdCIsICJmb3Jt
YXQiOiAidGV4dCJ9LCAiY3JlYXRvciI6IHsidHlwZSI6ICJ1c2VyIiwgImRpc3BsYXlfbmFtZSI6
ICJTZWFuIE8gR29ybWFuIiwgImlkIjogMSwgIm5hbWUiOiAic2Vhbi5vZ29ybWFuQGlibS5jb20i
fSwgInZpZXdfaXRlbXMiOiBbeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5j
dGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQi
LCAiY29udGVudCI6ICI5NGFiYmRkYi02ZTQ0LTQwNDMtYWRkZi1iNjgwNTc2MzQ4ZjEiLCAic3Rl
cF9sYWJlbCI6IG51bGx9XSwgImV4cG9ydF9rZXkiOiAid2hvaXNfcXVlcnkiLCAidXVpZCI6ICJh
MDQwZDNjZC1kMTUxLTRjMTQtYTYyMi0yNjI2MmFiNmE5YjkiLCAibGFzdF9tb2RpZmllZF9ieSI6
IHsidHlwZSI6ICJ1c2VyIiwgImRpc3BsYXlfbmFtZSI6ICJTZWFuIE8gR29ybWFuIiwgImlkIjog
MSwgIm5hbWUiOiAic2Vhbi5vZ29ybWFuQGlibS5jb20ifSwgInZlcnNpb24iOiA4LCAid29ya2Zs
b3dzIjogW3sicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV93aG9pc19xdWVyeSIsICJkZXNj
cmlwdGlvbiI6IG51bGwsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJhY3Rpb25zIjogW10s
ICJuYW1lIjogIkV4YW1wbGU6IFdob2lzIHF1ZXJ5IiwgIndvcmtmbG93X2lkIjogNTYsICJ1dWlk
IjogbnVsbH1dLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU2ODU2MTExOTIwNSwgImRlc3RpbmF0
aW9uX2hhbmRsZSI6ICJmbl93aG9pc19yZGFwIiwgImlkIjogNTEsICJuYW1lIjogIndob2lzX3F1
ZXJ5In1dLCAiYWN0aW9uX29yZGVyIjogW10sICJnZW9zIjogbnVsbCwgInRhc2tfb3JkZXIiOiBb
XSwgInR5cGVzIjogW10sICJ0aW1lZnJhbWVzIjogbnVsbCwgIndvcmtzcGFjZXMiOiBbXSwgImF1
dG9tYXRpY190YXNrcyI6IFtdLCAicGhhc2VzIjogW10sICJub3RpZmljYXRpb25zIjogbnVsbCwg
InJlZ3VsYXRvcnMiOiBudWxsLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJjcmVhdGVfZGF0ZSI6IDE1
NzEzMDcxNDU4ODAsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRl
cm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCki
LCAiaWQiOiAwLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAi
dXBkYXRlX2RhdGUiOiAxNTcxMzA3MTQ1ODgwLCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgt
YWQzOS00YTAwMDQwNDRhYTAiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJw
YXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2V9XSwgInNjcmlwdHMiOiBbXSwgInNlcnZl
cl92ZXJzaW9uIjogeyJtYWpvciI6IDMyLCAidmVyc2lvbiI6ICIzMi4wLjQ1MDIiLCAiYnVpbGRf
bnVtYmVyIjogNDUwMiwgIm1pbm9yIjogMH0sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7InBy
b2dyYW1tYXRpY19uYW1lIjogImZuX3dob2lzX3JkYXAiLCAibmFtZSI6ICJmbl93aG9pc19yZGFw
IiwgImV4cG9ydF9rZXkiOiAiZm5fd2hvaXNfcmRhcCIsICJ1dWlkIjogImExM2ZmMjhlLTVjZGUt
NGE1Mi1hMzcyLThmOTQ4NDgzZDMyZSIsICJleHBlY3RfYWNrIjogdHJ1ZSwgImRlc3RpbmF0aW9u
X3R5cGUiOiAwLCAidXNlcnMiOiBbInNlYW4ub2dvcm1hbkBpYm0uY29tIl19XSwgImluY2lkZW50
X2FydGlmYWN0X3R5cGVzIjogW10sICJyb2xlcyI6IFtdLCAiZmllbGRzIjogW3sib3BlcmF0aW9u
cyI6IFtdLCAidHlwZV9pZCI6IDAsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiU2lt
dWxhdGlvbiIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2Vh
YmxlIjogdHJ1ZSwgImlkIjogNTksICJyZWFkX29ubHkiOiB0cnVlLCAidXVpZCI6ICJjM2YwZTNl
ZC0yMWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90
eXBlIjogImJvb2xlYW4iLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNpZGVudCBpcyBhIHNp
bXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBpcyByZWFkLW9ubHku
IiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtd
LCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5pbmciLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwg
ImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW119LCB7Im9wZXJh
dGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6
ICJyZGFwX2RlcHRoIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNo
YW5nZWFibGUiOiB0cnVlLCAiaWQiOiAzMjQsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAi
ODViMmIyYjgtYTY4Yi00MzgzLWEwMDQtY2EwNjBmZDdjNmE2IiwgImNob3NlbiI6IGZhbHNlLCAi
aW5wdXRfdHlwZSI6ICJudW1iZXIiLCAidG9vbHRpcCI6ICJDYW4gYmUgMCwgMSBvciAyIiwgImlu
dGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhw
b3J0X2tleSI6ICJfX2Z1bmN0aW9uL3JkYXBfZGVwdGgiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBm
YWxzZSwgInBsYWNlaG9sZGVyIjogIjAiLCAibmFtZSI6ICJyZGFwX2RlcHRoIiwgImRlcHJlY2F0
ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAicmVxdWlyZWQi
OiAiYWx3YXlzIiwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjog
MTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAid2hvaXNfcXVlcnkiLCAiYmxhbmtf
b3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6
IDMyMiwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICI5NGFiYmRkYi02ZTQ0LTQwNDMtYWRk
Zi1iNjgwNTc2MzQ4ZjEiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAi
dG9vbHRpcCI6ICJJUCwgVVJMIG9yIEROUyBBcnRpZmFjdCIsICJpbnRlcm5hbCI6IGZhbHNlLCAi
cmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5j
dGlvbi93aG9pc19xdWVyeSIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xk
ZXIiOiAiaWJtLmNvbSIsICJuYW1lIjogIndob2lzX3F1ZXJ5IiwgImRlcHJlY2F0ZWQiOiBmYWxz
ZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlz
IiwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVy
YXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAicmRhcF9xdWVyeSIsICJibGFua19vcHRpb24iOiBm
YWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMzIzLCAicmVh
ZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjA0ZWRkMTlkLWQwMDgtNGFiYy1hMTliLTczMWE5OTk3
MzIwZCIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjog
IklQLCBVUkwgb3IgRE5TIEFydGlmYWN0IiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQi
OiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3JkYXBf
cXVlcnkiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogImlibS5j
b20iLCAibmFtZSI6ICJyZGFwX3F1ZXJ5IiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRf
Y2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInZhbHVlcyI6
IFtdfV0sICJvdmVycmlkZXMiOiBbXSwgImV4cG9ydF9kYXRlIjogMTU2ODYwMzk4NjkyM30=
"""
    )