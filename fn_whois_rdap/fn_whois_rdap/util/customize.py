# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_whois_rdap"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_whois_rdap package"""
    reload_params = {"package": u"fn_whois_rdap",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"rdap_depth", u"rdap_query", u"whois_query"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_whois_rdap"], 
                    "functions": [u"rdap_query", u"whois_query"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_rdap_query", u"example_whois_query"], 
                    "actions": [],
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     rdap_depth
    #     rdap_query
    #     whois_query
    #   Message Destinations:
    #     fn_whois_rdap
    #   Functions:
    #     rdap_query
    #     whois_query
    #   Workflows:
    #     example_rdap_query
    #     example_whois_query


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMiwgIm1pbm9yIjogMCwgImJ1aWxkX251bWJl
ciI6IDQ1MDIsICJ2ZXJzaW9uIjogIjMyLjAuNDUwMiJ9LCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9u
IjogMiwgImlkIjogNjcsICJleHBvcnRfZGF0ZSI6IDE1Njg0Njc2NjIxNjYsICJmaWVsZHMiOiBb
eyJpZCI6IDU5LCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAidGV4dCI6ICJTaW11bGF0aW9uIiwg
InByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMCwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5j
aWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQg
aXMgcmVhZC1vbmx5LiIsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjog
ImMzZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIsICJvcGVyYXRpb25zIjogW10s
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogdHJ1ZSwg
ImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImlu
Y2lkZW50L2luY190cmFpbmluZyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxz
ZX0sIHsiaWQiOiAzMjQsICJuYW1lIjogInJkYXBfZGVwdGgiLCAidGV4dCI6ICJyZGFwX2RlcHRo
IiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjogIjEiLCAicGxhY2Vo
b2xkZXIiOiAiMSIsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJyZXF1aXJlZCI6ICJhbHdheXMi
LCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9j
aG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFs
IjogZmFsc2UsICJ1dWlkIjogIjg1YjJiMmI4LWE2OGItNDM4My1hMDA0LWNhMDYwZmQ3YzZhNiIs
ICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAi
cmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3JkYXBfZGVwdGgiLCAidGVtcGxhdGVzIjogW10s
ICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMzIzLCAibmFtZSI6ICJyZGFwX3F1ZXJ5Iiwg
InRleHQiOiAicmRhcF9xdWVyeSIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDExLCAidG9v
bHRpcCI6ICJJUCBvciBkb21haW4gbmFtZSIsICJwbGFjZWhvbGRlciI6ICJpYm0uY29tIiwgImlu
cHV0X3R5cGUiOiAidGV4dCIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjog
IjA0ZWRkMTlkLWQwMDgtNGFiYy1hMTliLTczMWE5OTk3MzIwZCIsICJvcGVyYXRpb25zIjogW10s
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2Us
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJf
X2Z1bmN0aW9uL3JkYXBfcXVlcnkiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFs
c2V9LCB7ImlkIjogMzIyLCAibmFtZSI6ICJ3aG9pc19xdWVyeSIsICJ0ZXh0IjogIndob2lzX3F1
ZXJ5IiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjogIklQLCBVUkwg
b3IgRE5TIHZhbHVlIiwgInBsYWNlaG9sZGVyIjogImlibS5jb20iLCAiaW5wdXRfdHlwZSI6ICJ0
ZXh0IiwgInJlcXVpcmVkIjogImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
Y2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5r
X29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiOTRhYmJkZGItNmU0
NC00MDQzLWFkZGYtYjY4MDU3NjM0OGYxIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9w
ZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUi
OiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vd2hv
aXNfcXVlcnkiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9XSwgImluY2lk
ZW50X3R5cGVzIjogW3sidXBkYXRlX2RhdGUiOiAxNTY5MzE0ODU0NDk4LCAiY3JlYXRlX2RhdGUi
OiAxNTY5MzE0ODU0NDk4LCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQw
NDRhYTAiLCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwp
IiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgIm5h
bWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImVuYWJsZWQiOiBmYWxz
ZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVsbCwgImhpZGRlbiI6IGZhbHNlLCAi
aWQiOiAwfV0sICJwaGFzZXMiOiBbXSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAib3ZlcnJpZGVz
IjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7Im5hbWUiOiAiZm5fd2hvaXNfcmRhcCIs
ICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl93aG9pc19yZGFwIiwgImRlc3RpbmF0aW9uX3R5cGUi
OiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJ1c2VycyI6IFsic2Vhbi5vZ29ybWFuQGlibS5jb20i
XSwgInV1aWQiOiAiYTEzZmYyOGUtNWNkZS00YTUyLWEzNzItOGY5NDg0ODNkMzJlIiwgImV4cG9y
dF9rZXkiOiAiZm5fd2hvaXNfcmRhcCJ9XSwgImFjdGlvbnMiOiBbXSwgImxheW91dHMiOiBbXSwg
Im5vdGlmaWNhdGlvbnMiOiBudWxsLCAidGltZWZyYW1lcyI6IG51bGwsICJsb2NhbGUiOiBudWxs
LCAiaW5kdXN0cmllcyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwgImdlb3MiOiBudWxsLCAi
dGFza19vcmRlciI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJ0eXBlcyI6IFtdLCAic2NyaXB0
cyI6IFtdLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7Indv
cmtmbG93X2lkIjogNTYsICJuYW1lIjogIkV4YW1wbGU6IFdob2lzIHF1ZXJ5IiwgInByb2dyYW1t
YXRpY19uYW1lIjogImV4YW1wbGVfd2hvaXNfcXVlcnkiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZh
Y3QiLCAiZGVzY3JpcHRpb24iOiAiSVAsIFVSTCBvciBETlMgYXJ0aWZhY3QgcmVnaXN0cnkgaW5m
b3JtYXRpb24iLCAiY3JlYXRvcl9pZCI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJsYXN0X21v
ZGlmaWVkX2J5IjogInNlYW4ub2dvcm1hbkBpYm0uY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6
IDE1Njg0Njc0ODkxNjcsICJleHBvcnRfa2V5IjogImV4YW1wbGVfd2hvaXNfcXVlcnkiLCAidXVp
ZCI6ICJkNjRkZjBiMy0yYTI4LTQ1NGEtODc1Mi1iMWIxYTRiZGU2MmIiLCAiY29udGVudCI6IHsi
d29ya2Zsb3dfaWQiOiAiZXhhbXBsZV93aG9pc19xdWVyeSIsICJ4bWwiOiAiPD94bWwgdmVyc2lv
bj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0
dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0
dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRw
Oi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0
dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5v
cmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hN
TFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5v
cmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV93aG9pc19xdWVyeVwiIGlzRXhlY3V0YWJs
ZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTogV2hvaXMgcXVlcnlcIj48ZG9jdW1lbnRhdGlvbj5J
UCwgVVJMIG9yIEROUyBhcnRpZmFjdCByZWdpc3RyeSBpbmZvcm1hdGlvbjwvZG9jdW1lbnRhdGlv
bj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5j
ZUZsb3dfMXR0eTB0bjwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxlbmRFdmVudCBpZD1cIkVuZEV2
ZW50XzBmNnV1bDRcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFldjZtOG08L2luY29taW5nPjwv
ZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xdHR5MHRuXCIgc291cmNl
UmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMTc1aHQ3
eVwiLz48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xNzVodDd5XCIgbmFtZT1cIldIT0lT
OiBxdWVyeVwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+
PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiYTA0MGQzY2QtZDE1MS00YzE0LWE2MjItMjYyNjJh
YjZhOWI5XCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJ0cnk6
XFxuICBkZXMgPSBhcnRpZmFjdC5kZXNjcmlwdGlvbi5jb250ZW50XFxuZXhjZXB0IEV4Y2VwdGlv
bjpcXG4gIGRlcyA9IE5vbmVcXG5kdW1teSA9e31cXG5kdW1teSA9IHJlc3VsdHNbXFxcImNvbnRl
bnRcXFwiXVxcblxcbmlmIGRlcyBpcyBOb25lOlxcbiAgbm90ZSA9dVxcXCJcXFwiXFxcIiZsdDtk
aXYmZ3Q7Jmx0O3AmZ3Q7V0hPSVMgdGhyZWF0IGludGVsbGlnZW5jZTombHQ7L3AmZ3Q7Jmx0Oy9k
aXYmZ3Q7IFxcXFxuXFxcXG4ge30gXFxcXG5cXFxcblxcXCJcXFwiXFxcIi5mb3JtYXQoZHVtbXkp
XFxuICBhcnRpZmFjdC5kZXNjcmlwdGlvbiA9IGhlbHBlci5jcmVhdGVSaWNoVGV4dChub3RlKVxc
bmVsc2U6XFxuICBub3RlID0gZGVzICsgdVxcXCJcXFwiXFxcIiZsdDtkaXYmZ3Q7Jmx0O3AmZ3Q7
V0hPSVMgdGhyZWF0IGludGVsbGlnZW5jZTombHQ7L3AmZ3Q7Jmx0Oy9kaXYmZ3Q7IFxcXFxuXFxc
XG4ge30gXFxcXG5cXFxcblxcXCJcXFwiXFxcIi5mb3JtYXQoZHVtbXkpXFxuICBhcnRpZmFjdC5k
ZXNjcmlwdGlvbiA9IGhlbHBlci5jcmVhdGVSaWNoVGV4dChub3RlKVwiLFwicHJlX3Byb2Nlc3Np
bmdfc2NyaXB0XCI6XCJpbnB1dHMud2hvaXNfcXVlcnkgPSBhcnRpZmFjdC52YWx1ZVwiLFwicmVz
dWx0X25hbWVcIjpcIlwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+
PGluY29taW5nPlNlcXVlbmNlRmxvd18xdHR5MHRuPC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVu
Y2VGbG93XzFldjZtOG08L291dGdvaW5nPjwvc2VydmljZVRhc2s+PHNlcXVlbmNlRmxvdyBpZD1c
IlNlcXVlbmNlRmxvd18xZXY2bThtXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMTc1aHQ3eVwi
IHRhcmdldFJlZj1cIkVuZEV2ZW50XzBmNnV1bDRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4
dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4
dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhc
IiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3Rh
dGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRp
YWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9
XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVu
dF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBN
TkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIg
eT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6
QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4
dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0
aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6
QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lh
dGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBN
TlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMGY2dXVsNFwiIGlkPVwiRW5kRXZlbnRfMGY2
dXVsNF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjUy
MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIx
M1wiIHdpZHRoPVwiMFwiIHg9XCI1NDBcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48
L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNl
Rmxvd18xdHR5MHRuXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMXR0eTB0bl9kaVwiPjxvbWdkaTp3YXlw
b2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2Rp
OndheXBvaW50IHg9XCIzMDhcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48
YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIg
eD1cIjI1M1wiIHk9XCIxODQuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVk
Z2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18xNzVodDd5XCIg
aWQ9XCJTZXJ2aWNlVGFza18xNzVodDd5X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwi
IHdpZHRoPVwiMTAwXCIgeD1cIjMwOFwiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMWV2Nm04bVwiIGlkPVwi
U2VxdWVuY2VGbG93XzFldjZtOG1fZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQwOFwiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTIyXCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9t
Z2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI0NjVcIiB5PVwiMTg0XCIv
PjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+
PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAidmVyc2lvbiI6IDR9LCAiYWN0
aW9ucyI6IFtdfSwgeyJ3b3JrZmxvd19pZCI6IDUxLCAibmFtZSI6ICJFeGFtcGxlOiBSREFQIHF1
ZXJ5IiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfcmRhcF9xdWVyeSIsICJvYmplY3Rf
dHlwZSI6ICJhcnRpZmFjdCIsICJkZXNjcmlwdGlvbiI6ICJUaGlzIHdvcmtmbG93IGdlbmVyYXRl
IFJEQVAgZm9ybWF0dGVkIHJlc3VsdHMgZnJvbSBhbiBJUCBvciBkb21haW4gbmFtZSBhcnRpZmFj
dCIsICJjcmVhdG9yX2lkIjogInNlYW4ub2dvcm1hbkBpYm0uY29tIiwgImxhc3RfbW9kaWZpZWRf
YnkiOiAic2Vhbi5vZ29ybWFuQGlibS5jb20iLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU2ODQ2
NzUxNzE3NSwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9yZGFwX3F1ZXJ5IiwgInV1aWQiOiAiY2Mx
OTkzZjYtMWNjNC00ODlhLWFhOWMtMzQyMWNlYTM0MmM2IiwgImNvbnRlbnQiOiB7IndvcmtmbG93
X2lkIjogImV4YW1wbGVfcmRhcF9xdWVyeSIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwi
IGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcu
b3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cu
b21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cu
b21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9t
Zy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNp
bGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9Y
TUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1p
bnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwi
Pjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9yZGFwX3F1ZXJ5XCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwi
IG5hbWU9XCJFeGFtcGxlOiBSREFQIHF1ZXJ5XCI+PGRvY3VtZW50YXRpb24+VGhpcyB3b3JrZmxv
dyBnZW5lcmF0ZSBSREFQIGZvcm1hdHRlZCByZXN1bHRzIGZyb20gYW4gSVAgb3IgZG9tYWluIG5h
bWUgYXJ0aWZhY3Q8L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1
NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFwejc5Z3M8L291dGdvaW5nPjwvc3RhcnRF
dmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wNmNnNGR0XCIgbmFtZT1cIlJEQVA6
IFF1ZXJ5XCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48
cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCIxOWI1YmIzNy05YTRlLTQ5ZWMtODAyYS1mYmMzMDA2
ZGUxMTdcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcInRyeTpc
XG4gICAgZGVzID0gYXJ0aWZhY3QuZGVzY3JpcHRpb24uY29udGVudFxcbmV4Y2VwdCBFeGNlcHRp
b246XFxuICBkZXMgPSBOb25lXFxuZHVtbXkgPXt9XFxuZHVtbXkgPSByZXN1bHRzW1xcXCJjb250
ZW50XFxcIl1cXG5cXG5pZiBkZXMgaXMgTm9uZTpcXG4gIG5vdGUgPXVcXFwiXFxcIlxcXCImbHQ7
ZGl2Jmd0OyZsdDtwJmd0O1JEQVAgdGhyZWF0IGludGVsbGlnZW5jZTpcXFxcblxcXFxuICZsdDti
ciZndDsgUG9zc2libGUgZGljdG9uYXJ5IGtleXM6ICZsdDticiZndDsgXFxcXG4gezB9IFxcXFxu
XFxcXG4gJmx0O2JyJmd0OyBBc3NvY2lhdGVkIG9iamVjdHMgJmx0O2JyJmd0OyBcXFxcbiB7MX0g
XFxcXG5cXFxcbiAmbHQ7YnImZ3Q7IEROUyB6b25lOiAmbHQ7YnImZ3Q7IFxcXFxuIHsyfSZsdDtk
aXYmZ3Q7Jmx0O3AmZ3Q7IFxcXFxuXFxcXG5cXFwiXFxcIlxcXCIuZm9ybWF0KGR1bW15LmtleXMo
KSwgZHVtbXkuZ2V0KHUnb2JqZWN0cycpLGR1bW15LmdldCgnZG5zX3pvbmUnKSlcXG4gIGFydGlm
YWN0LmRlc2NyaXB0aW9uID0gaGVscGVyLmNyZWF0ZVJpY2hUZXh0KG5vdGUpXFxuZWxzZTpcXG4g
IG5vdGUgPSBkZXMgKyB1XFxcIlxcXCJcXFwiJmx0O2RpdiZndDsmbHQ7cCZndDtSREFQIHRocmVh
dCBpbnRlbGxpZ2VuY2U6XFxcXG5cXFxcbiAmbHQ7YnImZ3Q7IFBvc3NpYmxlIGRpY3RvbmFyeSBr
ZXlzOiAmbHQ7YnImZ3Q7IFxcXFxuIHswfSBcXFxcblxcXFxuICZsdDticiZndDsgQXNzb2NpYXRl
ZCBvYmplY3RzICZsdDticiZndDsgXFxcXG4gezF9IFxcXFxuXFxcXG4gJmx0O2JyJmd0OyBETlMg
em9uZTogJmx0O2JyJmd0OyBcXFxcbiB7Mn0mbHQ7ZGl2Jmd0OyZsdDtwJmd0O1xcXFxuXFxcXG5c
XFwiXFxcIlxcXCIuZm9ybWF0KGR1bW15LmtleXMoKSwgZHVtbXkuZ2V0KHUnb2JqZWN0cycpLGR1
bW15LmdldCgnZG5zX3pvbmUnKSlcXG4gIGFydGlmYWN0LmRlc2NyaXB0aW9uID0gaGVscGVyLmNy
ZWF0ZVJpY2hUZXh0KG5vdGUpXFxuXFxuI2luY2lkZW50LmFkZE5vdGUoaGVscGVyLmNyZWF0ZVJp
Y2hUZXh0KG5vdGVUZXh0KSlcIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLnJk
YXBfcXVlcnkgPSBhcnRpZmFjdC52YWx1ZVxcbmlucHV0cy5yZGFwX2RlcHRoID0gMFwiLFwicmVz
dWx0X25hbWVcIjpcIlwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+
PGluY29taW5nPlNlcXVlbmNlRmxvd18xcHo3OWdzPC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVu
Y2VGbG93XzBwa2s4amY8L291dGdvaW5nPjwvc2VydmljZVRhc2s+PGVuZEV2ZW50IGlkPVwiRW5k
RXZlbnRfMGtlM3VxaFwiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMHBrazhqZjwvaW5jb21pbmc+
PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzFwejc5Z3NcIiBzb3Vy
Y2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wNmNn
NGR0XCIvPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMHBrazhqZlwiIHNvdXJjZVJl
Zj1cIlNlcnZpY2VUYXNrXzA2Y2c0ZHRcIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8wa2UzdXFoXCIv
Pjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIj48dGV4dD5TdGFy
dCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24g
aWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3ht
XCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiLz48L3Byb2Nlc3M+PGJwbW5k
aTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1u
RWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFw
ZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVh
c3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYy
XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBc
IiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5v
dGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRp
b25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2lu
dCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndh
eXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2Jw
bW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNr
XzA2Y2c0ZHRcIiBpZD1cIlNlcnZpY2VUYXNrXzA2Y2c0ZHRfZGlcIj48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMzQ4XCIgeT1cIjE3N1wiLz48L2JwbW5kaTpC
UE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8wa2UzdXFo
XCIgaWQ9XCJFbmRFdmVudF8wa2UzdXFoX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwi
IHdpZHRoPVwiMzZcIiB4PVwiNjEyXCIgeT1cIjE5OVwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjYzMFwiIHk9XCIyMzhcIi8+
PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJw
bW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFwejc5Z3NcIiBpZD1cIlNlcXVlbmNlRmxvd18xcHo3
OWdzX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI1MlwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjUyXCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIyMTdcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIzNDhcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIxN1wiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjI2N1wiIHk9XCIyMDVcIi8+PC9icG1u
ZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1l
bnQ9XCJTZXF1ZW5jZUZsb3dfMHBrazhqZlwiIGlkPVwiU2VxdWVuY2VGbG93XzBwa2s4amZfZGlc
Ij48b21nZGk6d2F5cG9pbnQgeD1cIjQ0OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwi
MjE3XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTA5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwi
IHk9XCIyMTdcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1MDlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjIxN1wiLz48b21nZGk6d2F5cG9pbnQgeD1cIjYxMlwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjE3XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNTI0XCIgeT1cIjIxMC41XCIvPjwvYnBtbmRpOkJQ
TU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBN
TkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAidmVyc2lvbiI6IDd9LCAiYWN0aW9ucyI6IFtdfV0s
ICJyb2xlcyI6IFtdLCAid29ya3NwYWNlcyI6IFtdLCAiZnVuY3Rpb25zIjogW3siaWQiOiA1MCwg
Im5hbWUiOiAicmRhcF9xdWVyeSIsICJkaXNwbGF5X25hbWUiOiAiUkRBUDogUXVlcnkiLCAiZGVz
Y3JpcHRpb24iOiB7ImZvcm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAiVXNpbmcgaXB3aG9pcyBs
aWJyYXJ5IHRvIG1ha2UgZ2VuZXJhbCBxdWVyaWVzIGluIFJEQVAgZm9ybWF0In0sICJkZXN0aW5h
dGlvbl9oYW5kbGUiOiAiZm5fd2hvaXNfcmRhcCIsICJleHBvcnRfa2V5IjogInJkYXBfcXVlcnki
LCAidXVpZCI6ICIxOWI1YmIzNy05YTRlLTQ5ZWMtODAyYS1mYmMzMDA2ZGUxMTciLCAidmVyc2lv
biI6IDYsICJjcmVhdG9yIjogeyJpZCI6IDEsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJzZWFu
Lm9nb3JtYW5AaWJtLmNvbSIsICJkaXNwbGF5X25hbWUiOiAiU2VhbiBPIEdvcm1hbiJ9LCAibGFz
dF9tb2RpZmllZF9ieSI6IHsiaWQiOiAxLCAidHlwZSI6ICJ1c2VyIiwgIm5hbWUiOiAic2Vhbi5v
Z29ybWFuQGlibS5jb20iLCAiZGlzcGxheV9uYW1lIjogIlNlYW4gTyBHb3JtYW4ifSwgImxhc3Rf
bW9kaWZpZWRfdGltZSI6IDE1Njg0NjM2NzgxMDcsICJ2aWV3X2l0ZW1zIjogW3sic3RlcF9sYWJl
bCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVs
ZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICI4NWIyYjJiOC1hNjhiLTQzODMtYTAw
NC1jYTA2MGZkN2M2YTYiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfSwgeyJzdGVwX2xhYmVs
IjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxk
X3R5cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogIjA0ZWRkMTlkLWQwMDgtNGFiYy1hMTli
LTczMWE5OTk3MzIwZCIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9XSwgIndvcmtmbG93cyI6
IFt7IndvcmtmbG93X2lkIjogNTEsICJuYW1lIjogIkV4YW1wbGU6IFJEQVAgcXVlcnkiLCAicHJv
Z3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9yZGFwX3F1ZXJ5IiwgIm9iamVjdF90eXBlIjogImFy
dGlmYWN0IiwgImRlc2NyaXB0aW9uIjogbnVsbCwgInV1aWQiOiBudWxsLCAiYWN0aW9ucyI6IFtd
fV19LCB7ImlkIjogNTEsICJuYW1lIjogIndob2lzX3F1ZXJ5IiwgImRpc3BsYXlfbmFtZSI6ICJX
SE9JUzogcXVlcnkiLCAiZGVzY3JpcHRpb24iOiB7ImZvcm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQi
OiAiVXNpbmcgaXB3aG9pcyBsaWJyYXJ5IHRvIG1ha2UgZ2VuZXJhbCBxdWVyaWVzIGluIHdob2lz
IGZvcm1hdCJ9LCAiZGVzdGluYXRpb25faGFuZGxlIjogImZuX3dob2lzX3JkYXAiLCAiZXhwb3J0
X2tleSI6ICJ3aG9pc19xdWVyeSIsICJ1dWlkIjogImEwNDBkM2NkLWQxNTEtNGMxNC1hNjIyLTI2
MjYyYWI2YTliOSIsICJ2ZXJzaW9uIjogNiwgImNyZWF0b3IiOiB7ImlkIjogMSwgInR5cGUiOiAi
dXNlciIsICJuYW1lIjogInNlYW4ub2dvcm1hbkBpYm0uY29tIiwgImRpc3BsYXlfbmFtZSI6ICJT
ZWFuIE8gR29ybWFuIn0sICJsYXN0X21vZGlmaWVkX2J5IjogeyJpZCI6IDEsICJ0eXBlIjogInVz
ZXIiLCAibmFtZSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJkaXNwbGF5X25hbWUiOiAiU2Vh
biBPIEdvcm1hbiJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU2ODQ2MzY3ODEwNywgInZpZXdf
aXRlbXMiOiBbeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6
ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogIjk0
YWJiZGRiLTZlNDQtNDA0My1hZGRmLWI2ODA1NzYzNDhmMSIsICJzaG93X2xpbmtfaGVhZGVyIjog
ZmFsc2V9XSwgIndvcmtmbG93cyI6IFt7IndvcmtmbG93X2lkIjogNTYsICJuYW1lIjogIkV4YW1w
bGU6IFdob2lzIHF1ZXJ5IiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfd2hvaXNfcXVl
cnkiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiZGVzY3JpcHRpb24iOiBudWxsLCAidXVp
ZCI6IG51bGwsICJhY3Rpb25zIjogW119XX1dfQ==
"""
    )