# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_whois_rdap"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_whois_rdap package"""
    reload_params = {"package": u"fn_whois_rdap",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"rdap_depth", u"rdap_query", u"whois_query"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_whois_rdap"], 
                    "functions": [u"rdap_query", u"whois_query"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_rdap_query", u"example_whois_query"], 
                    "actions": [u"Run rdap query on Artifact", u"Run whois query against Artifact"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     rdap_depth
    #     rdap_query
    #     whois_query
    #   Message Destinations:
    #     fn_whois_rdap
    #   Functions:
    #     rdap_query
    #     whois_query
    #   Workflows:
    #     example_rdap_query
    #     example_whois_query
    #   Rules:
    #     Run rdap query on Artifact
    #     Run whois query against Artifact


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMiwgIm1pbm9yIjogMCwgImJ1aWxkX251bWJl
ciI6IDQ1MDIsICJ2ZXJzaW9uIjogIjMyLjAuNDUwMiJ9LCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9u
IjogMiwgImlkIjogNjksICJleHBvcnRfZGF0ZSI6IDE1Njg0Njg5NzIwNjEsICJmaWVsZHMiOiBb
eyJpZCI6IDU5LCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAidGV4dCI6ICJTaW11bGF0aW9uIiwg
InByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMCwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5j
aWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQg
aXMgcmVhZC1vbmx5LiIsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjog
ImMzZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIsICJvcGVyYXRpb25zIjogW10s
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogdHJ1ZSwg
ImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImlu
Y2lkZW50L2luY190cmFpbmluZyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxz
ZX0sIHsiaWQiOiAzMjQsICJuYW1lIjogInJkYXBfZGVwdGgiLCAidGV4dCI6ICJyZGFwX2RlcHRo
IiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjogIjEiLCAicGxhY2Vo
b2xkZXIiOiAiMSIsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJyZXF1aXJlZCI6ICJhbHdheXMi
LCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9j
aG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFs
IjogZmFsc2UsICJ1dWlkIjogIjg1YjJiMmI4LWE2OGItNDM4My1hMDA0LWNhMDYwZmQ3YzZhNiIs
ICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAi
cmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3JkYXBfZGVwdGgiLCAidGVtcGxhdGVzIjogW10s
ICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMzIzLCAibmFtZSI6ICJyZGFwX3F1ZXJ5Iiwg
InRleHQiOiAicmRhcF9xdWVyeSIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDExLCAidG9v
bHRpcCI6ICJJUCBvciBkb21haW4gbmFtZSIsICJwbGFjZWhvbGRlciI6ICJpYm0uY29tIiwgImlu
cHV0X3R5cGUiOiAidGV4dCIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjog
IjA0ZWRkMTlkLWQwMDgtNGFiYy1hMTliLTczMWE5OTk3MzIwZCIsICJvcGVyYXRpb25zIjogW10s
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2Us
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJf
X2Z1bmN0aW9uL3JkYXBfcXVlcnkiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFs
c2V9LCB7ImlkIjogMzIyLCAibmFtZSI6ICJ3aG9pc19xdWVyeSIsICJ0ZXh0IjogIndob2lzX3F1
ZXJ5IiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjogIklQLCBVUkwg
b3IgRE5TIHZhbHVlIiwgInBsYWNlaG9sZGVyIjogImlibS5jb20iLCAiaW5wdXRfdHlwZSI6ICJ0
ZXh0IiwgInJlcXVpcmVkIjogImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
Y2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5r
X29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiOTRhYmJkZGItNmU0
NC00MDQzLWFkZGYtYjY4MDU3NjM0OGYxIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9w
ZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUi
OiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vd2hv
aXNfcXVlcnkiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9XSwgImluY2lk
ZW50X3R5cGVzIjogW3sidXBkYXRlX2RhdGUiOiAxNTY5MzE2MDYyOTk3LCAiY3JlYXRlX2RhdGUi
OiAxNTY5MzE2MDYyOTk3LCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQw
NDRhYTAiLCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwp
IiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgIm5h
bWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImVuYWJsZWQiOiBmYWxz
ZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVsbCwgImhpZGRlbiI6IGZhbHNlLCAi
aWQiOiAwfV0sICJwaGFzZXMiOiBbXSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAib3ZlcnJpZGVz
IjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7Im5hbWUiOiAiZm5fd2hvaXNfcmRhcCIs
ICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl93aG9pc19yZGFwIiwgImRlc3RpbmF0aW9uX3R5cGUi
OiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJ1c2VycyI6IFsic2Vhbi5vZ29ybWFuQGlibS5jb20i
XSwgInV1aWQiOiAiYTEzZmYyOGUtNWNkZS00YTUyLWEzNzItOGY5NDg0ODNkMzJlIiwgImV4cG9y
dF9rZXkiOiAiZm5fd2hvaXNfcmRhcCJ9XSwgImFjdGlvbnMiOiBbeyJpZCI6IDgwLCAibmFtZSI6
ICJSdW4gcmRhcCBxdWVyeSBvbiBBcnRpZmFjdCIsICJ0eXBlIjogMSwgIm9iamVjdF90eXBlIjog
ImFydGlmYWN0IiwgImNvbmRpdGlvbnMiOiBbeyJtZXRob2QiOiAiaW4iLCAiZmllbGRfbmFtZSI6
ICJhcnRpZmFjdC50eXBlIiwgInZhbHVlIjogWyJJUCBBZGRyZXNzIiwgIkROUyBOYW1lIiwgIlVS
TCJdLCAidHlwZSI6IG51bGwsICJldmFsdWF0aW9uX2lkIjogbnVsbH1dLCAiYXV0b21hdGlvbnMi
OiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10sICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVf
cmRhcF9xdWVyeSJdLCAidmlld19pdGVtcyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAs
ICJ1dWlkIjogIjUzYzY5ZmRkLWE1NzUtNGJhNy04NmYxLTZiZDI5OTcwZWIwOCIsICJleHBvcnRf
a2V5IjogIlJ1biByZGFwIHF1ZXJ5IG9uIEFydGlmYWN0IiwgImxvZ2ljX3R5cGUiOiAiYWxsIn0s
IHsiaWQiOiA4MSwgIm5hbWUiOiAiUnVuIHdob2lzIHF1ZXJ5IGFnYWluc3QgQXJ0aWZhY3QiLCAi
dHlwZSI6IDEsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJjb25kaXRpb25zIjogW3sibWV0
aG9kIjogImluIiwgImZpZWxkX25hbWUiOiAiYXJ0aWZhY3QudHlwZSIsICJ2YWx1ZSI6IFsiSVAg
QWRkcmVzcyIsICJETlMgTmFtZSIsICJVUkwiXSwgInR5cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9p
ZCI6IG51bGx9XSwgImF1dG9tYXRpb25zIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtd
LCAid29ya2Zsb3dzIjogWyJleGFtcGxlX3dob2lzX3F1ZXJ5Il0sICJ2aWV3X2l0ZW1zIjogW10s
ICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAiNThjYmM5OGMtNjZhYi00N2RjLTk1
YTktNzRkZDlkZjM0MjdjIiwgImV4cG9ydF9rZXkiOiAiUnVuIHdob2lzIHF1ZXJ5IGFnYWluc3Qg
QXJ0aWZhY3QiLCAibG9naWNfdHlwZSI6ICJhbGwifV0sICJsYXlvdXRzIjogW10sICJub3RpZmlj
YXRpb25zIjogbnVsbCwgInRpbWVmcmFtZXMiOiBudWxsLCAibG9jYWxlIjogbnVsbCwgImluZHVz
dHJpZXMiOiBudWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJnZW9zIjogbnVsbCwgInRhc2tfb3Jk
ZXIiOiBbXSwgImFjdGlvbl9vcmRlciI6IFtdLCAidHlwZXMiOiBbXSwgInNjcmlwdHMiOiBbXSwg
ImluY2lkZW50X2FydGlmYWN0X3R5cGVzIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ3b3JrZmxvd19p
ZCI6IDU2LCAibmFtZSI6ICJFeGFtcGxlOiBXaG9pcyBxdWVyeSIsICJwcm9ncmFtbWF0aWNfbmFt
ZSI6ICJleGFtcGxlX3dob2lzX3F1ZXJ5IiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImRl
c2NyaXB0aW9uIjogIklQLCBVUkwgb3IgRE5TIGFydGlmYWN0IHJlZ2lzdHJ5IGluZm9ybWF0aW9u
IiwgImNyZWF0b3JfaWQiOiAic2Vhbi5vZ29ybWFuQGlibS5jb20iLCAibGFzdF9tb2RpZmllZF9i
eSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTY4NDY3
ODI0NjkwLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX3dob2lzX3F1ZXJ5IiwgInV1aWQiOiAiZDY0
ZGYwYjMtMmEyOC00NTRhLTg3NTItYjFiMWE0YmRlNjJiIiwgImNvbnRlbnQiOiB7IndvcmtmbG93
X2lkIjogImV4YW1wbGVfd2hvaXNfcXVlcnkiLCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBc
IiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21n
Lm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3
Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3
Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5v
bWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVz
aWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEv
WE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEt
aW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3Rc
Ij48cHJvY2VzcyBpZD1cImV4YW1wbGVfd2hvaXNfcXVlcnlcIiBpc0V4ZWN1dGFibGU9XCJ0cnVl
XCIgbmFtZT1cIkV4YW1wbGU6IFdob2lzIHF1ZXJ5XCI+PGRvY3VtZW50YXRpb24+SVAsIFVSTCBv
ciBETlMgYXJ0aWZhY3QgcmVnaXN0cnkgaW5mb3JtYXRpb248L2RvY3VtZW50YXRpb24+PHN0YXJ0
RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzF0
dHkwdG48L291dGdvaW5nPjwvc3RhcnRFdmVudD48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wZjZ1
dWw0XCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18xZXY2bThtPC9pbmNvbWluZz48L2VuZEV2ZW50
PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMXR0eTB0blwiIHNvdXJjZVJlZj1cIlN0
YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzE3NWh0N3lcIi8+PHNl
cnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMTc1aHQ3eVwiIG5hbWU9XCJXSE9JUzogcXVlcnlc
IiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGll
bnQ6ZnVuY3Rpb24gdXVpZD1cImEwNDBkM2NkLWQxNTEtNGMxNC1hNjIyLTI2MjYyYWI2YTliOVwi
PntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwidHJ5OlxcbiAgZGVz
ID0gYXJ0aWZhY3QuZGVzY3JpcHRpb24uY29udGVudFxcbmV4Y2VwdCBFeGNlcHRpb246XFxuICBk
ZXMgPSBOb25lXFxuZHVtbXkgPXt9XFxuZHVtbXkgPSByZXN1bHRzW1xcXCJjb250ZW50XFxcIl1c
XG5cXG5pZiBkZXMgaXMgTm9uZTpcXG4gIG5vdGUgPXVcXFwiXFxcIlxcXCImbHQ7ZGl2Jmd0OyZs
dDtwJmd0O1dIT0lTIHRocmVhdCBpbnRlbGxpZ2VuY2U6Jmx0Oy9wJmd0OyZsdDsvZGl2Jmd0OyBc
XFxcblxcXFxuIHt9IFxcXFxuXFxcXG5cXFwiXFxcIlxcXCIuZm9ybWF0KGR1bW15KVxcbiAgYXJ0
aWZhY3QuZGVzY3JpcHRpb24gPSBoZWxwZXIuY3JlYXRlUmljaFRleHQobm90ZSlcXG5lbHNlOlxc
biAgbm90ZSA9IGRlcyArIHVcXFwiXFxcIlxcXCImbHQ7ZGl2Jmd0OyZsdDtwJmd0O1dIT0lTIHRo
cmVhdCBpbnRlbGxpZ2VuY2U6Jmx0Oy9wJmd0OyZsdDsvZGl2Jmd0OyBcXFxcblxcXFxuIHt9IFxc
XFxuXFxcXG5cXFwiXFxcIlxcXCIuZm9ybWF0KGR1bW15KVxcbiAgYXJ0aWZhY3QuZGVzY3JpcHRp
b24gPSBoZWxwZXIuY3JlYXRlUmljaFRleHQobm90ZSlcIixcInByZV9wcm9jZXNzaW5nX3Njcmlw
dFwiOlwiaW5wdXRzLndob2lzX3F1ZXJ5ID0gYXJ0aWZhY3QudmFsdWVcIixcInJlc3VsdF9uYW1l
XCI6XCJcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWlu
Zz5TZXF1ZW5jZUZsb3dfMXR0eTB0bjwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18x
ZXY2bThtPC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5j
ZUZsb3dfMWV2Nm04bVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzE3NWh0N3lcIiB0YXJnZXRS
ZWY9XCJFbmRFdmVudF8wZjZ1dWw0XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0
aW9uXzFreHhpeXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0
QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNl
UmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4
eGl5dFwiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFc
Ij48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBs
YW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4
bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIz
NlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNc
Ii8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFw
ZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0
aW9uXzFreHhpeXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBc
IiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdl
IGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNl
dWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2lu
dFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBi
cG1uRWxlbWVudD1cIkVuZEV2ZW50XzBmNnV1bDRcIiBpZD1cIkVuZEV2ZW50XzBmNnV1bDRfZGlc
Ij48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI1MjJcIiB5PVwi
MTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0
aD1cIjBcIiB4PVwiNTQwXCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6
QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMXR0
eTB0blwiIGlkPVwiU2VxdWVuY2VGbG93XzF0dHkwdG5fZGlcIj48b21nZGk6d2F5cG9pbnQgeD1c
IjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2lu
dCB4PVwiMzA4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpC
UE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyNTNc
IiB5PVwiMTg0LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1u
ZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMTc1aHQ3eVwiIGlkPVwiU2Vy
dmljZVRhc2tfMTc1aHQ3eV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1c
IjEwMFwiIHg9XCIzMDhcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQ
TU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFldjZtOG1cIiBpZD1cIlNlcXVlbmNl
Rmxvd18xZXY2bThtX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0MDhcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjUyMlwiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNDY1XCIgeT1cIjE4NFwiLz48L2JwbW5k
aTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRp
OkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgInZlcnNpb24iOiA1fSwgImFjdGlvbnMiOiBb
XX0sIHsid29ya2Zsb3dfaWQiOiA1MSwgIm5hbWUiOiAiRXhhbXBsZTogUkRBUCBxdWVyeSIsICJw
cm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3JkYXBfcXVlcnkiLCAib2JqZWN0X3R5cGUiOiAi
YXJ0aWZhY3QiLCAiZGVzY3JpcHRpb24iOiAiVGhpcyB3b3JrZmxvdyBnZW5lcmF0ZSBSREFQIGZv
cm1hdHRlZCByZXN1bHRzIGZyb20gYW4gSVAgb3IgZG9tYWluIG5hbWUgYXJ0aWZhY3QiLCAiY3Jl
YXRvcl9pZCI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJsYXN0X21vZGlmaWVkX2J5IjogInNl
YW4ub2dvcm1hbkBpYm0uY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1Njg0Njc4MjQ4Mjks
ICJleHBvcnRfa2V5IjogImV4YW1wbGVfcmRhcF9xdWVyeSIsICJ1dWlkIjogImNjMTk5M2Y2LTFj
YzQtNDg5YS1hYTljLTM0MjFjZWEzNDJjNiIsICJjb250ZW50IjogeyJ3b3JrZmxvd19pZCI6ICJl
eGFtcGxlX3JkYXBfcXVlcnkiLCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGlu
Zz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVj
L0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcv
c3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcv
c3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3Nw
ZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50Lmli
bS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1h
XCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2Vc
IiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2Vz
cyBpZD1cImV4YW1wbGVfcmRhcF9xdWVyeVwiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwi
RXhhbXBsZTogUkRBUCBxdWVyeVwiPjxkb2N1bWVudGF0aW9uPlRoaXMgd29ya2Zsb3cgZ2VuZXJh
dGUgUkRBUCBmb3JtYXR0ZWQgcmVzdWx0cyBmcm9tIGFuIElQIG9yIGRvbWFpbiBuYW1lIGFydGlm
YWN0PC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+
PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xcHo3OWdzPC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNl
cnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMDZjZzRkdFwiIG5hbWU9XCJSREFQOiBRdWVyeVwi
IHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVu
dDpmdW5jdGlvbiB1dWlkPVwiMTliNWJiMzctOWE0ZS00OWVjLTgwMmEtZmJjMzAwNmRlMTE3XCI+
e1wiaW5wdXRzXCI6e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJ0cnk6XFxuICAgIGRl
cyA9IGFydGlmYWN0LmRlc2NyaXB0aW9uLmNvbnRlbnRcXG5leGNlcHQgRXhjZXB0aW9uOlxcbiAg
ZGVzID0gTm9uZVxcbmR1bW15ID17fVxcbmR1bW15ID0gcmVzdWx0c1tcXFwiY29udGVudFxcXCJd
XFxuXFxuaWYgZGVzIGlzIE5vbmU6XFxuICBub3RlID11XFxcIlxcXCJcXFwiJmx0O2RpdiZndDsm
bHQ7cCZndDtSREFQIHRocmVhdCBpbnRlbGxpZ2VuY2U6XFxcXG5cXFxcbiAmbHQ7YnImZ3Q7IFBv
c3NpYmxlIGRpY3RvbmFyeSBrZXlzOiAmbHQ7YnImZ3Q7IFxcXFxuIHswfSBcXFxcblxcXFxuICZs
dDticiZndDsgQXNzb2NpYXRlZCBvYmplY3RzICZsdDticiZndDsgXFxcXG4gezF9IFxcXFxuXFxc
XG4gJmx0O2JyJmd0OyBETlMgem9uZTogJmx0O2JyJmd0OyBcXFxcbiB7Mn0mbHQ7ZGl2Jmd0OyZs
dDtwJmd0OyBcXFxcblxcXFxuXFxcIlxcXCJcXFwiLmZvcm1hdChkdW1teS5rZXlzKCksIGR1bW15
LmdldCh1J29iamVjdHMnKSxkdW1teS5nZXQoJ2Ruc196b25lJykpXFxuICBhcnRpZmFjdC5kZXNj
cmlwdGlvbiA9IGhlbHBlci5jcmVhdGVSaWNoVGV4dChub3RlKVxcbmVsc2U6XFxuICBub3RlID0g
ZGVzICsgdVxcXCJcXFwiXFxcIiZsdDtkaXYmZ3Q7Jmx0O3AmZ3Q7UkRBUCB0aHJlYXQgaW50ZWxs
aWdlbmNlOlxcXFxuXFxcXG4gJmx0O2JyJmd0OyBQb3NzaWJsZSBkaWN0b25hcnkga2V5czogJmx0
O2JyJmd0OyBcXFxcbiB7MH0gXFxcXG5cXFxcbiAmbHQ7YnImZ3Q7IEFzc29jaWF0ZWQgb2JqZWN0
cyAmbHQ7YnImZ3Q7IFxcXFxuIHsxfSBcXFxcblxcXFxuICZsdDticiZndDsgRE5TIHpvbmU6ICZs
dDticiZndDsgXFxcXG4gezJ9Jmx0O2RpdiZndDsmbHQ7cCZndDtcXFxcblxcXFxuXFxcIlxcXCJc
XFwiLmZvcm1hdChkdW1teS5rZXlzKCksIGR1bW15LmdldCh1J29iamVjdHMnKSxkdW1teS5nZXQo
J2Ruc196b25lJykpXFxuICBhcnRpZmFjdC5kZXNjcmlwdGlvbiA9IGhlbHBlci5jcmVhdGVSaWNo
VGV4dChub3RlKVxcblxcbiNpbmNpZGVudC5hZGROb3RlKGhlbHBlci5jcmVhdGVSaWNoVGV4dChu
b3RlVGV4dCkpXCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5yZGFwX3F1ZXJ5
ID0gYXJ0aWZhY3QudmFsdWVcXG5pbnB1dHMucmRhcF9kZXB0aCA9IDBcIixcInJlc3VsdF9uYW1l
XCI6XCJcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWlu
Zz5TZXF1ZW5jZUZsb3dfMXB6NzlnczwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18w
cGtrOGpmPC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzBr
ZTN1cWhcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBwa2s4amY8L2luY29taW5nPjwvZW5kRXZl
bnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xcHo3OWdzXCIgc291cmNlUmVmPVwi
U3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMDZjZzRkdFwiLz48
c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBwa2s4amZcIiBzb3VyY2VSZWY9XCJTZXJ2
aWNlVGFza18wNmNnNGR0XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMGtlM3VxaFwiLz48dGV4dEFu
bm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3
b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNz
b2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdl
dFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRp
YWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9
XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVs
ZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwi
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIx
ODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9
XCI5MFwiIHg9XCIxNTdcIiB5PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpC
UE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8x
a3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpC
UE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVq
NDhcIiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2
OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4
PVwiMTUzXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBN
TkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wNmNnNGR0
XCIgaWQ9XCJTZXJ2aWNlVGFza18wNmNnNGR0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4
MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjM0OFwiIHk9XCIxNzdcIi8+PC9icG1uZGk6QlBNTlNoYXBl
PjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMGtlM3VxaFwiIGlkPVwi
RW5kRXZlbnRfMGtlM3VxaF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1c
IjM2XCIgeD1cIjYxMlwiIHk9XCIxOTlcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI2MzBcIiB5PVwiMjM4XCIvPjwvYnBtbmRp
OkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVu
dD1cIlNlcXVlbmNlRmxvd18xcHo3OWdzXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMXB6Nzlnc19kaVwi
PjxvbWdkaTp3YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIy
MDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIyNTJcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI1MlwiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjE3XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzQ4XCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIyMTdcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyNjdcIiB5PVwiMjA1XCIvPjwvYnBtbmRpOkJQTU5M
YWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2Vx
dWVuY2VGbG93XzBwa2s4amZcIiBpZD1cIlNlcXVlbmNlRmxvd18wcGtrOGpmX2RpXCI+PG9tZ2Rp
OndheXBvaW50IHg9XCI0NDhcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIxN1wiLz48
b21nZGk6d2F5cG9pbnQgeD1cIjUwOVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjE3
XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTA5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIyMTdcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2MTJcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIxN1wiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEz
XCIgd2lkdGg9XCIwXCIgeD1cIjUyNFwiIHk9XCIyMTAuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+
PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFt
PjwvZGVmaW5pdGlvbnM+IiwgInZlcnNpb24iOiA4fSwgImFjdGlvbnMiOiBbXX1dLCAicm9sZXMi
OiBbXSwgIndvcmtzcGFjZXMiOiBbXSwgImZ1bmN0aW9ucyI6IFt7ImlkIjogNTAsICJuYW1lIjog
InJkYXBfcXVlcnkiLCAiZGlzcGxheV9uYW1lIjogIlJEQVA6IFF1ZXJ5IiwgImRlc2NyaXB0aW9u
IjogeyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50IjogIlVzaW5nIGlwd2hvaXMgbGlicmFyeSB0
byBtYWtlIGdlbmVyYWwgcXVlcmllcyBpbiBSREFQIGZvcm1hdCJ9LCAiZGVzdGluYXRpb25faGFu
ZGxlIjogImZuX3dob2lzX3JkYXAiLCAiZXhwb3J0X2tleSI6ICJyZGFwX3F1ZXJ5IiwgInV1aWQi
OiAiMTliNWJiMzctOWE0ZS00OWVjLTgwMmEtZmJjMzAwNmRlMTE3IiwgInZlcnNpb24iOiA3LCAi
Y3JlYXRvciI6IHsiaWQiOiAxLCAidHlwZSI6ICJ1c2VyIiwgIm5hbWUiOiAic2Vhbi5vZ29ybWFu
QGlibS5jb20iLCAiZGlzcGxheV9uYW1lIjogIlNlYW4gTyBHb3JtYW4ifSwgImxhc3RfbW9kaWZp
ZWRfYnkiOiB7ImlkIjogMSwgInR5cGUiOiAidXNlciIsICJuYW1lIjogInNlYW4ub2dvcm1hbkBp
Ym0uY29tIiwgImRpc3BsYXlfbmFtZSI6ICJTZWFuIE8gR29ybWFuIn0sICJsYXN0X21vZGlmaWVk
X3RpbWUiOiAxNTY4NDY3ODI0MzkzLCAidmlld19pdGVtcyI6IFt7InN0ZXBfbGFiZWwiOiBudWxs
LCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6
ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiODViMmIyYjgtYTY4Yi00MzgzLWEwMDQtY2EwNjBm
ZDdjNmE2IiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9sYWJlbCI6IG51bGws
ICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjog
Il9fZnVuY3Rpb24iLCAiY29udGVudCI6ICIwNGVkZDE5ZC1kMDA4LTRhYmMtYTE5Yi03MzFhOTk5
NzMyMGQiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfV0sICJ3b3JrZmxvd3MiOiBbeyJ3b3Jr
Zmxvd19pZCI6IDUxLCAibmFtZSI6ICJFeGFtcGxlOiBSREFQIHF1ZXJ5IiwgInByb2dyYW1tYXRp
Y19uYW1lIjogImV4YW1wbGVfcmRhcF9xdWVyeSIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIs
ICJkZXNjcmlwdGlvbiI6IG51bGwsICJ1dWlkIjogbnVsbCwgImFjdGlvbnMiOiBbXX1dfSwgeyJp
ZCI6IDUxLCAibmFtZSI6ICJ3aG9pc19xdWVyeSIsICJkaXNwbGF5X25hbWUiOiAiV0hPSVM6IHF1
ZXJ5IiwgImRlc2NyaXB0aW9uIjogeyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50IjogIlVzaW5n
IGlwd2hvaXMgbGlicmFyeSB0byBtYWtlIGdlbmVyYWwgcXVlcmllcyBpbiB3aG9pcyBmb3JtYXQi
fSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJmbl93aG9pc19yZGFwIiwgImV4cG9ydF9rZXkiOiAi
d2hvaXNfcXVlcnkiLCAidXVpZCI6ICJhMDQwZDNjZC1kMTUxLTRjMTQtYTYyMi0yNjI2MmFiNmE5
YjkiLCAidmVyc2lvbiI6IDcsICJjcmVhdG9yIjogeyJpZCI6IDEsICJ0eXBlIjogInVzZXIiLCAi
bmFtZSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJkaXNwbGF5X25hbWUiOiAiU2VhbiBPIEdv
cm1hbiJ9LCAibGFzdF9tb2RpZmllZF9ieSI6IHsiaWQiOiAxLCAidHlwZSI6ICJ1c2VyIiwgIm5h
bWUiOiAic2Vhbi5vZ29ybWFuQGlibS5jb20iLCAiZGlzcGxheV9uYW1lIjogIlNlYW4gTyBHb3Jt
YW4ifSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1Njg0Njc4MjQzOTMsICJ2aWV3X2l0ZW1zIjog
W3sic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRf
dXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICI5NGFiYmRkYi02
ZTQ0LTQwNDMtYWRkZi1iNjgwNTc2MzQ4ZjEiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfV0s
ICJ3b3JrZmxvd3MiOiBbeyJ3b3JrZmxvd19pZCI6IDU2LCAibmFtZSI6ICJFeGFtcGxlOiBXaG9p
cyBxdWVyeSIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3dob2lzX3F1ZXJ5IiwgIm9i
amVjdF90eXBlIjogImFydGlmYWN0IiwgImRlc2NyaXB0aW9uIjogbnVsbCwgInV1aWQiOiBudWxs
LCAiYWN0aW9ucyI6IFtdfV19XX0=
"""
    )