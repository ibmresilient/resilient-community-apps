# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_whois_rdap"""

try:
    from resilient import ImportDefinition
except ImportError:
    # Support Apps running on resilient-circuits < v35.0.195
    from resilient_circuits.util import ImportDefinition


def codegen_reload_data():
    """
    Parameters required reload codegen for the fn_whois_rdap package
    """
    return {
        "package": u"fn_whois_rdap",
        "message_destinations": [u"fn_whois_rdap"],
        "functions": [u"whois_query", u"rdap_query"],
        "workflows": [u"example_rdap_query", u"example_whois_query"],
        "actions": [u"Run whois query against Artifact", u"Run rdap query against Artifact"],
        "incident_fields": [],
        "incident_artifact_types": [],
        "datatables": [],
        "automatic_tasks": [],
        "scripts": []
    }


def customization_data(client=None):
    """
    Returns a Generator of ImportDefinitions (Customizations).
    Install them using `resilient-circuits customize`

    Contents:
    - Message Destinations:
        - fn_whois_rdap
    - Functions:
        - whois_query
        - rdap_query
    - Workflows:
        - example_rdap_query
        - example_whois_query
    - Rules:
        - Run whois query against Artifact
        - Run rdap query against Artifact
    """

    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFt7ImV2YWx1YXRpb25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFj
dC50eXBlIiwgIm1ldGhvZCI6ICJpbiIsICJ0eXBlIjogbnVsbCwgInZhbHVlIjogWyJJUCBBZGRy
ZXNzIiwgIkROUyBOYW1lIiwgIlVSTCJdfV0sICJlbmFibGVkIjogdHJ1ZSwgImV4cG9ydF9rZXki
OiAiUnVuIHJkYXAgcXVlcnkgYWdhaW5zdCBBcnRpZmFjdCIsICJpZCI6IDE1OSwgImxvZ2ljX3R5
cGUiOiAiYWxsIiwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10sICJuYW1lIjogIlJ1biByZGFw
IHF1ZXJ5IGFnYWluc3QgQXJ0aWZhY3QiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAidGFn
cyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ0eXBlIjogMSwgInV1aWQiOiAiNTNj
NjlmZGQtYTU3NS00YmE3LTg2ZjEtNmJkMjk5NzBlYjA4IiwgInZpZXdfaXRlbXMiOiBbXSwgIndv
cmtmbG93cyI6IFsiZXhhbXBsZV9yZGFwX3F1ZXJ5Il19LCB7ImF1dG9tYXRpb25zIjogW10sICJj
b25kaXRpb25zIjogW3siZXZhbHVhdGlvbl9pZCI6IG51bGwsICJmaWVsZF9uYW1lIjogImFydGlm
YWN0LnR5cGUiLCAibWV0aG9kIjogImluIiwgInR5cGUiOiBudWxsLCAidmFsdWUiOiBbIklQIEFk
ZHJlc3MiLCAiRE5TIE5hbWUiLCAiVVJMIl19XSwgImVuYWJsZWQiOiB0cnVlLCAiZXhwb3J0X2tl
eSI6ICJSdW4gd2hvaXMgcXVlcnkgYWdhaW5zdCBBcnRpZmFjdCIsICJpZCI6IDE2MCwgImxvZ2lj
X3R5cGUiOiAiYWxsIiwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10sICJuYW1lIjogIlJ1biB3
aG9pcyBxdWVyeSBhZ2FpbnN0IEFydGlmYWN0IiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0Iiwg
InRhZ3MiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidHlwZSI6IDEsICJ1dWlkIjog
IjU4Y2JjOThjLTY2YWItNDdkYy05NWE5LTc0ZGQ5ZGYzNDI3YyIsICJ2aWV3X2l0ZW1zIjogW10s
ICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfd2hvaXNfcXVlcnkiXX1dLCAiYXV0b21hdGljX3Rhc2tz
IjogW10sICJleHBvcnRfZGF0ZSI6IDE1OTc3NTE1MzI0NTEsICJleHBvcnRfZm9ybWF0X3ZlcnNp
b24iOiAyLCAiZmllbGRzIjogW3siYWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtf
b3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwg
ImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXBy
ZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vcmRhcF9kZXB0aCIsICJo
aWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAxMDUwLCAiaW5wdXRfdHlwZSI6ICJudW1i
ZXIiLCAiaW50ZXJuYWwiOiBmYWxzZSwgImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAicmRh
cF9kZXB0aCIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNl
aG9sZGVyIjogIjAiLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmVxdWly
ZWQiOiAiYWx3YXlzIiwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVz
IjogW10sICJ0ZXh0IjogInJkYXBfZGVwdGgiLCAidG9vbHRpcCI6ICJDYW4gYmUgMCwgMSBvciAy
IiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiODViMmIyYjgtYTY4Yi00MzgzLWEwMDQtY2EwNjBm
ZDdjNmE2IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJi
bGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0
cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwg
ImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9yZGFwX3F1ZXJ5
IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDEwNTEsICJpbnB1dF90eXBlIjog
InRleHQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAi
cmRhcF9xdWVyeSIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBs
YWNlaG9sZGVyIjogImlibS5jb20iLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNl
LCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAi
dGVtcGxhdGVzIjogW10sICJ0ZXh0IjogInJkYXBfcXVlcnkiLCAidG9vbHRpcCI6ICJJUCwgVVJM
IG9yIEROUyBBcnRpZmFjdCIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogIjA0ZWRkMTlkLWQwMDgt
NGFiYy1hMTliLTczMWE5OTk3MzIwZCIsICJ2YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVmYXVsdF92
YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2Us
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVu
Y3Rpb24vd2hvaXNfcXVlcnkiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogMTA0
OSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNfdHJhY2tlZCI6
IGZhbHNlLCAibmFtZSI6ICJ3aG9pc19xdWVyeSIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9w
ZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogImlibS5jb20iLCAicHJlZml4IjogbnVsbCwg
InJlYWRfb25seSI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInJpY2hfdGV4dCI6IGZh
bHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIndob2lzX3F1ZXJ5Iiwg
InRvb2x0aXAiOiAiSVAsIFVSTCBvciBETlMgQXJ0aWZhY3QiLCAidHlwZV9pZCI6IDExLCAidXVp
ZCI6ICI5NGFiYmRkYi02ZTQ0LTQwNDMtYWRkZi1iNjgwNTc2MzQ4ZjEiLCAidmFsdWVzIjogW119
LCB7ImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQvaW50ZXJuYWxfY3VzdG9taXphdGlvbnNfZmllbGQi
LCAiaWQiOiAwLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogdHJ1ZSwgIm5hbWUi
OiAiaW50ZXJuYWxfY3VzdG9taXphdGlvbnNfZmllbGQiLCAicmVhZF9vbmx5IjogdHJ1ZSwgInRl
eHQiOiAiQ3VzdG9taXphdGlvbnMgRmllbGQgKGludGVybmFsKSIsICJ0eXBlX2lkIjogMCwgInV1
aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4LWFkMzktNGEwMDA0MDQ0YWExIn1dLCAiZnVuY3Rpb25z
IjogW3siY3JlYXRvciI6IHsiZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJp
ZCI6IDMsICJuYW1lIjogImFAZXhhbXBsZS5jb20iLCAidHlwZSI6ICJ1c2VyIn0sICJkZXNjcmlw
dGlvbiI6IHsiZm9ybWF0IjogInRleHQiLCAiY29udGVudCI6ICJVc2luZyBpcHdob2lzIGxpYnJh
cnkgdG8gbWFrZSBnZW5lcmFsIHF1ZXJpZXMgaW4gUkRBUCBmb3JtYXQifSwgImRlc3RpbmF0aW9u
X2hhbmRsZSI6ICJmbl93aG9pc19yZGFwIiwgImRpc3BsYXlfbmFtZSI6ICJSREFQOiBRdWVyeSIs
ICJleHBvcnRfa2V5IjogInJkYXBfcXVlcnkiLCAiaWQiOiA2NSwgImxhc3RfbW9kaWZpZWRfYnki
OiB7ImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQgU3lzYWRtaW4iLCAiaWQiOiAzLCAibmFtZSI6
ICJhQGV4YW1wbGUuY29tIiwgInR5cGUiOiAidXNlciJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjog
MTU5NzY4ODY4NjM0NywgIm5hbWUiOiAicmRhcF9xdWVyeSIsICJ0YWdzIjogW10sICJ1dWlkIjog
IjE5YjViYjM3LTlhNGUtNDllYy04MDJhLWZiYzMwMDZkZTExNyIsICJ2ZXJzaW9uIjogMSwgInZp
ZXdfaXRlbXMiOiBbeyJjb250ZW50IjogIjg1YjJiMmI4LWE2OGItNDM4My1hMDA0LWNhMDYwZmQ3
YzZhNiIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9u
IiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJl
bCI6IG51bGx9LCB7ImNvbnRlbnQiOiAiMDRlZGQxOWQtZDAwOC00YWJjLWExOWItNzMxYTk5OTcz
MjBkIiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24i
LCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVs
IjogbnVsbH1dLCAid29ya2Zsb3dzIjogW3siYWN0aW9ucyI6IFtdLCAiZGVzY3JpcHRpb24iOiBu
dWxsLCAibmFtZSI6ICJFeGFtcGxlOiBSREFQIHF1ZXJ5IiwgIm9iamVjdF90eXBlIjogImFydGlm
YWN0IiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfcmRhcF9xdWVyeSIsICJ0YWdzIjog
W10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogODR9XX0sIHsiY3JlYXRvciI6IHsiZGlz
cGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJpZCI6IDMsICJuYW1lIjogImFAZXhh
bXBsZS5jb20iLCAidHlwZSI6ICJ1c2VyIn0sICJkZXNjcmlwdGlvbiI6IHsiZm9ybWF0IjogInRl
eHQiLCAiY29udGVudCI6ICJVc2luZyBpcHdob2lzIGxpYnJhcnkgdG8gbWFrZSBnZW5lcmFsIHF1
ZXJpZXMgaW4gd2hvaXMgZm9ybWF0In0sICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAiZm5fd2hvaXNf
cmRhcCIsICJkaXNwbGF5X25hbWUiOiAiV0hPSVM6IHF1ZXJ5IiwgImV4cG9ydF9rZXkiOiAid2hv
aXNfcXVlcnkiLCAiaWQiOiA2NCwgImxhc3RfbW9kaWZpZWRfYnkiOiB7ImRpc3BsYXlfbmFtZSI6
ICJSZXNpbGllbnQgU3lzYWRtaW4iLCAiaWQiOiAzLCAibmFtZSI6ICJhQGV4YW1wbGUuY29tIiwg
InR5cGUiOiAidXNlciJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU5NzY4ODY4NjM2NiwgIm5h
bWUiOiAid2hvaXNfcXVlcnkiLCAidGFncyI6IFtdLCAidXVpZCI6ICJhMDQwZDNjZC1kMTUxLTRj
MTQtYTYyMi0yNjI2MmFiNmE5YjkiLCAidmVyc2lvbiI6IDMsICJ2aWV3X2l0ZW1zIjogW3siY29u
dGVudCI6ICI5NGFiYmRkYi02ZTQ0LTQwNDMtYWRkZi1iNjgwNTc2MzQ4ZjEiLCAiZWxlbWVudCI6
ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVs
bCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJ3b3Jr
Zmxvd3MiOiBbeyJhY3Rpb25zIjogW10sICJkZXNjcmlwdGlvbiI6IG51bGwsICJuYW1lIjogIkV4
YW1wbGU6IFdob2lzIHF1ZXJ5IiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInByb2dyYW1t
YXRpY19uYW1lIjogImV4YW1wbGVfd2hvaXNfcXVlcnkiLCAidGFncyI6IFtdLCAidXVpZCI6IG51
bGwsICJ3b3JrZmxvd19pZCI6IDgzfV19XSwgImdlb3MiOiBudWxsLCAiZ3JvdXBzIjogbnVsbCwg
ImlkIjogMzAsICJpbmJvdW5kX21haWxib3hlcyI6IG51bGwsICJpbmNpZGVudF9hcnRpZmFjdF90
eXBlcyI6IFtdLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1OTc3NTE1MzAx
MjksICJjcmVhdGVfZGF0ZSI6IDE1OTc3NTE1MzAxMjksICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAt
MTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBh
Y2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2Vz
IChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCki
LCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAi
aGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgImluZHVzdHJpZXMiOiBudWxsLCAibGF5b3V0cyI6
IFtdLCAibG9jYWxlIjogbnVsbCwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3siYXBpX2tleXMi
OiBbXSwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJleHBvcnRf
a2V5IjogImZuX3dob2lzX3JkYXAiLCAibmFtZSI6ICJmbl93aG9pc19yZGFwIiwgInByb2dyYW1t
YXRpY19uYW1lIjogImZuX3dob2lzX3JkYXAiLCAidGFncyI6IFtdLCAidXNlcnMiOiBbImFAZXhh
bXBsZS5jb20iXSwgInV1aWQiOiAiYTEzZmYyOGUtNWNkZS00YTUyLWEzNzItOGY5NDg0ODNkMzJl
In1dLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJvdmVycmlkZXMiOiBbXSwgInBoYXNlcyI6IFtd
LCAicmVndWxhdG9ycyI6IG51bGwsICJyb2xlcyI6IFtdLCAic2NyaXB0cyI6IFtdLCAic2VydmVy
X3ZlcnNpb24iOiB7ImJ1aWxkX251bWJlciI6IDMyLCAibWFqb3IiOiAzNSwgIm1pbm9yIjogMiwg
InZlcnNpb24iOiAiMzUuMi4zMiJ9LCAidGFncyI6IFtdLCAidGFza19vcmRlciI6IFtdLCAidGlt
ZWZyYW1lcyI6IG51bGwsICJ0eXBlcyI6IFtdLCAid29ya2Zsb3dzIjogW3siYWN0aW9ucyI6IFtd
LCAiY29udGVudCI6IHsidmVyc2lvbiI6IDUsICJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX3dob2lz
X3F1ZXJ5IiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwi
Pz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAw
NTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8y
MDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAx
MDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAw
NTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5c
IiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhz
aT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFt
ZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFt
cGxlX3dob2lzX3F1ZXJ5XCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBX
aG9pcyBxdWVyeVwiPjxkb2N1bWVudGF0aW9uPlRoaXMgd29ya2Zsb3cgZ2VuZXJhdGVzIFJEQVAg
Zm9ybWF0dGVkIHJlc3VsdHMgZnJvbSBhbiBJUCwgVVJMIG9yIEROUyBBcnRpZmFjdDwvZG9jdW1l
bnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5T
ZXF1ZW5jZUZsb3dfMXR0eTB0bjwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxlbmRFdmVudCBpZD1c
IkVuZEV2ZW50XzBmNnV1bDRcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFldjZtOG08L2luY29t
aW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xdHR5MHRuXCIg
c291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tf
MTc1aHQ3eVwiLz48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xNzVodDd5XCIgbmFtZT1c
IldIT0lTOiBxdWVyeVwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxl
bWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiYTA0MGQzY2QtZDE1MS00YzE0LWE2MjIt
MjYyNjJhYjZhOWI5XCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6
XCJkZWYgZm9ybWF0X2xpbmsoaXRlbSk6XFxuICBpZiBpdGVtIGFuZCAoXFxcImh0dHBzOi8vXFxc
IiBpbiBpdGVtIG9yIFxcXCJodHRwOi8vXFxcIiBpbiBpdGVtKTpcXG4gICAgcmV0dXJuIFxcXCIm
bHQ7YSB0YXJnZXQ9J2JsYW5rJyBocmVmPSd7MH0nJmd0O3swfSZsdDsvYSZndDtcXFwiLmZvcm1h
dChpdGVtKVxcbiAgZWxzZTpcXG4gICAgcmV0dXJuIGl0ZW1cXG5cXG5kZWYgZXhwYW5kX2xpc3Qo
bGlzdF92YWx1ZSwgc2VwYXJhdG9yPVxcXCImbHQ7YnImZ3Q7XFxcIik6XFxuICBpZiBub3QgaXNp
bnN0YW5jZShsaXN0X3ZhbHVlLCBsaXN0KTpcXG4gICAgcmV0dXJuIGZvcm1hdF9saW5rKGxpc3Rf
dmFsdWUpXFxuICBlbHNlOlxcbiAgICB0cnk6XFxuICAgICAgaXRlbXMgPSBbXVxcbiAgICAgIGZv
ciBpdGVtIGluIGxpc3RfdmFsdWU6XFxuICAgICAgICBpZiBpc2luc3RhbmNlKGl0ZW0sIGRpY3Qp
OlxcbiAgICAgICAgICBpdGVtcy5hcHBlbmQoXFxcIiZsdDtkaXYgc3R5bGU9J3BhZGRpbmc6MTBw
eCcmZ3Q7e30mbHQ7L2RpdiZndDtcXFwiLmZvcm1hdCh3YWxrX2RpY3QoaXRlbSkpKVxcbiAgICAg
ICAgZWxzZTpcXG4gICAgICAgICAgaXRlbXMuYXBwZW5kKGZvcm1hdF9saW5rKGl0ZW0pKVxcbiAg
ICAgIHJldHVybiBzZXBhcmF0b3Iuam9pbihpdGVtcylcXG4gICAgZXhjZXB0OlxcbiAgICAgICAg
cGFzc1xcbiAgICBcXG5kZWYgd2Fsa19kaWN0KHN1Yl9kaWN0KTpcXG4gIG5vdGVzID0gW11cXG4g
IGZvciBrZXksIHZhbHVlIGluIHN1Yl9kaWN0Lml0ZW1zKCk6XFxuICAgIGlmIGtleSBub3QgaW4g
WydkaXNwbGF5X2NvbnRlbnQnXTpcXG4gICAgICBpZiBpc2luc3RhbmNlKHZhbHVlLCBkaWN0KTpc
XG4gICAgICAgIG5vdGVzLmFwcGVuZCh1XFxcIiZsdDtiJmd0O3t9Jmx0Oy9iJmd0OzogJmx0O2Rp
diBzdHlsZT0ncGFkZGluZzoxMHB4JyZndDt7fSZsdDsvZGl2Jmd0O1xcXCIuZm9ybWF0KGtleSwg
d2Fsa19kaWN0KHZhbHVlKSkpXFxuICAgICAgZWxzZTpcXG4gICAgICAgIG5vdGVzLmFwcGVuZCh1
XFxcIiZsdDtiJmd0O3t9Jmx0Oy9iJmd0Ozoge31cXFwiLmZvcm1hdChrZXksIGV4cGFuZF9saXN0
KHZhbHVlKSkpXFxuICAgICAgXFxuICByZXR1cm4gdVxcXCImbHQ7YnImZ3Q7XFxcIi5qb2luKG5v
dGVzKVxcbiAgICBcXG5cXG5ub3RlID0gdVxcXCJXaG9pcyBmb3IgYXJ0aWZhY3Q6IHt9Jmx0O2Jy
Jmd0OyZsdDticiZndDtcXFwiLmZvcm1hdChhcnRpZmFjdC52YWx1ZSlcXG5pZiByZXN1bHRzW1xc
XCJzdWNjZXNzXFxcIl06XFxuICBub3RlID0gbm90ZSArIHdhbGtfZGljdChyZXN1bHRzW1xcXCJj
b250ZW50XFxcIl0pXFxuZWxzZTpcXG4gIG5vdGUgPSBub3RlICsgdVxcXCJUaGlzIEFydGlmYWN0
IGhhcyBubyB3aG9pcyBpbmZvcm1hdGlvblxcXCJcXG5cXG5pbmNpZGVudC5hZGROb3RlKGhlbHBl
ci5jcmVhdGVSaWNoVGV4dChub3RlKSlcXG5cIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwi
aW5wdXRzLndob2lzX3F1ZXJ5ID0gYXJ0aWZhY3QudmFsdWVcIixcInJlc3VsdF9uYW1lXCI6XCJc
In08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1
ZW5jZUZsb3dfMXR0eTB0bjwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xZXY2bTht
PC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3df
MWV2Nm04bVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzE3NWh0N3lcIiB0YXJnZXRSZWY9XCJF
bmRFdmVudF8wZjZ1dWw0XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFr
eHhpeXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3Rh
dGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwi
U3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwi
Lz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xbXppZmVpXCI+PHRleHQ+PCFb
Q0RBVEFbUmVzdWx0cyByZXR1cm5lZCBpbiBhIG5vdGVcbl1dPjwvdGV4dD48L3RleHRBbm5vdGF0
aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzA3Nm12Z2VcIiBzb3VyY2VSZWY9XCJT
ZXJ2aWNlVGFza18xNzVodDd5XCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMW16aWZlaVwi
Lz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBt
bmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFc
Ij48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlk
PVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdp
ZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9i
cG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1u
RWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFr
eHhpeXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwi
OTlcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5F
bGVtZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9k
aVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIyMjBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIkVuZEV2ZW50XzBmNnV1bDRcIiBpZD1cIkVuZEV2ZW50XzBmNnV1bDRfZGlcIj48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI1MjJcIiB5PVwiMTg4XCIv
PjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBc
IiB4PVwiNTQwXCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNo
YXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMXR0eTB0blwi
IGlkPVwiU2VxdWVuY2VGbG93XzF0dHkwdG5fZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
MzA4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFi
ZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyNTNcIiB5PVwi
MTg0LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBN
TlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMTc1aHQ3eVwiIGlkPVwiU2VydmljZVRh
c2tfMTc1aHQ3eV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwi
IHg9XCIzMDhcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdl
IGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFldjZtOG1cIiBpZD1cIlNlcXVlbmNlRmxvd18x
ZXY2bThtX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0MDhcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjUyMlwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNDY1XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1O
TGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJU
ZXh0QW5ub3RhdGlvbl8xbXppZmVpXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xbXppZmVpX2RpXCI+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMTI2XCIgeD1cIjQwOFwiIHk9XCI4
NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFz
c29jaWF0aW9uXzA3Nm12Z2VcIiBpZD1cIkFzc29jaWF0aW9uXzA3Nm12Z2VfZGlcIj48b21nZGk6
d2F5cG9pbnQgeD1cIjQwMFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTY4XCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiNDUxXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMjJc
Ii8+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFn
cmFtPjwvZGVmaW5pdGlvbnM+In0sICJjb250ZW50X3ZlcnNpb24iOiA1LCAiY3JlYXRvcl9pZCI6
ICJhQGV4YW1wbGUuY29tIiwgImRlc2NyaXB0aW9uIjogIlRoaXMgd29ya2Zsb3cgZ2VuZXJhdGVz
IFJEQVAgZm9ybWF0dGVkIHJlc3VsdHMgZnJvbSBhbiBJUCwgVVJMIG9yIEROUyBBcnRpZmFjdCIs
ICJleHBvcnRfa2V5IjogImV4YW1wbGVfd2hvaXNfcXVlcnkiLCAibGFzdF9tb2RpZmllZF9ieSI6
ICJhQGV4YW1wbGUuY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1OTc3NTE1MDUyMzAsICJu
YW1lIjogIkV4YW1wbGU6IFdob2lzIHF1ZXJ5IiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0Iiwg
InByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfd2hvaXNfcXVlcnkiLCAidGFncyI6IFtdLCAi
dXVpZCI6ICJkNjRkZjBiMy0yYTI4LTQ1NGEtODc1Mi1iMWIxYTRiZGU2MmIiLCAid29ya2Zsb3df
aWQiOiA4M30sIHsiYWN0aW9ucyI6IFtdLCAiY29udGVudCI6IHsidmVyc2lvbiI6IDI5LCAid29y
a2Zsb3dfaWQiOiAiZXhhbXBsZV9yZGFwX3F1ZXJ5IiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwi
MS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3
Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93
d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDov
L3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8y
MDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2No
ZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90
ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX3JkYXBfcXVlcnlcIiBpc0V4ZWN1dGFibGU9XCJ0
cnVlXCIgbmFtZT1cIkV4YW1wbGU6IFJEQVAgcXVlcnlcIj48ZG9jdW1lbnRhdGlvbj5UaGlzIHdv
cmtmbG93IGdlbmVyYXRlcyBSREFQIGZvcm1hdHRlZCByZXN1bHRzIGZyb20gYW4gSVAsIFVSTCBv
ciBETlMgQXJ0aWZhY3Q8L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFwejc5Z3M8L291dGdvaW5nPjwvc3Rh
cnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wNmNnNGR0XCIgbmFtZT1cIlJE
QVA6IFF1ZXJ5XCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50
cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCIxOWI1YmIzNy05YTRlLTQ5ZWMtODAyYS1mYmMz
MDA2ZGUxMTdcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImRl
ZiBmb3JtYXRfbGluayhpdGVtKTpcXG4gIGlmIGl0ZW0gYW5kIChcXFwiaHR0cHM6Ly9cXFwiIGlu
IGl0ZW0gb3IgXFxcImh0dHA6Ly9cXFwiIGluIGl0ZW0pOlxcbiAgICByZXR1cm4gXFxcIiZsdDth
IHRhcmdldD0nYmxhbmsnIGhyZWY9J3swfScmZ3Q7ezB9Jmx0Oy9hJmd0O1xcXCIuZm9ybWF0KGl0
ZW0pXFxuICBlbHNlOlxcbiAgICByZXR1cm4gaXRlbVxcblxcbmRlZiBleHBhbmRfbGlzdChsaXN0
X3ZhbHVlLCBzZXBhcmF0b3I9XFxcIiZsdDticiZndDtcXFwiKTpcXG4gIGlmIG5vdCBpc2luc3Rh
bmNlKGxpc3RfdmFsdWUsIGxpc3QpOlxcbiAgICByZXR1cm4gZm9ybWF0X2xpbmsobGlzdF92YWx1
ZSlcXG4gIGVsc2U6XFxuICAgIHRyeTpcXG4gICAgICBpdGVtcyA9IFtdXFxuICAgICAgZm9yIGl0
ZW0gaW4gbGlzdF92YWx1ZTpcXG4gICAgICAgIGlmIGlzaW5zdGFuY2UoaXRlbSwgZGljdCk6XFxu
ICAgICAgICAgIGl0ZW1zLmFwcGVuZChcXFwiJmx0O2RpdiBzdHlsZT0ncGFkZGluZzoxMHB4JyZn
dDt7fSZsdDsvZGl2Jmd0O1xcXCIuZm9ybWF0KHdhbGtfZGljdChpdGVtKSkpXFxuICAgICAgICBl
bHNlOlxcbiAgICAgICAgICBpdGVtcy5hcHBlbmQoZm9ybWF0X2xpbmsoaXRlbSkpXFxuICAgICAg
cmV0dXJuIHNlcGFyYXRvci5qb2luKGl0ZW1zKVxcbiAgICBleGNlcHQ6XFxuICAgICAgICBwYXNz
XFxuICAgIFxcbmRlZiB3YWxrX2RpY3Qoc3ViX2RpY3QpOlxcbiAgbm90ZXMgPSBbXVxcbiAgZm9y
IGtleSwgdmFsdWUgaW4gc3ViX2RpY3QuaXRlbXMoKTpcXG4gICAgaWYga2V5IG5vdCBpbiBbJ2Rp
c3BsYXlfY29udGVudCddOlxcbiAgICAgIGlmIGlzaW5zdGFuY2UodmFsdWUsIGRpY3QpOlxcbiAg
ICAgICAgbm90ZXMuYXBwZW5kKHVcXFwiJmx0O2ImZ3Q7e30mbHQ7L2ImZ3Q7OiAmbHQ7ZGl2IHN0
eWxlPSdwYWRkaW5nOjEwcHgnJmd0O3t9Jmx0Oy9kaXYmZ3Q7XFxcIi5mb3JtYXQoa2V5LCB3YWxr
X2RpY3QodmFsdWUpKSlcXG4gICAgICBlbHNlOlxcbiAgICAgICAgbm90ZXMuYXBwZW5kKHVcXFwi
Jmx0O2ImZ3Q7e30mbHQ7L2ImZ3Q7OiB7fVxcXCIuZm9ybWF0KGtleSwgZXhwYW5kX2xpc3QodmFs
dWUpKSlcXG4gICAgICBcXG4gIHJldHVybiB1XFxcIiZsdDticiZndDtcXFwiLmpvaW4obm90ZXMp
XFxuICAgIFxcblxcbm5vdGUgPSB1XFxcIlJEQVAgV2hvaXMgZm9yIGFydGlmYWN0OiB7fSZsdDti
ciZndDsmbHQ7YnImZ3Q7XFxcIi5mb3JtYXQoYXJ0aWZhY3QudmFsdWUpXFxuaWYgcmVzdWx0c1tc
XFwic3VjY2Vzc1xcXCJdOlxcbiAgbm90ZSA9IG5vdGUgKyB3YWxrX2RpY3QocmVzdWx0c1tcXFwi
Y29udGVudFxcXCJdKVxcbmVsc2U6XFxuICBub3RlID0gbm90ZSArIHVcXFwiVGhpcyBBcnRpZmFj
dCBoYXMgbm8gYW5zIGFjY2Vzc2libGUgcmVnaXN0cnkgaW5mb3JtYXRpb25cXFwiXFxuXFxuaW5j
aWRlbnQuYWRkTm90ZShoZWxwZXIuY3JlYXRlUmljaFRleHQobm90ZSkpXFxuXFxuXFxuJycnXFxu
ICBmb3Iga2V5LnZhbHVlIGluIHJlc3VsdHNbXFxcImNvbnRlbnRcXFwiXS5pdGVtcygpOlxcbiAg
ICBpZiBpc2luc3RhbmNlXFxuICAgIGlmIGtleSBub3QgaW4gWyduZXR3b3JrJ106XFxuICAgICAg
aXRlbS5hcHBlbmQoXFxcIiZsdDtiJmd0O3t9Jmx0Oy9iciZndDs6IHt9XFxcIi5mb3JtYXQoa2V5
LCBleHBhbmRfbGlzdClcXG4gIGlmIGRlcyBpcyBOb25lOlxcbiAgICBub3RlID0gbm90ZSArIHVc
XFwiXFxcIlxcXCImbHQ7ZGl2Jmd0OyZsdDtwJmd0OyZsdDticiZndDsmbHQ7YiZndDtSREFQIHRo
cmVhdCBpbnRlbGxpZ2VuY2UgYXQgezJ9OiZsdDsvYiZndDsmbHQ7L2JyJmd0O1xcXFxuXFxcXG5c
XG4gICAgJmx0O2JyJmd0OyZsdDtiJmd0O3swfSZsdDsvYiZndDsmbHQ7L2JyJmd0OyZsdDsvZGl2
Jmd0OyZsdDsvcCZndDtcXFxcblxcXFxuXFxuICAgICZsdDtkaXYmZ3Q7Jmx0O3AmZ3Q7Jmx0O2Jy
Jmd0OyZsdDtiJmd0OyBQb3NzaWJsZSBhY2Nlc3NpYmxlIGtleXM6Jmx0Oy9iJmd0OyZsdDsvYnIm
Z3Q7XFxcXG5cXFxcblxcbiAgICAmbHQ7YnImZ3Q7Jmx0O2ImZ3Q7ezF9Jmx0Oy9iJmd0OyZsdDsv
YnImZ3Q7XFxcXG5cXFxcblxcXCJcXFwiXFxcIi5mb3JtYXQocmVzdWx0c1tcXFwiY29udGVudFxc
XCJdW1xcXCJkaXNwbGF5X2NvbnRlbnRcXFwiXSxyZXN1bHRzW1xcXCJjb250ZW50XFxcIl0ua2V5
cygpLHJlc3VsdHNbXFxcIm1ldHJpY3NcXFwiXVtcXFwidGltZXN0YW1wXFxcIl0pXFxuJycnXCIs
XCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5yZGFwX3F1ZXJ5ID0gYXJ0aWZhY3Qu
dmFsdWVcXG5pbnB1dHMucmRhcF9kZXB0aCA9IDBcIixcInJlc3VsdF9uYW1lXCI6XCJcIn08L3Jl
c2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZs
b3dfMXB6NzlnczwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wcGtrOGpmPC9vdXRn
b2luZz48L3NlcnZpY2VUYXNrPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzBrZTN1cWhcIj48aW5j
b21pbmc+U2VxdWVuY2VGbG93XzBwa2s4amY8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNl
RmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xcHo3OWdzXCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8x
NTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMDZjZzRkdFwiLz48c2VxdWVuY2VGbG93
IGlkPVwiU2VxdWVuY2VGbG93XzBwa2s4amZcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wNmNn
NGR0XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMGtlM3VxaFwiLz48dGV4dEFubm90YXRpb24gaWQ9
XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJl
PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNl
dWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRB
bm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25f
MHVkNmJuclwiPjx0ZXh0PjwhW0NEQVRBW1Jlc3VsdHMgcmV0dXJuZWQgaW4gYSBOb3RlXG5dXT48
L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xMTk2
emdnXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMDZjZzRkdFwiIHRhcmdldFJlZj1cIlRleHRB
bm5vdGF0aW9uXzB1ZDZibnJcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJC
UE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRc
IiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFy
dEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjIwNVwiIHk9XCIxOTlcIi8+PGJwbW5k
aTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIy
MDBcIiB5PVwiMjM0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJw
bW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9
XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwi
IHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJw
bW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFz
c29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjIwN1wiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjI1XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY3XCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5k
aTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wNmNnNGR0XCIgaWQ9XCJTZXJ2
aWNlVGFza18wNmNnNGR0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwi
MTAwXCIgeD1cIjM0OFwiIHk9XCIxNzdcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBN
TlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMGtlM3VxaFwiIGlkPVwiRW5kRXZlbnRfMGtl
M3VxaF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjU1
NFwiIHk9XCIxOTlcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIx
M1wiIHdpZHRoPVwiOTBcIiB4PVwiNTI3XCIgeT1cIjIzOFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+
PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5j
ZUZsb3dfMXB6Nzlnc1wiIGlkPVwiU2VxdWVuY2VGbG93XzFwejc5Z3NfZGlcIj48b21nZGk6d2F5
cG9pbnQgeD1cIjI0MVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjE3XCIvPjxvbWdk
aTp3YXlwb2ludCB4PVwiMzQ4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMTdcIi8+
PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBc
IiB4PVwiMjQ5LjVcIiB5PVwiMTk1LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQ
TU5FZGdlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHBrazhq
ZlwiIGlkPVwiU2VxdWVuY2VGbG93XzBwa2s4amZfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQ0
OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjE3XCIvPjxvbWdkaTp3YXlwb2ludCB4
PVwiNTU0XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMTdcIi8+PGJwbW5kaTpCUE1O
TGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiNDU2XCIg
eT1cIjE5NS41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRp
OkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzB1ZDZibnJcIiBpZD1cIlRl
eHRBbm5vdGF0aW9uXzB1ZDZibnJfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lk
dGg9XCIxMjJcIiB4PVwiNDQ4XCIgeT1cIjg2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRp
OkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMTE5NnpnZ1wiIGlkPVwiQXNzb2Np
YXRpb25fMTE5NnpnZ19kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDM3XCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIxNzdcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0OTFcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEyMlwiLz48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpC
UE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4ifSwgImNvbnRlbnRf
dmVyc2lvbiI6IDI5LCAiY3JlYXRvcl9pZCI6ICJhQGV4YW1wbGUuY29tIiwgImRlc2NyaXB0aW9u
IjogIlRoaXMgd29ya2Zsb3cgZ2VuZXJhdGVzIFJEQVAgZm9ybWF0dGVkIHJlc3VsdHMgZnJvbSBh
biBJUCwgVVJMIG9yIEROUyBBcnRpZmFjdCIsICJleHBvcnRfa2V5IjogImV4YW1wbGVfcmRhcF9x
dWVyeSIsICJsYXN0X21vZGlmaWVkX2J5IjogImFAZXhhbXBsZS5jb20iLCAibGFzdF9tb2RpZmll
ZF90aW1lIjogMTU5Nzc1MTMzNDA2MSwgIm5hbWUiOiAiRXhhbXBsZTogUkRBUCBxdWVyeSIsICJv
YmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3Jk
YXBfcXVlcnkiLCAidGFncyI6IFtdLCAidXVpZCI6ICJjYzE5OTNmNi0xY2M0LTQ4OWEtYWE5Yy0z
NDIxY2VhMzQyYzYiLCAid29ya2Zsb3dfaWQiOiA4NH1dLCAid29ya3NwYWNlcyI6IFtdfQ==
""")
