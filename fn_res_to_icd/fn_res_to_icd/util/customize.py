# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_res_to_icd"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_res_to_india package"""
    reload_params = {"package": u"fn_res_to_icd",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"incident_id"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_res_to_icd"], 
                    "functions": [u"res_to_icd_function"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_res_to_icd"], 
                    "actions": [u"example:icd_man"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     incident_id
    #   Message Destinations:
    #     fn_res_to_icd
    #   Functions:
    #     res_to_icd_function
    #   Workflows:
    #     example_res_to_icd
    #   Rules:
    #     example:icd_man


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMCwgImJ1aWxkX251bWJl
ciI6IDQyNTQsICJ2ZXJzaW9uIjogIjMxLjAuNDI1NCJ9LCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9u
IjogMiwgImlkIjogMTAzLCAiZXhwb3J0X2RhdGUiOiAxNTYwMTgxMzk2MTY5LCAiZmllbGRzIjog
W3siaWQiOiAyMjMsICJuYW1lIjogImluY190cmFpbmluZyIsICJ0ZXh0IjogIlNpbXVsYXRpb24i
LCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAwLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBp
bmNpZGVudCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVs
ZCBpcyByZWFkLW9ubHkuIiwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJoaWRlX25vdGlmaWNh
dGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIi
OiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQi
OiAiYzNmMGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgIm9wZXJhdGlvbnMiOiBb
XSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiB0cnVl
LCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAi
aW5jaWRlbnQvaW5jX3RyYWluaW5nIiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZh
bHNlfSwgeyJpZCI6IDMyMSwgIm5hbWUiOiAiaW5jaWRlbnRfaWQiLCAidGV4dCI6ICJpbmNpZGVu
dF9pZCIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6ICIiLCAicGxh
Y2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAibnVtYmVyIiwgInJlcXVpcmVkIjogImFsd2F5
cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0
X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJu
YWwiOiBmYWxzZSwgInV1aWQiOiAiMGRkMWMyZTEtOTVjOS00NDRjLTg2ODgtMjY5ZGVhNmZiN2Yx
IiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10s
ICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFs
c2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vaW5jaWRlbnRfaWQiLCAidGVtcGxhdGVzIjog
W10sICJkZXByZWNhdGVkIjogZmFsc2V9XSwgImluY2lkZW50X3R5cGVzIjogW3sidXBkYXRlX2Rh
dGUiOiAxNTYwMTgxMzk3NDQ4LCAiY3JlYXRlX2RhdGUiOiAxNTYwMTgxMzk3NDQ4LCAidXVpZCI6
ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZGVzY3JpcHRpb24iOiAi
Q3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9t
aXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNr
YWdlcyAoaW50ZXJuYWwpIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFy
ZW50X2lkIjogbnVsbCwgImhpZGRlbiI6IGZhbHNlLCAiaWQiOiAwfV0sICJwaGFzZXMiOiBbXSwg
ImF1dG9tYXRpY190YXNrcyI6IFtdLCAib3ZlcnJpZGVzIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0
aW9ucyI6IFt7Im5hbWUiOiAiZm5fcmVzX3RvX2ljZCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJm
bl9yZXNfdG9faWNkIiwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUs
ICJ1c2VycyI6IFsic2Vhbi5vZ29ybWFuQGlibS5jb20iXSwgInV1aWQiOiAiNjBlZGE5YWItOWRk
Ny00ZWE5LTg4ZjYtNjBhNzNiYjE0NzQyIiwgImV4cG9ydF9rZXkiOiAiZm5fcmVzX3RvX2ljZCJ9
XSwgImFjdGlvbnMiOiBbeyJpZCI6IDE0NywgIm5hbWUiOiAiZXhhbXBsZTppY2RfbWFuIiwgInR5
cGUiOiAxLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiY29uZGl0aW9ucyI6IFtdLCAiYXV0
b21hdGlvbnMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10sICJ3b3JrZmxvd3MiOiBb
ImV4YW1wbGVfcmVzX3RvX2ljZCJdLCAidmlld19pdGVtcyI6IFtdLCAidGltZW91dF9zZWNvbmRz
IjogODY0MDAsICJ1dWlkIjogIjI3NDRhYTA4LTkzNTMtNDZmNC1iNDlmLTI4MTA5NTliYTcxMyIs
ICJleHBvcnRfa2V5IjogImV4YW1wbGU6aWNkX21hbiIsICJsb2dpY190eXBlIjogImFsbCJ9XSwg
ImxheW91dHMiOiBbXSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAidGltZWZyYW1lcyI6IG51bGws
ICJsb2NhbGUiOiBudWxsLCAiaW5kdXN0cmllcyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwg
Imdlb3MiOiBudWxsLCAidGFza19vcmRlciI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJ0eXBl
cyI6IFtdLCAic2NyaXB0cyI6IFtdLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgIndv
cmtmbG93cyI6IFt7IndvcmtmbG93X2lkIjogMjAsICJuYW1lIjogIkV4YW1wbGU6IHJlc190b19p
Y2QiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9yZXNfdG9faWNkIiwgIm9iamVjdF90
eXBlIjogImluY2lkZW50IiwgImRlc2NyaXB0aW9uIjogIlRoaXMgd29ya2Zsb3cgYWltcyB0byBl
c2NhbGF0ZSBhIHJlc2lsaWVudCBpbmNpZGVudCB0byBhbiBpY2QgZGVzayB0aWNrZXQsIGluY2x1
ZGluZyB0aGUgUXJhZGFyIHNldmVyaXR5IHRyYW5zbGF0ZWQgdG8gYW4gaWNkIGRlc2sgdGlja2V0
IHByaW9yaXR5IiwgImNyZWF0b3JfaWQiOiAic2Vhbi5vZ29ybWFuQGlibS5jb20iLCAibGFzdF9t
b2RpZmllZF9ieSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJsYXN0X21vZGlmaWVkX3RpbWUi
OiAxNTYwMTY1MzE4NjA0LCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX3Jlc190b19pY2QiLCAidXVp
ZCI6ICJkMzcyM2U3Yi0zMzI3LTQwYjEtYTE5Ni03OGFjYjJiOWM1ZjQiLCAiY29udGVudCI6IHsi
d29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9yZXNfdG9faWNkIiwgInhtbCI6ICI8P3htbCB2ZXJzaW9u
PVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8v
d3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0
cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0
cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0
cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9y
Zy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1M
U2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9y
Zy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX3Jlc190b19pY2RcIiBpc0V4ZWN1dGFibGU9
XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IHJlc190b19pY2RcIj48ZG9jdW1lbnRhdGlvbj5UaGlz
IHdvcmtmbG93IGFpbXMgdG8gZXNjYWxhdGUgYSByZXNpbGllbnQgaW5jaWRlbnQgdG8gYW4gaWNk
IGRlc2sgdGlja2V0LCBpbmNsdWRpbmcgdGhlIFFyYWRhciBzZXZlcml0eSB0cmFuc2xhdGVkIHRv
IGFuIGljZCBkZXNrIHRpY2tldCBwcmlvcml0eTwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBp
ZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMHR4Y3A5ZTwv
b3V0Z29pbmc+PC9zdGFydEV2ZW50PjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzFsM2c4OWNcIj48
aW5jb21pbmc+U2VxdWVuY2VGbG93XzF1OTU4dXA8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVl
bmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wdHhjcDllXCIgc291cmNlUmVmPVwiU3RhcnRFdmVu
dF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMDY4anNha1wiLz48c2VydmljZVRh
c2sgaWQ9XCJTZXJ2aWNlVGFza18wNjhqc2FrXCIgbmFtZT1cInJlc190b19pY2RfZnVuY3Rpb25c
IiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGll
bnQ6ZnVuY3Rpb24gdXVpZD1cIjcwNzc4MDA5LThjZDktNGEzMC1iNmI2LTM1YzRmMmIzM2Q4N1wi
PntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaWYgcmVzdWx0cy5z
dWNjZXNzOlxcbiAgbm90ZV90ZXh0ID1cXFwiezB9IGhhcyBiZWVuIGFkZGVkIHRvIGljZCBkZXNr
IHByaW9yaXR5IHdpdGggaWNkX2lkIHsxfVxcXCIuZm9ybWF0KGluY2lkZW50LmlkLHJlc3VsdHMu
aWNkX2lkKVxcbiAgaW5jaWRlbnQuYWRkTm90ZShoZWxwZXIuY3JlYXRlUGxhaW5UZXh0KG5vdGVf
dGV4dCkpXFxuZWxzZTpcXG4gIG5vdGVfdGV4dCA9IFxcXCJFcnJvciBhZGRpbmcgUXJhZGFyIHNl
dmVyaXR5IHt9XFxcIi5mb3JtYXQoaW5jaWRlbnQudmFsdWUpXFxuICBpbmNpZGVudC5hZGROb3Rl
KGhlbHBlci5jcmVhdGVQbGFpblRleHQobm90ZV90ZXh0KSlcIixcInByZV9wcm9jZXNzaW5nX3Nj
cmlwdFwiOlwiaW5wdXRzLmluY2lkZW50X2lkPWluY2lkZW50LmlkXCJ9PC9yZXNpbGllbnQ6ZnVu
Y3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzB0eGNwOWU8
L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMXU5NTh1cDwvb3V0Z29pbmc+PC9zZXJ2
aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzF1OTU4dXBcIiBzb3VyY2VS
ZWY9XCJTZXJ2aWNlVGFza18wNjhqc2FrXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMWwzZzg5Y1wi
Lz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3Rh
cnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9u
IGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4
bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PC9wcm9jZXNzPjxicG1u
ZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBt
bkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hh
cGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1
YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2
MFwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIw
XCIgd2lkdGg9XCI5MFwiIHg9XCIxNTVcIiB5PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48
L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5u
b3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2Rj
OkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48
L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0
aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9p
bnQgeD1cIjE2OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3
YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9i
cG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8x
bDNnODljXCIgaWQ9XCJFbmRFdmVudF8xbDNnODljX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9
XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNDkwXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJl
bD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjUwOFwiIHk9XCIy
MjdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5F
ZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzB0eGNwOWVcIiBpZD1cIlNlcXVlbmNlRmxv
d18wdHhjcDllX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOTZcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI3NlwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMjM2XCIgeT1cIjE4NC41XCIvPjwvYnBtbmRp
OkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVu
dD1cIlNlcnZpY2VUYXNrXzA2OGpzYWtcIiBpZD1cIlNlcnZpY2VUYXNrXzA2OGpzYWtfZGlcIj48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMjc2LjExNjI3OTA2
OTc2NzRcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJw
bW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzF1OTU4dXBcIiBpZD1cIlNlcXVlbmNlRmxvd18xdTk1
OHVwX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzNzZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQ5MFwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNDMzXCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFi
ZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFn
cmFtPjwvZGVmaW5pdGlvbnM+IiwgInZlcnNpb24iOiAxfSwgImFjdGlvbnMiOiBbXX1dLCAicm9s
ZXMiOiBbXSwgIndvcmtzcGFjZXMiOiBbXSwgImZ1bmN0aW9ucyI6IFt7ImlkIjogMzQsICJuYW1l
IjogInJlc190b19pY2RfZnVuY3Rpb24iLCAiZGlzcGxheV9uYW1lIjogInJlc190b19pY2RfZnVu
Y3Rpb24iLCAiZGVzY3JpcHRpb24iOiB7ImZvcm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAiVGhp
cyBmdW5jdGlvbiB0cmFuc2ZlcnMgYSByZXNpbGllbnQgd2l0aCBhIHFyYWRhciBzZXZlcml0eSAo
MS0xMCkgdG8gYW4gaWNkIHRpY2tldCB3aXRoIGEgcHJpb3JpdHkgKDQtMSkifSwgImRlc3RpbmF0
aW9uX2hhbmRsZSI6ICJmbl9yZXNfdG9faWNkIiwgImV4cG9ydF9rZXkiOiAicmVzX3RvX2ljZF9m
dW5jdGlvbiIsICJ1dWlkIjogIjcwNzc4MDA5LThjZDktNGEzMC1iNmI2LTM1YzRmMmIzM2Q4NyIs
ICJ2ZXJzaW9uIjogMiwgImNyZWF0b3IiOiB7ImlkIjogNzcsICJ0eXBlIjogInVzZXIiLCAibmFt
ZSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJkaXNwbGF5X25hbWUiOiAiU2VhbiBPIEdvcm1h
biJ9LCAibGFzdF9tb2RpZmllZF9ieSI6IHsiaWQiOiA3NywgInR5cGUiOiAidXNlciIsICJuYW1l
IjogInNlYW4ub2dvcm1hbkBpYm0uY29tIiwgImRpc3BsYXlfbmFtZSI6ICJTZWFuIE8gR29ybWFu
In0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTYwMTY1MjM4MTM5LCAidmlld19pdGVtcyI6IFt7
InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1
aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiMGRkMWMyZTEtOTVj
OS00NDRjLTg2ODgtMjY5ZGVhNmZiN2YxIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX1dLCAi
d29ya2Zsb3dzIjogW3sid29ya2Zsb3dfaWQiOiAyMCwgIm5hbWUiOiAiRXhhbXBsZTogcmVzX3Rv
X2ljZCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3Jlc190b19pY2QiLCAib2JqZWN0
X3R5cGUiOiAiaW5jaWRlbnQiLCAiZGVzY3JpcHRpb24iOiBudWxsLCAidXVpZCI6IG51bGwsICJh
Y3Rpb25zIjogW119XX1dfQ==
"""
    )