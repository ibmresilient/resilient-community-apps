# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_twilio"""

# This here to support Apps running on resilient-circuits <= v34
try:
    import resilient_circuits
    if int(resilient_circuits.__version__.split(".")[0]) >= 34:
        raise ImportError
    ImportDefinition = resilient_circuits.util.ImportDefinition

except ImportError:
    from resilient import ImportDefinition


def codegen_reload_data():
    """
    Parameters required reload codegen for the fn_twilio package
    """
    return {
        "package": u"fn_twilio",
        "message_destinations": [u"fn_twilio"],
        "functions": [u"twilio_send_sms", u"twilio_get_responses"],
        "workflows": [u"example_twilio_send_sms"],
        "actions": [u"Example: Send Twilio SMS"],
        "incident_fields": [],
        "incident_artifact_types": [],
        "datatables": [],
        "automatic_tasks": [],
        "scripts": []
    }


def customization_data(client=None):
    """
    Returns a Generator of ImportDefinitions (Customizations).
    Install them using `resilient-circuits customize`

    Contents:
    - Message Destinations:
        - fn_twilio
    - Functions:
        - twilio_send_sms
        - twilio_get_responses
    - Workflows:
        - example_twilio_send_sms
    - Rules:
        - Example: Send Twilio SMS
    """

    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFNl
bmQgVHdpbGlvIFNNUyIsICJpZCI6IDE1MiwgImxvZ2ljX3R5cGUiOiAiYWxsIiwgIm1lc3NhZ2Vf
ZGVzdGluYXRpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6IFNlbmQgVHdpbGlvIFNNUyIsICJv
YmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJ0YWdzIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4
NjQwMCwgInR5cGUiOiAxLCAidXVpZCI6ICJmOTNiODJhNy0yZjNkLTRhOWUtYTk2ZS0zMzEyYTI3
ZTRiMTYiLCAidmlld19pdGVtcyI6IFt7ImNvbnRlbnQiOiAiNmMzOTI0ZWMtZTllZi00OTcyLWFk
MDgtZGFhYzVhYzVkOTcyIiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjog
ImFjdGlvbmludm9jYXRpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjog
ZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsiY29udGVudCI6ICI3YzY4MGNjOS05MWM5LTRi
NjQtYWNlNy0zZjkzZjIwNGFiOWMiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5
cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFk
ZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVf
dHdpbGlvX3NlbmRfc21zIl19XSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAiZXhwb3J0X2RhdGUi
OiAxNTg4Njk3MTUyNDUzLCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjogMiwgImZpZWxkcyI6IFt7
ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiY2Fs
Y3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhw
b3J0X2tleSI6ICJfX2Z1bmN0aW9uL3R3aWxpb19zbXNfZGVzdGluYXRpb24iLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgImlkIjogODM0LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVy
bmFsIjogZmFsc2UsICJuYW1lIjogInR3aWxpb19zbXNfZGVzdGluYXRpb24iLCAib3BlcmF0aW9u
X3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4
IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInJpY2hf
dGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogInR3aWxp
b19zbXNfZGVzdGluYXRpb24iLCAidG9vbHRpcCI6ICJUd2lsaW8gRGVzdGluYXRpb24gTVNJU0RO
IiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiYjcyYjdmOWEtYjM2My00OGNhLThjN2UtNDc5ZmMz
MTAwMDk3IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJi
bGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0
cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwg
ImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi90d2lsaW9fd2Fp
dF90aW1lb3V0IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDg1NiwgImlucHV0
X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJ0d2lsaW9fd2FpdF90
aW1lb3V0IiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vo
b2xkZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4
dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogInR3aWxpb193
YWl0X3RpbWVvdXQiLCAidG9vbHRpcCI6ICIzMHMsIDEwbSwgMWgsIDJkLCAzdyIsICJ0eXBlX2lk
IjogMTEsICJ1dWlkIjogIjk3ZWQzMmIxLTFiZDItNGMxZS05YjRkLTBkZmIzZTQ3NjgxZSIsICJ2
YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9u
IjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3Nl
biI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVk
IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vdHdpbGlvX2RhdGVfc2VudCIsICJo
aWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA4NjEsICJpbnB1dF90eXBlIjogInRleHQi
LCAiaW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAidHdpbGlvX2RhdGVfc2VudCIsICJvcGVyYXRp
b25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVm
aXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3Mi
OiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJ0d2lsaW9fZGF0ZV9zZW50IiwgInRvb2x0
aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiMDc3YWE1NWQtMzZmMS00NGNmLThhYTIt
MGY2ZjQ2NDZkZGM0IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFs
c2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFi
bGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi90d2ls
aW9fcGhvbmVfbnVtYmVyIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDg2MCwg
ImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJ0d2lsaW9f
cGhvbmVfbnVtYmVyIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAi
cGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJl
cXVpcmVkIjogImFsd2F5cyIsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBs
YXRlcyI6IFtdLCAidGV4dCI6ICJ0d2lsaW9fcGhvbmVfbnVtYmVyIiwgInRvb2x0aXAiOiAiIiwg
InR5cGVfaWQiOiAxMSwgInV1aWQiOiAiYzM5NjIyMzItNGMwZS00YTZhLWJkZjktNWU5OTNmNDhm
MWM1IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFu
a19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVl
LCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRl
cHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi90d2lsaW9fc21zX21l
c3NhZ2UiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogODM1LCAiaW5wdXRfdHlw
ZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJuYW1lIjogInR3aWxpb19zbXNfbWVzc2Fn
ZSIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVy
IjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyZXF1aXJlZCI6ICJh
bHdheXMiLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwg
InRleHQiOiAidHdpbGlvX3Ntc19tZXNzYWdlIiwgInRvb2x0aXAiOiAiVHdpbGlvIFNNUyBDb250
ZW50IiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiZDQwOWZjYzMtNjIyZS00YTUwLWI1YzctYzBl
MDcyODczMzQ5IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2Us
ICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUi
OiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxz
ZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi90d2lsaW9f
ZGF0ZV9zZW50X3RzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDg2OCwgImlu
cHV0X3R5cGUiOiAiZGF0ZXRpbWVwaWNrZXIiLCAiaW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAi
dHdpbGlvX2RhdGVfc2VudF90cyIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMi
OiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFs
c2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4
dCI6ICJ0d2lsaW9fZGF0ZV9zZW50X3RzIiwgInRvb2x0aXAiOiAiZGF0ZSBwaWNrZXIgdG8gbGlz
dCBtZXNzYWdlcyBhZnRlciB0aGlzIGRhdGUiLCAidHlwZV9pZCI6IDExLCAidXVpZCI6ICI0Y2U1
NzVkNC1hMTNiLTQ3ZjQtYWJmZS1mNGY5NzdmZjRjNjkiLCAidmFsdWVzIjogW119LCB7ImFsbG93
X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiY2FsY3VsYXRl
ZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRf
Y2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tl
eSI6ICJhY3Rpb25pbnZvY2F0aW9uL3R3aWxpb19zbXNfbWVzc2FnZSIsICJoaWRlX25vdGlmaWNh
dGlvbiI6IGZhbHNlLCAiaWQiOiAzNTQyLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFs
IjogZmFsc2UsICJuYW1lIjogInR3aWxpb19zbXNfbWVzc2FnZSIsICJvcGVyYXRpb25fcGVybXMi
OiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIj4xNDQgY2hhcmFjdGVycyB3
aWxsIHNlbmQgbXVsdGlwbGUgbWVzc2FnZXMiLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAicmVh
ZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRl
cyI6IFtdLCAidGV4dCI6ICJNZXNzYWdlIiwgInRvb2x0aXAiOiAiTWVzc2FnZSB0byBzZW5kIiwg
InR5cGVfaWQiOiA2LCAidXVpZCI6ICI3YzY4MGNjOS05MWM5LTRiNjQtYWNlNy0zZjkzZjIwNGFi
OWMiLCAidmFsdWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5r
X29wdGlvbiI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUs
ICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVw
cmVjYXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL3R3aWxpb19z
bXNfZGVzdGluYXRpb24iLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogODMzLCAi
aW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJuYW1lIjogInR3aWxpb19z
bXNfZGVzdGluYXRpb24iLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10s
ICJwbGFjZWhvbGRlciI6ICIrMTU1NTExMTU1NTUiLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAi
cmVhZF9vbmx5IjogZmFsc2UsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAicmljaF90ZXh0IjogZmFs
c2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAiRGVzdGluYXRpb24gTnVt
YmVyIiwgInRvb2x0aXAiOiAiU3BlY2lmeSB0aGUgY291bnRyeSBjb2RlIGFuZCBudW1iZXIiLCAi
dHlwZV9pZCI6IDYsICJ1dWlkIjogIjZjMzkyNGVjLWU5ZWYtNDk3Mi1hZDA4LWRhYWM1YWM1ZDk3
MiIsICJ2YWx1ZXMiOiBbXX0sIHsiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbnRlcm5hbF9jdXN0
b21pemF0aW9uc19maWVsZCIsICJpZCI6IDAsICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJu
YWwiOiB0cnVlLCAibmFtZSI6ICJpbnRlcm5hbF9jdXN0b21pemF0aW9uc19maWVsZCIsICJyZWFk
X29ubHkiOiB0cnVlLCAidGV4dCI6ICJDdXN0b21pemF0aW9ucyBGaWVsZCAoaW50ZXJuYWwpIiwg
InR5cGVfaWQiOiAwLCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRh
YTEifV0sICJmdW5jdGlvbnMiOiBbeyJjcmVhdG9yIjogeyJkaXNwbGF5X25hbWUiOiAiUmVzaWxp
ZW50IFN5c2FkbWluIiwgImlkIjogMywgIm5hbWUiOiAiYUBleGFtcGxlLmNvbSIsICJ0eXBlIjog
InVzZXIifSwgImRlc2NyaXB0aW9uIjogeyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50IjogIlJl
Y2VpdmUgbWVzc2FnZXMgYmFzZWQgb24gYSBtZXNzYWdlIElkIChTSUQpIn0sICJkZXN0aW5hdGlv
bl9oYW5kbGUiOiAiZm5fdHdpbGlvIiwgImRpc3BsYXlfbmFtZSI6ICJUd2lsaW86IEdldCBSZXNw
b25zZXMiLCAiZXhwb3J0X2tleSI6ICJ0d2lsaW9fZ2V0X3Jlc3BvbnNlcyIsICJpZCI6IDY5LCAi
bGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIs
ICJpZCI6IDMsICJuYW1lIjogImFAZXhhbXBsZS5jb20iLCAidHlwZSI6ICJ1c2VyIn0sICJsYXN0
X21vZGlmaWVkX3RpbWUiOiAxNTgwMzA3NTc4MTY3LCAibmFtZSI6ICJ0d2lsaW9fZ2V0X3Jlc3Bv
bnNlcyIsICJ0YWdzIjogW10sICJ1dWlkIjogIjBlNDkzMWQ0LTZhZjYtNDRmNy04YjQ0LTljNWIy
ZjdlNzAwYiIsICJ2ZXJzaW9uIjogOCwgInZpZXdfaXRlbXMiOiBbeyJjb250ZW50IjogImMzOTYy
MjMyLTRjMGUtNGE2YS1iZGY5LTVlOTkzZjQ4ZjFjNSIsICJlbGVtZW50IjogImZpZWxkX3V1aWQi
LCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5r
X2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7ImNvbnRlbnQiOiAiMDc3YWE1
NWQtMzZmMS00NGNmLThhYTItMGY2ZjQ2NDZkZGM0IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIs
ICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtf
aGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsiY29udGVudCI6ICI0Y2U1NzVk
NC1hMTNiLTQ3ZjQtYWJmZS1mNGY5NzdmZjRjNjkiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwg
ImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19o
ZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJjb250ZW50IjogIjk3ZWQzMmIx
LTFiZDItNGMxZS05YjRkLTBkZmIzZTQ3NjgxZSIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAi
ZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hl
YWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgIndvcmtmbG93cyI6IFt7ImFjdGlv
bnMiOiBbXSwgImRlc2NyaXB0aW9uIjogbnVsbCwgIm5hbWUiOiAiRXhhbXBsZTogVHdpbGlvIFJl
Y2VpdmUgTWVzc2FnZXMiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAicHJvZ3JhbW1hdGlj
X25hbWUiOiAiZXhhbXBsZV90d2lsaW9fcmVjZWl2ZV9tZXNzYWdlcyIsICJ0YWdzIjogW10sICJ1
dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogOTV9LCB7ImFjdGlvbnMiOiBbXSwgImRlc2NyaXB0
aW9uIjogbnVsbCwgIm5hbWUiOiAiVHdpbGlvIEFwcHJvdmFsIFByb2Nlc3MiLCAib2JqZWN0X3R5
cGUiOiAiaW5jaWRlbnQiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAidHdpbGlvX2FwcHJvdmFsX3By
b2Nlc3MiLCAidGFncyI6IFtdLCAidXVpZCI6IG51bGwsICJ3b3JrZmxvd19pZCI6IDg4fSwgeyJh
Y3Rpb25zIjogW10sICJkZXNjcmlwdGlvbiI6IG51bGwsICJuYW1lIjogIlR3aWxpbyBHZXQgUmVz
cG9uc2VzIiwgIm9iamVjdF90eXBlIjogInR3aWxpb19zbXNfbG9nIiwgInByb2dyYW1tYXRpY19u
YW1lIjogInR3aWxpb19nZXRfcmVzcG9uc2VzIiwgInRhZ3MiOiBbXSwgInV1aWQiOiBudWxsLCAi
d29ya2Zsb3dfaWQiOiAxMDN9LCB7ImFjdGlvbnMiOiBbXSwgImRlc2NyaXB0aW9uIjogbnVsbCwg
Im5hbWUiOiAieHh4IiwgIm9iamVjdF90eXBlIjogInR3aWxpb19zbXNfbG9nIiwgInByb2dyYW1t
YXRpY19uYW1lIjogImV4YW1wbGVfdHdpbGlvX3JlY2VpdmVfbWVzc2FnZXNfX2RhdGF0YWJsZSIs
ICJ0YWdzIjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogMTAyfV19LCB7ImNyZWF0
b3IiOiB7ImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQgU3lzYWRtaW4iLCAiaWQiOiAzLCAibmFt
ZSI6ICJhQGV4YW1wbGUuY29tIiwgInR5cGUiOiAidXNlciJ9LCAiZGVzY3JpcHRpb24iOiB7ImZv
cm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAiU2VuZCBhbiBTTVMgbWVzc2FnZSB2aWEgYSBUd2ls
aW8gYWNjb3VudCJ9LCAiZGVzdGluYXRpb25faGFuZGxlIjogImZuX3R3aWxpbyIsICJkaXNwbGF5
X25hbWUiOiAiVHdpbGlvOiBTZW5kIFNNUyIsICJleHBvcnRfa2V5IjogInR3aWxpb19zZW5kX3Nt
cyIsICJpZCI6IDYzLCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9uYW1lIjogIlJlc2ls
aWVudCBTeXNhZG1pbiIsICJpZCI6IDMsICJuYW1lIjogImFAZXhhbXBsZS5jb20iLCAidHlwZSI6
ICJ1c2VyIn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTc5OTYyNDgyODg1LCAibmFtZSI6ICJ0
d2lsaW9fc2VuZF9zbXMiLCAidGFncyI6IFtdLCAidXVpZCI6ICI5MGMzNWRmMy0wZWM5LTQ5YWQt
OTcxNS00ZjQxNzU1OTZhNDgiLCAidmVyc2lvbiI6IDIsICJ2aWV3X2l0ZW1zIjogW3siY29udGVu
dCI6ICJiNzJiN2Y5YS1iMzYzLTQ4Y2EtOGM3ZS00NzlmYzMxMDAwOTciLCAiZWxlbWVudCI6ICJm
aWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVsbCwg
InNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJjb250ZW50
IjogImQ0MDlmY2MzLTYyMmUtNGE1MC1iNWM3LWMwZTA3Mjg3MzM0OSIsICJlbGVtZW50IjogImZp
ZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAi
c2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgIndvcmtmbG93
cyI6IFt7ImFjdGlvbnMiOiBbXSwgImRlc2NyaXB0aW9uIjogbnVsbCwgIm5hbWUiOiAiRXhhbXBs
ZTogVHdpbGlvIFNlbmQgU01TIiwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgInByb2dyYW1t
YXRpY19uYW1lIjogImV4YW1wbGVfdHdpbGlvX3NlbmRfc21zIiwgInRhZ3MiOiBbXSwgInV1aWQi
OiBudWxsLCAid29ya2Zsb3dfaWQiOiA4N30sIHsiYWN0aW9ucyI6IFtdLCAiZGVzY3JpcHRpb24i
OiBudWxsLCAibmFtZSI6ICJUd2lsaW8gQXBwcm92YWwgUHJvY2VzcyIsICJvYmplY3RfdHlwZSI6
ICJpbmNpZGVudCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJ0d2lsaW9fYXBwcm92YWxfcHJvY2Vz
cyIsICJ0YWdzIjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogODh9XX1dLCAiZ2Vv
cyI6IG51bGwsICJncm91cHMiOiBudWxsLCAiaWQiOiA2OSwgImluYm91bmRfbWFpbGJveGVzIjog
bnVsbCwgImluY2lkZW50X2FydGlmYWN0X3R5cGVzIjogW10sICJpbmNpZGVudF90eXBlcyI6IFt7
InVwZGF0ZV9kYXRlIjogMTU4ODY5NzE0MjI5NSwgImNyZWF0ZV9kYXRlIjogMTU4ODY5NzE0MjI5
NSwgInV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4LWFkMzktNGEwMDA0MDQ0YWEwIiwgImRlc2Ny
aXB0aW9uIjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJleHBvcnRfa2V5
IjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJuYW1lIjogIkN1c3RvbWl6
YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJlbmFibGVkIjogZmFsc2UsICJzeXN0ZW0iOiBm
YWxzZSwgInBhcmVudF9pZCI6IG51bGwsICJoaWRkZW4iOiBmYWxzZSwgImlkIjogMH1dLCAiaW5k
dXN0cmllcyI6IG51bGwsICJsYXlvdXRzIjogW10sICJsb2NhbGUiOiBudWxsLCAibWVzc2FnZV9k
ZXN0aW5hdGlvbnMiOiBbeyJhcGlfa2V5cyI6IFtdLCAiZGVzdGluYXRpb25fdHlwZSI6IDAsICJl
eHBlY3RfYWNrIjogdHJ1ZSwgImV4cG9ydF9rZXkiOiAiZm5fdHdpbGlvIiwgIm5hbWUiOiAiZm5f
dHdpbGlvIiwgInByb2dyYW1tYXRpY19uYW1lIjogImZuX3R3aWxpbyIsICJ0YWdzIjogW10sICJ1
c2VycyI6IFsiYUBleGFtcGxlLmNvbSJdLCAidXVpZCI6ICI1Yjk0YjAxOC05ZDY4LTRhYTktODNi
OC1mNmQyNjYzMDljMWEifV0sICJub3RpZmljYXRpb25zIjogbnVsbCwgIm92ZXJyaWRlcyI6IFtd
LCAicGhhc2VzIjogW10sICJyZWd1bGF0b3JzIjogbnVsbCwgInJvbGVzIjogW10sICJzY3JpcHRz
IjogW10sICJzZXJ2ZXJfdmVyc2lvbiI6IHsiYnVpbGRfbnVtYmVyIjogNTA4NywgIm1ham9yIjog
MzMsICJtaW5vciI6IDAsICJ2ZXJzaW9uIjogIjMzLjAuNTA4NyJ9LCAidGFncyI6IFtdLCAidGFz
a19vcmRlciI6IFtdLCAidGltZWZyYW1lcyI6IG51bGwsICJ0eXBlcyI6IFtdLCAid29ya2Zsb3dz
IjogW3siYWN0aW9ucyI6IFtdLCAiY29udGVudCI6IHsidmVyc2lvbiI6IDE3LCAid29ya2Zsb3df
aWQiOiAiZXhhbXBsZV90d2lsaW9fc2VuZF9zbXMiLCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIx
LjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cu
b21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8v
d3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8v
d3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3
dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8v
cmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIw
MDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hl
bWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rl
c3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVfdHdpbGlvX3NlbmRfc21zXCIgaXNFeGVjdXRhYmxl
PVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBUd2lsaW8gU2VuZCBTTVNcIj48ZG9jdW1lbnRhdGlv
bj5FeGFtcGxlIHdvcmtmbG93IHRvIHNlbmQgYW4gU01TIHZpYSBUd2lsaW88L2RvY3VtZW50YXRp
b24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVu
Y2VGbG93XzB3eXJqZzM8L291dGdvaW5nPjwvc3RhcnRFdmVudD48ZW5kRXZlbnQgaWQ9XCJFbmRF
dmVudF8weXV2YnV0XCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18xMDh5d210PC9pbmNvbWluZz48
L2VuZEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzFlYXV3azVcIiBuYW1lPVwi
VHdpbGlvOiBTZW5kIFNNU1wiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9u
RWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiOTBjMzVkZjMtMGVjOS00OWFkLTk3
MTUtNGY0MTc1NTk2YTQ4XCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0
XCI6XCJpbXBvcnQgamF2YS51dGlsLkRhdGUgYXMgRGF0ZVxcblxcbmZvciBlbnRyeSBpbiByZXN1
bHRzW1xcXCJ0d2lsaW9fc3RhdHVzXFxcIl06XFxuICBpZihlbnRyeS5zdWNjZXNzID09IFRydWUp
OlxcbiAgICBub3RlX3RleHQgPSB1XFxcIlxcXCJcXFwiJmx0O2ImZ3Q7VHdpbGlvIFNNUyBNZXNz
YWdlOiZsdDsvYiZndDsgezB9XFxuICAgICAgICAgICAgICAmbHQ7L2JyJmd0OyZsdDtiJmd0O3Nl
bnQgdG86Jmx0Oy9iJmd0OyB7MX1cXFwiXFxcIlxcXCIuZm9ybWF0KHJlc3VsdHMuaW5wdXRzLnR3
aWxpb19zbXNfbWVzc2FnZSxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIGVudHJ5LnBob25lX251bWJlcilcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBcXG4gICAgaW5jaWRlbnQuYWRkTm90ZShoZWxwZXIuY3JlYXRlUmljaFRl
eHQobm90ZV90ZXh0KSlcXG4gIGVsc2U6IFxcbiAgICBub3RlX3RleHQgPSB1XFxcIlxcXCJcXFwi
Jmx0O2ImZ3Q7VW5hYmxlIHRvIHNlbmQgVHdpbGlvIFNNUyBNZXNzYWdlOiZsdDsvYiZndDsgezB9
XFxuICAgICAgICAgICAgICAmbHQ7L2JyJmd0OyZsdDtiJmd0OyB0bzombHQ7L2ImZ3Q7IHsxfSAo
ezJ9KVxcXCJcXFwiXFxcIi5mb3JtYXQocmVzdWx0cy5pbnB1dHMudHdpbGlvX3Ntc19tZXNzYWdl
LFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW50cnkucGhv
bmVfbnVtYmVyLCBlbnRyeS5lcnJvcl9tZXNzYWdlKVxcbiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIFxcbiAgICBpbmNpZGVudC5hZGROb3RlKGhlbHBlci5jcmVhdGVS
aWNoVGV4dChub3RlX3RleHQpKVxcbiAgICBcXG4gIHJvdyA9IGluY2lkZW50LmFkZFJvdyhcXFwi
dHdpbGlvX3Ntc19sb2dcXFwiKVxcbiAgcm93Wydyb3dfY3JlYXRlZCddID0gc3RyKERhdGUoKSlc
XG4gIHJvd1snc3RhdHVzJ10gPSBlbnRyeS5nZXQoXFxcInN0YXR1c1xcXCIpIG9yIFxcXCJGYWls
ZWRcXFwiXFxuICByb3dbJ21lc3NhZ2VfaWQnXSA9IGVudHJ5LmdldChcXFwibWVzc2FnaW5nX3Nl
cnZpY2Vfc2lkXFxcIilcXG4gIHJvd1snZGF0ZV9jcmVhdGVkJ10gPSBlbnRyeS5nZXQoXFxcImRh
dGVfY3JlYXRlZF90c1xcXCIpXFxuICByb3dbJ21zZ19ib2R5J10gPSBlbnRyeS5nZXQoXFxcIm1l
c3NhZ2VfYm9keVxcXCIpIG9yIGVudHJ5LmdldChcXFwiZXJyb3JfbWVzc2FnZVxcXCIpXFxuICBy
b3dbJ3Bob25lX251bWJlciddID0gZW50cnkuZ2V0KFxcXCJwaG9uZV9udW1iZXJcXFwiKVxcbiAg
cm93W1xcXCJkaXJlY3Rpb25cXFwiXSA9IGVudHJ5LmdldChcXFwiZGlyZWN0aW9uXFxcIilcXG4g
IFwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMudHdpbGlvX3Ntc19kZXN0aW5h
dGlvbiA9IHJ1bGUucHJvcGVydGllcy50d2lsaW9fc21zX2Rlc3RpbmF0aW9uXFxuaWYgcnVsZS5w
cm9wZXJ0aWVzLnR3aWxpb19zbXNfbWVzc2FnZTpcXG4gIGlucHV0cy50d2lsaW9fc21zX21lc3Nh
Z2UgPSBydWxlLnByb3BlcnRpZXMudHdpbGlvX3Ntc19tZXNzYWdlXFxuZWxzZTpcXG4gIGlucHV0
cy50d2lsaW9fc21zX21lc3NhZ2UgPSAnQW4gaW5jaWRlbnQgJyArIGluY2lkZW50Lm5hbWUgKyAn
ICgnICsgYGluY2lkZW50LmlkYCArICcpIHdpdGggJyArIGluY2lkZW50LnNldmVyaXR5X2NvZGUg
KyAnIHByaW9yaXR5IG1heSByZXF1aXJlIHlvdXIgYXR0ZW50aW9uJ1xcblwiLFwicmVzdWx0X25h
bWVcIjpcIlwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29t
aW5nPlNlcXVlbmNlRmxvd18wd3lyamczPC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93
XzEwOHl3bXQ8L291dGdvaW5nPjwvc2VydmljZVRhc2s+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVl
bmNlRmxvd18wd3lyamczXCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0
UmVmPVwiU2VydmljZVRhc2tfMWVhdXdrNVwiLz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VG
bG93XzEwOHl3bXRcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xZWF1d2s1XCIgdGFyZ2V0UmVm
PVwiRW5kRXZlbnRfMHl1dmJ1dFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlv
bl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFu
bm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJl
Zj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhp
eXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMDcyYnl4MFwiPjx0ZXh0
PjwhW0NEQVRBW1Jlc3VsdHMgcGxhY2VkIGluIGEgZGF0YXRhYmxlXG5dXT48L3RleHQ+PC90ZXh0
QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wOXp1Y3RtXCIgc291cmNl
UmVmPVwiU2VydmljZVRhc2tfMWVhdXdrNVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzA3
MmJ5eDBcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8x
XCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5Q
bGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFz
eG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MFwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNTVcIiB5PVwiMjIz
XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hh
cGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3Rh
dGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAw
XCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRn
ZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9uXzFz
ZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2OFwiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUg
YnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8weXV2YnV0XCIgaWQ9XCJFbmRFdmVudF8weXV2YnV0X2Rp
XCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNDIxXCIgeT1c
IjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lk
dGg9XCI5MFwiIHg9XCIzOTRcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5k
aTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18x
ZWF1d2s1XCIgaWQ9XCJTZXJ2aWNlVGFza18xZWF1d2s1X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjI2NVwiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBN
TlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHd5cmpn
M1wiIGlkPVwiU2VxdWVuY2VGbG93XzB3eXJqZzNfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5
NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4
PVwiMjY1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1O
TGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiMTg1LjVc
IiB5PVwiMTg0LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1u
ZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMTA4eXdtdFwiIGlkPVwiU2Vx
dWVuY2VGbG93XzEwOHl3bXRfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjM2NVwiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDIxXCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2Rj
OkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiMzQ4XCIgeT1cIjE4NC41XCIv
PjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBi
cG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzA3MmJ5eDBcIiBpZD1cIlRleHRBbm5vdGF0aW9u
XzA3MmJ5eDBfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjY0XCIgd2lkdGg9XCIxNzVcIiB4
PVwiNDAxXCIgeT1cIjk4XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJw
bW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMDl6dWN0bVwiIGlkPVwiQXNzb2NpYXRpb25fMDl6dWN0
bV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzY1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwi
IHk9XCIxODRcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0MTZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjE2MlwiLz48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9i
cG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4ifSwgImNvbnRlbnRfdmVyc2lvbiI6IDE3
LCAiY3JlYXRvcl9pZCI6ICJhQGV4YW1wbGUuY29tIiwgImRlc2NyaXB0aW9uIjogIkV4YW1wbGUg
d29ya2Zsb3cgdG8gc2VuZCBhbiBTTVMgdmlhIFR3aWxpbyIsICJleHBvcnRfa2V5IjogImV4YW1w
bGVfdHdpbGlvX3NlbmRfc21zIiwgImxhc3RfbW9kaWZpZWRfYnkiOiAiYUBleGFtcGxlLmNvbSIs
ICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTg2MDk5ODQ5MTQwLCAibmFtZSI6ICJFeGFtcGxlOiBU
d2lsaW8gU2VuZCBTTVMiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAicHJvZ3JhbW1hdGlj
X25hbWUiOiAiZXhhbXBsZV90d2lsaW9fc2VuZF9zbXMiLCAidGFncyI6IFtdLCAidXVpZCI6ICI3
NDhiZmUzYi1hZTVmLTQ5NDgtYmVlZS0wZDg5MjRiZWZjZmQiLCAid29ya2Zsb3dfaWQiOiA4N31d
LCAid29ya3NwYWNlcyI6IFtdfQ==
""")
