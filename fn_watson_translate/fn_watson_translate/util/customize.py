# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_watson_translate"""

from __future__ import print_function
from resilient_circuits.util import *


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     fn_watson_translate_source_lang
    #     fn_watson_translate_source_text
    #     fn_watson_translate_target_lang
    #   Message Destinations:
    #     fn_watson_queue
    #   Functions:
    #     fn_watson_translate
    #   Workflows:
    #     watson_translate_note
    #   Rules:
    #     Example: Watson Translate Note


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMCwgIm1pbm9yIjogMSwgImJ1aWxkX251bWJl
ciI6IDI1LCAidmVyc2lvbiI6ICIzMC4xLjI1In0sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAy
LCAiaWQiOiA4LCAiZXhwb3J0X2RhdGUiOiAxNTMxODg3ODAyMTgxLCAiZmllbGRzIjogW3siaWQi
OiA1MCwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwgInRleHQiOiAiU2ltdWxhdGlvbiIsICJwcmVm
aXgiOiBudWxsLCAidHlwZV9pZCI6IDAsICJ0b29sdGlwIjogIldoZXRoZXIgdGhlIGluY2lkZW50
IGlzIGEgc2ltdWxhdGlvbiBvciBhIHJlZ3VsYXIgaW5jaWRlbnQuICBUaGlzIGZpZWxkIGlzIHJl
YWQtb25seS4iLCAiaW5wdXRfdHlwZSI6ICJib29sZWFuIiwgImhpZGVfbm90aWZpY2F0aW9uIjog
ZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNl
LCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICJjM2Yw
ZTNlZC0yMWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAib3BlcmF0aW9ucyI6IFtdLCAib3Bl
cmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6IHRydWUsICJjaGFu
Z2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVu
dC9pbmNfdHJhaW5pbmciLCAidGVtcGxhdGVzIjogW119LCB7ImlkIjogMTIxLCAibmFtZSI6ICJm
bl93YXRzb25fdHJhbnNsYXRlX3NvdXJjZV9sYW5nIiwgInRleHQiOiAiZm5fd2F0c29uX3RyYW5z
bGF0ZV9zb3VyY2VfbGFuZyIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRp
cCI6ICJTb3VyY2UgbGFuZ3VhZ2UncyAyIGNoYXJhY3RlciBJRCIsICJwbGFjZWhvbGRlciI6ICJm
ciIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNo
b3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19v
cHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjBmZmM0MzNkLTBhY2Yt
NDQ3Yy1iYmVlLTI5YWI0NzFiMWU5NSIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVy
bXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjog
dHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2ZuX3dh
dHNvbl90cmFuc2xhdGVfc291cmNlX2xhbmciLCAidGVtcGxhdGVzIjogW119LCB7ImlkIjogMTIz
LCAibmFtZSI6ICJmbl93YXRzb25fdHJhbnNsYXRlX3NvdXJjZV90ZXh0IiwgInRleHQiOiAiZm5f
d2F0c29uX3RyYW5zbGF0ZV9zb3VyY2VfdGV4dCIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6
IDExLCAidG9vbHRpcCI6ICJUZXh0IHRvIGJlIHRyYW5zbGF0ZWQiLCAicGxhY2Vob2xkZXIiOiAi
bG9yZW0gaW1wc3VtIiwgImlucHV0X3R5cGUiOiAidGV4dCIsICJyZXF1aXJlZCI6ICJhbHdheXMi
LCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9j
aG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFs
IjogZmFsc2UsICJ1dWlkIjogIjQ5OGI0MjhmLWZhNjUtNDgxYS1hYWVmLTIxNTFiYjk4MzkyZSIs
ICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAi
cmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2ZuX3dhdHNvbl90cmFuc2xhdGVfc291cmNlX3Rl
eHQiLCAidGVtcGxhdGVzIjogW119LCB7ImlkIjogMTIyLCAibmFtZSI6ICJmbl93YXRzb25fdHJh
bnNsYXRlX3RhcmdldF9sYW5nIiwgInRleHQiOiAiZm5fd2F0c29uX3RyYW5zbGF0ZV90YXJnZXRf
bGFuZyIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6ICJUYXJnZXQg
bGFuZ3VhZ2UncyAyIGNoYXJhY3RlciBJRCIsICJwbGFjZWhvbGRlciI6ICJlbiIsICJpbnB1dF90
eXBlIjogInRleHQiLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgImhpZGVfbm90aWZpY2F0aW9uIjog
ZmFsc2UsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNl
LCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICIwZjQ1
ZDc3NS03NDE1LTRhZjQtOTNkNy1iN2EwMzQ3NjIzNDkiLCAib3BlcmF0aW9ucyI6IFtdLCAib3Bl
cmF0aW9uX3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbXSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hh
bmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5j
dGlvbi9mbl93YXRzb25fdHJhbnNsYXRlX3RhcmdldF9sYW5nIiwgInRlbXBsYXRlcyI6IFtdfV0s
ICJpbmNpZGVudF90eXBlcyI6IFt7InVwZGF0ZV9kYXRlIjogMTUzMjQ2NDMyMTgwMywgImNyZWF0
ZV9kYXRlIjogMTUzMjQ2NDMyMTgwMywgInV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4LWFkMzkt
NGEwMDA0MDQ0YWEwIiwgImRlc2NyaXB0aW9uIjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGlu
dGVybmFsKSIsICJleHBvcnRfa2V5IjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFs
KSIsICJuYW1lIjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJlbmFibGVk
IjogZmFsc2UsICJzeXN0ZW0iOiBmYWxzZSwgInBhcmVudF9pZCI6IG51bGwsICJoaWRkZW4iOiBm
YWxzZSwgImlkIjogMH1dLCAicGhhc2VzIjogW10sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgIm92
ZXJyaWRlcyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbeyJuYW1lIjogImZuX3dhdHNv
bl9xdWV1ZSIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl93YXRzb25fcXVldWUiLCAiZGVzdGlu
YXRpb25fdHlwZSI6IDAsICJleHBlY3RfYWNrIjogdHJ1ZSwgInVzZXJzIjogWyJhQGEuY29tIl0s
ICJ1dWlkIjogImM4ZmNlZDE0LTkzZmYtNDVlZi05ODY4LTg0YTA4NWYxNWFmMCIsICJleHBvcnRf
a2V5IjogImZuX3dhdHNvbl9xdWV1ZSJ9XSwgImFjdGlvbnMiOiBbeyJpZCI6IDQ0LCAibmFtZSI6
ICJFeGFtcGxlOiBXYXRzb24gVHJhbnNsYXRlIE5vdGUiLCAidHlwZSI6IDEsICJvYmplY3RfdHlw
ZSI6ICJub3RlIiwgImNvbmRpdGlvbnMiOiBbXSwgImF1dG9tYXRpb25zIjogW10sICJtZXNzYWdl
X2Rlc3RpbmF0aW9ucyI6IFtdLCAid29ya2Zsb3dzIjogWyJ3YXRzb25fdHJhbnNsYXRlX25vdGUi
XSwgInZpZXdfaXRlbXMiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6ICJj
N2ExYTliOC02NWIwLTQ4NjctOWNmOS1hZDA4ZDc5YWZhNWQiLCAiZXhwb3J0X2tleSI6ICJFeGFt
cGxlOiBXYXRzb24gVHJhbnNsYXRlIE5vdGUiLCAibG9naWNfdHlwZSI6ICJhbGwifV0sICJsYXlv
dXRzIjogW10sICJub3RpZmljYXRpb25zIjogbnVsbCwgInRpbWVmcmFtZXMiOiBudWxsLCAiaW5k
dXN0cmllcyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwgImdlb3MiOiBudWxsLCAidGFza19v
cmRlciI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJ0eXBlcyI6IFtdLCAic2NyaXB0cyI6IFtd
LCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7IndvcmtmbG93
X2lkIjogMzEsICJuYW1lIjogIkV4YW1wbGU6IFdhdHNvbiBUcmFuc2xhdGUgTm90ZSIsICJwcm9n
cmFtbWF0aWNfbmFtZSI6ICJ3YXRzb25fdHJhbnNsYXRlX25vdGUiLCAib2JqZWN0X3R5cGUiOiAi
bm90ZSIsICJkZXNjcmlwdGlvbiI6ICJUaGlzIHdvcmtmbG93IHRha2VzIHRleHQgb2YgdGhlIG5v
dGUgaXQgd2FzIGNhbGxlZCBvbiBhbmQgdHJhbnNsYXRlcyBpdCB0byB0aGUgc2VsZWN0ZWQgbGFu
Z3VhZ2UgYW5kIGF0dGFjaGVzIHRoZSB0cmFuc2xhdGVkIHZlcnNpb24gYXMgYSBjb21tZW50IHRv
IHRoZSBub3RlLiIsICJjcmVhdG9yX2lkIjogImFAYS5jb20iLCAibGFzdF9tb2RpZmllZF9ieSI6
ICJhQGEuY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1MzE4ODc3ODc3NjQsICJleHBvcnRf
a2V5IjogIndhdHNvbl90cmFuc2xhdGVfbm90ZSIsICJ1dWlkIjogImI2NTU4Nzk2LTdlNDItNGZk
Yy1iMThmLTcxYWNhMzc4OGI4YSIsICJjb250ZW50IjogeyJ3b3JrZmxvd19pZCI6ICJ3YXRzb25f
dHJhbnNsYXRlX25vdGUiLCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1c
IlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQ
TU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3Bl
Yy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3Bl
Yy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMv
REQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5j
b20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIg
eG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0
YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBp
ZD1cIndhdHNvbl90cmFuc2xhdGVfbm90ZVwiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwi
RXhhbXBsZTogV2F0c29uIFRyYW5zbGF0ZSBOb3RlXCI+PGRvY3VtZW50YXRpb24+VGhpcyB3b3Jr
ZmxvdyB0YWtlcyB0ZXh0IG9mIHRoZSBub3RlIGl0IHdhcyBjYWxsZWQgb24gYW5kIHRyYW5zbGF0
ZXMgaXQgdG8gdGhlIHNlbGVjdGVkIGxhbmd1YWdlIGFuZCBhdHRhY2hlcyB0aGUgdHJhbnNsYXRl
ZCB2ZXJzaW9uIGFzIGEgY29tbWVudCB0byB0aGUgbm90ZS48L2RvY3VtZW50YXRpb24+PHN0YXJ0
RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzF3
bDdjdWY8L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFz
a18xOWh2bTJvXCIgbmFtZT1cIldhdHNvbiBUcmFuc2xhdGVcIiByZXNpbGllbnQ6dHlwZT1cImZ1
bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cImE0
MWFhNWVmLWI3OTYtNDY0ZC05ODA3LWIwYTJkMjA4YmVhYVwiPntcImlucHV0c1wiOntcIjBmNDVk
Nzc1LTc0MTUtNGFmNC05M2Q3LWI3YTAzNDc2MjM0OVwiOntcImlucHV0X3R5cGVcIjpcInN0YXRp
Y1wiLFwic3RhdGljX2lucHV0XCI6e1wibXVsdGlzZWxlY3RfdmFsdWVcIjpbXSxcInRleHRfdmFs
dWVcIjpcImVuXCJ9fX0sXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5mbl93YXRz
b25fdHJhbnNsYXRlX3NvdXJjZV90ZXh0ID0gbm90ZS50ZXh0LmNvbnRlbnRcIixcInJlc3VsdF9u
YW1lXCI6XCJ0cmFuc2xhdGVkX3RleHRcIixcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcIm5v
dGUuYWRkTm90ZShcXFwiVHJhbnNsYXRlZCBieSBXYXRzb246IFxcXFxuXFxcIiArIHJlc3VsdHMu
dmFsdWUpXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21p
bmc+U2VxdWVuY2VGbG93XzF3bDdjdWY8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3df
MDIza2x6bzwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVu
Y2VGbG93XzF3bDdjdWZcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRS
ZWY9XCJTZXJ2aWNlVGFza18xOWh2bTJvXCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzAyYTkz
dTBcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzAyM2tsem88L2luY29taW5nPjwvZW5kRXZlbnQ+
PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wMjNrbHpvXCIgc291cmNlUmVmPVwiU2Vy
dmljZVRhc2tfMTlodm0yb1wiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzAyYTkzdTBcIi8+PHRleHRB
bm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIg
d29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFz
c29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJn
ZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5E
aWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50
PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5F
bGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlc
Ij48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxODZcIiB5PVwi
MTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRo
PVwiOTBcIiB4PVwiMTgxXCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6
QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25f
MWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6
QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1
ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIx
OTBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIxN1wiLz48b21nZGk6d2F5cG9pbnQg
eD1cIjE1OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQ
TU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMTlodm0y
b1wiIGlkPVwiU2VydmljZVRhc2tfMTlodm0yb19kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
ODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIzMjZcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFw
ZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzF3bDdjdWZcIiBp
ZD1cIlNlcXVlbmNlRmxvd18xd2w3Y3VmX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIyMjJcIiB4
c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjMy
NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVs
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1cIjIyOVwiIHk9XCIx
ODQuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8wMmE5M3UwXCIgaWQ9XCJFbmRFdmVudF8wMmE5
M3UwX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNDc5
XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEz
XCIgd2lkdGg9XCI5MFwiIHg9XCI0NTJcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48
L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNl
Rmxvd18wMjNrbHpvXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMDIza2x6b19kaVwiPjxvbWdkaTp3YXlw
b2ludCB4PVwiNDI2XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2Rp
OndheXBvaW50IHg9XCI0NzlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48
YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCI5MFwi
IHg9XCI0MDcuNVwiIHk9XCIxODQuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBN
TkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlv
bnM+IiwgInZlcnNpb24iOiAyMn0sICJhY3Rpb25zIjogW119XSwgInJvbGVzIjogW10sICJ3b3Jr
c3BhY2VzIjogW10sICJmdW5jdGlvbnMiOiBbeyJpZCI6IDE4LCAibmFtZSI6ICJmbl93YXRzb25f
dHJhbnNsYXRlIiwgImRpc3BsYXlfbmFtZSI6ICJXYXRzb24gVHJhbnNsYXRlIiwgImRlc2NyaXB0
aW9uIjogeyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50IjogIlRyYW5zbGF0ZXMgaW5wdXQgdGV4
dCB0byBhIHRhcmdldCBsYW5ndWFnZSBmcm9tIHNvdXJjZSBsYW5ndWFnZSwgb3IgaWYgaXQgaXMg
bm90IHNwZWNpZmllZCBhdHRlbXB0cyB0byBndWVzcyB0aGUgb3JpZ2luYWwgbGFuZ3VhZ2UuIn0s
ICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAiZm5fd2F0c29uX3F1ZXVlIiwgImV4cG9ydF9rZXkiOiAi
Zm5fd2F0c29uX3RyYW5zbGF0ZSIsICJ1dWlkIjogImE0MWFhNWVmLWI3OTYtNDY0ZC05ODA3LWIw
YTJkMjA4YmVhYSIsICJ2ZXJzaW9uIjogMTksICJjcmVhdG9yIjogeyJpZCI6IDIsICJ0eXBlIjog
InVzZXIiLCAibmFtZSI6ICJhQGEuY29tIiwgImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQgU3lz
YWRtaW4ifSwgImxhc3RfbW9kaWZpZWRfYnkiOiB7ImlkIjogMiwgInR5cGUiOiAidXNlciIsICJu
YW1lIjogImFAYS5jb20iLCAiZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiJ9LCAi
bGFzdF9tb2RpZmllZF90aW1lIjogMTUzMTg4MjA3MTM2MCwgInZpZXdfaXRlbXMiOiBbeyJzdGVw
X2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwg
ImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogIjBmNDVkNzc1LTc0MTUtNGFm
NC05M2Q3LWI3YTAzNDc2MjM0OSIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9LCB7InN0ZXBf
bGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAi
ZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiMGZmYzQzM2QtMGFjZi00NDdj
LWJiZWUtMjlhYjQ3MWIxZTk1IiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9s
YWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJm
aWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICI0OThiNDI4Zi1mYTY1LTQ4MWEt
YWFlZi0yMTUxYmI5ODM5MmUiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfV0sICJ3b3JrZmxv
d3MiOiBbeyJ3b3JrZmxvd19pZCI6IDMxLCAibmFtZSI6ICJFeGFtcGxlOiBXYXRzb24gVHJhbnNs
YXRlIE5vdGUiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAid2F0c29uX3RyYW5zbGF0ZV9ub3RlIiwg
Im9iamVjdF90eXBlIjogIm5vdGUiLCAiZGVzY3JpcHRpb24iOiBudWxsLCAidXVpZCI6IG51bGws
ICJhY3Rpb25zIjogW119XX1dfQ==
"""
    )
