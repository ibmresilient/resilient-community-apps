[
    {
        "activation_type": "{{ inputs.pbm_activation_type }}",
        "content": {
            "content_version": 3,
            "xml": ""
        },
        "create_date": 1652961296202,
        "creator_principal": {
        },
        "description": {
            "format": "text",
            "content": "function, script and playbook inputs"
        },
        "display_name": "{{ playbook_info.playbook_name }}",
        "export_key": "{{ playbook_info.playbook_name_api_name }}",
        "field_type_handle": "{{ playbook_info.playbook_uuid }}",
        "fields_type": {
            "actions": [],
            "display_name": "{{ playbook_info.playbook_name }}",
            "export_key": "{{ playbook_info.playbook_uuid }}",
            "fields": {
                {% if inputs.get('pbm_activation_fields') and inputs.get('pbm_activation_type') == 'Manual' -%}
                    {% for current_funct in functions -%}
                      {# when multiple functions in a playbook, just prompt for input to first -#}
                      {% if (loop.first and inputs.get('pbm_add_to_same_playbook')) or not inputs.get('pbm_add_to_same_playbook') -%}
                        {% for field in current_funct.fields -%}
                        "{{ field.name }}" : {
                            "allow_default_value" : false,
                            "blank_option" : {{ field.blank_option | json }},
                            "calculated" : false,
                            "changeable" : true,
                            "chosen" : false,
                            "default_chosen_by_server" : false,
                            "deprecated" : false,
                            "export_key" : "{{ playbook_info.playbook_uuid }}/{{ field.name }}",
                            "hide_notification" : false,
                            "input_type" : "{{ field.input_type }}",
                            "internal" : false,
                            {% if field['required'] %}
                                "required": "{{ field['required'] }}",
                            {% endif %}
                            "is_tracked" : false,
                            "name" : "{{ field.name }}",
                            "operation_perms" : { },
                            "operations" : [ ],
                            "placeholder" : "",
                            "prefix" : null,
                            "read_only" : false,
                            "rich_text" : {{ field.rich_text | json }},
                            "tags" : [ ],
                            "templates" : [ ],
                            "text" : "{{ field.text | replace('"', '\\"') | replace('_', ' ') | title }}",
                            "tooltip" : "{{ field.tooltip | replace('"', '\\"') }}",
                            "type_id" : 7309,
                            {% set uuid_field = "{}/{}".format(playbook_info.get('playbook_uuid'), field.get('name')) -%}
                            "uuid" : "{{ uuid_field | make_uuid }}",
                            "values" : {{ field['values'] | json }}
                        }
                        {% if not loop.last %},{% endif -%}
                        {% endfor -%}
                      {% if not (loop.first and inputs.get('pbm_add_to_same_playbook')) and not loop.last %},{% endif -%}
                      {% endif -%}
                    {% endfor -%}
                {% endif -%}
            },
            "for_actions": false,
            "for_custom_fields": false,
            "for_notifications": false,
            "for_workflows": false,
            "id": null,
            "parent_types": [
                "__playbook"
            ],
            "properties": {
                "can_create": false,
                "can_destroy": false,
                "for_who": []
            },
            "scripts": [],
            "tags": [],
            "type_id": 28,
            "type_name": "{{ playbook_info.playbook_uuid }}",
            "uuid": "{{ ""|make_uuid }}"
        },
        "is_deleted": false,
        "is_locked": false,
        "last_modified_principal": {
        },
        "last_modified_time": 1652961625333,
        "local_scripts": [
            {% for current_funct in functions -%}
                {# global scripts have 'id' whereas local scripts will not #}
                {% if not current_funct.script_info.id -%}
                {
                    "actions": [],
                    "created_date": 1652961380454,
                    "creator_id": "ibmsoar@ibm.com",
                    "description": "Skeleton script for parsing function results.",
                    "enabled": false,
                    "export_key": "parse results for {{ current_funct.function_name }}",
                    "language": "python3",
                    "name": "parse results for {{ current_funct.function_name }}",
                    "object_type": "{{ inputs.pbm_playbook_type }}",
                    "playbook_handle": "{{ playbook_info.playbook_name_api_name }}",
                    "programmatic_name": "{{ current_funct.script_info.programmatic_name }}",
                    "script_text": "content = playbook.functions.results.{{ current_funct.function_name }}\nif content.success:\n  # change to include your parsing logic\n  log.error('change logic to parse the function results')\nelse:\n  incident.addNote(\"Failed: {}\".format(content.reason))",
                    "tags": [],
                    "uuid": "{{ current_funct.script_info.uuid }}"
                }
                {% if not loop.last %},{% endif -%}
                {% endif -%}
            {% endfor -%}
        ],
        "manual_settings": {
            "activation_conditions": {
                "conditions": [],
                "logic_type": "all"
            },
            "view_items" : [
                {% if inputs.get('pbm_activation_fields') and inputs.get('pbm_activation_type') == 'Manual' -%}
                    {% for current_funct in functions -%}
                      {# when multiple functions in a playbook, just prompt for input to first -#}
                      {% if (loop.first and inputs.get('pbm_add_to_same_playbook')) or not inputs.get('pbm_add_to_same_playbook') -%}
                        {% for field in current_funct.fields -%}
                            {
                                {% set content_field = "{}/{}".format(playbook_info.get('playbook_uuid'), field.get('name')) -%}
                                "content" : "{{ content_field | make_uuid }}",
                                "element" : "field_uuid",
                                "field_type" : "{{ playbook_info.playbook_uuid }}",
                                "show_if" : null,
                                "show_link_header" : false,
                                "step_label" : null
                            }
                        {% if not loop.last %},{% endif -%}
                        {% endfor -%}
                      {% if not (loop.first and inputs.get('pbm_add_to_same_playbook')) and not loop.last %},{% endif -%}
                      {% endif -%}
                    {% endfor -%}
                {% endif -%}
            ]
        },
        "name": "{{ playbook_info.playbook_name_api_name }}",
        "object_type": "{{ inputs.pbm_playbook_type }}",
        "status": "draft",
        "uuid": "{{ playbook_info.uuid_uuid }}",
        "version": 5
    }
]