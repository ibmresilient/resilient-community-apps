# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_ldap_search"""

from __future__ import print_function
from resilient_circuits.util import *


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     ldap_param
    #     ldap_search_attributes
    #     ldap_search_base
    #     ldap_search_filter
    #   DataTables:
    #     ldap_query_results
    #   Message Destinations:
    #     ldap
    #   Functions:
    #     ldap_search
    #   Workflows:
    #     wf_ldap_search
    #   Rules:
    #     Example: LDAP Search - Person


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJwcm9ncmFtbWF0aWNfbmFtZSI6ICJ3
Zl9sZGFwX3NlYXJjaCIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJleHBvcnRfa2V5Ijog
IndmX2xkYXBfc2VhcmNoIiwgInV1aWQiOiAiOGExMzdkZTQtYjZkNi00YjJkLTkxMWMtYjMxNGQ2
ZjRkMzJhIiwgImxhc3RfbW9kaWZpZWRfYnkiOiAiYUBhLmNvbSIsICJuYW1lIjogIkV4YW1wbGU6
IExEQVAgU2VhcmNoIC0gUGVyc29uIiwgImNvbnRlbnQiOiB7InhtbCI6ICI8P3htbCB2ZXJzaW9u
PVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8v
d3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0
cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0
cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0
cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9y
Zy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1M
U2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9y
Zy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJ3Zl9sZGFwX3NlYXJjaFwiIGlzRXhlY3V0YWJsZT1cInRy
dWVcIiBuYW1lPVwiRXhhbXBsZTogTERBUCBTZWFyY2ggLSBQZXJzb25cIj48ZG9jdW1lbnRhdGlv
bj5FeGFtcGxlIHdvcmtmbG93IHdoaWNoIHJ1bnMgYSBwZXJzb24gcXVlcnkgYWdhaW5zdCBhbiBM
REFQIHNlcnZlci48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1
NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzA3d3h0Zmw8L291dGdvaW5nPjwvc3RhcnRF
dmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xaDQ0N2YxXCIgbmFtZT1cImxkYXBf
c2VhcmNoXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48
cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI1YjI0MDg4Ni02Y2MxLTQ0ZDQtOTk3Yi02NTI0MDFm
ZGFmZjZcIj57XCJpbnB1dHNcIjp7fSxcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiIyMgIExE
QVAgU2VhcmNoIFdvcmtmbG93IC0gcHJlLXByb2Nlc3Npbmcgc2NyaXB0ICMjXFxuaW5wdXRzLmxk
YXBfc2VhcmNoX2Jhc2UgPSBcXFwiZGM9ZXhhbXBsZSxkYz1jb21cXFwiXFxuaW5wdXRzLmxkYXBf
c2VhcmNoX2ZpbHRlciA9IFxcXCIoJmFtcDsob2JqZWN0Q2xhc3M9cGVyc29uKSh1aWQ9JWxkYXBf
cGFyYW0lKSlcXFwiXFxuaW5wdXRzLmxkYXBfc2VhcmNoX2F0dHJpYnV0ZXMgPSBcXFwiY24sc24s
bWFpbCx0ZWxlcGhvbmVOdW1iZXJcXFwiXFxuaW5wdXRzLmxkYXBfcGFyYW0gPSBhcnRpZmFjdC52
YWx1ZVwiLFwicmVzdWx0X25hbWVcIjpcIlwiLFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwi
IyMgIExEQVAgc2VhcmNoIHdvcmtmbG93IC0gcG9zdCBwcm9jZXNzaW5nIHNjcmlwdCAjI1xcbiMg
RXhhbXBsZSBvZiBleHBlY3RlZCByZXN1bHRzIC0gT3BlbkxkYXBcXG5cXFwiXFxcIlxcXCJcXG4n
ZW50cmllcyc6IFt7XFxcImRuXFxcIjogXFxcInVpZD1uZXd0b24sZGM9ZXhhbXBsZSxkYz1jb21c
XFwiLCBcXFwidGVsZXBob25lTnVtYmVyXFxcIjogW10sIFxcXCJ1aWRcXFwiOiBbXFxcIm5ld3Rv
blxcXCJdLFxcbiAgICBcXFwibWFpbFxcXCI6IFtcXFwibmV3dG9uQGxkYXAuZm9ydW1zeXMuY29t
XFxcIl0sIFxcXCJzblxcXCI6IFtcXFwiTmV3dG9uXFxcIl0sIFxcXCJjblxcXCI6IFtcXFwiSXNh
YWMgTmV3dG9uXFxcIl19LFxcbiAgICB7XFxcImRuXFxcIjogXFxcInVpZD1laW5zdGVpbixkYz1l
eGFtcGxlLGRjPWNvbVxcXCIsIFxcXCJ0ZWxlcGhvbmVOdW1iZXJcXFwiOiBbXFxcIjMxNC0xNTkt
MjY1M1xcXCJdLCBcXFwidWlkXFxcIjogW1xcXCJlaW5zdGVpblxcXCJdLFxcbiAgICBcXFwibWFp
bFxcXCI6IFtcXFwiZWluc3RlaW5AbGRhcC5mb3J1bXN5cy5jb21cXFwiXSwgXFxcInNuXFxcIjog
W1xcXCJFaW5zdGVpblxcXCJdLCBcXFwiY25cXFwiOiBbXFxcIkFsYmVydCBFaW5zdGVpblxcXCJd
fV1cXG5cXFwiXFxcIlxcXCJcXG4jIEV4YW1wbGUgb2YgZXhwZWN0ZWQgcmVzdWx0cyAtIEFEXFxu
XFxuIyAgR2xvYmFsc1xcbkVOVFJZX1RPX0RBVEFUQUJMRV9NQVAgPSB7XFxuICAgXFxcInVpZFxc
XCI6IFxcXCJ1aWRcXFwiLFxcbiAgIFxcXCJjblxcXCI6IFxcXCJmdWxsbmFtZVxcXCIsXFxuICAg
XFxcInNuXFxcIjogXFxcInN1cm5hbWVcXFwiLFxcbiAgIFxcXCJtYWlsXFxcIjogXFxcImVtYWls
X2FkZHJlc3NcXFwiLFxcbiAgIFxcXCJ0ZWxlcGhvbmVOdW1iZXJcXFwiOiBcXFwidGVsZXBob25l
X251bWJlclxcXCJcXG59XFxuIyBQcm9jZXNzaW5nXFxuZm9yIGVudHJ5IGluIHJlc3VsdHMuZW50
cmllczpcXG4gaWYgZW50cnkgaXMgTm9uZTpcXG4gICAgIGJyZWFrXFxuIGVsc2U6XFxuICAgICBy
b3cgPSBpbmNpZGVudC5hZGRSb3coXFxcImxkYXBfcXVlcnlfcmVzdWx0c1xcXCIpXFxuIGZvciBr
IGluIEVOVFJZX1RPX0RBVEFUQUJMRV9NQVA6XFxuICAgIGlmIGVudHJ5W2tdIGlzIE5vbmU6XFxu
ICAgICAgICByb3dbRU5UUllfVE9fREFUQVRBQkxFX01BUFtrXV0gPSBcXFwiTi9BXFxcIlxcbiAg
ICBlbHNlOlxcbiAgICAgIGlmIGlzaW5zdGFuY2UoZW50cnlba10sIHVuaWNvZGUpOlxcbiAgICAg
ICAgcm93W0VOVFJZX1RPX0RBVEFUQUJMRV9NQVBba11dID0gc3RyKGVudHJ5W2tdKVxcbiAgICAg
IGVsc2U6XFxuICAgICAgICByb3dbRU5UUllfVE9fREFUQVRBQkxFX01BUFtrXV0gPSBzdHIoZW50
cnlba11bMF0pXFxuXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48
aW5jb21pbmc+U2VxdWVuY2VGbG93XzA3d3h0Zmw8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5j
ZUZsb3dfMGtpZzYxdzwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwi
U2VxdWVuY2VGbG93XzA3d3h0ZmxcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0
YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18xaDQ0N2YxXCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50
XzFraDBqNm5cIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBraWc2MXc8L2luY29taW5nPjwvZW5k
RXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wa2lnNjF3XCIgc291cmNlUmVm
PVwiU2VydmljZVRhc2tfMWg0NDdmMVwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzFraDBqNm5cIi8+
PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0
IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBp
ZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1c
IiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vzcz48YnBtbmRp
OkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5F
bGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFz
eG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJc
IiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwi
IHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90
YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlv
bl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50
IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5
cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBt
bmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tf
MWg0NDdmMVwiIGlkPVwiU2VydmljZVRhc2tfMWg0NDdmMV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIyNjZcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQ
TU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzA3d3h0
ZmxcIiBpZD1cIlNlcXVlbmNlRmxvd18wN3d4dGZsX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIx
OThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQg
eD1cIjI2NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBN
TkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMjMyXCIg
eT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpC
UE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8xa2gwajZuXCIgaWQ9XCJFbmRFdmVudF8x
a2gwajZuX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwi
NDI4XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjEzXCIgd2lkdGg9XCIwXCIgeD1cIjQ0NlwiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxhYmVs
PjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVu
Y2VGbG93XzBraWc2MXdcIiBpZD1cIlNlcXVlbmNlRmxvd18wa2lnNjF3X2RpXCI+PG9tZ2RpOndh
eXBvaW50IHg9XCIzNjZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21n
ZGk6d2F5cG9pbnQgeD1cIjQyOFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIv
PjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBc
IiB4PVwiMzk3XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVk
Z2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+
IiwgIndvcmtmbG93X2lkIjogIndmX2xkYXBfc2VhcmNoIiwgInZlcnNpb24iOiAzNX0sICJ3b3Jr
Zmxvd19pZCI6IDEsICJhY3Rpb25zIjogW10sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTI5MDcz
NDIzMzQ4LCAiY3JlYXRvcl9pZCI6ICJhQGEuY29tIiwgImRlc2NyaXB0aW9uIjogIkV4YW1wbGUg
d29ya2Zsb3cgd2hpY2ggcnVucyBhIHBlcnNvbiBxdWVyeSBhZ2FpbnN0IGFuIExEQVAgc2VydmVy
LiJ9XSwgImFjdGlvbnMiOiBbeyJsb2dpY190eXBlIjogImFsbCIsICJuYW1lIjogIkV4YW1wbGU6
IExEQVAgU2VhcmNoIC0gUGVyc29uIiwgInZpZXdfaXRlbXMiOiBbXSwgInR5cGUiOiAxLCAid29y
a2Zsb3dzIjogWyJ3Zl9sZGFwX3NlYXJjaCJdLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAi
dGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImE0YmZlMWEwLWY2OTQtNDY3NS1iNGJj
LThmYTA4MTkxYTE0MCIsICJhdXRvbWF0aW9ucyI6IFtdLCAiZXhwb3J0X2tleSI6ICJFeGFtcGxl
OiBMREFQIFNlYXJjaCAtIFBlcnNvbiIsICJjb25kaXRpb25zIjogW10sICJpZCI6IDI3LCAibWVz
c2FnZV9kZXN0aW5hdGlvbnMiOiBbImxkYXAiXX1dLCAibGF5b3V0cyI6IFtdLCAiZXhwb3J0X2Zv
cm1hdF92ZXJzaW9uIjogMiwgImlkIjogMSwgImluZHVzdHJpZXMiOiBudWxsLCAicGhhc2VzIjog
W10sICJhY3Rpb25fb3JkZXIiOiBbXSwgImdlb3MiOiBudWxsLCAic2VydmVyX3ZlcnNpb24iOiB7
Im1ham9yIjogMzAsICJ2ZXJzaW9uIjogIjMwLjAuMCIsICJidWlsZF9udW1iZXIiOiAwLCAibWlu
b3IiOiAwfSwgInRpbWVmcmFtZXMiOiBudWxsLCAid29ya3NwYWNlcyI6IFtdLCAiYXV0b21hdGlj
X3Rhc2tzIjogW10sICJmdW5jdGlvbnMiOiBbeyJkaXNwbGF5X25hbWUiOiAibGRhcF9zZWFyY2gi
LCAidXVpZCI6ICI1YjI0MDg4Ni02Y2MxLTQ0ZDQtOTk3Yi02NTI0MDFmZGFmZjYiLCAiY3JlYXRv
ciI6IHsiZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJ0eXBlIjogInVzZXIi
LCAiaWQiOiA0LCAibmFtZSI6ICJhQGEuY29tIn0sICJ2aWV3X2l0ZW1zIjogW3sic2hvd19pZiI6
IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZh
bHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiZTcyZTQ2OWUtMzQyZS00
ZWY5LTg4NjMtZDg0ZGVlMjc3NThhIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjog
bnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFs
c2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJhNTUwZTAxMS0zMThlLTRi
N2MtYTRlZS03ZWMwMTFlZTA0NDciLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3dfaWYiOiBu
dWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxz
ZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogImQ0NDlhYTUzLTIwZTgtNGFm
MC1iYjYxLTUyNWY0MjA4YjA3YiIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hvd19pZiI6IG51
bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNl
LCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiODQ2ZGZmNGYtNzFiNi00YWIy
LWJmZDMtZjlmZjAyZTI0NjQxIiwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJleHBvcnRfa2V5Ijog
ImxkYXBfc2VhcmNoIiwgImxhc3RfbW9kaWZpZWRfYnkiOiB7ImRpc3BsYXlfbmFtZSI6ICJSZXNp
bGllbnQgU3lzYWRtaW4iLCAidHlwZSI6ICJ1c2VyIiwgImlkIjogNCwgIm5hbWUiOiAiYUBhLmNv
bSJ9LCAibmFtZSI6ICJsZGFwX3NlYXJjaCIsICJ2ZXJzaW9uIjogMywgIndvcmtmbG93cyI6IFt7
InByb2dyYW1tYXRpY19uYW1lIjogIndmX2xkYXBfc2VhcmNoIiwgIm9iamVjdF90eXBlIjogImFy
dGlmYWN0IiwgInV1aWQiOiBudWxsLCAiYWN0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBM
REFQIFNlYXJjaCAtIFBlcnNvbiIsICJ3b3JrZmxvd19pZCI6IDEsICJkZXNjcmlwdGlvbiI6IG51
bGx9XSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1Mjg5ODQ5Mjg5NTYsICJkZXN0aW5hdGlvbl9o
YW5kbGUiOiAibGRhcCIsICJpZCI6IDEsICJkZXNjcmlwdGlvbiI6IHsiY29udGVudCI6ICJSZXNp
bGllbnQgRnVuY3Rpb24gdG8gZG8gYSBzZWFyY2ggb3IgcXVlcnkgYWdhaW5zdCBhbiBMREFQIHNl
cnZlci4iLCAiZm9ybWF0IjogInRleHQifX1dLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJyZWd1
bGF0b3JzIjogbnVsbCwgImluY2lkZW50X3R5cGVzIjogW3siY3JlYXRlX2RhdGUiOiAxNTI5MDcz
OTA4NTc5LCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwp
IiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImlk
IjogMCwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgInVwZGF0
ZV9kYXRlIjogMTUyOTA3MzkwODU3OSwgInV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4LWFkMzkt
NGEwMDA0MDQ0YWEwIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50
X2lkIjogbnVsbCwgImhpZGRlbiI6IGZhbHNlfV0sICJzY3JpcHRzIjogW10sICJ0eXBlcyI6IFt7
ImRpc3BsYXlfbmFtZSI6ICJMREFQIFF1ZXJ5IHJlc3VsdHMiLCAidXVpZCI6ICJiZThhMzE2OS00
NmM5LTQ5MGMtOTE2MS1iMDU4NGU0ZTcxZWQiLCAidHlwZV9pZCI6IDgsICJmaWVsZHMiOiB7InRl
bGVwaG9uZV9udW1iZXIiOiB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMDAwLCAib3Bl
cmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogIlRlbGVwaG9uZSBOdW1iZXIiLCAiYmxhbmtfb3B0
aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDE1
NywgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICIyNmU0NjAyNS0xNjZjLTQ1MDUtYTA1MS1k
ZWU0NmUxNmRmOTgiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9v
bHRpcCI6ICIiLCAid2lkdGgiOiAxNzIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0Ijog
ZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAibGRhcF9xdWVyeV9yZXN1bHRz
L3RlbGVwaG9uZV9udW1iZXIiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9s
ZGVyIjogIiIsICJuYW1lIjogInRlbGVwaG9uZV9udW1iZXIiLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgIm9yZGVyIjogNH0sICJzdXJuYW1lIjogeyJv
cGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTAwMCwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAi
dGV4dCI6ICJTdXJuYW1lIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwg
ImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAxNTUsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQi
OiAiNTk1Zjk2NDEtNDZjNi00ODVkLTgwMDUtOGFmOThlYjJhOTZjIiwgImNob3NlbiI6IGZhbHNl
LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAiOiAiIiwgIndpZHRoIjogMTEzLCAiaW50
ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBv
cnRfa2V5IjogImxkYXBfcXVlcnlfcmVzdWx0cy9zdXJuYW1lIiwgImhpZGVfbm90aWZpY2F0aW9u
IjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJzdXJuYW1lIiwgImRlZmF1bHRf
Y2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW10sICJvcmRlciI6IDJ9LCAiZnVs
bG5hbWUiOiB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMDAwLCAib3BlcmF0aW9uX3Bl
cm1zIjoge30sICJ0ZXh0IjogIkZ1bGxuYW1lIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJl
Zml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAxNTYsICJyZWFkX29ubHkiOiBm
YWxzZSwgInV1aWQiOiAiYjQ2OWQwZmUtYWIzMi00MTAwLWJiYTUtOWQ0MDIxMmZkMTI3IiwgImNo
b3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAiOiAiIiwgIndpZHRo
IjogMTEzLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVz
IjogW10sICJleHBvcnRfa2V5IjogImxkYXBfcXVlcnlfcmVzdWx0cy9mdWxsbmFtZSIsICJoaWRl
X25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAiZnVsbG5h
bWUiLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgIm9y
ZGVyIjogMX0sICJlbWFpbF9hZGRyZXNzIjogeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjog
MTAwMCwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJFbWFpbCBhZGRyZXNzIiwgImJs
YW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAi
aWQiOiAxNTksICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiMzk4NTkyY2ItNGQ1Mi00NzNl
LTkyNmYtMzJjN2QxMmNhMTFjIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0
IiwgInRvb2x0aXAiOiAiIiwgIndpZHRoIjogMTMyLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hf
dGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogImxkYXBfcXVlcnlf
cmVzdWx0cy9lbWFpbF9hZGRyZXNzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFj
ZWhvbGRlciI6ICIiLCAibmFtZSI6ICJlbWFpbF9hZGRyZXNzIiwgImRlZmF1bHRfY2hvc2VuX2J5
X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW10sICJvcmRlciI6IDN9LCAidWlkIjogeyJvcGVy
YXRpb25zIjogW10sICJ0eXBlX2lkIjogMTAwMCwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4
dCI6ICJVSUQiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdl
YWJsZSI6IHRydWUsICJpZCI6IDE1OCwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICI5NDU5
NWUyMC00MWM4LTRlMzctYWRmZi03MGU5NDlhYThkZGMiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1
dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICIiLCAid2lkdGgiOiAxMTMsICJpbnRlcm5hbCI6
IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXki
OiAibGRhcF9xdWVyeV9yZXN1bHRzL3VpZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
cGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAidWlkIiwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZl
ciI6IGZhbHNlLCAidmFsdWVzIjogW10sICJvcmRlciI6IDB9fSwgInBhcmVudF90eXBlcyI6IFsi
aW5jaWRlbnQiXSwgInR5cGVfbmFtZSI6ICJsZGFwX3F1ZXJ5X3Jlc3VsdHMiLCAiZXhwb3J0X2tl
eSI6ICJsZGFwX3F1ZXJ5X3Jlc3VsdHMiLCAiZm9yX2N1c3RvbV9maWVsZHMiOiBmYWxzZSwgImFj
dGlvbnMiOiBbXSwgInByb3BlcnRpZXMiOiB7ImZvcl93aG8iOiBbXSwgImNhbl9kZXN0cm95Ijog
ZmFsc2UsICJjYW5fY3JlYXRlIjogZmFsc2V9LCAiZm9yX2FjdGlvbnMiOiBmYWxzZSwgImZvcl9u
b3RpZmljYXRpb25zIjogZmFsc2UsICJzY3JpcHRzIjogW10sICJpZCI6IG51bGx9XSwgIm1lc3Nh
Z2VfZGVzdGluYXRpb25zIjogW3sidXVpZCI6ICIyN2U3M2IyZi02OTEwLTRiZDgtOGI1Mi00ODFm
ZWM0M2I1YzYiLCAiZXhwb3J0X2tleSI6ICJsZGFwIiwgIm5hbWUiOiAibGRhcCIsICJkZXN0aW5h
dGlvbl90eXBlIjogMCwgInByb2dyYW1tYXRpY19uYW1lIjogImxkYXAiLCAiZXhwZWN0X2FjayI6
IHRydWUsICJ1c2VycyI6IFsiYUBhLmNvbSJdfV0sICJpbmNpZGVudF9hcnRpZmFjdF90eXBlcyI6
IFtdLCAicm9sZXMiOiBbXSwgImZpZWxkcyI6IFt7Im9wZXJhdGlvbnMiOiBbXSwgInJlYWRfb25s
eSI6IHRydWUsICJ1dWlkIjogImMzZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIs
ICJ0ZW1wbGF0ZXMiOiBbXSwgInR5cGVfaWQiOiAwLCAiY2hvc2VuIjogZmFsc2UsICJ0ZXh0Ijog
IlNpbXVsYXRpb24iLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJleHBvcnRf
a2V5IjogImluY2lkZW50L2luY190cmFpbmluZyIsICJ0b29sdGlwIjogIldoZXRoZXIgdGhlIGlu
Y2lkZW50IGlzIGEgc2ltdWxhdGlvbiBvciBhIHJlZ3VsYXIgaW5jaWRlbnQuICBUaGlzIGZpZWxk
IGlzIHJlYWQtb25seS4iLCAicmljaF90ZXh0IjogZmFsc2UsICJvcGVyYXRpb25fcGVybXMiOiB7
fSwgInByZWZpeCI6IG51bGwsICJpbnRlcm5hbCI6IGZhbHNlLCAidmFsdWVzIjogW10sICJibGFu
a19vcHRpb24iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJjaGFuZ2VhYmxlIjog
dHJ1ZSwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDExMSwgIm5hbWUiOiAiaW5j
X3RyYWluaW5nIn0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9u
X3Blcm1zIjoge30sICJ0ZXh0IjogImxkYXBfc2VhcmNoX2Jhc2UiLCAiYmxhbmtfb3B0aW9uIjog
ZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDE2NSwgInJl
YWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJlNzJlNDY5ZS0zNDJlLTRlZjktODg2My1kODRkZWUy
Nzc1OGEiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6
ICJUaGUgYmFzZSBvZiB0aGUgTERBUCBzZWFyY2ggcmVxdWVzdC4iLCAiaW50ZXJuYWwiOiBmYWxz
ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9f
ZnVuY3Rpb24vbGRhcF9zZWFyY2hfYmFzZSIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
cGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAibGRhcF9zZWFyY2hfYmFzZSIsICJkZWZhdWx0X2No
b3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10s
ICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAibGRhcF9zZWFy
Y2hfZmlsdGVyIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5n
ZWFibGUiOiB0cnVlLCAiaWQiOiAxNjYsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiYTU1
MGUwMTEtMzE4ZS00YjdjLWE0ZWUtN2VjMDExZWUwNDQ3IiwgImNob3NlbiI6IGZhbHNlLCAiaW5w
dXRfdHlwZSI6ICJ0ZXh0YXJlYSIsICJ0b29sdGlwIjogIlRoZSBmaWx0ZXIgb2YgdGhlIExEQVAg
c2VhcmNoIHJlcXVlc3QiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAi
dGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vbGRhcF9zZWFyY2hfZmls
dGVyIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFt
ZSI6ICJsZGFwX3NlYXJjaF9maWx0ZXIiLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3Bl
cmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImxkYXBfcGFyYW0iLCAiYmxhbmtfb3B0aW9uIjog
ZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDE2NywgInJl
YWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICI4NDZkZmY0Zi03MWI2LTRhYjItYmZkMy1mOWZmMDJl
MjQ2NDEiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6
ICJQYXJhbWV0ZXIgdXNlZCBpbiBMREFQIHNlYXJjaCIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmlj
aF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlv
bi9sZGFwX3BhcmFtIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6
ICIiLCAibmFtZSI6ICJsZGFwX3BhcmFtIiwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZh
bHNlLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9w
ZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJsZGFwX3NlYXJjaF9hdHRyaWJ1dGVzIiwgImJs
YW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAi
aWQiOiAxNjQsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiZDQ0OWFhNTMtMjBlOC00YWYw
LWJiNjEtNTI1ZjQyMDhiMDdiIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0
IiwgInRvb2x0aXAiOiAiQSBzaW5nbGUgYXR0cmlidXRlIG9yIGEgbGlzdCBvZiBhdHRyaWJ1dGVz
IHRvIGJlIHJldHVybmVkIGJ5IHRoZSBMREFQIHNlYXJjaCAiLCAiaW50ZXJuYWwiOiBmYWxzZSwg
InJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9fZnVu
Y3Rpb24vbGRhcF9zZWFyY2hfYXR0cmlidXRlcyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNl
LCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAibGRhcF9zZWFyY2hfYXR0cmlidXRlcyIsICJk
ZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfV0sICJvdmVycmlk
ZXMiOiBbXSwgImV4cG9ydF9kYXRlIjogMTUyOTA3MzQ4MDU1Nn0=
"""
    )
