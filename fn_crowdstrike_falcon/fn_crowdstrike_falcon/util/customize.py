# (c) Copyright IBM Corp. 2019. All Rights Reserved.
# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_crowdstrike_falcon"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_crowdstrike_falcon package"""
    reload_params = {"package": u"fn_crowdstrike_falcon",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"cs_action_name", u"cs_device_id", u"cs_filter_string", u"cs_ioc_type", u"cs_ioc_value", u"cs_query", u"cs_return_limit"], 
                    "datatables": [u"cs_falcon_devices_dt", u"cs_falcon_devices_ioc_ran_on_results_dt"], 
                    "message_destinations": [u"fn_crowdstrike_falcon"], 
                    "functions": [u"fn_cs_falcon_device_actions", u"fn_cs_falcon_get_devices_ioc_ran_on", u"fn_cs_falcon_search"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_cs_falcon_contain_device", u"example_cs_falcon_get_devices_ioc_ran_on", u"example_cs_falcon_get_latest_device_details", u"example_cs_falcon_lift_containment", u"example_cs_falcon_lookup_by_device_id", u"example_cs_falcon_search"], 
                    "actions": [u"Example: CS Falcon: Contain Device", u"Example: CS Falcon: Get Devices IOC Ran On", u"Example: CS Falcon: Get Latest Device Details", u"Example: CS Falcon: Lift Containment", u"Example: CS Falcon: Lookup by Device ID", u"Example: CS Falcon: Search"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     cs_action_name
    #     cs_device_id
    #     cs_filter_string
    #     cs_ioc_type
    #     cs_ioc_value
    #     cs_query
    #     cs_return_limit
    #   DataTables:
    #     cs_falcon_devices_dt
    #     cs_falcon_devices_ioc_ran_on_results_dt
    #   Message Destinations:
    #     fn_crowdstrike_falcon
    #   Functions:
    #     fn_cs_falcon_device_actions
    #     fn_cs_falcon_get_devices_ioc_ran_on
    #     fn_cs_falcon_search
    #   Workflows:
    #     example_cs_falcon_contain_device
    #     example_cs_falcon_get_devices_ioc_ran_on
    #     example_cs_falcon_get_latest_device_details
    #     example_cs_falcon_lift_containment
    #     example_cs_falcon_lookup_by_device_id
    #     example_cs_falcon_search
    #   Rules:
    #     Example: CS Falcon: Contain Device
    #     Example: CS Falcon: Get Devices IOC Ran On
    #     Example: CS Falcon: Get Latest Device Details
    #     Example: CS Falcon: Lift Containment
    #     Example: CS Falcon: Lookup by Device ID
    #     Example: CS Falcon: Search


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogIjk5M2ZmZjczLWZiYzct
NDc0Zi04N2ZjLTA1MTVjYzgwYzRmNiIsICJkZXNjcmlwdGlvbiI6ICJFeGFtcGxlIHdvcmtmbG93
IHRoYXQgdXNlcyB0aGUgQ1MgRmFsY29uOiBTZWFyY2ggZnVuY3Rpb24gdG8gZ2V0IHRoZSBsYXRl
c3QgbWV0YSBkYXRhIG9mIGEgZGV2aWNlIGluIENyb3dkU3RyaWtlIGFuZCB1cGRhdGUgdGhlIGNz
X2ZhbGNvbl9kZXZpY2VzIERhdGEgVGFibGUgYWNjb3JkaW5nbHkuIiwgIm9iamVjdF90eXBlIjog
ImNzX2ZhbGNvbl9kZXZpY2VzX2R0IiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9jc19mYWxjb25f
Z2V0X2xhdGVzdF9kZXZpY2VfZGV0YWlscyIsICJ3b3JrZmxvd19pZCI6IDEzLCAibGFzdF9tb2Rp
ZmllZF9ieSI6ICJhZG1pbkBleGFtcGxlLmNvbSIsICJjb250ZW50IjogeyJ4bWwiOiAiPD94bWwg
dmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwi
aHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5k
aT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdk
Yz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9
XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVu
dD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3
dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8y
MDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2Ft
dW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9jc19mYWxjb25fZ2V0X2xhdGVz
dF9kZXZpY2VfZGV0YWlsc1wiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTog
Q1MgRmFsY29uOiBHZXQgTGF0ZXN0IERldmljZSBEZXRhaWxzXCI+PGRvY3VtZW50YXRpb24+RXhh
bXBsZSB3b3JrZmxvdyB0aGF0IHVzZXMgdGhlIENTIEZhbGNvbjogU2VhcmNoIGZ1bmN0aW9uIHRv
IGdldCB0aGUgbGF0ZXN0IG1ldGEgZGF0YSBvZiBhIGRldmljZSBpbiBDcm93ZFN0cmlrZSBhbmQg
dXBkYXRlIHRoZSBjc19mYWxjb25fZGV2aWNlcyBEYXRhIFRhYmxlIGFjY29yZGluZ2x5LjwvZG9j
dW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2lu
Zz5TZXF1ZW5jZUZsb3dfMHAzNjdtYjwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxlbmRFdmVudCBp
ZD1cIkVuZEV2ZW50XzFoOWJ5ZGNcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzEyeDFrcWs8L2lu
Y29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wcDM2N21i
XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRh
c2tfMGJkbGJ5ZVwiLz48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wYmRsYnllXCIgbmFt
ZT1cIkNTIEZhbGNvbjogU2VhcmNoXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRl
bnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI4YWRhOWRkNi0xOWIzLTQy
YmEtOGNiZC05NTFhMjBmZDAxN2RcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19z
Y3JpcHRcIjpcIiMgR2l2ZW4gdGhlIGlucHV0IGlzIHNldCB0byBvbmUgZGV2aWNlX2lkLCB0aGlz
IGZ1bmN0aW9uIHNob3VsZCByZXR1cm4gb25lIGRldmljZSBpbiByZXN1bHRzLmNvbnRlbnRcXG5p
ZiByZXN1bHRzLnN1Y2Nlc3M6XFxuICBcXG4gICMgR2V0IHRoZSBkZXZpY2UgZGF0YSBhbmQgdXBh
dGUgdGhlIHJvdyBpbiB0aGUgRGF0YSBUYWJsZVxcbiAgZm9yIGRldmljZSBpbiByZXN1bHRzLmNv
bnRlbnQ6XFxuICAgIHJvdy5ob3N0bmFtZSA9IGRldmljZS5ob3N0bmFtZVxcbiAgICByb3cuaXAg
PSBkZXZpY2UubG9jYWxfaXBcXG4gICAgcm93Lm1hYyA9IGRldmljZS5tYWNfYWRkcmVzc1xcbiAg
ICByb3cubGFzdF9zZWVuID0gZGV2aWNlLmxhc3Rfc2VlblxcbiAgICByb3cuc3RhdHVzID0gZGV2
aWNlLnN0YXR1c1xcblxcbmVsc2U6XFxuICAjIEVsc2UsIG5vIGRldmljZSBmb3VuZCwgYWRkIE5v
dGUgdG8gSW5jaWRlbnQgd2l0aCByZWFzb25cXG4gIGluY2lkZW50LmFkZE5vdGUocmVzdWx0cy5y
ZWFzb24pXCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5jc19maWx0ZXJfc3Ry
aW5nID0gXFxcImRldmljZV9pZDonezB9J1xcXCIuZm9ybWF0KHJvdy5kZXZpY2VfaWQpXCJ9PC9y
ZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VG
bG93XzBwMzY3bWI8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMTJ4MWtxazwvb3V0
Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzEyeDFr
cWtcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wYmRsYnllXCIgdGFyZ2V0UmVmPVwiRW5kRXZl
bnRfMWg5YnlkY1wiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xODQ1ZG1o
XCI+PHRleHQ+PCFbQ0RBVEFbaW5wdXRzLmNzX2ZpbHRlcl9zdHJpbmcgPSBcImRldmljZV9pZDon
ezB9J1wiLmZvcm1hdChyb3cuZGV2aWNlX2lkKVxuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+
PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMWI5cnZ4cVwiIHNvdXJjZVJlZj1cIlNlcnZp
Y2VUYXNrXzBiZGxieWVcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xODQ1ZG1oXCIvPjx0
ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzF3azNiYnJcIj48dGV4dD48IVtDREFU
QVtRdWVyaWVzIENyb3dkU3RyaWtlIGZvciB0aGUgZGV2aWNlIGFuZCB1cGRhdGVzIHRoZSBjc19m
YWxjb25fZGV2aWNlIERhdGEgVGFibGUgYWNjb3JkaW5nbHlcbl1dPjwvdGV4dD48L3RleHRBbm5v
dGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzB2ajFyMTZcIiBzb3VyY2VSZWY9
XCJTZXJ2aWNlVGFza18wYmRsYnllXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMXdrM2Ji
clwiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48
YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5l
XzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwi
IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwi
IHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+
PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBi
cG1uRWxlbWVudD1cIkVuZEV2ZW50XzFoOWJ5ZGNcIiBpZD1cIkVuZEV2ZW50XzFoOWJ5ZGNfZGlc
Ij48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI1OTBcIiB5PVwi
MTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0
aD1cIjBcIiB4PVwiNjA4XCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6
QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHAz
NjdtYlwiIGlkPVwiU2VxdWVuY2VGbG93XzBwMzY3bWJfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1c
IjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2lu
dCB4PVwiMzM5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpC
UE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyNjgu
NVwiIHk9XCIxODQuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJw
bW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wYmRsYnllXCIgaWQ9XCJT
ZXJ2aWNlVGFza18wYmRsYnllX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRo
PVwiMTAwXCIgeD1cIjMzOVwiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6
QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMTJ4MWtxa1wiIGlkPVwiU2VxdWVu
Y2VGbG93XzEyeDFrcWtfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQzOVwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTkwXCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI1MTQuNVwiIHk9XCIxODRcIi8+PC9i
cG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5F
bGVtZW50PVwiVGV4dEFubm90YXRpb25fMTg0NWRtaFwiIGlkPVwiVGV4dEFubm90YXRpb25fMTg0
NWRtaF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjM3NFwiIHg9XCIx
MDlcIiB5PVwiNzJcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVs
ZW1lbnQ9XCJBc3NvY2lhdGlvbl8xYjlydnhxXCIgaWQ9XCJBc3NvY2lhdGlvbl8xYjlydnhxX2Rp
XCI+PG9tZ2RpOndheXBvaW50IHg9XCIzNThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjE2NlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjMwOVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMTAyXCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVt
ZW50PVwiVGV4dEFubm90YXRpb25fMXdrM2JiclwiIGlkPVwiVGV4dEFubm90YXRpb25fMXdrM2Ji
cl9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNjVcIiB3aWR0aD1cIjE3MVwiIHg9XCI1NThc
IiB5PVwiMzdcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1l
bnQ9XCJBc3NvY2lhdGlvbl8wdmoxcjE2XCIgaWQ9XCJBc3NvY2lhdGlvbl8wdmoxcjE2X2RpXCI+
PG9tZ2RpOndheXBvaW50IHg9XCI0MzlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE3
OVwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjU4NFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMTAyXCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpC
UE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX2NzX2Zh
bGNvbl9nZXRfbGF0ZXN0X2RldmljZV9kZXRhaWxzIiwgInZlcnNpb24iOiAzfSwgImxhc3RfbW9k
aWZpZWRfdGltZSI6IDE1NDk4OTAyNzMzNTgsICJjcmVhdG9yX2lkIjogImFkbWluQGV4YW1wbGUu
Y29tIiwgImFjdGlvbnMiOiBbXSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfY3NfZmFs
Y29uX2dldF9sYXRlc3RfZGV2aWNlX2RldGFpbHMiLCAibmFtZSI6ICJFeGFtcGxlOiBDUyBGYWxj
b246IEdldCBMYXRlc3QgRGV2aWNlIERldGFpbHMifSwgeyJ1dWlkIjogImUzMzE5MTBkLTUxMWUt
NDk1OS1iY2I5LTAyMjhlNTQ5ZTYxNCIsICJkZXNjcmlwdGlvbiI6ICJFeGFtcGxlIHdvcmtmbG93
IHRoYXQgcXVlcmllcyB5b3VyIENyb3dkU3RyaWtlIEZhbGNvbiBIb3N0cyBmb3IgYSBsaXN0IG9m
IERldmljZXMgdXNpbmcgYSBGaWx0ZXIgYW5kL29yIFF1ZXJ5LiBJZiBEZXZpY2VzIGFyZSBmb3Vu
ZCB0aGUgcG9zdC1wcm9jZXNzIHNjcmlwdCBhZGRzIHRoZW0gdG8gdGhlIGNzX2ZhbGNvbl9kZXZp
Y2VzX2R0IERhdGEgVGFibGUuIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImV4cG9ydF9r
ZXkiOiAiZXhhbXBsZV9jc19mYWxjb25fc2VhcmNoIiwgIndvcmtmbG93X2lkIjogMTAsICJsYXN0
X21vZGlmaWVkX2J5IjogImFkbWluQGV4YW1wbGUuY29tIiwgImNvbnRlbnQiOiB7InhtbCI6ICI8
P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1s
bnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6
YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5z
Om9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpv
bWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVz
aWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRw
Oi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMu
b3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3
dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX2NzX2ZhbGNvbl9zZWFy
Y2hcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IENTIEZhbGNvbjogU2Vh
cmNoXCI+PGRvY3VtZW50YXRpb24+RXhhbXBsZSB3b3JrZmxvdyB0aGF0IHF1ZXJpZXMgeW91ciBD
cm93ZFN0cmlrZSBGYWxjb24gSG9zdHMgZm9yIGEgbGlzdCBvZiBEZXZpY2VzIHVzaW5nIGEgRmls
dGVyIGFuZC9vciBRdWVyeS4gSWYgRGV2aWNlcyBhcmUgZm91bmQgdGhlIHBvc3QtcHJvY2VzcyBz
Y3JpcHQgYWRkcyB0aGVtIHRvIHRoZSBjc19mYWxjb25fZGV2aWNlc19kdCBEYXRhIFRhYmxlLjwv
ZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRn
b2luZz5TZXF1ZW5jZUZsb3dfMW14MG0zazwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxlbmRFdmVu
dCBpZD1cIkVuZEV2ZW50XzAzZGRqaHpcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFmYTlnbnQ8
L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xbXgw
bTNrXCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2Vydmlj
ZVRhc2tfMHd1c2Nmd1wiLz48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wd3VzY2Z3XCIg
bmFtZT1cIkNTIEZhbGNvbjogU2VhcmNoXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxl
eHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI4YWRhOWRkNi0xOWIz
LTQyYmEtOGNiZC05NTFhMjBmZDAxN2RcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2lu
Z19zY3JpcHRcIjpcIiMgSW1wb3J0IERhdGVcXG5mcm9tIGphdmEudXRpbCBpbXBvcnQgRGF0ZVxc
blxcbiMgSWYgdGhlIGZ1bmN0aW9uIGZvdW5kIHNvbWUgZGV2aWNlc1xcbmlmIHJlc3VsdHMuc3Vj
Y2VzczpcXG4gIFxcbiAgIyBHZXQgdGhlIGN1cnJlbnQgdGltZVxcbiAgZHRfbm93ID0gRGF0ZSgp
XFxuICBcXG4gICMgRm9yIGVhY2ggZGV2aWNlLCBhZGQgYSByb3cgdG8gdGhlIGNzX2ZhbGNvbl9k
ZXZpY2VzX2R0XFxuICBmb3IgZGV2aWNlIGluIHJlc3VsdHMuY29udGVudDpcXG4gICAgbmV3X3Jv
dyA9IGluY2lkZW50LmFkZFJvdyhcXFwiY3NfZmFsY29uX2RldmljZXNfZHRcXFwiKVxcbiAgICBu
ZXdfcm93LnRpbWVzdGFtcCA9IGR0X25vd1xcbiAgICBuZXdfcm93LmRldmljZV9pZCA9IGRldmlj
ZS5kZXZpY2VfaWRcXG4gICAgbmV3X3Jvdy5ob3N0bmFtZSA9IGRldmljZS5ob3N0bmFtZVxcbiAg
ICBuZXdfcm93LmlwID0gZGV2aWNlLmxvY2FsX2lwXFxuICAgIG5ld19yb3cubWFjID0gZGV2aWNl
Lm1hY19hZGRyZXNzXFxuICAgIG5ld19yb3cubGFzdF9zZWVuID0gZGV2aWNlLmxhc3Rfc2Vlblxc
biAgICBuZXdfcm93LnN0YXR1cyA9IGRldmljZS5zdGF0dXNcXG5cXG5lbHNlOlxcbiAgIyBFbHNl
LCBubyBkZXZpY2VzIGZvdW5kLCBhZGQgTm90ZSB0byBJbmNpZGVudCB3aXRoIHJlYXNvblxcbiAg
aW5jaWRlbnQuYWRkTm90ZShyZXN1bHRzLnJlYXNvbilcXG5cIixcInByZV9wcm9jZXNzaW5nX3Nj
cmlwdFwiOlwiIyBFeGFtcGxlOiBDUyBGYWxjb246IFNlYXJjaCBwcmUtcHJvY2VzcyBzY3JpcHRc
XG5cXG4jIyMjIyMjIyMjIyMjIyMjIyMjIyNcXG4jIyMgRGVmaW5lIElucHV0cyAjIyNcXG4jIyMj
IyMjIyMjIyMjIyMjIyMjIyNcXG5cXG4jIFNldCBDcm93ZFN0cmlrZSBGaWx0ZXIgU3RyaW5nIGlu
cHV0XFxuIyBTZWU6IGh0dHBzOi8vZmFsY29uLmNyb3dkc3RyaWtlLmNvbS9zdXBwb3J0L2RvY3Vt
ZW50YXRpb24vMi9xdWVyeS1hcGktcmVmZXJlbmNlI2RldmljZXNlYXJjaCBmb3IgZmlsdGVyIHN5
bnRheFxcbiMgRXhhbXBsZTogXFxcImhvc3RuYW1lOidzYW1wbGVOYW1lKicrcGxhdGZvcm1fbmFt
ZTonV2luZG93cydcXFwiID09Jmd0OyBTZWFyY2hlcyBDcm93ZFN0cmlrZSBmb3IgZGV2aWNlcyB3
aG8ncyBob3N0bmFtZSBjb250YWlucyAnc2FtcGxlTmFtZScgYW5kIHBsYXRmb3JtIGlzICdXaW5k
b3dzJ1xcbmlucHV0cy5jc19maWx0ZXJfc3RyaW5nID0gXFxcImhvc3RuYW1lOid7MH0qJytwbGF0
Zm9ybV9uYW1lOid7MX0nXFxcIi5mb3JtYXQoYXJ0aWZhY3QudmFsdWUsIFxcXCJMaW51eFxcXCIp
XFxuXFxuIyBTZXQgQ3Jvd2RTdHJpa2UgUXVlcnlcXG4jIFRoaXMgcXVlcnkgc2VhcmNoZXMgdGhl
IG1ldGEgZGF0YSBvZiBkZXZpY2VzIGFmdGVyIGFwcGx5aW5nIHRoZSBhYm92ZSBmaWx0ZXJcXG4j
IGlucHV0cy5jc19xdWVyeSA9IFxcXCJzYW1wbGVcXFwiXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+
PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFteDBtM2s8L2luY29t
aW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMWZhOWdudDwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFz
az48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzFmYTlnbnRcIiBzb3VyY2VSZWY9XCJT
ZXJ2aWNlVGFza18wd3VzY2Z3XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMDNkZGpoelwiLz48dGV4
dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8wN3h5ZGtiXCI+PHRleHQ+PCFbQ0RBVEFb
SW5wdXRzOiBjc19maWx0ZXJfc3RyaW5nLCBjc19xdWVyeVxuXV0+PC90ZXh0PjwvdGV4dEFubm90
YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMHlkbG8wdVwiIHNvdXJjZVJlZj1c
IlNlcnZpY2VUYXNrXzB3dXNjZndcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8wN3h5ZGti
XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzBjOGd6NXpcIj48dGV4dD48
IVtDREFUQVtRdWVyaWVzIENyb3dkU3RyaWtlIGZvciBEZXZpY2VzIGFuZCBpZiBmb3VuZCBhZGRz
IHRoZW0gdG8gY3NfZmFsY29uX2RldmljZXNfZHQgRGF0YSBUYWJsZS4gRWxzZSwgYWRkcyBhIE5v
dGUgdG8gSW5jaWRlbnRcbl1dPjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBp
ZD1cIkFzc29jaWF0aW9uXzFyMndwbGJcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wd3VzY2Z3
XCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMGM4Z3o1elwiLz48L3Byb2Nlc3M+PGJwbW5k
aTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1u
RWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFw
ZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVh
c3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMjI5
XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBc
IiB3aWR0aD1cIjkwXCIgeD1cIjIyNFwiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50
XzAzZGRqaHpcIiBpZD1cIkVuZEV2ZW50XzAzZGRqaHpfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI2MjZcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxh
YmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1cIjU5OVwiIHk9
XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQ
TU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFteDBtM2tcIiBpZD1cIlNlcXVlbmNl
Rmxvd18xbXgwbTNrX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIyNjVcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQxNFwiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1cIjI5NC41XCIgeT1cIjE4NC41XCIvPjwv
YnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1u
RWxlbWVudD1cIlNlcnZpY2VUYXNrXzB3dXNjZndcIiBpZD1cIlNlcnZpY2VUYXNrXzB3dXNjZndf
ZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiNDE0XCIg
eT1cIjE2NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVu
dD1cIlNlcXVlbmNlRmxvd18xZmE5Z250XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMWZhOWdudF9kaVwi
PjxvbWdkaTp3YXlwb2ludCB4PVwiNTE0XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIy
MDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2MjZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIg
d2lkdGg9XCI5MFwiIHg9XCI1MjVcIiB5PVwiMTg0LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwv
YnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90
YXRpb25fMDd4eWRrYlwiIGlkPVwiVGV4dEFubm90YXRpb25fMDd4eWRrYl9kaVwiPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiNTZcIiB3aWR0aD1cIjE0N1wiIHg9XCIyNTBcIiB5PVwiNTZcIi8+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlv
bl8weWRsbzB1XCIgaWQ9XCJBc3NvY2lhdGlvbl8weWRsbzB1X2RpXCI+PG9tZ2RpOndheXBvaW50
IHg9XCI0MjFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE2OVwiLz48b21nZGk6d2F5
cG9pbnQgeD1cIjM1NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTEyXCIvPjwvYnBt
bmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRp
b25fMGM4Z3o1elwiIGlkPVwiVGV4dEFubm90YXRpb25fMGM4Z3o1el9kaVwiPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiNjdcIiB3aWR0aD1cIjIxMVwiIHg9XCI1MzhcIiB5PVwiNTBcIi8+PC9icG1u
ZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8x
cjJ3cGxiXCIgaWQ9XCJBc3NvY2lhdGlvbl8xcjJ3cGxiX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9
XCI1MTJcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE3NFwiLz48b21nZGk6d2F5cG9p
bnQgeD1cIjU5NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTE3XCIvPjwvYnBtbmRp
OkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmlu
aXRpb25zPiIsICJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX2NzX2ZhbGNvbl9zZWFyY2giLCAidmVy
c2lvbiI6IDQ0fSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NTA0ODUyMjQxOTAsICJjcmVhdG9y
X2lkIjogImFkbWluQGV4YW1wbGUuY29tIiwgImFjdGlvbnMiOiBbXSwgInByb2dyYW1tYXRpY19u
YW1lIjogImV4YW1wbGVfY3NfZmFsY29uX3NlYXJjaCIsICJuYW1lIjogIkV4YW1wbGU6IENTIEZh
bGNvbjogU2VhcmNoIn0sIHsidXVpZCI6ICJmYWZlMmUxMS0yZTU4LTQ2YzUtODUzMy01ODM1MjU1
Y2FmYTMiLCAiZGVzY3JpcHRpb24iOiAiRXhhbXBsZSB3b3JrZmxvdyB0aGF0IHNlbmRzIGEgJ2xp
ZnQgY29udGFpbm1lbnQnIHJlcXVlc3QgdG8gQ3Jvd2RTdHJpa2UgZm9yIGEgcGFydGljdWxhciBk
ZXZpY2VfaWQsIHVwZGF0ZXMgdGhlIGNzX2ZhbGNvbl9kZXZpY2VzIERhdGEgVGFibGUsIHRoZW4g
YWRkcyBhIE5vdGUgdG8gdGhlIFJlc2lsaWVudCBJbmNpZGVudC4iLCAib2JqZWN0X3R5cGUiOiAi
Y3NfZmFsY29uX2RldmljZXNfZHQiLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX2NzX2ZhbGNvbl9s
aWZ0X2NvbnRhaW5tZW50IiwgIndvcmtmbG93X2lkIjogNjEsICJsYXN0X21vZGlmaWVkX2J5Ijog
ImFkbWluQGV4YW1wbGUuY29tIiwgImNvbnRlbnQiOiB7InhtbCI6ICI8P3htbCB2ZXJzaW9uPVwi
MS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3
Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93
d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDov
L3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8y
MDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2No
ZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90
ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX2NzX2ZhbGNvbl9saWZ0X2NvbnRhaW5tZW50XCIg
aXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBDUyBGYWxjb246IExpZnQgQ29u
dGFpbm1lbnRcIj48ZG9jdW1lbnRhdGlvbj48IVtDREFUQVtFeGFtcGxlIHdvcmtmbG93IHRoYXQg
c2VuZHMgYSAnbGlmdCBjb250YWlubWVudCcgcmVxdWVzdCB0byBDcm93ZFN0cmlrZSBmb3IgYSBw
YXJ0aWN1bGFyIGRldmljZV9pZCwgdXBkYXRlcyB0aGUgY3NfZmFsY29uX2RldmljZXMgRGF0YSBU
YWJsZSwgdGhlbiBhZGRzIGEgTm90ZSB0byB0aGUgUmVzaWxpZW50IEluY2lkZW50Ll1dPjwvZG9j
dW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2lu
Zz5TZXF1ZW5jZUZsb3dfMHhwMGlpOTwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxlbmRFdmVudCBp
ZD1cIkVuZEV2ZW50XzByNzFldmpcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBqcXZsY3M8L2lu
Y29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18weHAwaWk5
XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRh
c2tfMTQwaDhmZFwiLz48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xNDBoOGZkXCIgbmFt
ZT1cIkNTIEZhbGNvbjogRGV2aWNlIEFjdGlvbnNcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9u
XCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cImQ0YTNmM2Fi
LTQ3YTEtNGE1MC1iMDgyLWMzYjdiZDA1OTA0ZVwiPntcImlucHV0c1wiOntcImVhMjU3NDkzLTc3
ZTgtNDJlMS1iNjg0LTJiMjM0NTc4YWZmZlwiOntcImlucHV0X3R5cGVcIjpcInN0YXRpY1wiLFwi
c3RhdGljX2lucHV0XCI6e1wibXVsdGlzZWxlY3RfdmFsdWVcIjpbXSxcInNlbGVjdF92YWx1ZVwi
OlwiODBmZTQ4Y2QtMGM2YS00ZWFhLWEyNjMtZjU2OGQxZDFjMmMzXCJ9fX0sXCJwb3N0X3Byb2Nl
c3Npbmdfc2NyaXB0XCI6XCIjIEltcG9ydCBEYXRlXFxuZnJvbSBqYXZhLnV0aWwgaW1wb3J0IERh
dGVcXG5cXG5kZWYgZ2V0X2Zvcm1hdHRlZF90aW1lc3RhbXAoKTpcXG4gIFxcXCJcXFwiXFxcIkZ1
bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgY3VycmVudCBSZXNpbGllbnQgQXBwbGlhbmNlIHRpbWUg
aW4gdGhlIGZvcm1hdDogbW0vZGQveXl5eSBoaDptbTpzc1xcXCJcXFwiXFxcIlxcbiAgZHQgPSBE
YXRlKClcXG4gIHJldHVybiB1XFxcInswfS97MX0vezJ9IHszfTp7NH06ezV9XFxcIi5mb3JtYXQo
XFxuICAgIGR0LmdldE1vbnRoKCkgKyAxLCBkdC5nZXREYXRlKCksIGR0LmdldFllYXIoKSArIDE5
MDAsIGR0LmdldEhvdXJzKCksIGR0LmdldE1pbnV0ZXMoKSwgZHQuZ2V0U2Vjb25kcygpKVxcblxc
blxcbiMgSWYgdGhlIGZ1bmN0aW9uIHN1Y2Nlc3NmdWxseSBzZW50IGEgXFxcImxpZnRfY29udGFp
bm1lbnRcXFwiIHJlcXVlc3QgdG8gQ3Jvd2RTdHJpa2UsIHVwZGF0ZWQgdGhlIERhdGEgVGFibGUg
YW5kIGFkZCBhIE5vdGUgdG8gdGhlIEluY2lkZW50XFxuaWYgcmVzdWx0cy5zdWNjZXNzOlxcbiAg
XFxuICAjIEdldCB0aGUgY3VycmVudCB0aW1lIGluIHRoZSBmb3JtYXQgJ21tL2RkL3l5eXkgaGg6
bW06c3MnXFxuICBmb3JtYXR0ZWRfZGF0ZSA9IGdldF9mb3JtYXR0ZWRfdGltZXN0YW1wKClcXG4g
IFxcbiAgIyBHZW5lcmF0ZSB0aGUgdmFsdWUgd2Ugd2FudCB0byB1cGRhdGUgdGhlIGNlbGwgdG9c
XG4gIGxhdGVzdF9hY3Rpb25fdGV4dCA9IHVcXFwiQWN0aW9uOiB7MH0uIFRpbWU6IHsxfVxcXCIu
Zm9ybWF0KHVuaWNvZGUod29ya2Zsb3cucHJvcGVydGllcy5jc19hY3Rpb24uaW5wdXRzLmNzX2Fj
dGlvbl9uYW1lKSwgZm9ybWF0dGVkX2RhdGUpXFxuXFxuICAjIFVwZGF0ZSB0aGUgbGF0ZXN0X2Fj
dGlvbiBEYXRhIFRhYmxlIGNlbGxcXG4gIHJvdy5sYXRlc3RfYWN0aW9uID0gbGF0ZXN0X2FjdGlv
bl90ZXh0XFxuICBcXG4gICMgVXBkYXRlIHRoZSBkZXZpY2Vfc3RhdHVzIERhdGEgVGFibGUgY2Vs
bFxcbiAgcm93LnN0YXR1cyA9IHJlc3VsdHMuY29udGVudC5kZXZpY2Vfc3RhdHVzXFxuICBcXG4g
IG5vdGVfdGV4dCA9IFxcXCJcXFwiXFxcIiZsdDticiZndDsmbHQ7YiZndDtkZXZpY2UtYWN0aW9u
IHJlcXVlc3Qgc2VudCB0byBDcm93ZFN0cmlrZSZsdDsvYiZndDtcXG4gICAgICAgICAgICAgICAg
ICZsdDticiZndDsmbHQ7YiZndDtBY3Rpb246Jmx0Oy9iJmd0OyB7MH1cXG4gICAgICAgICAgICAg
ICAgICZsdDticiZndDsmbHQ7YiZndDtEZXZpY2UgSUQ6Jmx0Oy9iJmd0OyB7MX1cXG4gICAgICAg
ICAgICAgICAgICZsdDticiZndDsmbHQ7YiZndDtEZXZpY2UgU3RhdHVzOiZsdDsvYiZndDsgezJ9
XFxcIlxcXCJcXFwiLmZvcm1hdChyZXN1bHRzLmlucHV0cy5jc19hY3Rpb25fbmFtZSwgcmVzdWx0
cy5jb250ZW50LmRldmljZV9pZCwgcmVzdWx0cy5jb250ZW50LmRldmljZV9zdGF0dXMpXFxuXFxu
ICBpbmNpZGVudC5hZGROb3RlKGhlbHBlci5jcmVhdGVSaWNoVGV4dChub3RlX3RleHQpKVxcbiAg
XCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcIiMgRXhhbXBsZTogQ1MgRmFsY29uOiBMaWZ0
IENvbnRhaW5tZW50IHByZS1wcm9jZXNzIHNjcmlwdFxcblxcbiMjIyMjIyMjIyMjIyMjIyMjIyMj
I1xcbiMjIyBEZWZpbmUgSW5wdXRzICMjI1xcbiMjIyMjIyMjIyMjIyMjIyMjIyMjI1xcblxcbiMg
U2V0IHRoZSB1bmlxdWUgQ3Jvd2RTdHJpa2UgZGV2aWNlX2lkLiBUYWtlbiBoZXJlIGZyb20gdGhl
IENTIEZhbGNvbjogRGV2aWNlcyBEYXRhIFRhYmxlXFxuaW5wdXRzLmNzX2RldmljZV9pZCA9IHJv
dy5kZXZpY2VfaWRcXG5cXG4jIGlucHV0cy5jc19hY3Rpb25fbmFtZSBpcyBhIHNlbGVjdCBmaWVs
ZCBhbmQgaXMgc2V0IHRvIFxcXCJjb250YWluXFxcIiBpbiB0aGUgSW5wdXQgdGFiIGFib3ZlXCIs
XCJyZXN1bHRfbmFtZVwiOlwiY3NfYWN0aW9uXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRl
bnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzB4cDBpaTk8L2luY29taW5nPjxv
dXRnb2luZz5TZXF1ZW5jZUZsb3dfMGpxdmxjczwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2Vx
dWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBqcXZsY3NcIiBzb3VyY2VSZWY9XCJTZXJ2aWNl
VGFza18xNDBoOGZkXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMHI3MWV2alwiLz48dGV4dEFubm90
YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xd3Z1YThpXCI+PHRleHQ+PCFbQ0RBVEFbSW5wdXRz
OiBjc19kZXZpY2VfaWQsIGNzX2FjdGlvbl9uYW1lXG5dXT48L3RleHQ+PC90ZXh0QW5ub3RhdGlv
bj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wYmlsMTNyXCIgc291cmNlUmVmPVwiU2Vy
dmljZVRhc2tfMTQwaDhmZFwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzF3dnVhOGlcIi8+
PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWd4YnRjMVwiPjx0ZXh0PjwhW0NE
QVRBW1NlbmRzIGEgJ2xpZnQgY29udGFpbm1lbnQnIGFjdGlvbiB0byBDcm93ZFN0cmlrZSwgdXBk
YXRlcyB0aGUgRGF0YSBUYWJsZSBhbmQgYWRkcyBOb3RlIHRvIHRoZSBJbmNpZGVudFxuXV0+PC90
ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMTRlZDIx
d1wiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzE0MGg4ZmRcIiB0YXJnZXRSZWY9XCJUZXh0QW5u
b3RhdGlvbl8xZ3hidGMxXCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBN
TkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIg
aWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRF
dmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIyNjFcIiB5PVwiMTM2XCIvPjxicG1uZGk6
QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMjU2
XCIgeT1cIjE3MVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1u
ZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMHI3MWV2alwiIGlkPVwiRW5kRXZl
bnRfMHI3MWV2al9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIg
eD1cIjc0MFwiIHk9XCIxMzZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiNzEzXCIgeT1cIjE3NVwiLz48L2JwbW5kaTpCUE1O
TGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJT
ZXF1ZW5jZUZsb3dfMHhwMGlpOVwiIGlkPVwiU2VxdWVuY2VGbG93XzB4cDBpaTlfZGlcIj48b21n
ZGk6d2F5cG9pbnQgeD1cIjI5N1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTU0XCIv
PjxvbWdkaTp3YXlwb2ludCB4PVwiNDc1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIx
NTRcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRo
PVwiOTBcIiB4PVwiMzQxXCIgeT1cIjEzMi41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5k
aTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzE0
MGg4ZmRcIiBpZD1cIlNlcnZpY2VUYXNrXzE0MGg4ZmRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiNDc1XCIgeT1cIjExNFwiLz48L2JwbW5kaTpCUE1O
U2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xd3Z1
YThpXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xd3Z1YThpX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCI1NVwiIHdpZHRoPVwiMTAxXCIgeD1cIjM2NlwiIHk9XCIyMlwiLz48L2JwbW5kaTpCUE1O
U2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzBiaWwxM3Jc
IiBpZD1cIkFzc29jaWF0aW9uXzBiaWwxM3JfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQ4NVwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTE0XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
NDQ0XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI3N1wiLz48L2JwbW5kaTpCUE1ORWRn
ZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFneGJ0YzFc
IiBpZD1cIlRleHRBbm5vdGF0aW9uXzFneGJ0YzFfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjY0XCIgd2lkdGg9XCIyMDlcIiB4PVwiNTQwXCIgeT1cIjE4XCIvPjwvYnBtbmRpOkJQTU5TaGFw
ZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMTRlZDIxd1wiIGlk
PVwiQXNzb2NpYXRpb25fMTRlZDIxd19kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNTY4XCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMTdcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2MDlc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjgyXCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxi
cG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMGpxdmxjc1wiIGlkPVwi
U2VxdWVuY2VGbG93XzBqcXZsY3NfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjU3NVwiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTU0XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNzQwXCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNTRcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9t
Z2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI2NTcuNVwiIHk9XCIxMzIu
NVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBs
YW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgIndvcmtmbG93X2lkIjog
ImV4YW1wbGVfY3NfZmFsY29uX2xpZnRfY29udGFpbm1lbnQiLCAidmVyc2lvbiI6IDE2fSwgImxh
c3RfbW9kaWZpZWRfdGltZSI6IDE1NTA0ODUzMDAwNTUsICJjcmVhdG9yX2lkIjogImFkbWluQGV4
YW1wbGUuY29tIiwgImFjdGlvbnMiOiBbXSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVf
Y3NfZmFsY29uX2xpZnRfY29udGFpbm1lbnQiLCAibmFtZSI6ICJFeGFtcGxlOiBDUyBGYWxjb246
IExpZnQgQ29udGFpbm1lbnQifSwgeyJ1dWlkIjogIjAzODMxYmEyLWJjZjYtNDc3Yi05MjgyLWQw
NmI5NjNmZmNmMCIsICJkZXNjcmlwdGlvbiI6ICJFeGFtcGxlIHdvcmtmbG93IHRoYXQgZ2V0cyBh
IGxpc3Qgb2YgRGV2aWNlcyBmcm9tIHRoZSBDcm93ZFN0cmlrZSBJbnZlc3RpZ2F0ZSBJT0MgZW5k
cG9pbnQgdGhhdCB0aGUgZ2l2ZW4gSU9DIGhhcyByYW4gb24uIFRoZW4gYXBwZW5kcyB0aGUgSU9D
IFZhbHVlIGFuZCBkZXZpY2UgSUQgdG8gdGhlIGNzX2ZhbGNvbl9kZXZpY2VzX2lvY19yYW5fb25f
cmVzdWx0c19kdCBEYXRhIFRhYmxlIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImV4cG9y
dF9rZXkiOiAiZXhhbXBsZV9jc19mYWxjb25fZ2V0X2RldmljZXNfaW9jX3Jhbl9vbiIsICJ3b3Jr
Zmxvd19pZCI6IDYyLCAibGFzdF9tb2RpZmllZF9ieSI6ICJhZG1pbkBleGFtcGxlLmNvbSIsICJj
b250ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThc
Ij8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEw
MDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4v
MjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIw
MTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEw
MDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1u
XCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4
c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5h
bWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhh
bXBsZV9jc19mYWxjb25fZ2V0X2RldmljZXNfaW9jX3Jhbl9vblwiIGlzRXhlY3V0YWJsZT1cInRy
dWVcIiBuYW1lPVwiRXhhbXBsZTogQ1MgRmFsY29uOiBHZXQgRGV2aWNlcyBJT0MgUmFuIE9uXCI+
PGRvY3VtZW50YXRpb24+RXhhbXBsZSB3b3JrZmxvdyB0aGF0IGdldHMgYSBsaXN0IG9mIERldmlj
ZXMgZnJvbSB0aGUgQ3Jvd2RTdHJpa2UgSW52ZXN0aWdhdGUgSU9DIGVuZHBvaW50IHRoYXQgdGhl
IGdpdmVuIElPQyBoYXMgcmFuIG9uLiBUaGVuIGFwcGVuZHMgdGhlIElPQyBWYWx1ZSBhbmQgZGV2
aWNlIElEIHRvIHRoZSBjc19mYWxjb25fZGV2aWNlc19pb2NfcmFuX29uX3Jlc3VsdHNfZHQgRGF0
YSBUYWJsZTwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4
bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMHd3aTA1ajwvb3V0Z29pbmc+PC9zdGFydEV2ZW50
PjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzFmdDFlb2VcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93
XzBqbjE2ZGk8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNl
Rmxvd18wd3dpMDVqXCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVm
PVwiU2VydmljZVRhc2tfMXM1eGR5aVwiLz48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18x
czV4ZHlpXCIgbmFtZT1cIkNTIEZhbGNvbjogR2V0IERldmljZXMgSU9DIFJhbiBPblwiIHJlc2ls
aWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5j
dGlvbiB1dWlkPVwiODdiNzM0Y2UtYTY0OS00OWEyLWE3Y2YtMmJkYjhhYzY0OWVmXCI+e1wiaW5w
dXRzXCI6e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCIjIEltcG9ydCBEYXRlXFxuZnJv
bSBqYXZhLnV0aWwgaW1wb3J0IERhdGVcXG5cXG4jIElmIHRoZSBmdW5jdGlvbiBmb3VuZCBzb21l
IGRldmljZXNcXG5pZiByZXN1bHRzLnN1Y2Nlc3M6XFxuICBcXG4gICMgR2V0IHRoZSBjdXJyZW50
IHRpbWVcXG4gIGR0X25vdyA9IERhdGUoKVxcbiAgXFxuICAjIEZvciBlYWNoIGRldmljZSwgYWRk
IGEgcm93IHRvIHRoZSBjc19mYWxjb25fZGV2aWNlc19kdFxcbiAgZm9yIGRldmljZV9pZCBpbiBy
ZXN1bHRzLmNvbnRlbnQuZGV2aWNlX2lkczpcXG4gICAgbmV3X3JvdyA9IGluY2lkZW50LmFkZFJv
dyhcXFwiY3NfZmFsY29uX2RldmljZXNfaW9jX3Jhbl9vbl9yZXN1bHRzX2R0XFxcIilcXG4gICAg
bmV3X3Jvdy50aW1lc3RhbXAgPSBkdF9ub3dcXG4gICAgbmV3X3Jvdy5pb2NfdHlwZSA9IHJlc3Vs
dHMuaW5wdXRzLmNzX2lvY190eXBlXFxuICAgIG5ld19yb3cuaW9jX3ZhbHVlID0gcmVzdWx0cy5p
bnB1dHMuY3NfaW9jX3ZhbHVlXFxuICAgIG5ld19yb3cuZGV2aWNlX2lkID0gZGV2aWNlX2lkXFxu
XFxuZWxzZTpcXG4gICMgRWxzZSwgdGhlIGZ1bmN0aW9uIGRpZCBub3QgZ2V0IGFueSBkZXZpY2Vz
LiBBZGQgYSBub3RlIHdpdGggdGhlIHJlYXNvbiB3aHlcXG4gIGluY2lkZW50LmFkZE5vdGUocmVz
dWx0cy5yZWFzb24pXFxuXCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcIiMgRXhhbXBsZTog
Q1MgRmFsY29uOiBHZXQgRGV2aWNlcyBJT0MgUmFuIE9uIHByZS1wcm9jZXNzIHNjcmlwdFxcblxc
biMgU2V0IHRoZSBpb2MgdHlwZVxcbmlucHV0cy5jc19pb2NfdHlwZSA9IGFydGlmYWN0LnR5cGVc
XG5cXG4jIFNldCB0aGUgaW9jIHZhbHVlXFxuaW5wdXRzLmNzX2lvY192YWx1ZSA9IGFydGlmYWN0
LnZhbHVlXFxuXFxuIyBTZXQgdGhlIG1heCBudW1iZXIgb2YgZGV2aWNlcyB0byByZXR1cm5cXG4j
IGlucHV0cy5jc19yZXR1cm5fbGltaXQgPSAxMFwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0
ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18wd3dpMDVqPC9pbmNvbWluZz48
b3V0Z29pbmc+U2VxdWVuY2VGbG93XzBqbjE2ZGk8L291dGdvaW5nPjwvc2VydmljZVRhc2s+PHNl
cXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wam4xNmRpXCIgc291cmNlUmVmPVwiU2Vydmlj
ZVRhc2tfMXM1eGR5aVwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzFmdDFlb2VcIi8+PHRleHRBbm5v
dGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWdzZ2g3c1wiPjx0ZXh0PjwhW0NEQVRBW0lucHV0
czogY3NfaW9jX3R5cGUsIGNzX2lvY192YWx1ZSwgY3NfcmV0dXJuX2xpbWl0XG5dXT48L3RleHQ+
PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wb2V1bGtiXCIg
c291cmNlUmVmPVwiU2VydmljZVRhc2tfMXM1eGR5aVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0
aW9uXzFnc2doN3NcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMW1wam1n
MVwiPjx0ZXh0PjwhW0NEQVRBW0dldHMgbGlzdCBvZiBEZXZpY2UgSURzIHRoZSBnaXZlbiBJT0Mg
UmFuIE9uLiBBZGRzIHRoZXNlIERldmljZXMgdG8gdGhlXG5cdTAwYTBjc19mYWxjb25fZGV2aWNl
c19pb2NfcmFuX29uX3Jlc3VsdHNfZHQgRGF0YSBUYWJsZV1dPjwvdGV4dD48L3RleHRBbm5vdGF0
aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzBmeWw2MzdcIiBzb3VyY2VSZWY9XCJT
ZXJ2aWNlVGFza18xczV4ZHlpXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMW1wam1nMVwi
Lz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBt
bmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFc
Ij48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlk
PVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdp
ZHRoPVwiMzZcIiB4PVwiMjM0XCIgeT1cIjEyNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjIyOVwiIHk9XCIxNjFcIi8+PC9i
cG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1u
RWxlbWVudD1cIkVuZEV2ZW50XzFmdDFlb2VcIiBpZD1cIkVuZEV2ZW50XzFmdDFlb2VfZGlcIj48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI4NDhcIiB5PVwiMTI2
XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1c
IjkwXCIgeD1cIjgyMVwiIHk9XCIxNjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQ
TU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzB3d2kw
NWpcIiBpZD1cIlNlcXVlbmNlRmxvd18wd3dpMDVqX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIy
NzBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE0NFwiLz48b21nZGk6d2F5cG9pbnQg
eD1cIjUxMVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTQ0XCIvPjxicG1uZGk6QlBN
TkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1cIjM0NS41
XCIgeT1cIjEyMi41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBt
bmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzFzNXhkeWlcIiBpZD1cIlNl
cnZpY2VUYXNrXzFzNXhkeWlfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9
XCIxMDBcIiB4PVwiNTExXCIgeT1cIjEwNFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18wam4xNmRpXCIgaWQ9XCJTZXF1ZW5j
ZUZsb3dfMGpuMTZkaV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNjExXCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIxNDRcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI4NDhcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE0NFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCI5MFwiIHg9XCI2ODQuNVwiIHk9XCIxMjIuNVwiLz48
L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBt
bkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xZ3NnaDdzXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8x
Z3NnaDdzX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI3MFwiIHdpZHRoPVwiMTIwXCIgeD1c
IjMxOVwiIHk9XCI4XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5F
bGVtZW50PVwiQXNzb2NpYXRpb25fMG9ldWxrYlwiIGlkPVwiQXNzb2NpYXRpb25fMG9ldWxrYl9k
aVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNTExXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIxMTZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0MzlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjc2XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVt
ZW50PVwiVGV4dEFubm90YXRpb25fMW1wam1nMVwiIGlkPVwiVGV4dEFubm90YXRpb25fMW1wam1n
MV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNTJcIiB3aWR0aD1cIjM2OFwiIHg9XCI1NzRc
IiB5PVwiMTdcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1l
bnQ9XCJBc3NvY2lhdGlvbl8wZnlsNjM3XCIgaWQ9XCJBc3NvY2lhdGlvbl8wZnlsNjM3X2RpXCI+
PG9tZ2RpOndheXBvaW50IHg9XCI2MTFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEx
OFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjcwOFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiNjlcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQ
TU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgIndvcmtmbG93X2lkIjogImV4YW1wbGVfY3NfZmFs
Y29uX2dldF9kZXZpY2VzX2lvY19yYW5fb24iLCAidmVyc2lvbiI6IDZ9LCAibGFzdF9tb2RpZmll
ZF90aW1lIjogMTU1MDQ5MTMyMzU5NiwgImNyZWF0b3JfaWQiOiAiYWRtaW5AZXhhbXBsZS5jb20i
LCAiYWN0aW9ucyI6IFtdLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9jc19mYWxjb25f
Z2V0X2RldmljZXNfaW9jX3Jhbl9vbiIsICJuYW1lIjogIkV4YW1wbGU6IENTIEZhbGNvbjogR2V0
IERldmljZXMgSU9DIFJhbiBPbiJ9LCB7InV1aWQiOiAiZjJhMzA3ZGYtYjcyYy00MzRlLWJiODIt
NWI5YmEyNDNlNmE1IiwgImRlc2NyaXB0aW9uIjogIkV4YW1wbGUgd29ya2Zsb3cgdGhhdCBzZWFy
Y2hlcyB5b3VyIENyb3dkU3RyaWtlIEZhbGNvbiBIb3N0cyB3aXRoIHRoZSBnaXZlbiBEZXZpY2Ug
SUQgYW5kIGlmIGZvdW5kLCBhZGRzIHRoYXQgZGV2aWNlIHRvIHRoZSBjc19mYWxjb25fZGV2aWNl
c19kdCBEYXRhIFRhYmxlLiIsICJvYmplY3RfdHlwZSI6ICJjc19mYWxjb25fZGV2aWNlc19pb2Nf
cmFuX29uX3Jlc3VsdHNfZHQiLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX2NzX2ZhbGNvbl9sb29r
dXBfYnlfZGV2aWNlX2lkIiwgIndvcmtmbG93X2lkIjogNjMsICJsYXN0X21vZGlmaWVkX2J5Ijog
ImFkbWluQGV4YW1wbGUuY29tIiwgImNvbnRlbnQiOiB7InhtbCI6ICI8P3htbCB2ZXJzaW9uPVwi
MS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3
Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93
d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDov
L3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8y
MDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2No
ZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90
ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX2NzX2ZhbGNvbl9sb29rdXBfYnlfZGV2aWNlX2lk
XCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBDUyBGYWxjb246IExvb2t1
cCBieSBEZXZpY2UgSURcIj48ZG9jdW1lbnRhdGlvbj5FeGFtcGxlIHdvcmtmbG93IHRoYXQgc2Vh
cmNoZXMgeW91ciBDcm93ZFN0cmlrZSBGYWxjb24gSG9zdHMgd2l0aCB0aGUgZ2l2ZW4gRGV2aWNl
IElEIGFuZCBpZiBmb3VuZCwgYWRkcyB0aGF0IGRldmljZSB0byB0aGUgY3NfZmFsY29uX2Rldmlj
ZXNfZHQgRGF0YSBUYWJsZS48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzE2cmNkcW88L291dGdvaW5nPjwv
c3RhcnRFdmVudD48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8xbnpvZzdpXCI+PGluY29taW5nPlNl
cXVlbmNlRmxvd18wenVnYnZqPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9
XCJTZXF1ZW5jZUZsb3dfMTZyY2Rxb1wiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwi
IHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzBzZ2IyZTRcIi8+PHNlcnZpY2VUYXNrIGlkPVwiU2Vy
dmljZVRhc2tfMHNnYjJlNFwiIG5hbWU9XCJDUyBGYWxjb246IFNlYXJjaFwiIHJlc2lsaWVudDp0
eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1
dWlkPVwiOGFkYTlkZDYtMTliMy00MmJhLThjYmQtOTUxYTIwZmQwMTdkXCI+e1wiaW5wdXRzXCI6
e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCIjIEltcG9ydCBEYXRlXFxuZnJvbSBqYXZh
LnV0aWwgaW1wb3J0IERhdGVcXG5cXG4jIElmIHRoZSBmdW5jdGlvbiBmb3VuZCBzb21lIGRldmlj
ZXNcXG5pZiByZXN1bHRzLnN1Y2Nlc3M6XFxuICBcXG4gICMgR2V0IHRoZSBjdXJyZW50IHRpbWVc
XG4gIGR0X25vdyA9IERhdGUoKVxcbiAgXFxuICAjIEZvciBlYWNoIGRldmljZSwgYWRkIGEgcm93
IHRvIHRoZSBjc19mYWxjb25fZGV2aWNlc19kdFxcbiAgZm9yIGRldmljZSBpbiByZXN1bHRzLmNv
bnRlbnQ6XFxuICAgIG5ld19yb3cgPSBpbmNpZGVudC5hZGRSb3coXFxcImNzX2ZhbGNvbl9kZXZp
Y2VzX2R0XFxcIilcXG4gICAgbmV3X3Jvdy50aW1lc3RhbXAgPSBkdF9ub3dcXG4gICAgbmV3X3Jv
dy5kZXZpY2VfaWQgPSBkZXZpY2UuZGV2aWNlX2lkXFxuICAgIG5ld19yb3cuaG9zdG5hbWUgPSBk
ZXZpY2UuaG9zdG5hbWVcXG4gICAgbmV3X3Jvdy5pcCA9IGRldmljZS5sb2NhbF9pcFxcbiAgICBu
ZXdfcm93Lm1hYyA9IGRldmljZS5tYWNfYWRkcmVzc1xcbiAgICBuZXdfcm93Lmxhc3Rfc2VlbiA9
IGRldmljZS5sYXN0X3NlZW5cXG4gICAgbmV3X3Jvdy5zdGF0dXMgPSBkZXZpY2Uuc3RhdHVzXFxu
XFxuZWxzZTpcXG4gICMgRWxzZSwgbm8gZGV2aWNlcyBmb3VuZCwgYWRkIE5vdGUgdG8gSW5jaWRl
bnQgd2l0aCByZWFzb25cXG4gIGluY2lkZW50LmFkZE5vdGUocmVzdWx0cy5yZWFzb24pXFxuXCIs
XCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcIiMgRXhhbXBsZTogQ1MgRmFsY29uOiBMb29rdXAg
YnkgRGV2aWNlIElEXFxuXFxuIyBTZXQgdGhlIGZpbHRlciBzdHJpbmcgdG8gc2VhcmNoIGZvciBk
ZXZpY2VfaWQgdGFrZW4gZnJvbSBEYXRhIFRhYmxlIHJvd1xcbmlucHV0cy5jc19maWx0ZXJfc3Ry
aW5nID0gXFxcImRldmljZV9pZDonezB9J1xcXCIuZm9ybWF0KHJvdy5kZXZpY2VfaWQpXCIsXCJy
ZXN1bHRfbmFtZVwiOlwiXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50
cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzE2cmNkcW88L2luY29taW5nPjxvdXRnb2luZz5TZXF1
ZW5jZUZsb3dfMHp1Z2J2ajwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlk
PVwiU2VxdWVuY2VGbG93XzB6dWdidmpcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wc2diMmU0
XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMW56b2c3aVwiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1O
RGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVu
dD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1u
RWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2Rp
XCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1c
IjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0
aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRp
OkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzFuem9n
N2lcIiBpZD1cIkVuZEV2ZW50XzFuem9nN2lfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2
XCIgd2lkdGg9XCIzNlwiIHg9XCI1OTBcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNjA4XCIgeT1cIjIyN1wi
Lz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2Ug
YnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMTZyY2Rxb1wiIGlkPVwiU2VxdWVuY2VGbG93XzE2
cmNkcW9fZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzQyXCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyNzBcIiB5PVwiMTg0LjVcIi8+PC9icG1uZGk6QlBN
TkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwi
U2VydmljZVRhc2tfMHNnYjJlNFwiIGlkPVwiU2VydmljZVRhc2tfMHNnYjJlNF9kaVwiPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIzNDEuNTI2MDg2OTU2NTIx
OFwiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVs
ZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHp1Z2J2alwiIGlkPVwiU2VxdWVuY2VGbG93XzB6dWdidmpf
ZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQ0MlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTkwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2lu
dFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIx
M1wiIHdpZHRoPVwiMFwiIHg9XCI1MTZcIiB5PVwiMTg0LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVs
PjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3Jh
bT48L2RlZmluaXRpb25zPiIsICJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX2NzX2ZhbGNvbl9sb29r
dXBfYnlfZGV2aWNlX2lkIiwgInZlcnNpb24iOiA2fSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1
NTA0OTg3NjM1NjUsICJjcmVhdG9yX2lkIjogImFkbWluQGV4YW1wbGUuY29tIiwgImFjdGlvbnMi
OiBbXSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfY3NfZmFsY29uX2xvb2t1cF9ieV9k
ZXZpY2VfaWQiLCAibmFtZSI6ICJFeGFtcGxlOiBDUyBGYWxjb246IExvb2t1cCBieSBEZXZpY2Ug
SUQifSwgeyJ1dWlkIjogIjBhNmUwZWE5LTUwOGItNDY1OC1iYjU4LWY0MDlmMjVlNWU3ZiIsICJk
ZXNjcmlwdGlvbiI6ICJFeGFtcGxlIHdvcmtmbG93IHRoYXQgc2VuZHMgYSAnY29udGFpbiBkZXZp
Y2UnIHJlcXVlc3QgdG8gQ3Jvd2RTdHJpa2UgZm9yIGEgcGFydGljdWxhciBkZXZpY2VfaWQsIHVw
ZGF0ZXMgdGhlIGNzX2ZhbGNvbl9kZXZpY2VzIERhdGEgVGFibGUsIHRoZW4gYWRkcyBhIE5vdGUg
dG8gdGhlIFJlc2lsaWVudCBJbmNpZGVudC4iLCAib2JqZWN0X3R5cGUiOiAiY3NfZmFsY29uX2Rl
dmljZXNfZHQiLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX2NzX2ZhbGNvbl9jb250YWluX2Rldmlj
ZSIsICJ3b3JrZmxvd19pZCI6IDExLCAibGFzdF9tb2RpZmllZF9ieSI6ICJhZG1pbkBleGFtcGxl
LmNvbSIsICJjb250ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5n
PVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMv
QlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9z
cGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9z
cGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3Bl
Yy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJt
LmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFc
IiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwi
IHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNz
IGlkPVwiZXhhbXBsZV9jc19mYWxjb25fY29udGFpbl9kZXZpY2VcIiBpc0V4ZWN1dGFibGU9XCJ0
cnVlXCIgbmFtZT1cIkV4YW1wbGU6IENTIEZhbGNvbjogQ29udGFpbiBEZXZpY2VcIj48ZG9jdW1l
bnRhdGlvbj48IVtDREFUQVtFeGFtcGxlIHdvcmtmbG93IHRoYXQgc2VuZHMgYSAnY29udGFpbiBk
ZXZpY2UnIHJlcXVlc3QgdG8gQ3Jvd2RTdHJpa2UgZm9yIGEgcGFydGljdWxhciBkZXZpY2VfaWQs
IHVwZGF0ZXMgdGhlIGNzX2ZhbGNvbl9kZXZpY2VzIERhdGEgVGFibGUsIHRoZW4gYWRkcyBhIE5v
dGUgdG8gdGhlIFJlc2lsaWVudCBJbmNpZGVudC5dXT48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZl
bnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzB4cDBp
aTk8L291dGdvaW5nPjwvc3RhcnRFdmVudD48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wcjcxZXZq
XCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18wNG02M2VhPC9pbmNvbWluZz48L2VuZEV2ZW50Pjxz
ZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMHhwMGlpOVwiIHNvdXJjZVJlZj1cIlN0YXJ0
RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzE0MGg4ZmRcIi8+PHNlcnZp
Y2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMTQwaDhmZFwiIG5hbWU9XCJDUyBGYWxjb246IERldmlj
ZSBBY3Rpb25zXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50
cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCJkNGEzZjNhYi00N2ExLTRhNTAtYjA4Mi1jM2I3
YmQwNTkwNGVcIj57XCJpbnB1dHNcIjp7XCJlYTI1NzQ5My03N2U4LTQyZTEtYjY4NC0yYjIzNDU3
OGFmZmZcIjp7XCJpbnB1dF90eXBlXCI6XCJzdGF0aWNcIixcInN0YXRpY19pbnB1dFwiOntcIm11
bHRpc2VsZWN0X3ZhbHVlXCI6W10sXCJzZWxlY3RfdmFsdWVcIjpcImYyNzMwZTBhLWNiMGEtNDJi
OS1hODU1LWRjMzU1NDI4NjgwMlwifX19LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiIyBJ
bXBvcnQgRGF0ZVxcbmZyb20gamF2YS51dGlsIGltcG9ydCBEYXRlXFxuXFxuZGVmIGdldF9mb3Jt
YXR0ZWRfdGltZXN0YW1wKCk6XFxuICBcXFwiXFxcIlxcXCJGdW5jdGlvbiB0aGF0IHJldHVybnMg
dGhlIGN1cnJlbnQgUmVzaWxpZW50IEFwcGxpYW5jZSB0aW1lIGluIHRoZSBmb3JtYXQ6IG1tL2Rk
L3l5eXkgaGg6bW06c3NcXFwiXFxcIlxcXCJcXG4gIGR0ID0gRGF0ZSgpXFxuICByZXR1cm4gdVxc
XCJ7MH0vezF9L3syfSB7M306ezR9Ons1fVxcXCIuZm9ybWF0KFxcbiAgICBkdC5nZXRNb250aCgp
ICsgMSwgZHQuZ2V0RGF0ZSgpLCBkdC5nZXRZZWFyKCkgKyAxOTAwLCBkdC5nZXRIb3VycygpLCBk
dC5nZXRNaW51dGVzKCksIGR0LmdldFNlY29uZHMoKSlcXG5cXG5cXG4jIElmIHRoZSBmdW5jdGlv
biBzdWNjZXNzZnVsbHkgc2VudCBhIFxcXCJjb250YWluIGRldmljZVxcXCIgcmVxdWVzdCB0byBD
cm93ZFN0cmlrZSwgdXBkYXRlZCB0aGUgRGF0YSBUYWJsZSBhbmQgYWRkIGEgTm90ZSB0byB0aGUg
SW5jaWRlbnRcXG5pZiByZXN1bHRzLnN1Y2Nlc3M6XFxuICBcXG4gICMgR2V0IHRoZSBjdXJyZW50
IHRpbWUgaW4gdGhlIGZvcm1hdCAnbW0vZGQveXl5eSBoaDptbTpzcydcXG4gIGZvcm1hdHRlZF9k
YXRlID0gZ2V0X2Zvcm1hdHRlZF90aW1lc3RhbXAoKVxcbiAgXFxuICAjIEdlbmVyYXRlIHRoZSB2
YWx1ZSB3ZSB3YW50IHRvIHVwZGF0ZSB0aGUgY2VsbCB0b1xcbiAgbGF0ZXN0X2FjdGlvbl90ZXh0
ID0gdVxcXCJBY3Rpb246IHswfS4gVGltZTogezF9XFxcIi5mb3JtYXQodW5pY29kZSh3b3JrZmxv
dy5wcm9wZXJ0aWVzLmNzX2FjdGlvbi5pbnB1dHMuY3NfYWN0aW9uX25hbWUpLCBmb3JtYXR0ZWRf
ZGF0ZSlcXG5cXG4gICMgVXBkYXRlIHRoZSBsYXRlc3RfYWN0aW9uIERhdGEgVGFibGUgY2VsbFxc
biAgcm93LmxhdGVzdF9hY3Rpb24gPSBsYXRlc3RfYWN0aW9uX3RleHRcXG4gIFxcbiAgIyBVcGRh
dGUgdGhlIGRldmljZV9zdGF0dXMgRGF0YSBUYWJsZSBjZWxsXFxuICByb3cuc3RhdHVzID0gcmVz
dWx0cy5jb250ZW50LmRldmljZV9zdGF0dXNcXG4gIFxcbiAgbm90ZV90ZXh0ID0gXFxcIlxcXCJc
XFwiJmx0O2JyJmd0OyZsdDtiJmd0O2RldmljZS1hY3Rpb24gcmVxdWVzdCBzZW50IHRvIENyb3dk
U3RyaWtlJmx0Oy9iJmd0O1xcbiAgICAgICAgICAgICAgICAgJmx0O2JyJmd0OyZsdDtiJmd0O0Fj
dGlvbjombHQ7L2ImZ3Q7IHswfVxcbiAgICAgICAgICAgICAgICAgJmx0O2JyJmd0OyZsdDtiJmd0
O0RldmljZSBJRDombHQ7L2ImZ3Q7IHsxfVxcbiAgICAgICAgICAgICAgICAgJmx0O2JyJmd0OyZs
dDtiJmd0O0RldmljZSBTdGF0dXM6Jmx0Oy9iJmd0OyB7Mn1cXFwiXFxcIlxcXCIuZm9ybWF0KHJl
c3VsdHMuaW5wdXRzLmNzX2FjdGlvbl9uYW1lLCByZXN1bHRzLmNvbnRlbnQuZGV2aWNlX2lkLCBy
ZXN1bHRzLmNvbnRlbnQuZGV2aWNlX3N0YXR1cylcXG5cXG4gIGluY2lkZW50LmFkZE5vdGUoaGVs
cGVyLmNyZWF0ZVJpY2hUZXh0KG5vdGVfdGV4dCkpXFxuICBcIixcInByZV9wcm9jZXNzaW5nX3Nj
cmlwdFwiOlwiIyBFeGFtcGxlOiBDUyBGYWxjb246IENvbnRhaW4gRGV2aWNlIHByZS1wcm9jZXNz
IHNjcmlwdFxcblxcbiMjIyMjIyMjIyMjIyMjIyMjIyMjI1xcbiMjIyBEZWZpbmUgSW5wdXRzICMj
I1xcbiMjIyMjIyMjIyMjIyMjIyMjIyMjI1xcblxcbiMgU2V0IHRoZSB1bmlxdWUgQ3Jvd2RTdHJp
a2UgZGV2aWNlX2lkLiBUYWtlbiBoZXJlIGZyb20gdGhlIENTIEZhbGNvbjogRGV2aWNlcyBEYXRh
IFRhYmxlXFxuaW5wdXRzLmNzX2RldmljZV9pZCA9IHJvdy5kZXZpY2VfaWRcXG5cXG4jIGlucHV0
cy5jc19hY3Rpb25fbmFtZSBpcyBhIHNlbGVjdCBmaWVsZCBhbmQgaXMgc2V0IHRvIFxcXCJjb250
YWluXFxcIiBpbiB0aGUgSW5wdXQgdGFiIGFib3ZlXCIsXCJyZXN1bHRfbmFtZVwiOlwiY3NfYWN0
aW9uXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+
U2VxdWVuY2VGbG93XzB4cDBpaTk8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMDRt
NjNlYTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VG
bG93XzA0bTYzZWFcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xNDBoOGZkXCIgdGFyZ2V0UmVm
PVwiRW5kRXZlbnRfMHI3MWV2alwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlv
bl8xd3Z1YThpXCI+PHRleHQ+PCFbQ0RBVEFbSW5wdXRzOiBjc19kZXZpY2VfaWQsIGNzX2FjdGlv
bl9uYW1lXG5dXT48L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3Nv
Y2lhdGlvbl8wYmlsMTNyXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMTQwaDhmZFwiIHRhcmdl
dFJlZj1cIlRleHRBbm5vdGF0aW9uXzF3dnVhOGlcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4
dEFubm90YXRpb25fMWd4YnRjMVwiPjx0ZXh0PjwhW0NEQVRBW1NlbmRzIGEgJ2NvbnRhaW4gZGV2
aWNlJyBhY3Rpb24gdG8gQ3Jvd2RTdHJpa2UsIHVwZGF0ZXMgdGhlIERhdGEgVGFibGUgYW5kIGFk
ZHMgTm90ZSB0byB0aGUgSW5jaWRlbnRcbl1dPjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3Nv
Y2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzE0ZWQyMXdcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFz
a18xNDBoOGZkXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWd4YnRjMVwiLz48L3Byb2Nl
c3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5Q
bGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRp
OkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRF
dmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZc
IiB4PVwiMjMzXCIgeT1cIjEzNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjIyOFwiIHk9XCIxNzFcIi8+PC9icG1uZGk6QlBN
TkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1c
IkVuZEV2ZW50XzByNzFldmpcIiBpZD1cIkVuZEV2ZW50XzByNzFldmpfZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI1OTNcIiB5PVwiMTM2XCIvPjxicG1u
ZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1c
IjU2NlwiIHk9XCIxNzVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48
YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzB4cDBpaTlcIiBpZD1c
IlNlcXVlbmNlRmxvd18weHAwaWk5X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIyNjlcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE1NFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjMyNFwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTU0XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
MzI0XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNTRcIi8+PG9tZ2RpOndheXBvaW50
IHg9XCIzNzZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE1NFwiLz48YnBtbmRpOkJQ
TU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCI5MFwiIHg9XCIyOTRc
IiB5PVwiMTQ3LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1u
ZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMTQwaDhmZFwiIGlkPVwiU2Vy
dmljZVRhc2tfMTQwaDhmZF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1c
IjEwMFwiIHg9XCIzNzZcIiB5PVwiMTE0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQ
TU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzF3dnVhOGlcIiBpZD1cIlRleHRB
bm5vdGF0aW9uXzF3dnVhOGlfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjU1XCIgd2lkdGg9
XCIxMDFcIiB4PVwiMjc4XCIgeT1cIjMzXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQ
TU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMGJpbDEzclwiIGlkPVwiQXNzb2NpYXRp
b25fMGJpbDEzcl9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzg2XCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIxMTRcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIzNTdcIiB4c2k6dHlwZT1c
Im9tZ2RjOlBvaW50XCIgeT1cIjg4XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNo
YXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWd4YnRjMVwiIGlkPVwiVGV4dEFubm90
YXRpb25fMWd4YnRjMV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNjRcIiB3aWR0aD1cIjI3
MVwiIHg9XCI0NzVcIiB5PVwiMjlcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVk
Z2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xNGVkMjF3XCIgaWQ9XCJBc3NvY2lhdGlvbl8x
NGVkMjF3X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0NzZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjEyOFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjU0OFwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiOTNcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1ORWRnZSBi
cG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18wNG02M2VhXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMDRt
NjNlYV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDc2XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2lu
dFwiIHk9XCIxNTRcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1OTNcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjE1NFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjUzNC41XCIgeT1cIjEzMi41XCIvPjwvYnBtbmRpOkJQ
TU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBN
TkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9jc19mYWxj
b25fY29udGFpbl9kZXZpY2UiLCAidmVyc2lvbiI6IDY4fSwgImxhc3RfbW9kaWZpZWRfdGltZSI6
IDE1NTA0ODUyODcyOTIsICJjcmVhdG9yX2lkIjogImFkbWluQGV4YW1wbGUuY29tIiwgImFjdGlv
bnMiOiBbXSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfY3NfZmFsY29uX2NvbnRhaW5f
ZGV2aWNlIiwgIm5hbWUiOiAiRXhhbXBsZTogQ1MgRmFsY29uOiBDb250YWluIERldmljZSJ9XSwg
ImFjdGlvbnMiOiBbeyJsb2dpY190eXBlIjogImFsbCIsICJuYW1lIjogIkV4YW1wbGU6IENTIEZh
bGNvbjogQ29udGFpbiBEZXZpY2UiLCAidmlld19pdGVtcyI6IFtdLCAidHlwZSI6IDEsICJ3b3Jr
Zmxvd3MiOiBbImV4YW1wbGVfY3NfZmFsY29uX2NvbnRhaW5fZGV2aWNlIl0sICJvYmplY3RfdHlw
ZSI6ICJjc19mYWxjb25fZGV2aWNlc19kdCIsICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1
aWQiOiAiYTBmYjEwOWUtZjYyZC00ZTcwLWExMzEtMmRkZDc0MmVmNzM4IiwgImF1dG9tYXRpb25z
IjogW10sICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IENTIEZhbGNvbjogQ29udGFpbiBEZXZpY2Ui
LCAiY29uZGl0aW9ucyI6IFt7InR5cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IG51bGwsICJm
aWVsZF9uYW1lIjogImNzX2ZhbGNvbl9kZXZpY2VzX2R0LmRldmljZV9pZCIsICJtZXRob2QiOiAi
aGFzX2FfdmFsdWUiLCAidmFsdWUiOiBudWxsfV0sICJpZCI6IDIyLCAibWVzc2FnZV9kZXN0aW5h
dGlvbnMiOiBbXX0sIHsibG9naWNfdHlwZSI6ICJhbnkiLCAibmFtZSI6ICJFeGFtcGxlOiBDUyBG
YWxjb246IEdldCBEZXZpY2VzIElPQyBSYW4gT24iLCAidmlld19pdGVtcyI6IFtdLCAidHlwZSI6
IDEsICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfY3NfZmFsY29uX2dldF9kZXZpY2VzX2lvY19yYW5f
b24iXSwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAw
LCAidXVpZCI6ICJiYTA4NWM5MS03MWQ1LTQ2ZTAtOTM3Ny02YjU0ODMwZmVkN2UiLCAiYXV0b21h
dGlvbnMiOiBbXSwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTogQ1MgRmFsY29uOiBHZXQgRGV2aWNl
cyBJT0MgUmFuIE9uIiwgImNvbmRpdGlvbnMiOiBbeyJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25f
aWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFjdC50eXBlIiwgIm1ldGhvZCI6ICJlcXVh
bHMiLCAidmFsdWUiOiAiTWFsd2FyZSBTSEEtMSBIYXNoIn0sIHsidHlwZSI6IG51bGwsICJldmFs
dWF0aW9uX2lkIjogbnVsbCwgImZpZWxkX25hbWUiOiAiYXJ0aWZhY3QudHlwZSIsICJtZXRob2Qi
OiAiZXF1YWxzIiwgInZhbHVlIjogIk1hbHdhcmUgU0hBLTI1NiBIYXNoIn0sIHsidHlwZSI6IG51
bGwsICJldmFsdWF0aW9uX2lkIjogbnVsbCwgImZpZWxkX25hbWUiOiAiYXJ0aWZhY3QudHlwZSIs
ICJtZXRob2QiOiAiZXF1YWxzIiwgInZhbHVlIjogIkROUyBOYW1lIn0sIHsidHlwZSI6IG51bGws
ICJldmFsdWF0aW9uX2lkIjogbnVsbCwgImZpZWxkX25hbWUiOiAiYXJ0aWZhY3QudHlwZSIsICJt
ZXRob2QiOiAiZXF1YWxzIiwgInZhbHVlIjogIk1hbHdhcmUgTUQ1IEhhc2gifV0sICJpZCI6IDcx
LCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXX0sIHsibG9naWNfdHlwZSI6ICJhbGwiLCAibmFt
ZSI6ICJFeGFtcGxlOiBDUyBGYWxjb246IEdldCBMYXRlc3QgRGV2aWNlIERldGFpbHMiLCAidmll
d19pdGVtcyI6IFtdLCAidHlwZSI6IDEsICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfY3NfZmFsY29u
X2dldF9sYXRlc3RfZGV2aWNlX2RldGFpbHMiXSwgIm9iamVjdF90eXBlIjogImNzX2ZhbGNvbl9k
ZXZpY2VzX2R0IiwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6ICIyNGNjMzY2Ny1m
N2U1LTQ5MWQtOTA4MS04MjU1MmE4MzBjMDMiLCAiYXV0b21hdGlvbnMiOiBbXSwgImV4cG9ydF9r
ZXkiOiAiRXhhbXBsZTogQ1MgRmFsY29uOiBHZXQgTGF0ZXN0IERldmljZSBEZXRhaWxzIiwgImNv
bmRpdGlvbnMiOiBbeyJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiBudWxsLCAiZmllbGRf
bmFtZSI6ICJjc19mYWxjb25fZGV2aWNlc19kdC5kZXZpY2VfaWQiLCAibWV0aG9kIjogImhhc19h
X3ZhbHVlIiwgInZhbHVlIjogbnVsbH1dLCAiaWQiOiAyNCwgIm1lc3NhZ2VfZGVzdGluYXRpb25z
IjogW119LCB7ImxvZ2ljX3R5cGUiOiAiYWxsIiwgIm5hbWUiOiAiRXhhbXBsZTogQ1MgRmFsY29u
OiBMaWZ0IENvbnRhaW5tZW50IiwgInZpZXdfaXRlbXMiOiBbXSwgInR5cGUiOiAxLCAid29ya2Zs
b3dzIjogWyJleGFtcGxlX2NzX2ZhbGNvbl9saWZ0X2NvbnRhaW5tZW50Il0sICJvYmplY3RfdHlw
ZSI6ICJjc19mYWxjb25fZGV2aWNlc19kdCIsICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1
aWQiOiAiOTJhODlmNDMtYzVmZS00OTcyLTg3NzAtNzUxMDllYTU4YzAyIiwgImF1dG9tYXRpb25z
IjogW10sICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IENTIEZhbGNvbjogTGlmdCBDb250YWlubWVu
dCIsICJjb25kaXRpb25zIjogW3sidHlwZSI6IG51bGwsICJldmFsdWF0aW9uX2lkIjogbnVsbCwg
ImZpZWxkX25hbWUiOiAiY3NfZmFsY29uX2RldmljZXNfZHQuZGV2aWNlX2lkIiwgIm1ldGhvZCI6
ICJoYXNfYV92YWx1ZSIsICJ2YWx1ZSI6IG51bGx9XSwgImlkIjogMjMsICJtZXNzYWdlX2Rlc3Rp
bmF0aW9ucyI6IFtdfSwgeyJsb2dpY190eXBlIjogImFsbCIsICJuYW1lIjogIkV4YW1wbGU6IENT
IEZhbGNvbjogTG9va3VwIGJ5IERldmljZSBJRCIsICJ2aWV3X2l0ZW1zIjogW10sICJ0eXBlIjog
MSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV9jc19mYWxjb25fbG9va3VwX2J5X2RldmljZV9pZCJd
LCAib2JqZWN0X3R5cGUiOiAiY3NfZmFsY29uX2RldmljZXNfaW9jX3Jhbl9vbl9yZXN1bHRzX2R0
IiwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6ICI0YmI4YTcwZS05YTA0LTRlMGEt
YTA2NC1iYmU0ZWIyYzg4YzkiLCAiYXV0b21hdGlvbnMiOiBbXSwgImV4cG9ydF9rZXkiOiAiRXhh
bXBsZTogQ1MgRmFsY29uOiBMb29rdXAgYnkgRGV2aWNlIElEIiwgImNvbmRpdGlvbnMiOiBbXSwg
ImlkIjogNzIsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdfSwgeyJsb2dpY190eXBlIjogImFs
bCIsICJuYW1lIjogIkV4YW1wbGU6IENTIEZhbGNvbjogU2VhcmNoIiwgInZpZXdfaXRlbXMiOiBb
XSwgInR5cGUiOiAxLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX2NzX2ZhbGNvbl9zZWFyY2giXSwg
Im9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVp
ZCI6ICI3ZjBkYTAyNy05NDZmLTQ3MWMtYjA1Yi01MmRjMTUxNjNmZTEiLCAiYXV0b21hdGlvbnMi
OiBbXSwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTogQ1MgRmFsY29uOiBTZWFyY2giLCAiY29uZGl0
aW9ucyI6IFtdLCAiaWQiOiAyMSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW119XSwgImxheW91
dHMiOiBbXSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJpZCI6IDg0LCAiaW5kdXN0cmll
cyI6IG51bGwsICJwaGFzZXMiOiBbXSwgImFjdGlvbl9vcmRlciI6IFtdLCAiZ2VvcyI6IG51bGws
ICJsb2NhbGUiOiBudWxsLCAic2VydmVyX3ZlcnNpb24iOiB7Im1ham9yIjogMzEsICJ2ZXJzaW9u
IjogIjMxLjAuNDI1NCIsICJidWlsZF9udW1iZXIiOiA0MjU0LCAibWlub3IiOiAwfSwgInRpbWVm
cmFtZXMiOiBudWxsLCAid29ya3NwYWNlcyI6IFtdLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJm
dW5jdGlvbnMiOiBbeyJkaXNwbGF5X25hbWUiOiAiQ1MgRmFsY29uOiBEZXZpY2UgQWN0aW9ucyIs
ICJkZXNjcmlwdGlvbiI6IHsiY29udGVudCI6ICJGdW5jdGlvbiB0aGF0IHVzZXMgdGhlIENyb3dk
U3RyaWtlIEZhbGNvbiAnL2RldmljZXMvZW50aXRpZXMvZGV2aWNlcy1hY3Rpb25zLycgZW5kcG9p
bnQgdG8gQ29udGFpbiBvciBMaXQgQ29udGFpbm1lbnQgb24gYSBEZXZpY2UiLCAiZm9ybWF0Ijog
InRleHQifSwgImNyZWF0b3IiOiB7ImRpc3BsYXlfbmFtZSI6ICJBZG1pbiBVc2VyIiwgInR5cGUi
OiAidXNlciIsICJpZCI6IDcxLCAibmFtZSI6ICJhZG1pbkBleGFtcGxlLmNvbSJ9LCAidmlld19p
dGVtcyI6IFt7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNo
b3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50
IjogImRmZjYxYWUyLTc3NTQtNGQ2Yi04YmZmLWNkNjcwMWY1NTExZSIsICJzdGVwX2xhYmVsIjog
bnVsbH0sIHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hv
d19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQi
OiAiZWEyNTc0OTMtNzdlOC00MmUxLWI2ODQtMmIyMzQ1NzhhZmZmIiwgInN0ZXBfbGFiZWwiOiBu
dWxsfV0sICJleHBvcnRfa2V5IjogImZuX2NzX2ZhbGNvbl9kZXZpY2VfYWN0aW9ucyIsICJ1dWlk
IjogImQ0YTNmM2FiLTQ3YTEtNGE1MC1iMDgyLWMzYjdiZDA1OTA0ZSIsICJsYXN0X21vZGlmaWVk
X2J5IjogeyJkaXNwbGF5X25hbWUiOiAiQWRtaW4gVXNlciIsICJ0eXBlIjogInVzZXIiLCAiaWQi
OiA3MSwgIm5hbWUiOiAiYWRtaW5AZXhhbXBsZS5jb20ifSwgInZlcnNpb24iOiAyLCAid29ya2Zs
b3dzIjogW3siZGVzY3JpcHRpb24iOiBudWxsLCAib2JqZWN0X3R5cGUiOiAiY3NfZmFsY29uX2Rl
dmljZXNfZHQiLCAiYWN0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBDUyBGYWxjb246IENv
bnRhaW4gRGV2aWNlIiwgIndvcmtmbG93X2lkIjogMTEsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJl
eGFtcGxlX2NzX2ZhbGNvbl9jb250YWluX2RldmljZSIsICJ1dWlkIjogbnVsbH0sIHsiZGVzY3Jp
cHRpb24iOiBudWxsLCAib2JqZWN0X3R5cGUiOiAiY3NfZmFsY29uX2RldmljZXNfZHQiLCAiYWN0
aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBDUyBGYWxjb246IExpZnQgQ29udGFpbm1lbnQi
LCAid29ya2Zsb3dfaWQiOiA2MSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfY3NfZmFs
Y29uX2xpZnRfY29udGFpbm1lbnQiLCAidXVpZCI6IG51bGx9XSwgImxhc3RfbW9kaWZpZWRfdGlt
ZSI6IDE1NDk3OTc1NDY1MDMsICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAiZm5fY3Jvd2RzdHJpa2Vf
ZmFsY29uIiwgImlkIjogNTEsICJuYW1lIjogImZuX2NzX2ZhbGNvbl9kZXZpY2VfYWN0aW9ucyJ9
LCB7ImRpc3BsYXlfbmFtZSI6ICJDUyBGYWxjb246IEdldCBEZXZpY2VzIElPQyBSYW4gT24iLCAi
ZGVzY3JpcHRpb24iOiB7ImNvbnRlbnQiOiAiRnVuY3Rpb24gdGhhdCB1c2VzIHRoZSBDcm93ZFN0
cmlrZSBGYWxjb24gJy9pbmRpY2F0b3JzL3F1ZXJpZXMvZGV2aWNlcy92MScgZW5kcG9pbnQgdG8g
Z2V0IHRoZSBsaXN0IG9mIERldmljZXMgYW4gSU9DIFJhbiBPbi4gU3VwcG9ydGVkIElPQyB0eXBl
czogc2hhMjU2LCBzaGExLCBtZDUgYW5kIGRvbWFpbi4iLCAiZm9ybWF0IjogInRleHQifSwgImNy
ZWF0b3IiOiB7ImRpc3BsYXlfbmFtZSI6ICJBZG1pbiBVc2VyIiwgInR5cGUiOiAidXNlciIsICJp
ZCI6IDcxLCAibmFtZSI6ICJhZG1pbkBleGFtcGxlLmNvbSJ9LCAidmlld19pdGVtcyI6IFt7InNo
b3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFk
ZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogIjU4MTU5YmYx
LWRjYzMtNGJjZS1iZTA0LWMzYzRjMDBiNjE1ZiIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hv
d19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRl
ciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiNmNiNjkzMjUt
MDQ2Mi00ZTQ3LTk3ZTEtOTU2YWMyNWZiNWYyIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93
X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVhZGVy
IjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJjMDgxYzMzNS04
Njk0LTQ2NjItYTBlYS03MDRjNzJlYzhlMGQiLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgImV4cG9y
dF9rZXkiOiAiZm5fY3NfZmFsY29uX2dldF9kZXZpY2VzX2lvY19yYW5fb24iLCAidXVpZCI6ICI4
N2I3MzRjZS1hNjQ5LTQ5YTItYTdjZi0yYmRiOGFjNjQ5ZWYiLCAibGFzdF9tb2RpZmllZF9ieSI6
IHsiZGlzcGxheV9uYW1lIjogIkFkbWluIFVzZXIiLCAidHlwZSI6ICJ1c2VyIiwgImlkIjogNzEs
ICJuYW1lIjogImFkbWluQGV4YW1wbGUuY29tIn0sICJ2ZXJzaW9uIjogMywgIndvcmtmbG93cyI6
IFt7ImRlc2NyaXB0aW9uIjogbnVsbCwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImFjdGlv
bnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTogQ1MgRmFsY29uOiBHZXQgRGV2aWNlcyBJT0MgUmFu
IE9uIiwgIndvcmtmbG93X2lkIjogNjIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX2Nz
X2ZhbGNvbl9nZXRfZGV2aWNlc19pb2NfcmFuX29uIiwgInV1aWQiOiBudWxsfV0sICJsYXN0X21v
ZGlmaWVkX3RpbWUiOiAxNTUwNDg2Njg4NDE0LCAiZGVzdGluYXRpb25faGFuZGxlIjogImZuX2Ny
b3dkc3RyaWtlX2ZhbGNvbiIsICJpZCI6IDYzLCAibmFtZSI6ICJmbl9jc19mYWxjb25fZ2V0X2Rl
dmljZXNfaW9jX3Jhbl9vbiJ9LCB7ImRpc3BsYXlfbmFtZSI6ICJDUyBGYWxjb246IFNlYXJjaCIs
ICJkZXNjcmlwdGlvbiI6IHsiY29udGVudCI6ICJGdW5jdGlvbiB0aGF0IHF1ZXJpZXMgeW91ciBD
cm93ZFN0cmlrZSBGYWxjb24gSG9zdHMgZm9yIGEgbGlzdCBvZiBEZXZpY2VzIHVzaW5nIGEgRmls
dGVyIGFuZC9vciBRdWVyeS4gSWYgRGV2aWNlcyBhcmUgZm91bmQgdGhleSBhcmUgcmV0dXJuZWQg
YXMgYSBQeXRob24gTGlzdCIsICJmb3JtYXQiOiAidGV4dCJ9LCAiY3JlYXRvciI6IHsiZGlzcGxh
eV9uYW1lIjogIkFkbWluIFVzZXIiLCAidHlwZSI6ICJ1c2VyIiwgImlkIjogNzEsICJuYW1lIjog
ImFkbWluQGV4YW1wbGUuY29tIn0sICJ2aWV3X2l0ZW1zIjogW3sic2hvd19pZiI6IG51bGwsICJm
aWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxl
bWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiMTNlMzFmNWMtZjVlNC00ZjFhLWIyYmIt
NTE0YmM4NmZiYjNlIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZp
ZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVt
ZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJkZmZkZjZlZS0yMzllLTRlNjEtOWU2NC1j
NWI3ZDRjNTI1OTUiLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgImV4cG9ydF9rZXkiOiAiZm5fY3Nf
ZmFsY29uX3NlYXJjaCIsICJ1dWlkIjogIjhhZGE5ZGQ2LTE5YjMtNDJiYS04Y2JkLTk1MWEyMGZk
MDE3ZCIsICJsYXN0X21vZGlmaWVkX2J5IjogeyJkaXNwbGF5X25hbWUiOiAiQWRtaW4gVXNlciIs
ICJ0eXBlIjogInVzZXIiLCAiaWQiOiA3MSwgIm5hbWUiOiAiYWRtaW5AZXhhbXBsZS5jb20ifSwg
InZlcnNpb24iOiAzLCAid29ya2Zsb3dzIjogW3siZGVzY3JpcHRpb24iOiBudWxsLCAib2JqZWN0
X3R5cGUiOiAiY3NfZmFsY29uX2RldmljZXNfZHQiLCAiYWN0aW9ucyI6IFtdLCAibmFtZSI6ICJF
eGFtcGxlOiBDUyBGYWxjb246IEdldCBMYXRlc3QgRGV2aWNlIERldGFpbHMiLCAid29ya2Zsb3df
aWQiOiAxMywgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfY3NfZmFsY29uX2dldF9sYXRl
c3RfZGV2aWNlX2RldGFpbHMiLCAidXVpZCI6IG51bGx9LCB7ImRlc2NyaXB0aW9uIjogbnVsbCwg
Im9iamVjdF90eXBlIjogImNzX2ZhbGNvbl9kZXZpY2VzX2lvY19yYW5fb25fcmVzdWx0c19kdCIs
ICJhY3Rpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6IENTIEZhbGNvbjogTG9va3VwIGJ5IERl
dmljZSBJRCIsICJ3b3JrZmxvd19pZCI6IDYzLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBs
ZV9jc19mYWxjb25fbG9va3VwX2J5X2RldmljZV9pZCIsICJ1dWlkIjogbnVsbH0sIHsiZGVzY3Jp
cHRpb24iOiBudWxsLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiYWN0aW9ucyI6IFtdLCAi
bmFtZSI6ICJFeGFtcGxlOiBDUyBGYWxjb246IFNlYXJjaCIsICJ3b3JrZmxvd19pZCI6IDEwLCAi
cHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9jc19mYWxjb25fc2VhcmNoIiwgInV1aWQiOiBu
dWxsfV0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTQ5NzU1NTAyMDUyLCAiZGVzdGluYXRpb25f
aGFuZGxlIjogImZuX2Nyb3dkc3RyaWtlX2ZhbGNvbiIsICJpZCI6IDUwLCAibmFtZSI6ICJmbl9j
c19mYWxjb25fc2VhcmNoIn1dLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJyZWd1bGF0b3JzIjog
bnVsbCwgImluY2lkZW50X3R5cGVzIjogW3siY3JlYXRlX2RhdGUiOiAxNTUwNDk5OTI3MDk2LCAi
ZGVzY3JpcHRpb24iOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9y
dF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImlkIjogMCwgIm5h
bWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgInVwZGF0ZV9kYXRlIjog
MTU1MDQ5OTkyNzA5NiwgInV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4LWFkMzktNGEwMDA0MDQ0
YWEwIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVs
bCwgImhpZGRlbiI6IGZhbHNlfV0sICJzY3JpcHRzIjogW10sICJ0eXBlcyI6IFt7ImRpc3BsYXlf
bmFtZSI6ICJDUyBGYWxjb246IERldmljZXMiLCAidXVpZCI6ICJjZmZjNTdhMS1kZjQzLTQ0YTUt
ODZlNi1mZjUxMmIyNWZmYjAiLCAidHlwZV9pZCI6IDgsICJmaWVsZHMiOiB7InN0YXR1cyI6IHsi
b3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDEwMDYsICJvcGVyYXRpb25fcGVybXMiOiB7fSwg
InRleHQiOiAiU3RhdHVzIiwgImJsYW5rX29wdGlvbiI6IHRydWUsICJwcmVmaXgiOiBudWxsLCAi
Y2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDIyMSwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6
ICIyNzk2YmYwYS1kODg0LTQxYWMtYWY5Mi01NzkwMDg5NGQ5NTQiLCAiY2hvc2VuIjogdHJ1ZSwg
ImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIlRoZSBDb250YWlubWVudCBTdGF0dXMg
b2YgdGhlIERldmljZSIsICJ3aWR0aCI6IDY0LCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4
dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogImNzX2ZhbGNvbl9kZXZp
Y2VzX2R0L3N0YXR1cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIi
OiAiIiwgIm5hbWUiOiAic3RhdHVzIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hv
c2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW10sICJvcmRlciI6IDZ9LCAidGltZXN0
YW1wIjogeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTAwNiwgIm9wZXJhdGlvbl9wZXJt
cyI6IHt9LCAidGV4dCI6ICJUaW1lc3RhbXAiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVm
aXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDIyNCwgInJlYWRfb25seSI6IGZh
bHNlLCAidXVpZCI6ICI5OTQ1MGRhMC00YTFlLTQ2MTQtYmNlYy0wZTU1Yzc1YzY4NzUiLCAiY2hv
c2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogImRhdGV0aW1lcGlja2VyIiwgInRvb2x0aXAiOiAi
VGltZXN0YW1wIHdoZW4gdGhpcyBlbnRyeSB3YXMgYWRkZWQiLCAid2lkdGgiOiA1OSwgImludGVy
bmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0
X2tleSI6ICJjc19mYWxjb25fZGV2aWNlc19kdC90aW1lc3RhbXAiLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogInRpbWVzdGFtcCIsICJkZXBy
ZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVl
cyI6IFtdLCAib3JkZXIiOiAwfSwgImlwIjogeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjog
MTAwNiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJJUCIsICJibGFua19vcHRpb24i
OiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMjE4LCAi
cmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjlkYWE1N2YzLTg0NmQtNGJlZi1hY2RkLTMwYTM1
NmYzNzk1NSIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlw
IjogIklQIEFkZHJlc3Mgb2YgdGhlIERldmljZSIsICJ3aWR0aCI6IDkwLCAiaW50ZXJuYWwiOiBm
YWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5Ijog
ImNzX2ZhbGNvbl9kZXZpY2VzX2R0L2lwIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJw
bGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJpcCIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZh
dWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdLCAib3JkZXIiOiAzfSwg
Imhvc3RuYW1lIjogeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTAwNiwgIm9wZXJhdGlv
bl9wZXJtcyI6IHt9LCAidGV4dCI6ICJIb3N0bmFtZSIsICJibGFua19vcHRpb24iOiBmYWxzZSwg
InByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMjE3LCAicmVhZF9vbmx5
IjogZmFsc2UsICJ1dWlkIjogImMzZmViZjVlLTJjZGYtNDg5Ny05NmQ0LTczZDhjNDlhNDhiYiIs
ICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIkhvc3Ru
YW1lIG9mIHRoZSBEZXZpY2UiLCAid2lkdGgiOiAxMDAsICJpbnRlcm5hbCI6IGZhbHNlLCAicmlj
aF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiY3NfZmFsY29u
X2RldmljZXNfZHQvaG9zdG5hbWUiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNl
aG9sZGVyIjogIiIsICJuYW1lIjogImhvc3RuYW1lIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW10sICJvcmRlciI6IDJ9
LCAibWFjIjogeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTAwNiwgIm9wZXJhdGlvbl9w
ZXJtcyI6IHt9LCAidGV4dCI6ICJNQUMiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgi
OiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDIxOSwgInJlYWRfb25seSI6IGZhbHNl
LCAidXVpZCI6ICJiYjAxNzQ5OS1iYzA3LTQzOTMtYTY1OC03N2MxZDAyOGRlMGIiLCAiY2hvc2Vu
IjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJNQUMgQWRkcmVzcyBv
ZiB0aGUgRGV2aWNlIiwgIndpZHRoIjogOTAsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0
IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiY3NfZmFsY29uX2Rldmlj
ZXNfZHQvbWFjIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIi
LCAibmFtZSI6ICJtYWMiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgIm9yZGVyIjogNH0sICJsYXRlc3RfYWN0aW9u
IjogeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTAwNiwgIm9wZXJhdGlvbl9wZXJtcyI6
IHt9LCAidGV4dCI6ICJMYXRlc3QgQWN0aW9uIiwgImJsYW5rX29wdGlvbiI6IHRydWUsICJwcmVm
aXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDIyNSwgInJlYWRfb25seSI6IGZh
bHNlLCAidXVpZCI6ICJmNzk1MDEwOS0yZDg3LTQ3Y2YtYmEyNC1mOWUwOTYyMzQ3M2EiLCAiY2hv
c2VuIjogdHJ1ZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIk5hbWUgb2YgdGhl
IGxhdGVzdCBDcm93ZFN0cmlrZSBhY3Rpb24gdG8gcnVuIG9uIHRoaXMgZGV2aWNlIiwgIndpZHRo
IjogNDEsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMi
OiBbXSwgImV4cG9ydF9rZXkiOiAiY3NfZmFsY29uX2RldmljZXNfZHQvbGF0ZXN0X2FjdGlvbiIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAi
bGF0ZXN0X2FjdGlvbiIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9z
ZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdLCAib3JkZXIiOiA3fSwgImRldmljZV9pZCI6IHsi
b3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDEwMDYsICJvcGVyYXRpb25fcGVybXMiOiB7fSwg
InRleHQiOiAiRGV2aWNlIElEIiwgImJsYW5rX29wdGlvbiI6IHRydWUsICJwcmVmaXgiOiBudWxs
LCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDIxNiwgInJlYWRfb25seSI6IGZhbHNlLCAidXVp
ZCI6ICI5OTQ1ZmRhOS1lZGM5LTRhZTQtYTViMy1iYmE0YWFlOWZmNWEiLCAiY2hvc2VuIjogdHJ1
ZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIlVuaXF1ZSBDcm93ZFN0cmlrZSBJ
RCBmb3IgdGhlIERldmljZSIsICJ3aWR0aCI6IDc4LCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hf
dGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogImNzX2ZhbGNvbl9k
ZXZpY2VzX2R0L2RldmljZV9pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vo
b2xkZXIiOiAiIiwgIm5hbWUiOiAiZGV2aWNlX2lkIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW10sICJvcmRlciI6IDF9
LCAibGFzdF9zZWVuIjogeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTAwNiwgIm9wZXJh
dGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJMYXN0IFNlZW4iLCAiYmxhbmtfb3B0aW9uIjogZmFs
c2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDIyMCwgInJlYWRf
b25seSI6IGZhbHNlLCAidXVpZCI6ICI3Yjk5NmMzOS02NDY4LTRlNGUtOGVjOC0yOWI1YWMxZjZj
YjIiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogImRhdGV0aW1lcGlja2VyIiwgInRv
b2x0aXAiOiAiRGF0ZXRpbWUgdGhlIERldmljZSB3YXMgTGFzdCBTZWVuIiwgIndpZHRoIjogNjQs
ICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwg
ImV4cG9ydF9rZXkiOiAiY3NfZmFsY29uX2RldmljZXNfZHQvbGFzdF9zZWVuIiwgImhpZGVfbm90
aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJsYXN0X3NlZW4i
LCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2Us
ICJ2YWx1ZXMiOiBbXSwgIm9yZGVyIjogNX19LCAicGFyZW50X3R5cGVzIjogWyJpbmNpZGVudCJd
LCAidHlwZV9uYW1lIjogImNzX2ZhbGNvbl9kZXZpY2VzX2R0IiwgImV4cG9ydF9rZXkiOiAiY3Nf
ZmFsY29uX2RldmljZXNfZHQiLCAiZm9yX2N1c3RvbV9maWVsZHMiOiBmYWxzZSwgImFjdGlvbnMi
OiBbXSwgImlkIjogbnVsbCwgImZvcl9hY3Rpb25zIjogZmFsc2UsICJmb3Jfbm90aWZpY2F0aW9u
cyI6IGZhbHNlLCAic2NyaXB0cyI6IFtdLCAicHJvcGVydGllcyI6IHsiZm9yX3dobyI6IFtdLCAi
Y2FuX2Rlc3Ryb3kiOiBmYWxzZSwgImNhbl9jcmVhdGUiOiBmYWxzZX19LCB7ImRpc3BsYXlfbmFt
ZSI6ICJDUyBGYWxjb246IERldmljZXMgSU9DIFJhbiBPbiBSZXN1bHRzIiwgInV1aWQiOiAiOTc2
Nzk1NWEtZjY3Mi00ZTY1LTkzNzEtZmRkYjI5MTk1MjhiIiwgInR5cGVfaWQiOiA4LCAiZmllbGRz
IjogeyJ0aW1lc3RhbXAiOiB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMDEwLCAib3Bl
cmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogIlRpbWVzdGFtcCIsICJibGFua19vcHRpb24iOiBm
YWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMjczLCAicmVh
ZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjM1ZTQ4NzI4LTIzNGYtNGM2Yi1iNGM5LWQ4MmZjYzA4
NTY5NyIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAiZGF0ZXRpbWVwaWNrZXIiLCAi
dG9vbHRpcCI6ICJUaW1lIHRoaXMgcm93IHdhcyBhZGRlZCIsICJ3aWR0aCI6IDIzMywgImludGVy
bmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0
X2tleSI6ICJjc19mYWxjb25fZGV2aWNlc19pb2NfcmFuX29uX3Jlc3VsdHNfZHQvdGltZXN0YW1w
IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6
ICJ0aW1lc3RhbXAiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2Vy
dmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgIm9yZGVyIjogMH0sICJpb2NfdHlwZSI6IHsib3Bl
cmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDEwMTAsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRl
eHQiOiAiSU9DIFR5cGUiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAi
Y2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDI3NCwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6
ICJhZGU2NGZhOS04YjM5LTQ3NjEtYmNjNC1mZjM4NzliOWQwOGIiLCAiY2hvc2VuIjogZmFsc2Us
ICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJUaGUgSU9DIFR5cGUiLCAid2lkdGgi
OiAxMzksICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMi
OiBbXSwgImV4cG9ydF9rZXkiOiAiY3NfZmFsY29uX2RldmljZXNfaW9jX3Jhbl9vbl9yZXN1bHRz
X2R0L2lvY190eXBlIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6
ICIiLCAibmFtZSI6ICJpb2NfdHlwZSIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2No
b3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdLCAib3JkZXIiOiAxfSwgImlvY192
YWx1ZSI6IHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDEwMTAsICJvcGVyYXRpb25fcGVy
bXMiOiB7fSwgInRleHQiOiAiSU9DIFZhbHVlIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJl
Zml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyNzUsICJyZWFkX29ubHkiOiBm
YWxzZSwgInV1aWQiOiAiN2ZiNDUxODUtMDQxZC00Y2EzLWEwZDYtMzUyZjgzOGVjYWE4IiwgImNo
b3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAiOiAiU3RyaW5nIFJl
cHJlc2VudGF0aW9uIG9mIHRoZSBJT0MiLCAid2lkdGgiOiAxNDcsICJpbnRlcm5hbCI6IGZhbHNl
LCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiY3Nf
ZmFsY29uX2RldmljZXNfaW9jX3Jhbl9vbl9yZXN1bHRzX2R0L2lvY192YWx1ZSIsICJoaWRlX25v
dGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAiaW9jX3ZhbHVl
IiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNl
LCAidmFsdWVzIjogW10sICJvcmRlciI6IDJ9LCAiZGV2aWNlX2lkIjogeyJvcGVyYXRpb25zIjog
W10sICJ0eXBlX2lkIjogMTAxMCwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJEZXZp
Y2UgSUQiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJs
ZSI6IHRydWUsICJpZCI6IDI3NiwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJlM2M0YWJi
My01OTk0LTRkZDYtODhiZC05MGFmMmVhY2RjZjIiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90
eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJUaGUgdW5pcXVlIENyb3dkU3RyaWtlIElEIG9mIHRo
ZSBEZXZpY2UiLCAid2lkdGgiOiAxNDQsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0Ijog
ZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiY3NfZmFsY29uX2RldmljZXNf
aW9jX3Jhbl9vbl9yZXN1bHRzX2R0L2RldmljZV9pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZh
bHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAiZGV2aWNlX2lkIiwgImRlcHJlY2F0ZWQi
OiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW10s
ICJvcmRlciI6IDN9fSwgInBhcmVudF90eXBlcyI6IFsiaW5jaWRlbnQiXSwgInR5cGVfbmFtZSI6
ICJjc19mYWxjb25fZGV2aWNlc19pb2NfcmFuX29uX3Jlc3VsdHNfZHQiLCAiZXhwb3J0X2tleSI6
ICJjc19mYWxjb25fZGV2aWNlc19pb2NfcmFuX29uX3Jlc3VsdHNfZHQiLCAiZm9yX2N1c3RvbV9m
aWVsZHMiOiBmYWxzZSwgImFjdGlvbnMiOiBbXSwgImlkIjogbnVsbCwgImZvcl9hY3Rpb25zIjog
ZmFsc2UsICJmb3Jfbm90aWZpY2F0aW9ucyI6IGZhbHNlLCAic2NyaXB0cyI6IFtdLCAicHJvcGVy
dGllcyI6IHsiZm9yX3dobyI6IFtdLCAiY2FuX2Rlc3Ryb3kiOiBmYWxzZSwgImNhbl9jcmVhdGUi
OiBmYWxzZX19XSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3sidXVpZCI6ICIwZWFjOGFhMS0y
NGRjLTQ2MmEtOWJjZS0yZWU5ZjVmNDFkMDQiLCAiZXhwb3J0X2tleSI6ICJmbl9jcm93ZHN0cmlr
ZV9mYWxjb24iLCAibmFtZSI6ICJmbl9jcm93ZHN0cmlrZV9mYWxjb24iLCAiZGVzdGluYXRpb25f
dHlwZSI6IDAsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl9jcm93ZHN0cmlrZV9mYWxjb24iLCAi
ZXhwZWN0X2FjayI6IHRydWUsICJ1c2VycyI6IFsiaW50ZWdyYXRpb25zQGV4YW1wbGUuY29tIl19
XSwgImluY2lkZW50X2FydGlmYWN0X3R5cGVzIjogW10sICJyb2xlcyI6IFtdLCAiZmllbGRzIjog
W3sib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDAsICJvcGVyYXRpb25fcGVybXMiOiB7fSwg
InRleHQiOiAiU2ltdWxhdGlvbiIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51
bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMzgsICJyZWFkX29ubHkiOiB0cnVlLCAidXVp
ZCI6ICJjM2YwZTNlZC0yMWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAiY2hvc2VuIjogZmFs
c2UsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNp
ZGVudCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBp
cyByZWFkLW9ubHkuIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRl
bXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5pbmciLCAiaGlk
ZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwgImRlcHJlY2F0
ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjog
W119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6
IHt9LCAidGV4dCI6ICJjc19hY3Rpb25fbmFtZSIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInBy
ZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMjIzLCAicmVhZF9vbmx5Ijog
ZmFsc2UsICJ1dWlkIjogImVhMjU3NDkzLTc3ZTgtNDJlMS1iNjg0LTJiMjM0NTc4YWZmZiIsICJj
aG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAic2VsZWN0IiwgInRvb2x0aXAiOiAiVGhlIGFj
dGlvbiB0byBpbnZva2Ugb24gdGhlIERldmljZSIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90
ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9j
c19hY3Rpb25fbmFtZSIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIi
OiAiIiwgIm5hbWUiOiAiY3NfYWN0aW9uX25hbWUiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVm
YXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbeyJ1dWlkIjogImYyNzMw
ZTBhLWNiMGEtNDJiOS1hODU1LWRjMzU1NDI4NjgwMiIsICJkZWZhdWx0IjogdHJ1ZSwgImVuYWJs
ZWQiOiB0cnVlLCAidmFsdWUiOiAxNzUwLCAibGFiZWwiOiAiY29udGFpbiIsICJoaWRkZW4iOiBm
YWxzZSwgInByb3BlcnRpZXMiOiBudWxsfSwgeyJ1dWlkIjogIjgwZmU0OGNkLTBjNmEtNGVhYS1h
MjYzLWY1NjhkMWQxYzJjMyIsICJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgInZh
bHVlIjogMTc1MSwgImxhYmVsIjogImxpZnRfY29udGFpbm1lbnQiLCAiaGlkZGVuIjogZmFsc2Us
ICJwcm9wZXJ0aWVzIjogbnVsbH1dfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEs
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiY3NfZGV2aWNlX2lkIiwgImJsYW5rX29w
dGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAy
MjIsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiZGZmNjFhZTItNzc1NC00ZDZiLThiZmYt
Y2Q2NzAxZjU1MTFlIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRv
b2x0aXAiOiAiVGhlIHVuaXF1ZSBDcm93ZFN0cmlrZSBGYWxjb24gZGV2aWNlX2lkIG9mIHRoZSBE
ZXZpY2UiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVz
IjogW10sICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vY3NfZGV2aWNlX2lkIiwgImhpZGVfbm90
aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJjc19kZXZpY2Vf
aWQiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3Bl
cmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImNzX2lvY190eXBlIiwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyNjYsICJy
ZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiNTgxNTliZjEtZGNjMy00YmNlLWJlMDQtYzNjNGMw
MGI2MTVmIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAi
OiAiVGhlIHR5cGUgb2YgSU9DIHRvIGludmVzdGlnYXRlLiBTSEE1NiwgU0hBMSwgTUQ1IG9yIERv
bWFpbiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMi
OiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9jc19pb2NfdHlwZSIsICJoaWRlX25vdGlm
aWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAiY3NfaW9jX3R5cGUi
LCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2Us
ICJyZXF1aXJlZCI6ICJhbHdheXMiLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwg
InR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJjc19yZXR1cm5f
bGltaXQiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJs
ZSI6IHRydWUsICJpZCI6IDI2OCwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJjMDgxYzMz
NS04Njk0LTQ2NjItYTBlYS03MDRjNzJlYzhlMGQiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90
eXBlIjogIm51bWJlciIsICJ0b29sdGlwIjogIlRoZSBtYXggbnVtYmVyIG9mIGRldmljZXMgdG8g
cmV0dXJuIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRl
cyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2NzX3JldHVybl9saW1pdCIsICJoaWRl
X25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAiY3NfcmV0
dXJuX2xpbWl0IiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZl
ciI6IGZhbHNlLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAx
MSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJjc19maWx0ZXJfc3RyaW5nIiwgImJs
YW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAi
aWQiOiAyMTQsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiMTNlMzFmNWMtZjVlNC00ZjFh
LWIyYmItNTE0YmM4NmZiYjNlIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0
IiwgInRvb2x0aXAiOiAiRmlsdGVyIGJ5IHNwZWNpZmljIGZpZWxkcyIsICJpbnRlcm5hbCI6IGZh
bHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAi
X19mdW5jdGlvbi9jc19maWx0ZXJfc3RyaW5nIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2Us
ICJwbGFjZWhvbGRlciI6ICJcInByb2R1Y3RfdHlwZV9kZXNjOidXb3Jrc3RhdGlvbicrc3RhdHVz
Oidub3JtYWwnK3BsYXRmb3JtX25hbWU6WydXaW5kb3dzJywnTWFjJ11cIiIsICJuYW1lIjogImNz
X2ZpbHRlcl9zdHJpbmciLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9p
ZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImNzX2lvY192YWx1ZSIsICJi
bGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwg
ImlkIjogMjY3LCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjZjYjY5MzI1LTA0NjItNGU0
Ny05N2UxLTk1NmFjMjVmYjVmMiIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4
dCIsICJ0b29sdGlwIjogIlN0cmluZyByZXBlcnNlbnRhdGlvbiBvZiB0aGUgaW5kaWNhdG9yIiwg
ImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAi
ZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2NzX2lvY192YWx1ZSIsICJoaWRlX25vdGlmaWNhdGlv
biI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAiY3NfaW9jX3ZhbHVlIiwgImRl
cHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAicmVx
dWlyZWQiOiAiYWx3YXlzIiwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBl
X2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiY3NfcXVlcnkiLCAiYmxh
bmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJp
ZCI6IDIxNSwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJkZmZkZjZlZS0yMzllLTRlNjEt
OWU2NC1jNWI3ZDRjNTI1OTUiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQi
LCAidG9vbHRpcCI6ICJRdWVyeSBBY3Jvc3MgQWxsIEZpZWxkcy4gUXVlcmllcyBmb3IgbWV0YWRh
dGEgdGhhdCBjb250YWlucyBcImNzX3F1ZXJ5XCIiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hf
dGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24v
Y3NfcXVlcnkiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIlwi
cGFydGlhbF9ob3N0bmFtZVwiIiwgIm5hbWUiOiAiY3NfcXVlcnkiLCAiZGVwcmVjYXRlZCI6IGZh
bHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX1dLCAi
b3ZlcnJpZGVzIjogW10sICJleHBvcnRfZGF0ZSI6IDE1NTA0OTk4ODM5MDR9
"""
    )