# (c) Copyright IBM Corp. 2019. All Rights Reserved.
# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_crowdstrike_falcon"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_crowdstrike_falcon package"""
    reload_params = {"package": u"fn_crowdstrike_falcon",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"cs_filter_string", u"cs_query"], 
                    "datatables": [u"cs_falcon_devices_dt"], 
                    "message_destinations": [u"fn_crowdstrike_falcon"], 
                    "functions": [u"fn_cs_falcon_search"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_cs_falcon_search"], 
                    "actions": [u"CS Falcon: Search"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     cs_filter_string
    #     cs_query
    #   DataTables:
    #     cs_falcon_devices_dt
    #   Message Destinations:
    #     fn_crowdstrike_falcon
    #   Functions:
    #     fn_cs_falcon_search
    #   Workflows:
    #     example_cs_falcon_search
    #   Rules:
    #     CS Falcon: Search


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogImUzMzE5MTBkLTUxMWUt
NDk1OS1iY2I5LTAyMjhlNTQ5ZTYxNCIsICJkZXNjcmlwdGlvbiI6ICJFeGFtcGxlIHdvcmtmbG93
IHF1ZXJpZXMgeW91ciBDcm93ZFN0cmlrZSBGYWxjb24gSG9zdHMgZm9yIGEgbGlzdCBvZiBEZXZp
Y2VzIHVzaW5nIGEgRmlsdGVyIGFuZC9vciBRdWVyeS4gSWYgRGV2aWNlcyBhcmUgZm91bmQgdGhl
IHBvc3QtcHJvY2VzcyBzY3JpcHQgYWRkcyB0aGVtIHRvIHRoZSBjc19mYWxjb25fZGV2aWNlc19k
dCBEYXRhIFRhYmxlIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImV4cG9ydF9rZXkiOiAi
ZXhhbXBsZV9jc19mYWxjb25fc2VhcmNoIiwgIndvcmtmbG93X2lkIjogMTAsICJsYXN0X21vZGlm
aWVkX2J5IjogImFkbWluQGV4YW1wbGUuY29tIiwgImNvbnRlbnQiOiB7InhtbCI6ICI8P3htbCB2
ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJo
dHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRp
PVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2Rj
PVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1c
Imh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50
PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3
LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIw
MDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11
bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX2NzX2ZhbGNvbl9zZWFyY2hcIiBp
c0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IENTIEZhbGNvbjogU2VhcmNoXCI+
PGRvY3VtZW50YXRpb24+RXhhbXBsZSB3b3JrZmxvdyBxdWVyaWVzIHlvdXIgQ3Jvd2RTdHJpa2Ug
RmFsY29uIEhvc3RzIGZvciBhIGxpc3Qgb2YgRGV2aWNlcyB1c2luZyBhIEZpbHRlciBhbmQvb3Ig
UXVlcnkuIElmIERldmljZXMgYXJlIGZvdW5kIHRoZSBwb3N0LXByb2Nlc3Mgc2NyaXB0IGFkZHMg
dGhlbSB0byB0aGUgY3NfZmFsY29uX2RldmljZXNfZHQgRGF0YSBUYWJsZTwvZG9jdW1lbnRhdGlv
bj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5j
ZUZsb3dfMW14MG0zazwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxlbmRFdmVudCBpZD1cIkVuZEV2
ZW50XzAzZGRqaHpcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFmYTlnbnQ8L2luY29taW5nPjwv
ZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xbXgwbTNrXCIgc291cmNl
UmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMHd1c2Nm
d1wiLz48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wd3VzY2Z3XCIgbmFtZT1cIkNTIEZh
bGNvbjogU2VhcmNoXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVt
ZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI4YWRhOWRkNi0xOWIzLTQyYmEtOGNiZC05
NTFhMjBmZDAxN2RcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpc
IlxcbiMgSWYgdGhlIGZ1bmN0aW9uIGZvdW5kIHNvbWUgZGV2aWNlc1xcbmlmIHJlc3VsdHMuc3Vj
Y2VzczpcXG4gIFxcbiAgIyBGb3IgZWFjaCBkZXZpY2UsIGFkZCBhIHJvdyB0byB0aGUgY3NfZmFs
Y29uX2RldmljZXNfZHRcXG4gIGZvciBkZXZpY2UgaW4gcmVzdWx0cy5jb250ZW50OlxcbiAgICBu
ZXdfcm93ID0gaW5jaWRlbnQuYWRkUm93KFxcXCJjc19mYWxjb25fZGV2aWNlc19kdFxcXCIpXFxu
ICAgIG5ld19yb3cuZGV2aWNlX2lkID0gZGV2aWNlLmRldmljZV9pZFxcbiAgICBuZXdfcm93Lmhv
c3RuYW1lID0gZGV2aWNlLmhvc3RuYW1lXFxuICAgIG5ld19yb3cuaXAgPSBkZXZpY2UubG9jYWxf
aXBcXG4gICAgbmV3X3Jvdy5tYWMgPSBkZXZpY2UubWFjX2FkZHJlc3NcXG4gICAgbmV3X3Jvdy5s
YXN0X3NlZW4gPSBkZXZpY2UubGFzdF9zZWVuXFxuICAgIG5ld19yb3cuc3RhdHVzID0gZGV2aWNl
LnN0YXR1c1xcblxcbmVsc2U6XFxuICAjIEVsc2UsIG5vIGRldmljZXMgZm91bmQsIGFkZCBOb3Rl
IHRvIEluY2lkZW50IHdpdGggcmVhc29uXFxuICBpbmNpZGVudC5hZGROb3RlKHJlc3VsdHMucmVh
c29uKVwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCIjIEV4YW1wbGU6IENTIEZhbGNvbjog
U2VhcmNoIHByZS1wcm9jZXNzIHNjcmlwdFxcblxcbiMjIyMjIyMjIyMjIyMjIyMjIyMjI1xcbiMj
IyBEZWZpbmUgSW5wdXRzICMjI1xcbiMjIyMjIyMjIyMjIyMjIyMjIyMjI1xcblxcbiMgU2V0IENy
b3dkU3RyaWtlIEZpbHRlciBTdHJpbmcgaW5wdXRcXG4jIFNlZTogaHR0cHM6Ly9mYWxjb24uY3Jv
d2RzdHJpa2UuY29tL3N1cHBvcnQvZG9jdW1lbnRhdGlvbi8yL3F1ZXJ5LWFwaS1yZWZlcmVuY2Uj
ZGV2aWNlc2VhcmNoIGZvciBmaWx0ZXIgc3ludGF4XFxuIyBFeGFtcGxlOiBcXFwiaG9zdG5hbWU6
J3NhbXBsZU5hbWUqJytwbGF0Zm9ybV9uYW1lOidXaW5kb3dzJ1xcXCIgPT0mZ3Q7IFNlYXJjaGVz
IENyb3dkU3RyaWtlIGZvciBkZXZpY2VzIHdob3MgaG9zdG5hbWUgY29udGFpbnMgJ3NhbXBsZU5h
bWUnIGFuZCBwbGF0Zm9ybSBpcyAnV2luZG93cydcXG5pbnB1dHMuY3NfZmlsdGVyX3N0cmluZyA9
IFxcXCJob3N0bmFtZTonezB9KicrcGxhdGZvcm1fbmFtZTonezF9J1xcXCIuZm9ybWF0KGFydGlm
YWN0LnZhbHVlLCBcXFwiV2luZG93c1xcXCIpXFxuXFxuIyBTZXQgQ3Jvd2RTdHJpa2UgUXVlcnlc
XG4jIFRoaXMgcXVlcnkgc2VhcmNoZXMgdGhlIG1ldGEgZGF0YSBvZiBkZXZpdmVzIGFmdGVyIGFw
cGx5aW5nIHRoZSBhYm92ZSBmaWx0ZXJcXG4jIGlucHV0cy5jc19xdWVyeSA9IFxcXCJzYW1wbGVc
XFwiXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+
U2VxdWVuY2VGbG93XzFteDBtM2s8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMWZh
OWdudDwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VG
bG93XzFmYTlnbnRcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wd3VzY2Z3XCIgdGFyZ2V0UmVm
PVwiRW5kRXZlbnRfMDNkZGpoelwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlv
bl8wN3h5ZGtiXCI+PHRleHQ+PCFbQ0RBVEFbSW5wdXRzOiBjc19maWx0ZXJfc3RyaW5nLCBjc19x
dWVyeVxuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2Np
YXRpb25fMHlkbG8wdVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzB3dXNjZndcIiB0YXJnZXRS
ZWY9XCJUZXh0QW5ub3RhdGlvbl8wN3h5ZGtiXCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRB
bm5vdGF0aW9uXzBjOGd6NXpcIj48dGV4dD48IVtDREFUQVtRdWVyaWVzIENyb3dkU3RyaWtlIGZv
ciBEZXZpY2VzIGFuZCBpZiBmb3VuZCBhZGRzIHRoZW0gdG8gY3NfZmFsY29uX2RldmljZXNfZHQg
RGF0YSBUYWJsZS4gRWxzZSwgYWRkcyBhIE5vdGUgdG8gSW5jaWRlbnRcbl1dPjwvdGV4dD48L3Rl
eHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFyMndwbGJcIiBzb3Vy
Y2VSZWY9XCJTZXJ2aWNlVGFza18wd3VzY2Z3XCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25f
MGM4Z3o1elwiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFt
XzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBN
TlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1
YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9
XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMjI5XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJl
bD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjIyNFwiIHk9XCIy
MjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5T
aGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzAzZGRqaHpcIiBpZD1cIkVuZEV2ZW50XzAzZGRq
aHpfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI2MjZc
IiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNc
IiB3aWR0aD1cIjkwXCIgeD1cIjU5OVwiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VG
bG93XzFteDBtM2tcIiBpZD1cIlNlcXVlbmNlRmxvd18xbXgwbTNrX2RpXCI+PG9tZ2RpOndheXBv
aW50IHg9XCIyNjVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6
d2F5cG9pbnQgeD1cIjQxNFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxi
cG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIg
eD1cIjI5NC41XCIgeT1cIjE4NC41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1O
RWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzB3dXNjZndc
IiBpZD1cIlNlcnZpY2VUYXNrXzB3dXNjZndfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgw
XCIgd2lkdGg9XCIxMDBcIiB4PVwiNDE0XCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+
PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xZmE5Z250XCIgaWQ9
XCJTZXF1ZW5jZUZsb3dfMWZhOWdudF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNTE0XCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2MjZc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCI5MFwiIHg9XCI1MjVcIiB5PVwiMTg0
LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNo
YXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMDd4eWRrYlwiIGlkPVwiVGV4dEFubm90
YXRpb25fMDd4eWRrYl9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNTZcIiB3aWR0aD1cIjE0
N1wiIHg9XCIyNTBcIiB5PVwiNTZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVk
Z2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8weWRsbzB1XCIgaWQ9XCJBc3NvY2lhdGlvbl8w
eWRsbzB1X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0MjFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjE2OVwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjM1NlwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMTEyXCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMGM4Z3o1elwiIGlkPVwiVGV4dEFubm90YXRp
b25fMGM4Z3o1el9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNjdcIiB3aWR0aD1cIjIxMVwi
IHg9XCI1MzhcIiB5PVwiNTBcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2Ug
YnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xcjJ3cGxiXCIgaWQ9XCJBc3NvY2lhdGlvbl8xcjJ3
cGxiX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI1MTJcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjE3NFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjU5NlwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMTE3XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48
L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ3b3JrZmxvd19pZCI6ICJleGFt
cGxlX2NzX2ZhbGNvbl9zZWFyY2giLCAidmVyc2lvbiI6IDMyfSwgImxhc3RfbW9kaWZpZWRfdGlt
ZSI6IDE1NDk3NTQ1MTkwNTcsICJjcmVhdG9yX2lkIjogImFkbWluQGV4YW1wbGUuY29tIiwgImFj
dGlvbnMiOiBbXSwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfY3NfZmFsY29uX3NlYXJj
aCIsICJuYW1lIjogIkV4YW1wbGU6IENTIEZhbGNvbjogU2VhcmNoIn1dLCAiYWN0aW9ucyI6IFt7
ImxvZ2ljX3R5cGUiOiAiYWxsIiwgIm5hbWUiOiAiQ1MgRmFsY29uOiBTZWFyY2giLCAidmlld19p
dGVtcyI6IFtdLCAidHlwZSI6IDEsICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfY3NfZmFsY29uX3Nl
YXJjaCJdLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAidGltZW91dF9zZWNvbmRzIjogODY0
MDAsICJ1dWlkIjogIjdmMGRhMDI3LTk0NmYtNDcxYy1iMDViLTUyZGMxNTE2M2ZlMSIsICJhdXRv
bWF0aW9ucyI6IFtdLCAiZXhwb3J0X2tleSI6ICJDUyBGYWxjb246IFNlYXJjaCIsICJjb25kaXRp
b25zIjogW10sICJpZCI6IDIxLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXX1dLCAibGF5b3V0
cyI6IFtdLCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjogMiwgImlkIjogNCwgImluZHVzdHJpZXMi
OiBudWxsLCAicGhhc2VzIjogW10sICJhY3Rpb25fb3JkZXIiOiBbXSwgImdlb3MiOiBudWxsLCAi
bG9jYWxlIjogbnVsbCwgInNlcnZlcl92ZXJzaW9uIjogeyJtYWpvciI6IDMxLCAidmVyc2lvbiI6
ICIzMS4wLjQyNTQiLCAiYnVpbGRfbnVtYmVyIjogNDI1NCwgIm1pbm9yIjogMH0sICJ0aW1lZnJh
bWVzIjogbnVsbCwgIndvcmtzcGFjZXMiOiBbXSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAiZnVu
Y3Rpb25zIjogW3siZGlzcGxheV9uYW1lIjogIkNTIEZhbGNvbjogU2VhcmNoIiwgImRlc2NyaXB0
aW9uIjogeyJjb250ZW50IjogIkZ1bmN0aW9uIHRoYXQgcXVlcmllcyB5b3VyIENyb3dkU3RyaWtl
IEZhbGNvbiBIb3N0cyBmb3IgYSBsaXN0IG9mIERldmljZXMgdXNpbmcgYSBGaWx0ZXIgYW5kL29y
IFF1ZXJ5LiBJZiBEZXZpY2VzIGFyZSBmb3VuZCB0aGV5IGFyZSByZXR1cm5lZCBhcyBhIFB5dGhv
biBMaXN0IiwgImZvcm1hdCI6ICJ0ZXh0In0sICJjcmVhdG9yIjogeyJkaXNwbGF5X25hbWUiOiAi
QWRtaW4gVXNlciIsICJ0eXBlIjogInVzZXIiLCAiaWQiOiA3MSwgIm5hbWUiOiAiYWRtaW5AZXhh
bXBsZS5jb20ifSwgInZpZXdfaXRlbXMiOiBbeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUi
OiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZp
ZWxkX3V1aWQiLCAiY29udGVudCI6ICIxM2UzMWY1Yy1mNWU0LTRmMWEtYjJiYi01MTRiYzg2ZmJi
M2UiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6
ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmll
bGRfdXVpZCIsICJjb250ZW50IjogImRmZmRmNmVlLTIzOWUtNGU2MS05ZTY0LWM1YjdkNGM1MjU5
NSIsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAiZXhwb3J0X2tleSI6ICJmbl9jc19mYWxjb25fc2Vh
cmNoIiwgInV1aWQiOiAiOGFkYTlkZDYtMTliMy00MmJhLThjYmQtOTUxYTIwZmQwMTdkIiwgImxh
c3RfbW9kaWZpZWRfYnkiOiB7ImRpc3BsYXlfbmFtZSI6ICJBZG1pbiBVc2VyIiwgInR5cGUiOiAi
dXNlciIsICJpZCI6IDcxLCAibmFtZSI6ICJhZG1pbkBleGFtcGxlLmNvbSJ9LCAidmVyc2lvbiI6
IDMsICJ3b3JrZmxvd3MiOiBbeyJkZXNjcmlwdGlvbiI6IG51bGwsICJvYmplY3RfdHlwZSI6ICJh
cnRpZmFjdCIsICJhY3Rpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6IENTIEZhbGNvbjogU2Vh
cmNoIiwgIndvcmtmbG93X2lkIjogMTAsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX2Nz
X2ZhbGNvbl9zZWFyY2giLCAidXVpZCI6IG51bGx9XSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1
NDk3NTU1MDIwNTIsICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAiZm5fY3Jvd2RzdHJpa2VfZmFsY29u
IiwgImlkIjogNTAsICJuYW1lIjogImZuX2NzX2ZhbGNvbl9zZWFyY2gifV0sICJub3RpZmljYXRp
b25zIjogbnVsbCwgInJlZ3VsYXRvcnMiOiBudWxsLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJjcmVh
dGVfZGF0ZSI6IDE1NDk3NTc0NTc1MjgsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBh
Y2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2Vz
IChpbnRlcm5hbCkiLCAiaWQiOiAwLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChp
bnRlcm5hbCkiLCAidXBkYXRlX2RhdGUiOiAxNTQ5NzU3NDU3NTI4LCAidXVpZCI6ICJiZmVlYzJk
NC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVt
IjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2V9XSwgInNjcmlwdHMi
OiBbXSwgInR5cGVzIjogW3siZGlzcGxheV9uYW1lIjogIkNTIEZhbGNvbjogRGV2aWNlcyIsICJ1
dWlkIjogImNmZmM1N2ExLWRmNDMtNDRhNS04NmU2LWZmNTEyYjI1ZmZiMCIsICJ0eXBlX2lkIjog
OCwgImZpZWxkcyI6IHsic3RhdHVzIjogeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTAw
NiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJTdGF0dXMiLCAiYmxhbmtfb3B0aW9u
IjogdHJ1ZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMjIxLCAi
cmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogIjI3OTZiZjBhLWQ4ODQtNDFhYy1hZjkyLTU3OTAw
ODk0ZDk1NCIsICJjaG9zZW4iOiB0cnVlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAi
OiAiVGhlIENvbnRhaW5tZW50IFN0YXR1cyBvZiB0aGUgRGV2aWNlIiwgIndpZHRoIjogODksICJp
bnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4
cG9ydF9rZXkiOiAiY3NfZmFsY29uX2RldmljZXNfZHQvc3RhdHVzIiwgImhpZGVfbm90aWZpY2F0
aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJzdGF0dXMiLCAiZGVwcmVj
YXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMi
OiBbXSwgIm9yZGVyIjogNX0sICJpcCI6IHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDEw
MDYsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiSVAiLCAiYmxhbmtfb3B0aW9uIjog
ZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDIxOCwgInJl
YWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICI5ZGFhNTdmMy04NDZkLTRiZWYtYWNkZC0zMGEzNTZm
Mzc5NTUiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6
ICJJUCBBZGRyZXNzIG9mIHRoZSBEZXZpY2UiLCAid2lkdGgiOiA5MCwgImludGVybmFsIjogZmFs
c2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJj
c19mYWxjb25fZGV2aWNlc19kdC9pcCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxh
Y2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAiaXAiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVs
dF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgIm9yZGVyIjogMn0sICJo
b3N0bmFtZSI6IHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDEwMDYsICJvcGVyYXRpb25f
cGVybXMiOiB7fSwgInRleHQiOiAiSG9zdG5hbWUiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJw
cmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDIxNywgInJlYWRfb25seSI6
IGZhbHNlLCAidXVpZCI6ICJjM2ZlYmY1ZS0yY2RmLTQ4OTctOTZkNC03M2Q4YzQ5YTQ4YmIiLCAi
Y2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJIb3N0bmFt
ZSBvZiB0aGUgRGV2aWNlIiwgIndpZHRoIjogMTAwLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hf
dGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogImNzX2ZhbGNvbl9k
ZXZpY2VzX2R0L2hvc3RuYW1lIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhv
bGRlciI6ICIiLCAibmFtZSI6ICJob3N0bmFtZSIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZh
dWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdLCAib3JkZXIiOiAxfSwg
Im1hYyI6IHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDEwMDYsICJvcGVyYXRpb25fcGVy
bXMiOiB7fSwgInRleHQiOiAiTUFDIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4Ijog
bnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyMTksICJyZWFkX29ubHkiOiBmYWxzZSwg
InV1aWQiOiAiYmIwMTc0OTktYmMwNy00MzkzLWE2NTgtNzdjMWQwMjhkZTBiIiwgImNob3NlbiI6
IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAiOiAiTUFDIEFkZHJlc3Mgb2Yg
dGhlIERldmljZSIsICJ3aWR0aCI6IDkwLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6
IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogImNzX2ZhbGNvbl9kZXZpY2Vz
X2R0L21hYyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwg
Im5hbWUiOiAibWFjIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3Nl
cnZlciI6IGZhbHNlLCAidmFsdWVzIjogW10sICJvcmRlciI6IDN9LCAiZGV2aWNlX2lkIjogeyJv
cGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTAwNiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAi
dGV4dCI6ICJEZXZpY2UgSUQiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxs
LCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDIxNiwgInJlYWRfb25seSI6IGZhbHNlLCAidXVp
ZCI6ICI5OTQ1ZmRhOS1lZGM5LTRhZTQtYTViMy1iYmE0YWFlOWZmNWEiLCAiY2hvc2VuIjogZmFs
c2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJVbmlxdWUgQ3Jvd2RTdHJpa2Ug
SUQgZm9yIHRoZSBEZXZpY2UiLCAid2lkdGgiOiA5NSwgImludGVybmFsIjogZmFsc2UsICJyaWNo
X3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJjc19mYWxjb25f
ZGV2aWNlc19kdC9kZXZpY2VfaWQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNl
aG9sZGVyIjogIiIsICJuYW1lIjogImRldmljZV9pZCIsICJkZXByZWNhdGVkIjogZmFsc2UsICJk
ZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdLCAib3JkZXIiOiAw
fSwgImxhc3Rfc2VlbiI6IHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDEwMDYsICJvcGVy
YXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiTGFzdCBTZWVuIiwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyMjAsICJyZWFk
X29ubHkiOiBmYWxzZSwgInV1aWQiOiAiN2I5OTZjMzktNjQ2OC00ZTRlLThlYzgtMjliNWFjMWY2
Y2IyIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJkYXRldGltZXBpY2tlciIsICJ0
b29sdGlwIjogIkRhdGV0aW1lIHRoZSBEZXZpY2Ugd2FzIExhc3QgU2VlbiIsICJ3aWR0aCI6IDE1
OSwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtd
LCAiZXhwb3J0X2tleSI6ICJjc19mYWxjb25fZGV2aWNlc19kdC9sYXN0X3NlZW4iLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogImxhc3Rfc2Vl
biIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxz
ZSwgInZhbHVlcyI6IFtdLCAib3JkZXIiOiA0fX0sICJwYXJlbnRfdHlwZXMiOiBbImluY2lkZW50
Il0sICJ0eXBlX25hbWUiOiAiY3NfZmFsY29uX2RldmljZXNfZHQiLCAiZXhwb3J0X2tleSI6ICJj
c19mYWxjb25fZGV2aWNlc19kdCIsICJmb3JfY3VzdG9tX2ZpZWxkcyI6IGZhbHNlLCAiYWN0aW9u
cyI6IFtdLCAiaWQiOiBudWxsLCAiZm9yX2FjdGlvbnMiOiBmYWxzZSwgImZvcl9ub3RpZmljYXRp
b25zIjogZmFsc2UsICJzY3JpcHRzIjogW10sICJwcm9wZXJ0aWVzIjogeyJmb3Jfd2hvIjogW10s
ICJjYW5fZGVzdHJveSI6IGZhbHNlLCAiY2FuX2NyZWF0ZSI6IGZhbHNlfX1dLCAibWVzc2FnZV9k
ZXN0aW5hdGlvbnMiOiBbeyJ1dWlkIjogIjBlYWM4YWExLTI0ZGMtNDYyYS05YmNlLTJlZTlmNWY0
MWQwNCIsICJleHBvcnRfa2V5IjogImZuX2Nyb3dkc3RyaWtlX2ZhbGNvbiIsICJuYW1lIjogImZu
X2Nyb3dkc3RyaWtlX2ZhbGNvbiIsICJkZXN0aW5hdGlvbl90eXBlIjogMCwgInByb2dyYW1tYXRp
Y19uYW1lIjogImZuX2Nyb3dkc3RyaWtlX2ZhbGNvbiIsICJleHBlY3RfYWNrIjogdHJ1ZSwgInVz
ZXJzIjogWyJpbnRlZ3JhdGlvbnNAZXhhbXBsZS5jb20iXX1dLCAiaW5jaWRlbnRfYXJ0aWZhY3Rf
dHlwZXMiOiBbXSwgInJvbGVzIjogW10sICJmaWVsZHMiOiBbeyJvcGVyYXRpb25zIjogW10sICJ0
eXBlX2lkIjogMCwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJTaW11bGF0aW9uIiwg
ImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVl
LCAiaWQiOiAzOCwgInJlYWRfb25seSI6IHRydWUsICJ1dWlkIjogImMzZjBlM2VkLTIxZTEtNGQ1
My1hZmZiLWZlNWNhMzMwOGNjYSIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAiYm9v
bGVhbiIsICJ0b29sdGlwIjogIldoZXRoZXIgdGhlIGluY2lkZW50IGlzIGEgc2ltdWxhdGlvbiBv
ciBhIHJlZ3VsYXIgaW5jaWRlbnQuICBUaGlzIGZpZWxkIGlzIHJlYWQtb25seS4iLCAiaW50ZXJu
YWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRf
a2V5IjogImluY2lkZW50L2luY190cmFpbmluZyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNl
LCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9j
aG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtd
LCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImNzX3F1ZXJ5
IiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0
cnVlLCAiaWQiOiAyMTUsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiZGZmZGY2ZWUtMjM5
ZS00ZTYxLTllNjQtYzViN2Q0YzUyNTk1IiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6
ICJ0ZXh0IiwgInRvb2x0aXAiOiAiUXVlcnkgQWNyb3NzIEFsbCBGaWVsZHMuIFF1ZXJpZXMgZm9y
IG1ldGFkYXRhIHRoYXQgY29udGFpbnMgXCJjc19xdWVyeVwiIiwgImludGVybmFsIjogZmFsc2Us
ICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1
bmN0aW9uL2NzX3F1ZXJ5IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRl
ciI6ICJcInBhcnRpYWxfaG9zdG5hbWVcIiIsICJuYW1lIjogImNzX3F1ZXJ5IiwgImRlcHJlY2F0
ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjog
W119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6
IHt9LCAidGV4dCI6ICJjc19maWx0ZXJfc3RyaW5nIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAi
cHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAyMTQsICJyZWFkX29ubHki
OiBmYWxzZSwgInV1aWQiOiAiMTNlMzFmNWMtZjVlNC00ZjFhLWIyYmItNTE0YmM4NmZiYjNlIiwg
ImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAiOiAiRmlsdGVy
IGJ5IHNwZWNpZmljIGZpZWxkcyIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFs
c2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9jc19maWx0ZXJf
c3RyaW5nIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICJcInBy
b2R1Y3RfdHlwZV9kZXNjOidXb3Jrc3RhdGlvbicrc3RhdHVzOidub3JtYWwnK3BsYXRmb3JtX25h
bWU6WydXaW5kb3dzJywnTWFjJ11cIiIsICJuYW1lIjogImNzX2ZpbHRlcl9zdHJpbmciLCAiZGVw
cmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1
ZXMiOiBbXX1dLCAib3ZlcnJpZGVzIjogW10sICJleHBvcnRfZGF0ZSI6IDE1NDk3NTU1NzA3NzN9
"""
    )