# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_calendar_invite"""

from __future__ import print_function
from resilient_circuits.util import *


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     rule_calendar_date_time
    #     rule_calendar_description
    #     rule_calendar_extra_email_addr
    #   Function inputs:
    #     calendar_invite_datetime
    #     calendar_invite_description
    #     calendar_invite_extra_email_addr
    #     calendar_invite_incident_id
    #     calendar_invite_subject
    #   Message Destinations:
    #     fn_calendar_invite
    #   Functions:
    #     fn_calendar_invite
    #   Workflows:
    #     example_calendar_invite
    #   Rules:
    #     Example: Calendar Invite


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJkZXNjcmlwdGlvbiI6ICJFeGFtcGxl
IHdvcmtmbG93IHRoYXQgdGFrZXMgYW4gaW5jaWRlbnQgSUQgYW5kIGNhbGVuZGFyIGludml0YXRp
b24gaW5mb3JtYXRpb24gYXMgaW5wdXQgYW5kIHNlbmRzIGFuIGVtYWlsIG1lZXRpbmcgaW52aXRh
dGlvbiB0byB0aGUgbWVtYmVycyBhbmQgb3duZXJzIG9mIHRoZSBpbmNpZGVudC4iLCAid29ya2Zs
b3dfaWQiOiAxLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiZXhwb3J0X2tleSI6ICJleGFt
cGxlX2NhbGVuZGFyX2ludml0ZSIsICJ1dWlkIjogIjdmZWQ0NmIyLTdlMDctNDIyZC05M2Y4LTc3
Mjk1OTBlNWM5YSIsICJsYXN0X21vZGlmaWVkX2J5IjogImFAYS5jb20iLCAiY29udGVudCI6IHsi
eG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0
aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxc
IiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJ
XCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wi
IHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4
bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhz
ZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJo
dHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVfY2FsZW5k
YXJfaW52aXRlXCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBDYWxlbmRh
ciBJbnZpdGVcIj48ZG9jdW1lbnRhdGlvbj5FeGFtcGxlIHdvcmtmbG93IHRoYXQgdGFrZXMgYW4g
aW5jaWRlbnQgSUQgYW5kIGNhbGVuZGFyIGludml0YXRpb24gaW5mb3JtYXRpb24gYXMgaW5wdXQg
YW5kIHNlbmRzIGFuIGVtYWlsIG1lZXRpbmcgaW52aXRhdGlvbiB0byB0aGUgbWVtYmVycyBhbmQg
b3duZXJzIG9mIHRoZSBpbmNpZGVudC48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJT
dGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFrbzhtOHY8L291dGdv
aW5nPjwvc3RhcnRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzFrbzhtOHZc
IiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFz
a18xbmR5NncyXCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzFsdzVjb2tcIj48aW5jb21pbmc+
U2VxdWVuY2VGbG93XzBmNWZzejM8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcnZpY2VUYXNrIGlk
PVwiU2VydmljZVRhc2tfMW5keTZ3MlwiIG5hbWU9XCJmbl9jYWxlbmRhcl9pbnZpdGVcIiByZXNp
bGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVu
Y3Rpb24gdXVpZD1cIjQyZDljZDkzLWI4ZDgtNDIzNC05YTlmLWQwYjNjYmE4MThjYVwiPntcImlu
cHV0c1wiOnt9LFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCIjIEdldCB0aGUgQ2FsZW5kYXIg
aW52aXRlIGlucHV0XFxuaW5wdXRzLmNhbGVuZGFyX2ludml0ZV9kYXRldGltZSA9IHJ1bGUucHJv
cGVydGllcy5ydWxlX2NhbGVuZGFyX2RhdGVfdGltZVxcbmlucHV0cy5jYWxlbmRhcl9pbnZpdGVf
ZGVzY3JpcHRpb24gPSBydWxlLnByb3BlcnRpZXMucnVsZV9jYWxlbmRhcl9kZXNjcmlwdGlvblxc
bmlucHV0cy5jYWxlbmRhcl9pbnZpdGVfZXh0cmFfZW1haWxfYWRkciA9IHJ1bGUucHJvcGVydGll
cy5ydWxlX2NhbGVuZGFyX2V4dHJhX2VtYWlsX2FkZHJcXG5pbnB1dHMuY2FsZW5kYXJfaW52aXRl
X2luY2lkZW50X2lkID0gaW5jaWRlbnQuaWRcXG5pbnB1dHMuY2FsZW5kYXJfaW52aXRlX3N1Ympl
Y3QgPSBpbmNpZGVudC5uYW1lXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVt
ZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFrbzhtOHY8L2luY29taW5nPjxvdXRnb2luZz5T
ZXF1ZW5jZUZsb3dfMGY1ZnN6Mzwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93
IGlkPVwiU2VxdWVuY2VGbG93XzBmNWZzejNcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xbmR5
NncyXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMWx3NWNva1wiLz48dGV4dEFubm90YXRpb24gaWQ9
XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJl
PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNl
dWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRB
bm5vdGF0aW9uXzFreHhpeXRcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJC
UE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRc
IiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFy
dEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJwbW5k
aTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIx
NTdcIiB5PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJw
bW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9
XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwi
IHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJw
bW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFz
c29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2OVwiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTUzXCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5k
aTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xa284bTh2XCIgaWQ9XCJTZXF1
ZW5jZUZsb3dfMWtvOG04dl9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0MjVcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjMxMS41XCIgeT1cIjE4NC41XCIv
PjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBi
cG1uRWxlbWVudD1cIkVuZEV2ZW50XzFsdzVjb2tcIiBpZD1cIkVuZEV2ZW50XzFsdzVjb2tfZGlc
Ij48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI3NDNcIiB5PVwi
MTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0
aD1cIjBcIiB4PVwiNzYxXCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6
QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMW5k
eTZ3MlwiIGlkPVwiU2VydmljZVRhc2tfMW5keTZ3Ml9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCI0MjQuODcxNzk0ODcxNzk0ODZcIiB5PVwiMTY2XCIv
PjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVu
Y2VGbG93XzBmNWZzejNcIiBpZD1cIlNlcXVlbmNlRmxvd18wZjVmc3ozX2RpXCI+PG9tZ2RpOndh
eXBvaW50IHg9XCI1MjVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21n
ZGk6d2F5cG9pbnQgeD1cIjc0M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIv
PjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBc
IiB4PVwiNjM0XCIgeT1cIjE4NC41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1O
RWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9u
cz4iLCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9jYWxlbmRhcl9pbnZpdGUiLCAidmVyc2lvbiI6
IDExfSwgImNyZWF0b3JfaWQiOiAiYUBhLmNvbSIsICJhY3Rpb25zIjogW10sICJsYXN0X21vZGlm
aWVkX3RpbWUiOiAxNTM2ODcwNjQwNDYyLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9j
YWxlbmRhcl9pbnZpdGUiLCAibmFtZSI6ICJFeGFtcGxlOiBDYWxlbmRhciBJbnZpdGUifV0sICJh
Y3Rpb25zIjogW3sib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAidHlwZSI6IDEsICJuYW1lIjog
IkV4YW1wbGU6IENhbGVuZGFyIEludml0ZSIsICJ2aWV3X2l0ZW1zIjogW3sic2hvd19pZiI6IG51
bGwsICJmaWVsZF90eXBlIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1l
bnQiOiAiaGVhZGVyIiwgImNvbnRlbnQiOiAiRW50ZXIgbWVldGluZyBkYXRlIGFuZCB0aW1lOiIs
ICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogImFj
dGlvbmludm9jYXRpb24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJm
aWVsZF91dWlkIiwgImNvbnRlbnQiOiAiNzBlZjYxNjgtMTA2Zi00YWU4LTgwMjItODU5NGQzNWUy
NmY1IiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUi
OiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJoZWFkZXIiLCAi
Y29udGVudCI6ICJFbnRlciBtZWV0aW5nIGRlc2NyaXB0aW9uOiIsICJzdGVwX2xhYmVsIjogbnVs
bH0sIHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAi
c2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRl
bnQiOiAiYjM2NzhhMTEtYWE0OS00NzI2LTljMWQtNzA3OGZjZjU4YWJhIiwgInN0ZXBfbGFiZWwi
OiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiBudWxsLCAic2hvd19saW5r
X2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJoZWFkZXIiLCAiY29udGVudCI6ICJFbnRlciBl
bWFpbCBhZGRyZXNzZXMgb2YgYXR0ZW5kZWVzIHdobyBhcmUgbm90IGluY2lkZW50IG1lbWJlcnM6
IiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAi
YWN0aW9uaW52b2NhdGlvbiIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50Ijog
ImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICI0MDNkNjkxYS1jYmI0LTQ2ODgtODcwZi0xYjQyYzhj
MmY4ZjUiLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAi
d29ya2Zsb3dzIjogWyJleGFtcGxlX2NhbGVuZGFyX2ludml0ZSJdLCAibG9naWNfdHlwZSI6ICJh
bGwiLCAiZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBDYWxlbmRhciBJbnZpdGUiLCAidXVpZCI6ICIx
MzExY2MwMy04NjI3LTQ0MmItYTRiOS03YjZkN2E4ODUzYjEiLCAiYXV0b21hdGlvbnMiOiBbXSwg
ImNvbmRpdGlvbnMiOiBbXSwgImlkIjogMTQsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdfV0s
ICJsYXlvdXRzIjogW10sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAyLCAiaWQiOiA0LCAiaW5k
dXN0cmllcyI6IG51bGwsICJmdW5jdGlvbnMiOiBbeyJkaXNwbGF5X25hbWUiOiAiZm5fY2FsZW5k
YXJfaW52aXRlIiwgImRlc2NyaXB0aW9uIjogeyJjb250ZW50IjogIkV4YW1wbGUgd29ya2Zsb3cg
dGhhdCB0YWtlcyBhbiBpbmNpZGVudCBJRCBhbmQgY2FsZW5kYXIgaW52aXRhdGlvbnMgcGFyYW1l
dGVycyBhcyBpbnB1dCBhbmQgc2VuZHMgYW4gZW1haWwgbWVldGluZyBpbnZpdGF0aW9uIHRvIHRo
ZSBtZW1iZXJzIGFuZCBvd25lcnMgb2YgdGhlIGluY2lkZW50LiIsICJmb3JtYXQiOiAidGV4dCJ9
LCAiY3JlYXRvciI6IHsidHlwZSI6ICJ1c2VyIiwgImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQg
U3lzYWRtaW4iLCAiaWQiOiAyLCAibmFtZSI6ICJhQGEuY29tIn0sICJ2aWV3X2l0ZW1zIjogW3si
c2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hl
YWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiOTZhOGZi
MjctMTY3MC00NzFkLTllOWMtMWVkNmNjZTNhM2FjIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJz
aG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVh
ZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICI5MGJiZWM2
ZC00NDUyLTQxNzMtODQwZS0wMjYzMGEyZDkwNGMiLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7InNo
b3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlua19oZWFk
ZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogImQ3ZjEzYjg1
LTkxOWMtNGMwNi05NTU1LWIyZmYyZDBmOWVkMiIsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsic2hv
d19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRl
ciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiNWI3YzU0NzAt
M2Q3OS00YWIyLWE2ZmUtN2NkZTc4MjQ4ODIzIiwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJzaG93
X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xpbmtfaGVhZGVy
IjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJjMGJlYTVlZS1h
NWQ2LTQwNWItOGM1Zi1iYzNkNzk3Y2M3NzMiLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgImV4cG9y
dF9rZXkiOiAiZm5fY2FsZW5kYXJfaW52aXRlIiwgInV1aWQiOiAiNDJkOWNkOTMtYjhkOC00MjM0
LTlhOWYtZDBiM2NiYTgxOGNhIiwgImxhc3RfbW9kaWZpZWRfYnkiOiB7InR5cGUiOiAidXNlciIs
ICJkaXNwbGF5X25hbWUiOiAiUmVzaWxpZW50IFN5c2FkbWluIiwgImlkIjogMiwgIm5hbWUiOiAi
YUBhLmNvbSJ9LCAidmVyc2lvbiI6IDQsICJ3b3JrZmxvd3MiOiBbeyJwcm9ncmFtbWF0aWNfbmFt
ZSI6ICJleGFtcGxlX2NhbGVuZGFyX2ludml0ZSIsICJkZXNjcmlwdGlvbiI6IG51bGwsICJvYmpl
Y3RfdHlwZSI6ICJpbmNpZGVudCIsICJhY3Rpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6IENh
bGVuZGFyIEludml0ZSIsICJ3b3JrZmxvd19pZCI6IDEsICJ1dWlkIjogbnVsbH1dLCAibGFzdF9t
b2RpZmllZF90aW1lIjogMTUzNjcyNDQ0MDE3MiwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJmbl9j
YWxlbmRhcl9pbnZpdGUiLCAiaWQiOiAxLCAibmFtZSI6ICJmbl9jYWxlbmRhcl9pbnZpdGUifV0s
ICJhY3Rpb25fb3JkZXIiOiBbXSwgImdlb3MiOiBudWxsLCAidHlwZXMiOiBbXSwgInRpbWVmcmFt
ZXMiOiBudWxsLCAid29ya3NwYWNlcyI6IFtdLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJwaGFz
ZXMiOiBbXSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJpbmNp
ZGVudF90eXBlcyI6IFt7ImNyZWF0ZV9kYXRlIjogMTUzNjg4MTA0NTU2NiwgImRlc2NyaXB0aW9u
IjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJleHBvcnRfa2V5IjogIkN1
c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJpZCI6IDAsICJuYW1lIjogIkN1c3Rv
bWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJ1cGRhdGVfZGF0ZSI6IDE1MzY4ODEwNDU1
NjYsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJlbmFi
bGVkIjogZmFsc2UsICJzeXN0ZW0iOiBmYWxzZSwgInBhcmVudF9pZCI6IG51bGwsICJoaWRkZW4i
OiBmYWxzZX1dLCAic2NyaXB0cyI6IFtdLCAic2VydmVyX3ZlcnNpb24iOiB7Im1ham9yIjogMzEs
ICJ2ZXJzaW9uIjogIjMxLjAuMzk5MSIsICJidWlsZF9udW1iZXIiOiAzOTkxLCAibWlub3IiOiAw
fSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3sicHJvZ3JhbW1hdGljX25hbWUiOiAiZm5fY2Fs
ZW5kYXJfaW52aXRlIiwgIm5hbWUiOiAiZm5fY2FsZW5kYXJfaW52aXRlIiwgImV4cG9ydF9rZXki
OiAiZm5fY2FsZW5kYXJfaW52aXRlIiwgInV1aWQiOiAiZjIyMzYzYjUtZTk5OC00ZGJiLTk1MTgt
YzFmODBiNmJlNGZlIiwgImV4cGVjdF9hY2siOiB0cnVlLCAiZGVzdGluYXRpb25fdHlwZSI6IDAs
ICJ1c2VycyI6IFsiYUBhLmNvbSJdfV0sICJpbmNpZGVudF9hcnRpZmFjdF90eXBlcyI6IFtdLCAi
cm9sZXMiOiBbXSwgImZpZWxkcyI6IFt7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAwLCAi
b3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAiYmxhbmtfb3B0aW9u
IjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDUwLCAi
cmVhZF9vbmx5IjogdHJ1ZSwgInV1aWQiOiAiYzNmMGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2Ez
MzA4Y2NhIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJib29sZWFuIiwgInRvb2x0
aXAiOiAiV2hldGhlciB0aGUgaW5jaWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBp
bmNpZGVudC4gIFRoaXMgZmllbGQgaXMgcmVhZC1vbmx5LiIsICJpbnRlcm5hbCI6IGZhbHNlLCAi
cmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiaW5jaWRl
bnQvaW5jX3RyYWluaW5nIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJuYW1lIjogImlu
Y190cmFpbmluZyIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2
ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjog
NiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJydWxlX2NhbGVuZGFyX2Rlc2NyaXB0
aW9uIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAiY2hh
bmdlYWJsZSI6IHRydWUsICJpZCI6IDEzOCwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJi
MzY3OGExMS1hYTQ5LTQ3MjYtOWMxZC03MDc4ZmNmNThhYmEiLCAiY2hvc2VuIjogZmFsc2UsICJp
bnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICIiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJp
Y2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogImFjdGlvbmlu
dm9jYXRpb24vcnVsZV9jYWxlbmRhcl9kZXNjcmlwdGlvbiIsICJoaWRlX25vdGlmaWNhdGlvbiI6
IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAicnVsZV9jYWxlbmRhcl9kZXNjcmlw
dGlvbiIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZSwgInJlcXVpcmVkIjogImFsd2F5cyIsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6
IFtdLCAidHlwZV9pZCI6IDYsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAicnVsZV9j
YWxlbmRhcl9leHRyYV9lbWFpbF9hZGRyIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4
IjogInByb3BlcnRpZXMiLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDEzOSwgInJlYWRfb25s
eSI6IGZhbHNlLCAidXVpZCI6ICI0MDNkNjkxYS1jYmI0LTQ2ODgtODcwZi0xYjQyYzhjMmY4ZjUi
LCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICJBIGNv
bW1hIHNlcGFyYXRlZCBsaXN0IG9mIGVtYWlsIGFkZHJlc3NlcyBvZiBub24tbWVtYmVycyBvZiB0
aGUgaW5jaWRlbnQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVt
cGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRpb24vcnVsZV9jYWxlbmRh
cl9leHRyYV9lbWFpbF9hZGRyIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhv
bGRlciI6ICJjb21tYSBzZXBhcmF0ZWQgbGlzdCBvZiBlbWFpbCBhZGRyZXNzZXMiLCAibmFtZSI6
ICJydWxlX2NhbGVuZGFyX2V4dHJhX2VtYWlsX2FkZHIiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAi
ZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0
aW9ucyI6IFtdLCAidHlwZV9pZCI6IDYsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAi
cnVsZV9jYWxlbmRhcl9kYXRlX3RpbWUiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgi
OiAicHJvcGVydGllcyIsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMTM3LCAicmVhZF9vbmx5
IjogZmFsc2UsICJ1dWlkIjogIjcwZWY2MTY4LTEwNmYtNGFlOC04MDIyLTg1OTRkMzVlMjZmNSIs
ICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAiZGF0ZXRpbWVwaWNrZXIiLCAidG9vbHRp
cCI6ICIiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVz
IjogW10sICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRpb24vcnVsZV9jYWxlbmRhcl9kYXRl
X3RpbWUiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJu
YW1lIjogInJ1bGVfY2FsZW5kYXJfZGF0ZV90aW1lIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInZh
bHVlcyI6IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25f
cGVybXMiOiB7fSwgInRleHQiOiAiY2FsZW5kYXJfaW52aXRlX2RhdGV0aW1lIiwgImJsYW5rX29w
dGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAx
MzQsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiOTZhOGZiMjctMTY3MC00NzFkLTllOWMt
MWVkNmNjZTNhM2FjIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJkYXRldGltZXBp
Y2tlciIsICJ0b29sdGlwIjogIiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFs
c2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9jYWxlbmRhcl9p
bnZpdGVfZGF0ZXRpbWUiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVy
IjogIiIsICJuYW1lIjogImNhbGVuZGFyX2ludml0ZV9kYXRldGltZSIsICJkZXByZWNhdGVkIjog
ZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInJlcXVpcmVkIjogImFs
d2F5cyIsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAi
b3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImNhbGVuZGFyX2ludml0ZV9zdWJqZWN0Iiwg
ImJsYW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVl
LCAiaWQiOiAxMzMsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiOTBiYmVjNmQtNDQ1Mi00
MTczLTg0MGUtMDI2MzBhMmQ5MDRjIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0
ZXh0IiwgInRvb2x0aXAiOiAiU3ViamVjdCBmb3IgY2FsZW5kYXIgaW52aXRlIGVtYWlsIiwgImlu
dGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhw
b3J0X2tleSI6ICJfX2Z1bmN0aW9uL2NhbGVuZGFyX2ludml0ZV9zdWJqZWN0IiwgImhpZGVfbm90
aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJjYWxlbmRhcl9p
bnZpdGVfc3ViamVjdCIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9z
ZXJ2ZXIiOiBmYWxzZSwgInJlcXVpcmVkIjogImFsd2F5cyIsICJ2YWx1ZXMiOiBbXX0sIHsib3Bl
cmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0
IjogImNhbGVuZGFyX2ludml0ZV9leHRyYV9lbWFpbF9hZGRyIiwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAxNDAsICJyZWFk
X29ubHkiOiBmYWxzZSwgInV1aWQiOiAiYzBiZWE1ZWUtYTVkNi00MDViLThjNWYtYmMzZDc5N2Nj
NzczIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAiOiAi
TGlzdCBvZiBleHRyYSBlbWFpbCBhZGRyZXNzZXMgZm9yIGludml0ZWVzIHdobyBhcmUgbm90IG1l
bWJlcnMgb2YgdGhlIGluY2lkZW50ICIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0Ijog
ZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9jYWxlbmRh
cl9pbnZpdGVfZXh0cmFfZW1haWxfYWRkciIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
cGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAiY2FsZW5kYXJfaW52aXRlX2V4dHJhX2VtYWlsX2Fk
ZHIiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3Bl
cmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImNhbGVuZGFyX2ludml0ZV9kZXNjcmlwdGlvbiIs
ICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1
ZSwgImlkIjogMTM1LCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogImQ3ZjEzYjg1LTkxOWMt
NGMwNi05NTU1LWIyZmYyZDBmOWVkMiIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAi
dGV4dCIsICJ0b29sdGlwIjogIkNhbGVuZGFyIGludml0ZSBtZWV0aW5nIGRlc2NyaXB0aW9uIiwg
ImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAi
ZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2NhbGVuZGFyX2ludml0ZV9kZXNjcmlwdGlvbiIsICJo
aWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAiY2Fs
ZW5kYXJfaW52aXRlX2Rlc2NyaXB0aW9uIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRf
Y2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInZhbHVlcyI6
IFtdfSwgeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMi
OiB7fSwgInRleHQiOiAiY2FsZW5kYXJfaW52aXRlX2luY2lkZW50X2lkIiwgImJsYW5rX29wdGlv
biI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAxMzYs
ICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiNWI3YzU0NzAtM2Q3OS00YWIyLWE2ZmUtN2Nk
ZTc4MjQ4ODIzIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAidG9v
bHRpcCI6ICIiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxh
dGVzIjogW10sICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vY2FsZW5kYXJfaW52aXRlX2luY2lk
ZW50X2lkIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAi
bmFtZSI6ICJjYWxlbmRhcl9pbnZpdGVfaW5jaWRlbnRfaWQiLCAiZGVwcmVjYXRlZCI6IGZhbHNl
LCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJyZXF1aXJlZCI6ICJhbHdheXMi
LCAidmFsdWVzIjogW119XSwgIm92ZXJyaWRlcyI6IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTM2ODcw
Njk4MDM0fQ==
"""
    )
