# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_twitter_most_popular"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_twitter_most_popular package"""
    reload_params = {"package": u"fn_twitter_most_popular",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"twitter_search_tweet_count", u"twitter_search_tweet_string"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_twitter_most_popular"], 
                    "functions": [u"twitter_most_popular_tweets"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"twitter_most_popular_tweets_for_tag"], 
                    "actions": [u"Get Popular Tweets For Specified Tag(s)"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     twitter_search_tweet_count
    #     twitter_search_tweet_string
    #   Message Destinations:
    #     fn_twitter_most_popular
    #   Functions:
    #     twitter_most_popular_tweets
    #   Workflows:
    #     twitter_most_popular_tweets_for_tag
    #   Rules:
    #     Get Popular Tweets For Specified Tag(s)


    yield ImportDefinition(u"""
eyJpZCI6IDM1LCAiZmllbGRzIjogW3siY2hvc2VuIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNl
LCAidXVpZCI6ICJjM2YwZTNlZC0yMWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAib3BlcmF0
aW9ucyI6IFtdLCAidmFsdWVzIjogW10sICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMzgsICJu
YW1lIjogImluY190cmFpbmluZyIsICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAicHJlZml4IjogbnVs
bCwgInR5cGVfaWQiOiAwLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNpZGVudCBpcyBhIHNp
bXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBpcyByZWFkLW9ubHku
IiwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
ZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAicmVhZF9vbmx5IjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5pbmciLCAidGVtcGxhdGVzIjog
W119LCB7ImNob3NlbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiZDdiNDFk
NDQtMzVlOS00YzRhLTljNzktNmMzZjBmYTZhNDAxIiwgIm9wZXJhdGlvbnMiOiBbXSwgInZhbHVl
cyI6IFtdLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDc4LCAibmFtZSI6ICJ0d2l0dGVyX3Nl
YXJjaF90d2VldF9zdHJpbmciLCAidGV4dCI6ICJ0d2l0dGVyX3NlYXJjaF90d2VldF9zdHJpbmci
LCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiQSBudW1iZXIgb2Yg
aGFzaHRhZ3MgdG8gcXVlcnkgZm9yIHBvcHVsYXIgdHdlZXRzLiBJbnB1dCBpcyBhIEpTT04gT2Jq
ZWN0IiwgInBsYWNlaG9sZGVyIjogInsgXCJoYXNodGFnc1wiOlsgXCJNYWx3YXJlXCJdIH0iLCAi
aW5wdXRfdHlwZSI6ICJ0ZXh0YXJlYSIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxh
bmtfb3B0aW9uIjogZmFsc2UsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInJlYWRfb25seSI6IGZh
bHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vdHdpdHRl
cl9zZWFyY2hfdHdlZXRfc3RyaW5nIiwgInRlbXBsYXRlcyI6IFt7InV1aWQiOiAiZGU5MWU4YzYt
YmFiZC00MWJlLTk4ZWUtNDNjZWI4ODFmNTdlIiwgImlkIjogNCwgIm5hbWUiOiAiTWFsd2FyZSBN
b3N0IFBvcHVsYXIiLCAidGVtcGxhdGUiOiB7ImZvcm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAi
e1xuXCJoYXNodGFnc1wiOlsgXCJNYWx3YXJlXCJdXG59In19LCB7InV1aWQiOiAiNWFlZWI2MDEt
YzAwYy00ODc4LWIzZGMtNjU2OWJkZTI1ZDljIiwgImlkIjogMSwgIm5hbWUiOiAiNSB0eXBlcyBv
ZiBUaHJlYXRzIiwgInRlbXBsYXRlIjogeyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50IjogIntc
blwiaGFzaHRhZ3NcIjpbIFwiTWFnZWNhcnRcIiwgXCJXYW5uYWNyeVwiLCBcIlNwZWN0cmVcIiwg
XCJYRlRBU1wiLCBcIkVtb3RldFwiXVxufSJ9fSwgeyJ1dWlkIjogImMyMGUxN2RmLWIyNTYtNGM0
My04ZjI3LWJjYjE1YTlkNzcyOCIsICJpZCI6IDMsICJuYW1lIjogIkJvdG5ldCwgQ3liZXJzZWN1
cml0eSwgTWFsd2FyZSIsICJ0ZW1wbGF0ZSI6IHsiZm9ybWF0IjogInRleHQiLCAiY29udGVudCI6
ICJ7XG5cImhhc2h0YWdzXCI6WyBcIkJvdG5ldFwiLCBcIkN5YmVyc2VjdXJpdHlcIiwgXCJNYWx3
YXJlXCJdXG59In19LCB7InV1aWQiOiAiMmJhMGI1MTUtZjFlZi00MTc0LWI5YmEtYWNhNmU1MjBl
ZTczIiwgImlkIjogMiwgIm5hbWUiOiAiQ3J5cHRvY3VycmVuY3kiLCAidGVtcGxhdGUiOiB7ImZv
cm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAie1xuXCJoYXNodGFnc1wiOlsgXCJDcnlwdG9jdXJy
ZW5jeVwiXVxufSJ9fV19LCB7ImNob3NlbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1
aWQiOiAiZjc5YTU0NDAtMTdkMi00MjNiLTkxZmYtZjBkMGY4NmRiMmNlIiwgIm9wZXJhdGlvbnMi
OiBbXSwgInZhbHVlcyI6IFtdLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDc5LCAibmFtZSI6
ICJ0d2l0dGVyX3NlYXJjaF90d2VldF9jb3VudCIsICJ0ZXh0IjogInR3aXR0ZXJfc2VhcmNoX3R3
ZWV0X2NvdW50IiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0b29sdGlwIjogIkEg
bnVtYmVyIG9mIHR3ZWV0cyB0byBiZSByZXR1cm5lZCBieSB0aGUgZnVuY3Rpb24uIElmIG5vIHZh
bHVlIGlzIHByb3ZpZGVkLCBkZWZhdWx0cyB0byAxNS4iLCAicGxhY2Vob2xkZXIiOiAiMTUiLCAi
aW5wdXRfdHlwZSI6ICJudW1iZXIiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImRlZmF1
bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJvcGVy
YXRpb25fcGVybXMiOiB7fSwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2Us
ICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vdHdpdHRlcl9zZWFyY2hfdHdlZXRfY291bnQiLCAi
dGVtcGxhdGVzIjogW119XSwgInBoYXNlcyI6IFtdLCAib3ZlcnJpZGVzIjogW10sICJhY3Rpb25z
IjogW3siaWQiOiAxNSwgIm5hbWUiOiAiR2V0IFBvcHVsYXIgVHdlZXRzIEZvciBTcGVjaWZpZWQg
VGFnKHMpIiwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiY29uZGl0aW9u
cyI6IFtdLCAiYXV0b21hdGlvbnMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10sICJ3
b3JrZmxvd3MiOiBbInR3aXR0ZXJfbW9zdF9wb3B1bGFyX3R3ZWV0c19mb3JfdGFnIl0sICJ2aWV3
X2l0ZW1zIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAiMzdjNTEwNDgt
NjQzMS00ODQ0LWI4OGMtOWFmYTJhNTFiNzY0IiwgImV4cG9ydF9rZXkiOiAiR2V0IFBvcHVsYXIg
VHdlZXRzIEZvciBTcGVjaWZpZWQgVGFnKHMpIiwgImxvZ2ljX3R5cGUiOiAiYWxsIn1dLCAibGF5
b3V0cyI6IFtdLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJ0aW1lZnJhbWVzIjogbnVsbCwgImlu
ZHVzdHJpZXMiOiBudWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJnZW9zIjogbnVsbCwgImZ1bmN0
aW9ucyI6IFt7ImlkIjogMSwgIm5hbWUiOiAidHdpdHRlcl9tb3N0X3BvcHVsYXJfdHdlZXRzIiwg
ImRlc2NyaXB0aW9uIjogeyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50IjogIkEgZnVuY3Rpb24g
d2l0aCB0YXJnZXRzIHRoZSBUd2l0dGVyIFNlYXJjaCBBUEkuIFRha2VzIGluIGFuIGlucHV0IG9m
IGEgbXVsdGlwbGUgcG9zc2libGUgaGFzaHRhZ3MgYW5kIGEgbnVtYmVyIG9mIFR3ZWV0cyB0byBi
ZSByZXR1cm5lZCBhbmQgY29udGFjdHMgdGhlIFR3aXR0ZXIgU2VhcmNoIEFQSSB0byByZXR1cm4g
dGhlIHJlc3VsdHMuIFJlcXVpcmVzIFR3aXR0ZXIgQWNjZXNzIEtleSBhbmQgU2VjcmV0IHRvIG9i
dGFpbiBhIE9BdXRoMiByZWFkLW9ubHkgdG9rZW4uIn0sICJ1dWlkIjogImE3ZjUzOGNmLWEwN2Mt
NGQ3NS05NWVjLTk0YzFhYmFhZTQ1MCIsICJ2ZXJzaW9uIjogNSwgImNyZWF0b3IiOiB7ImlkIjog
MiwgInR5cGUiOiAidXNlciIsICJuYW1lIjogImFAYS5jb20iLCAiZGlzcGxheV9uYW1lIjogIlJl
c2lsaWVudCBTeXNhZG1pbiJ9LCAid29ya2Zsb3dzIjogW3siZGVzY3JpcHRpb24iOiBudWxsLCAi
dXVpZCI6IG51bGwsICJ3b3JrZmxvd19pZCI6IDM1LCAibmFtZSI6ICJFeGFtcGxlIFR3aXR0ZXI6
IFBvcHVsYXIgVHdlZXRzIEZvciBUYWcocykiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAidHdpdHRl
cl9tb3N0X3BvcHVsYXJfdHdlZXRzX2Zvcl90YWciLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQi
LCAiYWN0aW9ucyI6IFtdfSwgeyJkZXNjcmlwdGlvbiI6IG51bGwsICJ1dWlkIjogbnVsbCwgIndv
cmtmbG93X2lkIjogMSwgIm5hbWUiOiAiVGVzdCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJ0ZXN0
IiwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgImFjdGlvbnMiOiBbXX0sIHsiZGVzY3JpcHRp
b24iOiBudWxsLCAidXVpZCI6IG51bGwsICJ3b3JrZmxvd19pZCI6IDM0LCAibmFtZSI6ICJ0ZXN0
IHR3aXR0ZXIgc2VhcmNoIiwgInByb2dyYW1tYXRpY19uYW1lIjogInRlc3RfdHdpdHRlcl9zZWFy
Y2giLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiYWN0aW9ucyI6IFtdfV0sICJkaXNwbGF5
X25hbWUiOiAidHdpdHRlcl9tb3N0X3BvcHVsYXJfdHdlZXRzIiwgImRlc3RpbmF0aW9uX2hhbmRs
ZSI6ICJmbl90d2l0dGVyX21vc3RfcG9wdWxhciIsICJleHBvcnRfa2V5IjogInR3aXR0ZXJfbW9z
dF9wb3B1bGFyX3R3ZWV0cyIsICJsYXN0X21vZGlmaWVkX2J5IjogeyJpZCI6IDIsICJ0eXBlIjog
InVzZXIiLCAibmFtZSI6ICJhQGEuY29tIiwgImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQgU3lz
YWRtaW4ifSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NDA1NTIyMTg3MjYsICJ2aWV3X2l0ZW1z
IjogW3sic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmll
bGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICJkN2I0MWQ0
NC0zNWU5LTRjNGEtOWM3OS02YzNmMGZhNmE0MDEiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNl
fSwgeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVs
ZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogImY3OWE1NDQw
LTE3ZDItNDIzYi05MWZmLWYwZDBmODZkYjJjZSIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9
XX1dLCAic2VydmVyX3ZlcnNpb24iOiB7Im1ham9yIjogMzAsICJtaW5vciI6IDAsICJidWlsZF9u
dW1iZXIiOiAzNDc2LCAidmVyc2lvbiI6ICIzMC4wLjM0NzYifSwgImV4cG9ydF9mb3JtYXRfdmVy
c2lvbiI6IDIsICJleHBvcnRfZGF0ZSI6IDE1NDA1NTkxODQ5MTYsICJpbmNpZGVudF90eXBlcyI6
IFt7InVwZGF0ZV9kYXRlIjogMTU0MDU1OTE5NzA3OSwgImNyZWF0ZV9kYXRlIjogMTU0MDU1OTE5
NzA3OSwgInV1aWQiOiAiYmZlZWMyZDQtMzc3MC0xMWU4LWFkMzktNGEwMDA0MDQ0YWEwIiwgImRl
c2NyaXB0aW9uIjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJleHBvcnRf
a2V5IjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJuYW1lIjogIkN1c3Rv
bWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJlbmFibGVkIjogZmFsc2UsICJzeXN0ZW0i
OiBmYWxzZSwgInBhcmVudF9pZCI6IG51bGwsICJoaWRkZW4iOiBmYWxzZSwgImlkIjogMH1dLCAi
YXV0b21hdGljX3Rhc2tzIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7Im5hbWUiOiAi
Zm5fdHdpdHRlcl9tb3N0X3BvcHVsYXIiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZm5fdHdpdHRl
cl9tb3N0X3BvcHVsYXIiLCAiZGVzdGluYXRpb25fdHlwZSI6IDAsICJleHBlY3RfYWNrIjogdHJ1
ZSwgInVzZXJzIjogWyJhQGEuY29tIl0sICJ1dWlkIjogImZjYTVmMjc3LTgzNWUtNDkwNS1hMGQ3
LTQ3YmM5Y2ExMTdkOCIsICJleHBvcnRfa2V5IjogImZuX3R3aXR0ZXJfbW9zdF9wb3B1bGFyIn1d
LCAidGFza19vcmRlciI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJ0eXBlcyI6IFtdLCAic2Ny
aXB0cyI6IFtdLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7
ImRlc2NyaXB0aW9uIjogIkFuIGV4YW1wbGUgd29ya2Zsb3cgd2hpY2ggaXMgdXNlZCB0byByZXRy
aWV2ZSBhIG51bWJlciBvZiBwb3B1bGFyIHR3ZWV0cyBmb3IgMSBvciBtb3JlIHByb3ZpZGVkIHRh
Z3MuIERlZmF1bHQgYW1vdW50IHJldHVybmVkIGlzIDE1IGhvd2V2ZXIgdGhpcyBpcyBjdXN0b21p
c2FibGUgdXNpbmcgYSBpbnB1dCB2YXJpYWJsZS4gSGFyZCBsaW1pdCBpcyAxMDAuIFNhdmVzIHJl
dHJpZXZlZCB0d2VldHMgaW4gYSByaWNoIHRleHQgbm90ZS4iLCAidXVpZCI6ICJlMDM5NjlhNS00
OTM1LTRkY2QtYmM2MS1jMTg3MzBmOWUzNTAiLCAid29ya2Zsb3dfaWQiOiAzNSwgIm5hbWUiOiAi
RXhhbXBsZSBUd2l0dGVyOiBQb3B1bGFyIFR3ZWV0cyBGb3IgVGFnKHMpIiwgInByb2dyYW1tYXRp
Y19uYW1lIjogInR3aXR0ZXJfbW9zdF9wb3B1bGFyX3R3ZWV0c19mb3JfdGFnIiwgIm9iamVjdF90
eXBlIjogImluY2lkZW50IiwgImNyZWF0b3JfaWQiOiAiYUBhLmNvbSIsICJsYXN0X21vZGlmaWVk
X2J5IjogImFAYS5jb20iLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU0MDU1ODk5MTIzOSwgImV4
cG9ydF9rZXkiOiAidHdpdHRlcl9tb3N0X3BvcHVsYXJfdHdlZXRzX2Zvcl90YWciLCAiY29udGVu
dCI6IHsieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/Pjxk
ZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQv
TU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAw
NTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUy
NC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQv
RElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHht
bG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwi
aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3Bh
Y2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cInR3aXR0ZXJf
bW9zdF9wb3B1bGFyX3R3ZWV0c19mb3JfdGFnXCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9
XCJFeGFtcGxlIFR3aXR0ZXI6IFBvcHVsYXIgVHdlZXRzIEZvciBUYWcocylcIj48ZG9jdW1lbnRh
dGlvbj5BbiBleGFtcGxlIHdvcmtmbG93IHdoaWNoIGlzIHVzZWQgdG8gcmV0cmlldmUgYSBudW1i
ZXIgb2YgcG9wdWxhciB0d2VldHMgZm9yIDEgb3IgbW9yZSBwcm92aWRlZCB0YWdzLiBEZWZhdWx0
IGFtb3VudCByZXR1cm5lZCBpcyAxNSBob3dldmVyIHRoaXMgaXMgY3VzdG9taXNhYmxlIHVzaW5n
IGEgaW5wdXQgdmFyaWFibGUuIEhhcmQgbGltaXQgaXMgMTAwLiBTYXZlcyByZXRyaWV2ZWQgdHdl
ZXRzIGluIGEgcmljaCB0ZXh0IG5vdGUuPC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwi
U3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wcnhjamR0PC9vdXRn
b2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMTI5eHViOVwi
IG5hbWU9XCJ0d2l0dGVyX21vc3RfcG9wdWxhcl90d2VldHNcIiByZXNpbGllbnQ6dHlwZT1cImZ1
bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cImE3
ZjUzOGNmLWEwN2MtNGQ3NS05NWVjLTk0YzFhYmFhZTQ1MFwiPntcImlucHV0c1wiOntcImQ3YjQx
ZDQ0LTM1ZTktNGM0YS05Yzc5LTZjM2YwZmE2YTQwMVwiOntcImlucHV0X3R5cGVcIjpcInN0YXRp
Y1wiLFwic3RhdGljX2lucHV0XCI6e1wibXVsdGlzZWxlY3RfdmFsdWVcIjpbXSxcInRleHRfY29u
dGVudF92YWx1ZVwiOntcImZvcm1hdFwiOlwidGV4dFwiLFwiY29udGVudFwiOlwie1xcblxcXCJo
YXNodGFnc1xcXCI6WyBcXFwiTWFnZWNhcnRcXFwiLCBcXFwiV2FubmFjcnlcXFwiLCBcXFwiU3Bl
Y3RyZVxcXCIsIFxcXCJYRlRBU1xcXCIsIFxcXCJFbW90ZXRcXFwiXVxcbn1cIn19fSxcImY3OWE1
NDQwLTE3ZDItNDIzYi05MWZmLWYwZDBmODZkYjJjZVwiOntcImlucHV0X3R5cGVcIjpcInN0YXRp
Y1wiLFwic3RhdGljX2lucHV0XCI6e1wibXVsdGlzZWxlY3RfdmFsdWVcIjpbXSxcIm51bWJlcl92
YWx1ZVwiOjV9fX0sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJcXG4gIFxcbm5vdGVUZXh0
ID0gdVxcXCJcXFwiXFxcIiZsdDticiZndDtUd2l0dGVyIHNlYXJjaDogXFxuICAgICAgICAgICAg
ICBTdWNjZXNzZnVsIDogezB9XFxuICAgICAgICAgICAgICAmbHQ7YiZndDtTZWFyY2hlZCBUYWdz
OiZsdDtiJmd0O3sxfSZsdDsvYiZndDtcXFwiXFxcIlxcXCIuZm9ybWF0KFxcXCJUcnVlXFxcIiBp
ZiByZXN1bHRzW1xcXCJzdWNjZXNzXFxcIl0gaXMgVHJ1ZSBlbHNlIEZhbHNlLCByZXN1bHRzW1xc
XCJpbnB1dHNcXFwiXVtcXFwidHdpdHRlcl9zZWFyY2hfdHdlZXRfc3RyaW5nXFxcIl0pXFxuXFxu
Zm9yIHR3ZWV0IGluIHJlc3VsdHMudHdlZXRzW1xcXCJzdGF0dXNlc1xcXCJdOlxcbiAgbm90ZVRl
eHQgKz0gdVxcXCJcXFwiXFxcIiZsdDticiZndDsmbHQ7YnImZ3Q7VHdlZXQgVGV4dDogJmx0O2Jy
Jmd0OyZsdDtiJmd0O3swfSZsdDsvYiZndDtcXG4gICZsdDtiJmd0O1R3ZWV0IFVSTCZsdDsvYiZn
dDsgOiZsdDthJmd0O3sxfSZsdDsvYSZndDtcXFwiXFxcIlxcXCIuZm9ybWF0KHR3ZWV0W1xcXCJ0
ZXh0XFxcIl0sdHdlZXRbXFxcImVudGl0aWVzXFxcIl1bXFxcInVybHNcXFwiXVswXVtcXFwidXJs
XFxcIl0pIFxcbiAgXFxuICAjbm90ZVRleHQrPSB1JyAnLmpvaW4oKHUnVHdlZXQgVVJMIGlzJywg
dHdlZXRbXFxcImVudGl0aWVzXFxcIl1bXFxcInVybHNcXFwiXVswXVtcXFwidXJsXFxcIl0pKS5l
bmNvZGUoJ3V0Zi04Jykuc3RyaXAoKVxcblxcbmluY2lkZW50LmFkZE5vdGUoaGVscGVyLmNyZWF0
ZVJpY2hUZXh0KG5vdGVUZXh0KSlcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVs
ZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMHJ4Y2pkdDwvaW5jb21pbmc+PG91dGdvaW5n
PlNlcXVlbmNlRmxvd18wc2Y5dHd5PC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxlbmRFdmVudCBp
ZD1cIkVuZEV2ZW50XzA2YTFzajJcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBzZjl0d3k8L2lu
Y29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wcnhjamR0
XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRh
c2tfMTI5eHViOVwiLz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBzZjl0d3lcIiBz
b3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xMjl4dWI5XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMDZh
MXNqMlwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRl
eHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29j
aWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRf
MTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PC9wcm9jZXNz
PjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxh
bmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpC
UE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZl
bnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIg
eD1cIjE5MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxODdcIiB5PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5M
YWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJU
ZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1
NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFz
c29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6
d2F5cG9pbnQgeD1cIjE5NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjE3XCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiMTYwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRc
Ii8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2
aWNlVGFza18xMjl4dWI5XCIgaWQ9XCJTZXJ2aWNlVGFza18xMjl4dWI5X2RpXCI+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjQxOVwiIHk9XCIxNjZcIi8+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRf
MDZhMXNqMlwiIGlkPVwiRW5kRXZlbnRfMDZhMXNqMl9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjY4OVwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFi
ZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiNjYyXCIgeT1c
IjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBN
TkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHJ4Y2pkdFwiIGlkPVwiU2VxdWVuY2VG
bG93XzByeGNqZHRfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjIyOFwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDE5XCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiOTBcIiB4PVwiMjc4LjVcIiB5PVwiMTg0LjVcIi8+PC9i
cG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVs
ZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHNmOXR3eVwiIGlkPVwiU2VxdWVuY2VGbG93XzBzZjl0d3lf
ZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjUxOVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNjg5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2lu
dFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIx
M1wiIHdpZHRoPVwiOTBcIiB4PVwiNTU5XCIgeT1cIjE4NC41XCIvPjwvYnBtbmRpOkJQTU5MYWJl
bD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdy
YW0+PC9kZWZpbml0aW9ucz4iLCAidmVyc2lvbiI6IDIsICJ3b3JrZmxvd19pZCI6ICJ0d2l0dGVy
X21vc3RfcG9wdWxhcl90d2VldHNfZm9yX3RhZyJ9LCAiYWN0aW9ucyI6IFtdfV0sICJyb2xlcyI6
IFtdLCAid29ya3NwYWNlcyI6IFtdfQ==
"""
    )