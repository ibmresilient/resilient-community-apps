# (c) Copyright IBM Corp. 2018. All Rights Reserved.
# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_twitter_most_popular"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_twitter_most_popular package"""
    reload_params = {"package": u"fn_twitter_most_popular",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"twitter_search_tweet_count", u"twitter_search_tweet_string"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_twitter_most_popular"], 
                    "functions": [u"twitter_most_popular_tweets"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"twitter_most_popular_tweets_for_tag"], 
                    "actions": [u"Get Popular Tweets For Specified Tag(s)"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     twitter_search_tweet_count
    #     twitter_search_tweet_string
    #   Message Destinations:
    #     fn_twitter_most_popular
    #   Functions:
    #     twitter_most_popular_tweets
    #   Workflows:
    #     twitter_most_popular_tweets_for_tag
    #   Rules:
    #     Get Popular Tweets For Specified Tag(s)


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJwcm9ncmFtbWF0aWNfbmFtZSI6ICJ0
d2l0dGVyX21vc3RfcG9wdWxhcl90d2VldHNfZm9yX3RhZyIsICJvYmplY3RfdHlwZSI6ICJpbmNp
ZGVudCIsICJleHBvcnRfa2V5IjogInR3aXR0ZXJfbW9zdF9wb3B1bGFyX3R3ZWV0c19mb3JfdGFn
IiwgInV1aWQiOiAiZTAzOTY5YTUtNDkzNS00ZGNkLWJjNjEtYzE4NzMwZjllMzUwIiwgImxhc3Rf
bW9kaWZpZWRfYnkiOiAiYUBhLmNvbSIsICJuYW1lIjogIkV4YW1wbGUgVHdpdHRlcjogUG9wdWxh
ciBUd2VldHMgRm9yIFRhZyhzKSIsICJjb250ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1c
IjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3
dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8v
d3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6
Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcv
MjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNj
aGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcv
dGVzdFwiPjxwcm9jZXNzIGlkPVwidHdpdHRlcl9tb3N0X3BvcHVsYXJfdHdlZXRzX2Zvcl90YWdc
IiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGUgVHdpdHRlcjogUG9wdWxhciBU
d2VldHMgRm9yIFRhZyhzKVwiPjxkb2N1bWVudGF0aW9uPkFuIGV4YW1wbGUgd29ya2Zsb3cgd2hp
Y2ggaXMgdXNlZCB0byByZXRyaWV2ZSBhIG51bWJlciBvZiBwb3B1bGFyIHR3ZWV0cyBmb3IgMSBv
ciBtb3JlIHByb3ZpZGVkIHRhZ3MuIERlZmF1bHQgYW1vdW50IHJldHVybmVkIGlzIDE1IGhvd2V2
ZXIgdGhpcyBpcyBjdXN0b21pc2FibGUgdXNpbmcgYSBpbnB1dCB2YXJpYWJsZS4gSGFyZCBsaW1p
dCBpcyAxMDAuIFNhdmVzIHJldHJpZXZlZCB0d2VldHMgaW4gYSByaWNoIHRleHQgbm90ZS48L2Rv
Y3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29p
bmc+U2VxdWVuY2VGbG93XzByeGNqZHQ8L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRh
c2sgaWQ9XCJTZXJ2aWNlVGFza18xMjl4dWI5XCIgbmFtZT1cIkdldCBQb3B1bGFyIFR3ZWV0cyBG
b3IgU3BlY2lmaWVkIC4uLlwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9u
RWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiYTdmNTM4Y2YtYTA3Yy00ZDc1LTk1
ZWMtOTRjMWFiYWFlNDUwXCI+e1wiaW5wdXRzXCI6e1wiZDdiNDFkNDQtMzVlOS00YzRhLTljNzkt
NmMzZjBmYTZhNDAxXCI6e1wiaW5wdXRfdHlwZVwiOlwic3RhdGljXCIsXCJzdGF0aWNfaW5wdXRc
Ijp7XCJtdWx0aXNlbGVjdF92YWx1ZVwiOltdLFwidGV4dF9jb250ZW50X3ZhbHVlXCI6e1wiZm9y
bWF0XCI6XCJ0ZXh0XCIsXCJjb250ZW50XCI6XCJ7XFxuXFxcImhhc2h0YWdzXFxcIjpbIFxcXCJN
YWdlY2FydFxcXCIsIFxcXCJXYW5uYWNyeVxcXCIsIFxcXCJTcGVjdHJlXFxcIiwgXFxcIlhGVEFT
XFxcIiwgXFxcIkVtb3RldFxcXCJdXFxufVwifX19LFwiZjc5YTU0NDAtMTdkMi00MjNiLTkxZmYt
ZjBkMGY4NmRiMmNlXCI6e1wiaW5wdXRfdHlwZVwiOlwic3RhdGljXCIsXCJzdGF0aWNfaW5wdXRc
Ijp7XCJtdWx0aXNlbGVjdF92YWx1ZVwiOltdLFwibnVtYmVyX3ZhbHVlXCI6NX19fSxcInBvc3Rf
cHJvY2Vzc2luZ19zY3JpcHRcIjpcIlxcblxcXCJcXFwiXFxcIlxcbkV4YW1wbGUgb2YgdGhlIHJl
c3VsdHMgcmV0dXJuZWQgYnkgdGhpcyB3b3JrZmxvdy5cXG5cXG5yZXN1bHRzID0ge1xcbiAgc3Vj
Y2VzcyA9IFRydWUsXFxuICBpbnB1dHMgOntcXG4gICAgdHdpdHRlcl9zZWFyY2hfdHdlZXRfc3Ry
aW5nOiAmbHQ7c3RyaW5nJmd0OyxcXG4gICAgdHdpdHRlcl9zZWFyY2hfdHdlZXRfY291bnQ6ICZs
dDtpbnQmZ3Q7XFxuICB9XFxuICB0d2VldHM6IHtcXG4gICAgc3RhdHVzZXM6IFt7XFxuICAgICAg
dGV4dDogJmx0O1N0cmluZyZndDssXFxuICAgICAgZW50aXRpZXM6IHtcXG4gICAgICAgICAgdXJs
czpbe1xcbiAgICAgICAgICAgIHVybCA6ICZsdDtzdHJpbmcmZ3Q7XFxuICAgICAgICAgIH1dXFxu
ICAgICAgICB9LFxcbiAgICAgICAgLi4uT3RoZXJBdHRyaWJ1dGVzXFxuICAgICAgfVxcbiAgICB9
XVxcbiAgfVxcbn1cXG5cXFwiXFxcIlxcXCJcXG5pZiAocmVzdWx0cy5zdWNjZXNzKTpcXG4gICNQ
cmVwYXJlIHRoZSBzdGFydCBvZiB0aGUgbm90ZSB0ZXh0XFxuICBub3RlVGV4dCA9IHVcXFwiXFxc
IlxcXCImbHQ7YnImZ3Q7VHdpdHRlciBzZWFyY2g6IFxcbiAgICAgICAgICAgICAgICBTdWNjZXNz
ZnVsIDogezB9XFxuICAgICAgICAgICAgICAgICZsdDtiJmd0O1NlYXJjaGVkIFRhZ3M6Jmx0O2Im
Z3Q7ezF9Jmx0Oy9iJmd0O1xcXCJcXFwiXFxcIi5mb3JtYXQoXFxcIlRydWVcXFwiIGlmIHJlc3Vs
dHNbXFxcInN1Y2Nlc3NcXFwiXSBpcyBUcnVlIGVsc2UgRmFsc2UsIHJlc3VsdHNbXFxcImlucHV0
c1xcXCJdW1xcXCJ0d2l0dGVyX3NlYXJjaF90d2VldF9zdHJpbmdcXFwiXSlcXG4gICMgRm9yIGVh
Y2ggcmV0dXJuZWQgdHdlZXQgYWRkIHRoZSB0ZXh0IGFuZCBVUkwgb2YgdGhlIHR3ZWV0IHRvIHRo
ZSBub3RlVGV4dFxcbiAgZm9yIHR3ZWV0IGluIHJlc3VsdHMudHdlZXRzW1xcXCJzdGF0dXNlc1xc
XCJdOlxcbiAgICBub3RlVGV4dCArPSB1XFxcIlxcXCJcXFwiJmx0O2JyJmd0OyZsdDticiZndDtU
d2VldCBUZXh0OiAmbHQ7YnImZ3Q7Jmx0O2ImZ3Q7ezB9Jmx0Oy9iJmd0O1xcbiAgICAmbHQ7YiZn
dDtUd2VldCBVUkwmbHQ7L2ImZ3Q7IDombHQ7YSZndDt7MX0mbHQ7L2EmZ3Q7XFxcIlxcXCJcXFwi
LmZvcm1hdCh0d2VldFtcXFwidGV4dFxcXCJdLHR3ZWV0W1xcXCJlbnRpdGllc1xcXCJdW1xcXCJ1
cmxzXFxcIl1bMF1bXFxcInVybFxcXCJdKSBcXG4gICAgXFxuICBpbmNpZGVudC5hZGROb3RlKGhl
bHBlci5jcmVhdGVSaWNoVGV4dChub3RlVGV4dCkpXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9l
eHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzByeGNqZHQ8L2luY29taW5n
PjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMHNmOXR3eTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48
ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wNmExc2oyXCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18w
c2Y5dHd5PC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZs
b3dfMHJ4Y2pkdFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1c
IlNlcnZpY2VUYXNrXzEyOXh1YjlcIi8+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18w
c2Y5dHd5XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMTI5eHViOVwiIHRhcmdldFJlZj1cIkVu
ZEV2ZW50XzA2YTFzajJcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4
eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0
aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJT
dGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIv
PjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1u
ZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwi
PjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9
XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lk
dGg9XCIzNlwiIHg9XCIxOTJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTg3XCIgeT1cIjIyM1wiLz48L2Jw
bW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5F
bGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4
eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5
OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVs
ZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2Rp
XCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOTZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjIxN1wiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE2MFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVt
ZW50PVwiU2VydmljZVRhc2tfMTI5eHViOVwiIGlkPVwiU2VydmljZVRhc2tfMTI5eHViOV9kaVwi
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCI0MTlcIiB5PVwi
MTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1c
IkVuZEV2ZW50XzA2YTFzajJcIiBpZD1cIkVuZEV2ZW50XzA2YTFzajJfZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI2ODlcIiB5PVwiMTg4XCIvPjxicG1u
ZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1c
IjY2MlwiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48
YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzByeGNqZHRcIiBpZD1c
IlNlcXVlbmNlRmxvd18wcnhjamR0X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIyMjhcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQxOVwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1cIjI3OC41XCIgeT1cIjE4
NC41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5F
ZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzBzZjl0d3lcIiBpZD1cIlNlcXVlbmNlRmxv
d18wc2Y5dHd5X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI1MTlcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjY4OVwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1cIjU1OVwiIHk9XCIxODQuNVwiLz48L2JwbW5k
aTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRp
OkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgIndvcmtmbG93X2lkIjogInR3aXR0ZXJfbW9z
dF9wb3B1bGFyX3R3ZWV0c19mb3JfdGFnIiwgInZlcnNpb24iOiA1fSwgIndvcmtmbG93X2lkIjog
MzUsICJhY3Rpb25zIjogW10sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTQwNTYyNTE0NzUwLCAi
Y3JlYXRvcl9pZCI6ICJhQGEuY29tIiwgImRlc2NyaXB0aW9uIjogIkFuIGV4YW1wbGUgd29ya2Zs
b3cgd2hpY2ggaXMgdXNlZCB0byByZXRyaWV2ZSBhIG51bWJlciBvZiBwb3B1bGFyIHR3ZWV0cyBm
b3IgMSBvciBtb3JlIHByb3ZpZGVkIHRhZ3MuIERlZmF1bHQgYW1vdW50IHJldHVybmVkIGlzIDE1
IGhvd2V2ZXIgdGhpcyBpcyBjdXN0b21pc2FibGUgdXNpbmcgYSBpbnB1dCB2YXJpYWJsZS4gSGFy
ZCBsaW1pdCBpcyAxMDAuIFNhdmVzIHJldHJpZXZlZCB0d2VldHMgaW4gYSByaWNoIHRleHQgbm90
ZS4ifV0sICJhY3Rpb25zIjogW3sibG9naWNfdHlwZSI6ICJhbGwiLCAibmFtZSI6ICJHZXQgUG9w
dWxhciBUd2VldHMgRm9yIFNwZWNpZmllZCBUYWcocykiLCAidmlld19pdGVtcyI6IFtdLCAidHlw
ZSI6IDEsICJ3b3JrZmxvd3MiOiBbInR3aXR0ZXJfbW9zdF9wb3B1bGFyX3R3ZWV0c19mb3JfdGFn
Il0sICJvYmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwg
InV1aWQiOiAiMzdjNTEwNDgtNjQzMS00ODQ0LWI4OGMtOWFmYTJhNTFiNzY0IiwgImF1dG9tYXRp
b25zIjogW10sICJleHBvcnRfa2V5IjogIkdldCBQb3B1bGFyIFR3ZWV0cyBGb3IgU3BlY2lmaWVk
IFRhZyhzKSIsICJjb25kaXRpb25zIjogW10sICJpZCI6IDE1LCAibWVzc2FnZV9kZXN0aW5hdGlv
bnMiOiBbXX1dLCAibGF5b3V0cyI6IFtdLCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjogMiwgImlk
IjogMzcsICJpbmR1c3RyaWVzIjogbnVsbCwgInBoYXNlcyI6IFtdLCAiYWN0aW9uX29yZGVyIjog
W10sICJnZW9zIjogbnVsbCwgInNlcnZlcl92ZXJzaW9uIjogeyJtYWpvciI6IDMwLCAidmVyc2lv
biI6ICIzMC4wLjM0NzYiLCAiYnVpbGRfbnVtYmVyIjogMzQ3NiwgIm1pbm9yIjogMH0sICJ0aW1l
ZnJhbWVzIjogbnVsbCwgIndvcmtzcGFjZXMiOiBbXSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAi
ZnVuY3Rpb25zIjogW3siZGlzcGxheV9uYW1lIjogIkdldCBQb3B1bGFyIFR3ZWV0cyBGb3IgU3Bl
Y2lmaWVkIFRhZyhzKSIsICJ1dWlkIjogImE3ZjUzOGNmLWEwN2MtNGQ3NS05NWVjLTk0YzFhYmFh
ZTQ1MCIsICJjcmVhdG9yIjogeyJkaXNwbGF5X25hbWUiOiAiUmVzaWxpZW50IFN5c2FkbWluIiwg
InR5cGUiOiAidXNlciIsICJpZCI6IDIsICJuYW1lIjogImFAYS5jb20ifSwgInZpZXdfaXRlbXMi
OiBbeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2xp
bmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiY29udGVudCI6ICJk
N2I0MWQ0NC0zNWU5LTRjNGEtOWM3OS02YzNmMGZhNmE0MDEiLCAic3RlcF9sYWJlbCI6IG51bGx9
LCB7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfbGlu
a19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250ZW50IjogImY3
OWE1NDQwLTE3ZDItNDIzYi05MWZmLWYwZDBmODZkYjJjZSIsICJzdGVwX2xhYmVsIjogbnVsbH1d
LCAiZXhwb3J0X2tleSI6ICJ0d2l0dGVyX21vc3RfcG9wdWxhcl90d2VldHMiLCAibGFzdF9tb2Rp
ZmllZF9ieSI6IHsiZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJ0eXBlIjog
InVzZXIiLCAiaWQiOiAyLCAibmFtZSI6ICJhQGEuY29tIn0sICJuYW1lIjogInR3aXR0ZXJfbW9z
dF9wb3B1bGFyX3R3ZWV0cyIsICJ2ZXJzaW9uIjogOCwgIndvcmtmbG93cyI6IFt7InByb2dyYW1t
YXRpY19uYW1lIjogInR3aXR0ZXJfbW9zdF9wb3B1bGFyX3R3ZWV0c19mb3JfdGFnIiwgIm9iamVj
dF90eXBlIjogImluY2lkZW50IiwgInV1aWQiOiBudWxsLCAiYWN0aW9ucyI6IFtdLCAibmFtZSI6
ICJFeGFtcGxlIFR3aXR0ZXI6IFBvcHVsYXIgVHdlZXRzIEZvciBUYWcocykiLCAid29ya2Zsb3df
aWQiOiAzNSwgImRlc2NyaXB0aW9uIjogbnVsbH1dLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU0
MDU2MzA0NTgxMCwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJmbl90d2l0dGVyX21vc3RfcG9wdWxh
ciIsICJpZCI6IDEsICJkZXNjcmlwdGlvbiI6IHsiY29udGVudCI6ICJBIGZ1bmN0aW9uIHdoaWNo
IHRhcmdldHMgdGhlIFR3aXR0ZXIgU2VhcmNoIEFQSS4gVGFrZXMgaW4gYW4gaW5wdXQgb2YgYSBt
dWx0aXBsZSBwb3NzaWJsZSBoYXNodGFncyBhbmQgYSBudW1iZXIgb2YgVHdlZXRzIHRvIGJlIHJl
dHVybmVkIGFuZCBjb250YWN0cyB0aGUgVHdpdHRlciBTZWFyY2ggQVBJIHRvIHJldHVybiB0aGUg
cmVzdWx0cy4gUmVxdWlyZXMgVHdpdHRlciBBY2Nlc3MgS2V5IGFuZCBTZWNyZXQgdG8gb2J0YWlu
IGEgT0F1dGgyIHJlYWQtb25seSB0b2tlbi4iLCAiZm9ybWF0IjogInRleHQifX1dLCAibm90aWZp
Y2F0aW9ucyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwgImluY2lkZW50X3R5cGVzIjogW3si
Y3JlYXRlX2RhdGUiOiAxNTQwNTYzMDcwNDc0LCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXphdGlv
biBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNr
YWdlcyAoaW50ZXJuYWwpIiwgImlkIjogMCwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdl
cyAoaW50ZXJuYWwpIiwgInVwZGF0ZV9kYXRlIjogMTU0MDU2MzA3MDQ3NCwgInV1aWQiOiAiYmZl
ZWMyZDQtMzc3MC0xMWU4LWFkMzktNGEwMDA0MDQ0YWEwIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5
c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVsbCwgImhpZGRlbiI6IGZhbHNlfV0sICJzY3Jp
cHRzIjogW10sICJ0eXBlcyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbeyJ1dWlkIjog
ImZjYTVmMjc3LTgzNWUtNDkwNS1hMGQ3LTQ3YmM5Y2ExMTdkOCIsICJleHBvcnRfa2V5IjogImZu
X3R3aXR0ZXJfbW9zdF9wb3B1bGFyIiwgIm5hbWUiOiAiZm5fdHdpdHRlcl9tb3N0X3BvcHVsYXIi
LCAiZGVzdGluYXRpb25fdHlwZSI6IDAsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl90d2l0dGVy
X21vc3RfcG9wdWxhciIsICJleHBlY3RfYWNrIjogdHJ1ZSwgInVzZXJzIjogWyJhQGEuY29tIl19
XSwgImluY2lkZW50X2FydGlmYWN0X3R5cGVzIjogW10sICJyb2xlcyI6IFtdLCAiZmllbGRzIjog
W3sib3BlcmF0aW9ucyI6IFtdLCAicmVhZF9vbmx5IjogdHJ1ZSwgInV1aWQiOiAiYzNmMGUzZWQt
MjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgInRlbXBsYXRlcyI6IFtdLCAidHlwZV9pZCI6
IDAsICJjaG9zZW4iOiBmYWxzZSwgInRleHQiOiAiU2ltdWxhdGlvbiIsICJkZWZhdWx0X2Nob3Nl
bl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiaW5jaWRlbnQvaW5jX3RyYWluaW5n
IiwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRlbnQgaXMgYSBzaW11bGF0aW9uIG9yIGEg
cmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQgaXMgcmVhZC1vbmx5LiIsICJyaWNoX3RleHQi
OiBmYWxzZSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAicHJlZml4IjogbnVsbCwgImludGVybmFs
IjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW5wdXRfdHlw
ZSI6ICJib29sZWFuIiwgImNoYW5nZWFibGUiOiB0cnVlLCAiaGlkZV9ub3RpZmljYXRpb24iOiBm
YWxzZSwgImlkIjogMzgsICJuYW1lIjogImluY190cmFpbmluZyJ9LCB7Im9wZXJhdGlvbnMiOiBb
XSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJ0d2l0dGVy
X3NlYXJjaF90d2VldF9jb3VudCIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51
bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogNzksICJyZWFkX29ubHkiOiBmYWxzZSwgInV1
aWQiOiAiZjc5YTU0NDAtMTdkMi00MjNiLTkxZmYtZjBkMGY4NmRiMmNlIiwgImNob3NlbiI6IGZh
bHNlLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAidG9vbHRpcCI6ICJBIG51bWJlciBvZiB0d2Vl
dHMgdG8gYmUgcmV0dXJuZWQgYnkgdGhlIGZ1bmN0aW9uLiBJZiBubyB2YWx1ZSBpcyBwcm92aWRl
ZCwgZGVmYXVsdHMgdG8gMTUuIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxz
ZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL3R3aXR0ZXJfc2Vh
cmNoX3R3ZWV0X2NvdW50IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRl
ciI6ICIxNSIsICJuYW1lIjogInR3aXR0ZXJfc2VhcmNoX3R3ZWV0X2NvdW50IiwgImRlZmF1bHRf
Y2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBb
XSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJ0d2l0dGVy
X3NlYXJjaF90d2VldF9zdHJpbmciLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBu
dWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDc4LCAicmVhZF9vbmx5IjogZmFsc2UsICJ1
dWlkIjogImQ3YjQxZDQ0LTM1ZTktNGM0YS05Yzc5LTZjM2YwZmE2YTQwMSIsICJjaG9zZW4iOiBm
YWxzZSwgImlucHV0X3R5cGUiOiAidGV4dGFyZWEiLCAidG9vbHRpcCI6ICJBIG51bWJlciBvZiBo
YXNodGFncyB0byBxdWVyeSBmb3IgcG9wdWxhciB0d2VldHMuIElucHV0IGlzIGEgSlNPTiBPYmpl
Y3QiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjog
W3sidGVtcGxhdGUiOiB7ImNvbnRlbnQiOiAie1xuXCJoYXNodGFnc1wiOlsgXCJNYWdlY2FydFwi
LCBcIldhbm5hY3J5XCIsIFwiU3BlY3RyZVwiLCBcIlhGVEFTXCIsIFwiRW1vdGV0XCJdXG59Iiwg
ImZvcm1hdCI6ICJ0ZXh0In0sICJ1dWlkIjogIjVhZWViNjAxLWMwMGMtNDg3OC1iM2RjLTY1Njli
ZGUyNWQ5YyIsICJuYW1lIjogIjUgdHlwZXMgb2YgVGhyZWF0cyIsICJpZCI6IDF9LCB7InRlbXBs
YXRlIjogeyJjb250ZW50IjogIntcblwiaGFzaHRhZ3NcIjpbIFwiQm90bmV0XCIsIFwiQ3liZXJz
ZWN1cml0eVwiLCBcIk1hbHdhcmVcIl1cbn0iLCAiZm9ybWF0IjogInRleHQifSwgInV1aWQiOiAi
YzIwZTE3ZGYtYjI1Ni00YzQzLThmMjctYmNiMTVhOWQ3NzI4IiwgIm5hbWUiOiAiQm90bmV0LCBD
eWJlcnNlY3VyaXR5LCBNYWx3YXJlIiwgImlkIjogM30sIHsidGVtcGxhdGUiOiB7ImNvbnRlbnQi
OiAie1xuXCJoYXNodGFnc1wiOlsgXCJDcnlwdG9jdXJyZW5jeVwiXVxufSIsICJmb3JtYXQiOiAi
dGV4dCJ9LCAidXVpZCI6ICIyYmEwYjUxNS1mMWVmLTQxNzQtYjliYS1hY2E2ZTUyMGVlNzMiLCAi
bmFtZSI6ICJDcnlwdG9jdXJyZW5jeSIsICJpZCI6IDJ9LCB7InRlbXBsYXRlIjogeyJjb250ZW50
IjogIntcblwiaGFzaHRhZ3NcIjpbIFwiTWFsd2FyZVwiXVxufSIsICJmb3JtYXQiOiAidGV4dCJ9
LCAidXVpZCI6ICJkZTkxZThjNi1iYWJkLTQxYmUtOThlZS00M2NlYjg4MWY1N2UiLCAibmFtZSI6
ICJNYWx3YXJlIE1vc3QgUG9wdWxhciIsICJpZCI6IDR9XSwgImV4cG9ydF9rZXkiOiAiX19mdW5j
dGlvbi90d2l0dGVyX3NlYXJjaF90d2VldF9zdHJpbmciLCAiaGlkZV9ub3RpZmljYXRpb24iOiBm
YWxzZSwgInBsYWNlaG9sZGVyIjogInsgXCJoYXNodGFnc1wiOlsgXCJNYWx3YXJlXCJdIH0iLCAi
bmFtZSI6ICJ0d2l0dGVyX3NlYXJjaF90d2VldF9zdHJpbmciLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAidmFsdWVzIjogW119XSwgIm92
ZXJyaWRlcyI6IFtdLCAiZXhwb3J0X2RhdGUiOiAxNTQwNTYzMDUzMDQzfQ==
"""
    )
