# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_outbound_email"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_outbound_email package"""
    reload_params = {"package": u"fn_outbound_email",
                    "incident_fields": [], 
                    "action_fields": [u"mail_cc", u"mail_to"], 
                    "function_params": [u"mail_bcc", u"mail_body_html", u"mail_body_text", u"mail_cc", u"mail_from", u"mail_incident_id", u"mail_subject", u"mail_to"], 
                    "datatables": [], 
                    "message_destinations": [u"email_outbound"], 
                    "functions": [u"send_email"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_send_incident_email_html", u"example_send_incident_email_text"], 
                    "actions": [u"Example: Send Incident Email HTML", u"Example: Send Incident Email Text"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     mail_cc
    #     mail_to
    #   Function inputs:
    #     mail_bcc
    #     mail_body_html
    #     mail_body_text
    #     mail_cc
    #     mail_from
    #     mail_incident_id
    #     mail_subject
    #     mail_to
    #   Message Destinations:
    #     email_outbound
    #   Functions:
    #     send_email
    #   Workflows:
    #     example_send_incident_email_html
    #     example_send_incident_email_text
    #   Rules:
    #     Example: Send Incident Email HTML
    #     Example: Send Incident Email Text


    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFNl
bmQgSW5jaWRlbnQgRW1haWwgSFRNTCIsICJpZCI6IDEyMjIsICJsb2dpY190eXBlIjogImFsbCIs
ICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBTZW5kIEluY2lk
ZW50IEVtYWlsIEhUTUwiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAidGFncyI6IFtdLCAi
dGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ0eXBlIjogMSwgInV1aWQiOiAiMzBkMjNkZWYtYWM1
MC00NjU5LTk3NzYtNGY2NTA1ZjkzY2UxIiwgInZpZXdfaXRlbXMiOiBbeyJjb250ZW50IjogIjJi
OWQ1NzBlLWRkNTgtNGE4MS04YjBkLWE5ODU3MmJkYzI2MSIsICJlbGVtZW50IjogImZpZWxkX3V1
aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNob3dfaWYiOiBudWxsLCAi
c2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7ImNvbnRlbnQi
OiAiOGMzZWU3MmItZjhjYi00MzE4LWE5NzgtZjhhMDQxMDlmYzdiIiwgImVsZW1lbnQiOiAiZmll
bGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAic2hvd19pZiI6IG51
bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAid29y
a2Zsb3dzIjogWyJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfaHRtbCJdfSwgeyJhdXRvbWF0
aW9ucyI6IFtdLCAiY29uZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5
IjogIkV4YW1wbGU6IFNlbmQgSW5jaWRlbnQgRW1haWwgVGV4dCIsICJpZCI6IDEyMjMsICJsb2dp
Y190eXBlIjogImFsbCIsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFt
cGxlOiBTZW5kIEluY2lkZW50IEVtYWlsIFRleHQiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQi
LCAidGFncyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ0eXBlIjogMSwgInV1aWQi
OiAiMWJiOGMxOTAtMTc1ZS00NDE2LWEwZTMtOGMxNzJlY2Y1MDRkIiwgInZpZXdfaXRlbXMiOiBb
eyJjb250ZW50IjogIjJiOWQ1NzBlLWRkNTgtNGE4MS04YjBkLWE5ODU3MmJkYzI2MSIsICJlbGVt
ZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNo
b3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51
bGx9LCB7ImNvbnRlbnQiOiAiOGMzZWU3MmItZjhjYi00MzE4LWE5NzgtZjhhMDQxMDlmYzdiIiwg
ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24i
LCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVs
IjogbnVsbH1dLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfdGV4
dCJdfV0sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImV4cG9ydF9kYXRlIjogMTU4NzY1MjExNzQz
NCwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJmaWVsZHMiOiBbeyJhbGxvd19kZWZhdWx0
X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxz
ZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19m
dW5jdGlvbi9tYWlsX2Zyb20iLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogOTQ4
NywgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJtYWls
X2Zyb20iLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhv
bGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0
IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAibWFpbF9mcm9t
IiwgInRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiZTA5Nzg5YmYtMDU3Yy00
OTE0LTk4NzctNDU1ZmIxMWUzZjRkIiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3Zh
bHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwg
ImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9z
ZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5j
dGlvbi9tYWlsX3RvIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0ODMsICJp
bnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF90byIs
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjog
IiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxz
ZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJtYWlsX3RvIiwgInRvb2x0
aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiYTRiZmQ5ZjctZjkyNC00Mjg5LThiYjIt
ZmQyZTNjNTc3ZWI0IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFs
c2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFi
bGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9tYWls
X2JvZHlfdGV4dCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA5NDg1LCAiaW5w
dXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJuYW1lIjogIm1haWxfYm9keV90
ZXh0IiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xk
ZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6
IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfYm9keV90
ZXh0IiwgInRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiZjg2NDc5ZjctM2E2
Ni00ZmJiLWEyN2EtZGI2ZGViNmMwYmM5IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0
X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxz
ZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19m
dW5jdGlvbi9tYWlsX2JvZHlfaHRtbCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQi
OiA5NDgyLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJuYW1lIjog
Im1haWxfYm9keV9odG1sIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtd
LCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwg
InJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0Ijog
Im1haWxfYm9keV9odG1sIiwgInRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAi
MWI5ZDBhNzUtNDY5OS00MzM1LWIzYjktYmQ2MmU1ZjQwNTAzIiwgInZhbHVlcyI6IFtdfSwgeyJh
bGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1
bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZh
dWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9y
dF9rZXkiOiAiX19mdW5jdGlvbi9tYWlsX3N1YmplY3QiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBm
YWxzZSwgImlkIjogOTQ4OSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNl
LCAibmFtZSI6ICJtYWlsX3N1YmplY3QiLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRp
b25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6
IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwg
InRleHQiOiAibWFpbF9zdWJqZWN0IiwgInRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1
aWQiOiAiZDM0M2Y4MGItNDc2MC00ZjRhLWI0OTItYmY4NWRmYzI5MjYxIiwgInZhbHVlcyI6IFtd
fSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwg
ImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2Us
ICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwg
ImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9tYWlsX2luY2lkZW50X2lkIiwgImhpZGVfbm90aWZp
Y2F0aW9uIjogZmFsc2UsICJpZCI6IDk0ODgsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJpbnRl
cm5hbCI6IGZhbHNlLCAibmFtZSI6ICJtYWlsX2luY2lkZW50X2lkIiwgIm9wZXJhdGlvbl9wZXJt
cyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6IG51
bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAi
dGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfaW5jaWRlbnRfaWQiLCAidG9vbHRpcCI6ICIi
LCAidHlwZV9pZCI6IDExLCAidXVpZCI6ICJmZGJjZGExNi1kNmYyLTQ4ZDEtODZkNy04MDRlMjU4
OTBiYzEiLCAidmFsdWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJs
YW5rX29wdGlvbiI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRy
dWUsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAi
ZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL21haWxfY2MiLCAi
aGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogOTQ4NCwgImlucHV0X3R5cGUiOiAidGV4
dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJtYWlsX2NjIiwgIm9wZXJhdGlvbl9wZXJt
cyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6IG51
bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAi
dGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfY2MiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9p
ZCI6IDExLCAidXVpZCI6ICIxMjRlNzRlOS1hODkxLTQ0MmEtYjI1Ny03ZDc5YjBlZWVkNDUiLCAi
dmFsdWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlv
biI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9z
ZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRl
ZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL21haWxfYmNjIiwgImhpZGVfbm90
aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0ODYsICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50
ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF9iY2MiLCAib3BlcmF0aW9uX3Blcm1zIjoge30s
ICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJl
YWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0
ZXMiOiBbXSwgInRleHQiOiAibWFpbF9iY2MiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6IDEx
LCAidXVpZCI6ICIzODY0YmE5OS1hZThjLTQ5MjYtOWI3Ni05ZThlNjkxNjk2ZjUiLCAidmFsdWVz
IjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL21haWxfY2MiLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgImlkIjogOTQ4MSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRl
cm5hbCI6IGZhbHNlLCAibmFtZSI6ICJtYWlsX2NjIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAi
b3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVz
IiwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0
ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAibWFpbF9jYyIsICJ0b29sdGlwIjogIiIsICJ0eXBlX2lk
IjogNiwgInV1aWQiOiAiOGMzZWU3MmItZjhjYi00MzE4LWE5NzgtZjhhMDQxMDlmYzdiIiwgInZh
bHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24i
OiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2Vu
IjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQi
OiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9tYWlsX3RvIiwgImhpZGVf
bm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0ODAsICJpbnB1dF90eXBlIjogInRleHQiLCAi
aW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF90byIsICJvcGVyYXRpb25fcGVybXMiOiB7
fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiAicHJvcGVy
dGllcyIsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtd
LCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfdG8iLCAidG9vbHRpcCI6ICIiLCAidHlw
ZV9pZCI6IDYsICJ1dWlkIjogIjJiOWQ1NzBlLWRkNTgtNGE4MS04YjBkLWE5ODU3MmJkYzI2MSIs
ICJ2YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0
aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNo
b3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXByZWNh
dGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogImluY2lkZW50L2luY190cmFpbmluZyIsICJoaWRl
X25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA4NjgzLCAiaW5wdXRfdHlwZSI6ICJib29sZWFu
IiwgImludGVybmFsIjogZmFsc2UsICJuYW1lIjogImluY190cmFpbmluZyIsICJvcGVyYXRpb25f
cGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHki
OiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwg
InRleHQiOiAiU2ltdWxhdGlvbiIsICJ0b29sdGlwIjogIldoZXRoZXIgdGhlIGluY2lkZW50IGlz
IGEgc2ltdWxhdGlvbiBvciBhIHJlZ3VsYXIgaW5jaWRlbnQuICBUaGlzIGZpZWxkIGlzIHJlYWQt
b25seS4iLCAidHlwZV9pZCI6IDAsICJ1dWlkIjogImMzZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZl
NWNhMzMwOGNjYSIsICJ2YWx1ZXMiOiBbXX1dLCAiZnVuY3Rpb25zIjogW3siY3JlYXRvciI6IHsi
ZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJpZCI6IDE2OSwgIm5hbWUiOiAi
c2Vhbi5vZ29ybWFuQGlibS5jb20iLCAidHlwZSI6ICJ1c2VyIn0sICJkZXNjcmlwdGlvbiI6IHsi
Zm9ybWF0IjogInRleHQiLCAiY29udGVudCI6ICJTZW5kIGEgcGxhaW4gdGV4dCBvciBIVE1MLWZv
cm1hdHRlZCBlbWFpbCB3aXRoIFJlc2lsaWVudCBJbmNpZGVudCBkZXRhaWxzIGluIHRoZSBlbWFp
bCBib2R5IGFzIHdlbGwgYXMgaW5jaWRlbnQgYXR0YWNobWVudHMgYWRkZWQgdG8gdGhpcyBvdXRn
b2luZyBlbWFpbC4ifSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJlbWFpbF9vdXRib3VuZCIsICJk
aXNwbGF5X25hbWUiOiAiT3V0Ym91bmQgRW1haWw6IFNlbmQgRW1haWwiLCAiZXhwb3J0X2tleSI6
ICJzZW5kX2VtYWlsIiwgImlkIjogNjAyLCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9u
YW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJpZCI6IDE2OSwgIm5hbWUiOiAic2Vhbi5vZ29y
bWFuQGlibS5jb20iLCAidHlwZSI6ICJ1c2VyIn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTg3
MzIzMDMxNDgwLCAibmFtZSI6ICJzZW5kX2VtYWlsIiwgInRhZ3MiOiBbXSwgInV1aWQiOiAiYzgw
Y2Q1NWQtNmFiOC00NjczLTgyNzMtMWI4YTBiZjNiNDU2IiwgInZlcnNpb24iOiA2LCAidmlld19p
dGVtcyI6IFt7ImNvbnRlbnQiOiAiZTA5Nzg5YmYtMDU3Yy00OTE0LTk4NzctNDU1ZmIxMWUzZjRk
IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAi
c2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjog
bnVsbH0sIHsiY29udGVudCI6ICJmZGJjZGExNi1kNmYyLTQ4ZDEtODZkNy04MDRlMjU4OTBiYzEi
LCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJz
aG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBu
dWxsfSwgeyJjb250ZW50IjogImE0YmZkOWY3LWY5MjQtNDI4OS04YmIyLWZkMmUzYzU3N2ViNCIs
ICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNo
b3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51
bGx9LCB7ImNvbnRlbnQiOiAiMTI0ZTc0ZTktYTg5MS00NDJhLWIyNTctN2Q3OWIwZWVlZDQ1Iiwg
ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hv
d19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVs
bH0sIHsiY29udGVudCI6ICIzODY0YmE5OS1hZThjLTQ5MjYtOWI3Ni05ZThlNjkxNjk2ZjUiLCAi
ZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93
X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxs
fSwgeyJjb250ZW50IjogImQzNDNmODBiLTQ3NjAtNGY0YS1iNDkyLWJmODVkZmMyOTI2MSIsICJl
bGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3df
aWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9
LCB7ImNvbnRlbnQiOiAiZjg2NDc5ZjctM2E2Ni00ZmJiLWEyN2EtZGI2ZGViNmMwYmM5IiwgImVs
ZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19p
ZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0s
IHsiY29udGVudCI6ICIxYjlkMGE3NS00Njk5LTQzMzUtYjNiOS1iZDYyZTVmNDA1MDMiLCAiZWxl
bWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lm
IjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfV0s
ICJ3b3JrZmxvd3MiOiBbeyJhY3Rpb25zIjogW10sICJkZXNjcmlwdGlvbiI6IG51bGwsICJuYW1l
IjogIkV4YW1wbGU6IFNlbmQgSW5jaWRlbnQgRW1haWwgSFRNTCIsICJvYmplY3RfdHlwZSI6ICJp
bmNpZGVudCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1h
aWxfaHRtbCIsICJ0YWdzIjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogNTEzfSwg
eyJhY3Rpb25zIjogW10sICJkZXNjcmlwdGlvbiI6IG51bGwsICJuYW1lIjogIkV4YW1wbGU6IFNl
bmQgSW5jaWRlbnQgRW1haWwgVGV4dCIsICJvYmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJwcm9n
cmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfdGV4dCIsICJ0YWdz
IjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogNTEyfV19XSwgImdlb3MiOiBudWxs
LCAiZ3JvdXBzIjogbnVsbCwgImlkIjogMzAxLCAiaW5ib3VuZF9tYWlsYm94ZXMiOiBudWxsLCAi
aW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgImluY2lkZW50X3R5cGVzIjogW3sidXBkYXRl
X2RhdGUiOiAxNTg3NjUyMTI2NzIyLCAiY3JlYXRlX2RhdGUiOiAxNTg3NjUyMTI2NzIyLCAidXVp
ZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZGVzY3JpcHRpb24i
OiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3Vz
dG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQ
YWNrYWdlcyAoaW50ZXJuYWwpIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAi
cGFyZW50X2lkIjogbnVsbCwgImhpZGRlbiI6IGZhbHNlLCAiaWQiOiAwfV0sICJpbmR1c3RyaWVz
IjogbnVsbCwgImxheW91dHMiOiBbXSwgImxvY2FsZSI6IG51bGwsICJtZXNzYWdlX2Rlc3RpbmF0
aW9ucyI6IFt7ImFwaV9rZXlzIjogW10sICJkZXN0aW5hdGlvbl90eXBlIjogMCwgImV4cGVjdF9h
Y2siOiB0cnVlLCAiZXhwb3J0X2tleSI6ICJlbWFpbF9vdXRib3VuZCIsICJuYW1lIjogImVtYWls
X291dGJvdW5kIiwgInByb2dyYW1tYXRpY19uYW1lIjogImVtYWlsX291dGJvdW5kIiwgInRhZ3Mi
OiBbXSwgInVzZXJzIjogWyJtYXJrLnNjaGVyZmxpbmdAaWJtLmNvbSIsICJseWRlQHZtd2FyZS5j
b20iLCAic2Vhbi5vZ29ybWFuQGlibS5jb20iXSwgInV1aWQiOiAiNDJmNjNlYTItNTU3Mi00MmU3
LTliZmYtMDFhNGUzODA4M2E5In1dLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJvdmVycmlkZXMi
OiBbXSwgInBoYXNlcyI6IFtdLCAicmVndWxhdG9ycyI6IG51bGwsICJyb2xlcyI6IFtdLCAic2Ny
aXB0cyI6IFtdLCAic2VydmVyX3ZlcnNpb24iOiB7ImJ1aWxkX251bWJlciI6IDUxMTIsICJtYWpv
ciI6IDMzLCAibWlub3IiOiAwLCAidmVyc2lvbiI6ICIzMy4wLjUxMTIifSwgInRhZ3MiOiBbXSwg
InRhc2tfb3JkZXIiOiBbXSwgInRpbWVmcmFtZXMiOiBudWxsLCAidHlwZXMiOiBbXSwgIndvcmtm
bG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImNvbnRlbnQiOiB7InZlcnNpb24iOiAxMiwgIndvcmtm
bG93X2lkIjogImV4YW1wbGVfc2VuZF9pbmNpZGVudF9lbWFpbF90ZXh0IiwgInhtbCI6ICI8P3ht
bCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9
XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBt
bmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9t
Z2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdk
aT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxp
ZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8v
d3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3Jn
LzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5j
YW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1h
aWxfdGV4dFwiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTogU2VuZCBJbmNp
ZGVudCBFbWFpbCBUZXh0XCI+PGRvY3VtZW50YXRpb24+U2VuZCBhIHBsYWluIHRleHQgZW1haWwg
Y29udGFpbmluZyBSZXNpbGllbnQgSW5jaWRlbnQgRGV0YWlscyBpbiB0aGUgZW1haWwgYm9keSBh
bmQgaW5jaWRlbnQgYXR0YWNobWVudHMuICBBIG5vdGUgY29udGFpbmluZyB0aGUgZW1haWwgZGV0
YWlscyBpcyBwb3N0IHRvIHRoZSBpbmNpZGVudC48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQg
aWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFlMWR5OW88
L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xdGx2
M2o5XCIgbmFtZT1cIk91dGJvdW5kIEVtYWlsOiBTZW5kIEVtYWlsXCIgcmVzaWxpZW50OnR5cGU9
XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9
XCJjODBjZDU1ZC02YWI4LTQ2NzMtODI3My0xYjhhMGJmM2I0NTZcIj57XCJpbnB1dHNcIjp7fSxc
InBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlmIHJlc3VsdHMuc3VjY2VzczpcXG4gIG5vdGVU
ZXh0ID0gdVxcXCJFbWFpbCBTZW50IGlmIG1haWwgc2VydmVyIGlzIHZhbGlkL2F1dGhlbnRpY2F0
ZWRcXFxcbiBGcm9tOiB7MH1cXFxcbiBUbzogezF9XFxcXG4gQ0M6IHsyfVxcXFxuIEJDQzogezN9
XFxcXG4gU3ViamVjdDogezR9XFxcXG4gQm9keTogezV9XFxcIi5mb3JtYXQocmVzdWx0cy5jb250
ZW50LmlucHV0c1swXS5zdHJpcChcXFwidVxcXFxcXFwiW11cXFwiKSwgcmVzdWx0cy5jb250ZW50
LmlucHV0c1sxXS5zdHJpcChcXFwidVxcXFxcXFwiW11cXFwiKSwgcmVzdWx0cy5jb250ZW50Lmlu
cHV0c1syXS5zdHJpcChcXFwidVxcXFxcXFwiW11cXFwiKSwgcmVzdWx0cy5jb250ZW50LmlucHV0
c1szXS5zdHJpcChcXFwidVxcXFxcXFwiW11cXFwiKSwgcmVzdWx0cy5jb250ZW50LmlucHV0c1s0
XS5zdHJpcChcXFwidVxcXFxcXFwiXFxcIiksIHJlc3VsdHMuY29udGVudC50ZXh0ICkgICBcXG5l
bHNlOlxcbiAgbm90ZVRleHQgPSB1XFxcIkVtYWlsIE5PVCBTZW50XFxcXG4gRnJvbTogezB9XFxc
XG4gVG86IHsxfVxcXCIuZm9ybWF0KHJlc3VsdHMuY29udGVudC5pbnB1dHNbMF0uc3RyaXAoXFxc
InVcXFxcXFxcIltdXFxcIiksIHJlc3VsdHMuY29udGVudC5pbnB1dHNbMV0uc3RyaXAoXFxcInVc
XFxcXFxcIltdXFxcIikpXFxuaW5jaWRlbnQuYWRkTm90ZShub3RlVGV4dClcIixcInByZV9wcm9j
ZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLm1haWxfdG8gPSBydWxlLnByb3BlcnRpZXMubWFpbF90
b1xcbmlucHV0cy5tYWlsX2NjID0gcnVsZS5wcm9wZXJ0aWVzLm1haWxfY2NcXG5pbnB1dHMubWFp
bF9pbmNpZGVudF9pZCA9IGluY2lkZW50LmlkXFxuaW5wdXRzLm1haWxfZnJvbSA9IFxcXCJjaGFu
Z2VtZUByZXNpbGllbnRzeXN0ZW1zLmNvbVxcXCJcXG5pbnB1dHMubWFpbF9zdWJqZWN0ID0gXFxc
Ilt7MH1dIHsxfVxcXCIuZm9ybWF0KGluY2lkZW50LmlkLCBpbmNpZGVudC5uYW1lKVxcblxcbmZy
b20gamF2YS51dGlsIGltcG9ydCBEYXRlXFxuY3JlYXRpb25fZGF0ZSA9IERhdGUoaW5jaWRlbnQu
Y3JlYXRlX2RhdGUpXFxudHlwZV9pZHMgPSB1XFxcIiwgXFxcIi5qb2luKGluY2lkZW50LmluY2lk
ZW50X3R5cGVfaWRzKVxcbnNldl9jb2RlID0gdVxcXCJ7fVxcXCIuZm9ybWF0KGluY2lkZW50LnNl
dmVyaXR5X2NvZGUpXFxuY3VycmVudF9wbGFuID0gdVxcXCJ7fVxcXCIuZm9ybWF0KGluY2lkZW50
LnBsYW5fc3RhdHVzKVxcblxcbmlucHV0cy5tYWlsX2JvZHlfdGV4dCA9IFxcXCJcXFwiXFxcIlxc
bkluY2lkZW50IFN1bW1hcnk6XFxuICAgIFNldmVyaXR5IENvZGU6IHswfVxcbiAgICBQbGFuIFN0
YXR1czogezF9XFxuICAgIENyZWF0ZWQ6IHsyfVxcbiAgICBJbmNpZGVudCBUeXBlOiB7M31cXG5c
XFwiXFxcIlxcXCIuZm9ybWF0KHNldl9jb2RlLCBjdXJyZW50X3BsYW4sIGNyZWF0aW9uX2RhdGUs
IHR5cGVfaWRzKVxcblwiLFwicmVzdWx0X25hbWVcIjpcIlwifTwvcmVzaWxpZW50OmZ1bmN0aW9u
PjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18xZTFkeTlvPC9pbmNv
bWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzBjajY4bGE8L291dGdvaW5nPjwvc2VydmljZVRh
c2s+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xZTFkeTlvXCIgc291cmNlUmVmPVwi
U3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMXRsdjNqOVwiLz48
ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8xaHp4YWZiXCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18w
Y2o2OGxhPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZs
b3dfMGNqNjhsYVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzF0bHYzajlcIiB0YXJnZXRSZWY9
XCJFbmRFdmVudF8xaHp4YWZiXCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9u
XzFreHhpeXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5u
b3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVm
PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5
dFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xaXd3aGNhXCI+PHRleHQ+
SW5wdXRzOiBtYWlsX3RvOiBvbmUgcmVjaXBpZW50IGVtYWlsIGFkZHJlc3MgbWFpbF9jYzpcdTAw
YTBvbmVcdTAwYTByZWNpcGllbnRcdTAwYTBlbWFpbCBhZGRyZXNzLCBtYWlsX2luY2lkZW50X2lk
LCBtYWlsX2Zyb206XHUwMGEwb25lIHNlbmRlciBlbWFpbCBhZGRyZXNzLCBtYWlsX3N1YmplY3Q6
IGluY2lkZW50IGlkIGFuZCBuYW1lPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9u
IGlkPVwiQXNzb2NpYXRpb25fMHJxYmRtN1wiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzF0bHYz
ajlcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xaXd3aGNhXCIvPjx0ZXh0QW5ub3RhdGlv
biBpZD1cIlRleHRBbm5vdGF0aW9uXzA5enJndXZcIj48dGV4dD5PdXRwdXQ6IFJpY2h0ZXh0IE5v
dGUgYWRkZWQgd2l0aCBpbmNpZGVudCBkZXRhaWxzL2Rlc2NyaXB0aW9uIHdpdGggZW1haWwgaGVh
ZGVyIGRldGFpbHMgb3IgZXJyb3Igbm90ZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lh
dGlvbiBpZD1cIkFzc29jaWF0aW9uXzE2d2tnYTFcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18x
dGx2M2o5XCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMDl6cmd1dlwiLz48L3Byb2Nlc3M+
PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFu
ZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQ
TU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVu
dF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4
PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxh
YmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRl
eHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0
XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNz
b2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3
YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9t
Z2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwi
Lz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZp
Y2VUYXNrXzF0bHYzajlcIiBpZD1cIlNlcnZpY2VUYXNrXzF0bHYzajlfZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiNTIxXCIgeT1cIjE2NlwiLz48L2Jw
bW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxv
d18xZTFkeTlvXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMWUxZHk5b19kaVwiPjxvbWdkaTp3YXlwb2lu
dCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndh
eXBvaW50IHg9XCI1MjFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBt
bmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCI5MFwiIHg9
XCIzMTQuNVwiIHk9XCIxODQuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVk
Z2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8xaHp4YWZiXCIgaWQ9
XCJFbmRFdmVudF8xaHp4YWZiX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRo
PVwiMzZcIiB4PVwiOTU3XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCI5MFwiIHg9XCI5MzBcIiB5PVwiMjI3XCIvPjwvYnBt
bmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxl
bWVudD1cIlNlcXVlbmNlRmxvd18wY2o2OGxhXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMGNqNjhsYV9k
aVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNjIxXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI5NTdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEz
XCIgd2lkdGg9XCI5MFwiIHg9XCI3NDRcIiB5PVwiMTg0LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVs
PjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFu
bm90YXRpb25fMWl3d2hjYVwiIGlkPVwiVGV4dEFubm90YXRpb25fMWl3d2hjYV9kaVwiPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCIzNTJcIiB5PVwiNjhcIi8+
PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lh
dGlvbl8wcnFiZG03XCIgaWQ9XCJBc3NvY2lhdGlvbl8wcnFiZG03X2RpXCI+PG9tZ2RpOndheXBv
aW50IHg9XCI1MjRcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE3M1wiLz48b21nZGk6
d2F5cG9pbnQgeD1cIjQyMlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiOThcIi8+PC9i
cG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3Rh
dGlvbl8wOXpyZ3V2XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8wOXpyZ3V2X2RpXCI+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjc0NlwiIHk9XCI2OFwiLz48L2Jw
bW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9u
XzE2d2tnYTFcIiBpZD1cIkFzc29jaWF0aW9uXzE2d2tnYTFfZGlcIj48b21nZGk6d2F5cG9pbnQg
eD1cIjYyMVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTc5XCIvPjxvbWdkaTp3YXlw
b2ludCB4PVwiNzY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI5OFwiLz48L2JwbW5k
aTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZp
bml0aW9ucz4ifSwgImNvbnRlbnRfdmVyc2lvbiI6IDEyLCAiY3JlYXRvcl9pZCI6ICJzZWFuLm9n
b3JtYW5AaWJtLmNvbSIsICJkZXNjcmlwdGlvbiI6ICJTZW5kIGEgcGxhaW4gdGV4dCBlbWFpbCBj
b250YWluaW5nIFJlc2lsaWVudCBJbmNpZGVudCBEZXRhaWxzIGluIHRoZSBlbWFpbCBib2R5IGFu
ZCBpbmNpZGVudCBhdHRhY2htZW50cy4gIEEgbm90ZSBjb250YWluaW5nIHRoZSBlbWFpbCBkZXRh
aWxzIGlzIHBvc3QgdG8gdGhlIGluY2lkZW50LiIsICJleHBvcnRfa2V5IjogImV4YW1wbGVfc2Vu
ZF9pbmNpZGVudF9lbWFpbF90ZXh0IiwgImxhc3RfbW9kaWZpZWRfYnkiOiAic2Vhbi5vZ29ybWFu
QGlibS5jb20iLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU4NzU1ODAxOTg4NywgIm5hbWUiOiAi
RXhhbXBsZTogU2VuZCBJbmNpZGVudCBFbWFpbCBUZXh0IiwgIm9iamVjdF90eXBlIjogImluY2lk
ZW50IiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfc2VuZF9pbmNpZGVudF9lbWFpbF90
ZXh0IiwgInRhZ3MiOiBbXSwgInV1aWQiOiAiNzUyZWZjZjYtOThiNy00ZDYxLTg1YTYtZTJkYjc2
MTkwMDEzIiwgIndvcmtmbG93X2lkIjogNTEyfSwgeyJhY3Rpb25zIjogW10sICJjb250ZW50Ijog
eyJ2ZXJzaW9uIjogNjIsICJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1h
aWxfaHRtbCIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThc
Ij8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEw
MDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4v
MjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIw
MTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEw
MDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1u
XCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4
c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5h
bWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhh
bXBsZV9zZW5kX2luY2lkZW50X2VtYWlsX2h0bWxcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFt
ZT1cIkV4YW1wbGU6IFNlbmQgSW5jaWRlbnQgRW1haWwgSFRNTFwiPjxkb2N1bWVudGF0aW9uPlNl
bmQgYW4gSFRNTC1mb3JtYXR0ZWQgZW1haWwgY29udGFpbmluZyBSZXNpbGllbnQgSW5jaWRlbnQg
RGV0YWlscyBpbiB0aGUgZW1haWwgYm9keSBhbmQgaW5jaWRlbnQgYXR0YWNobWVudHMuICBBIG5v
dGUgY29udGFpbmluZyB0aGUgZW1haWwgZGV0YWlscyBpcyBwb3N0ZWQgdG8gdGhlIGluY2lkZW50
LjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxv
dXRnb2luZz5TZXF1ZW5jZUZsb3dfMTAxZXBpODwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2
aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzBvbWN6dDBcIiBuYW1lPVwiT3V0Ym91bmQgRW1haWw6
IFNlbmQgRW1haWxcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1l
bnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cImM4MGNkNTVkLTZhYjgtNDY3My04MjczLTFi
OGEwYmYzYjQ1NlwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwi
aWYgcmVzdWx0cy5zdWNjZXNzOlxcbiAgbm90ZVRleHQgPSB1XFxcIlxcXCJcXFwiRW1haWwgU2Vu
dCBpZiBtYWlsIHNlcnZlciBpcyB2YWxpZC9hdXRoZW50aWNhdGVkXFxcXG4gXFxuICAmbHQ7YnIm
Z3Q7RnJvbTogezB9Jmx0O2JyJmd0OyBUbzogezF9Jmx0O2JyJmd0OyBDQzogezJ9Jmx0O2JyJmd0
OyBCQ0M6IHszfSZsdDticiZndDsgU3ViamVjdDogezR9ICZsdDticiZndDsgXFxuICBCb2R5OiB7
NX0gJmx0O2JyJmd0O1xcXCJcXFwiXFxcIi5mb3JtYXQocmVzdWx0cy5jb250ZW50LmlucHV0c1sw
XS5zdHJpcChcXFwidVxcXFxcXFwiW11cXFwiKSwgcmVzdWx0cy5jb250ZW50LmlucHV0c1sxXS5z
dHJpcChcXFwidVxcXFxcXFwiW11cXFwiKSwgcmVzdWx0cy5jb250ZW50LmlucHV0c1syXS5zdHJp
cChcXFwidVxcXFxcXFwiW11cXFwiKSwgcmVzdWx0cy5jb250ZW50LmlucHV0c1szXS5zdHJpcChc
XFwidVxcXFxcXFwiW11cXFwiKSwgcmVzdWx0cy5jb250ZW50LmlucHV0c1s0XS5zdHJpcChcXFwi
dVxcXFxcXFwiXFxcIiksIHJlc3VsdHMuY29udGVudC50ZXh0KVxcbmVsc2U6XFxuICBub3RlVGV4
dCA9IHVcXFwiRW1haWwgTk9UIFNlbnRcXFxcbiBGcm9tOiB7MH1cXFxcbiBUbzogezF9XFxcIi5m
b3JtYXQocmVzdWx0cy5jb250ZW50LmlucHV0c1swXS5zdHJpcChcXFwidVxcXFxcXFwiW11cXFwi
KSwgcmVzdWx0cy5jb250ZW50LmlucHV0c1sxXS5zdHJpcChcXFwidVxcXFxcXFwiW11cXFwiKSlc
XG5pbmNpZGVudC5hZGROb3RlKGhlbHBlci5jcmVhdGVSaWNoVGV4dChub3RlVGV4dCkpXCIsXCJw
cmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5tYWlsX3RvID0gcnVsZS5wcm9wZXJ0aWVz
Lm1haWxfdG9cXG5pbnB1dHMubWFpbF9jYyA9IHJ1bGUucHJvcGVydGllcy5tYWlsX2NjXFxuaW5w
dXRzLm1haWxfaW5jaWRlbnRfaWQgPSBpbmNpZGVudC5pZFxcbmlucHV0cy5tYWlsX2Zyb20gPSBc
XFwiY2hhbmdlbWVAcmVzaWxpZW50c3lzdGVtcy5jb21cXFwiXFxuaW5wdXRzLm1haWxfc3ViamVj
dCA9IFxcXCJbezB9XSB7MX1cXFwiLmZvcm1hdChpbmNpZGVudC5pZCwgaW5jaWRlbnQubmFtZSlc
XG5cXG5pbnB1dHMubWFpbF9ib2R5X2h0bWwgPSBcXFwiXFxcIlxcXCJ7JSBzZXQgTk9UX0ZPVU5E
ID0gW1xcXCJOb3QgRm91bmQhXFxcIixcXFwiLVxcXCIsXFxcIk5vbmVcXFwiLE5vbmVdICV9XFxu
eyUgbWFjcm8gZ2V0X3JvdyhsYWJlbCxmaWVsZF9uYW1lKSAtJX1cXG5cXHR7JSBzZXQgdmFsdWUg
PSB0ZW1wbGF0ZV9oZWxwZXIuZ2V0X2luY2lkZW50X3ZhbHVlKGluY2lkZW50LGZpZWxkX25hbWUp
ICV9XFxuXFx0eyUgc2V0IHN0eWxlID0gXFxcImZvbnQtZmFtaWx5OiBDYWxpYnJpOyBjb2xvcjog
cmdiKDMxLDczLDEyNSlcXFwiICV9XFxuICAgIHslIGlmIHZhbHVlIGFuZCB2YWx1ZSBub3QgaW4g
Tk9UX0ZPVU5EIGFuZCBub3QgdmFsdWUuc3RhcnRzd2l0aCgnLScpICV9XFxuICAgICZsdDt0ciZn
dDtcXG4gICAgICAgICZsdDt0ZCB3aWR0aD1cXFwiMTAwXFxcIiBzdHlsZT1cXFwie3tzdHlsZX19
OyBmb250LXdlaWdodDpib2xkXFxcIiZndDt7eyBsYWJlbCB9fSZsdDsvdGQmZ3Q7XFxuICAgICAg
ICAmbHQ7dGQgc3R5bGU9XFxcInt7c3R5bGV9fVxcXCImZ3Q7e3sgdmFsdWUgfCBzdHJpcHRhZ3Mg
fX0mbHQ7L3RkJmd0O1xcbiAgICAmbHQ7L3RyJmd0O1xcbiAgICB7JSBlbmRpZiAlfVxcbnslLSBl
bmRtYWNybyAlfVxcbiZsdDt0YWJsZSB3aWR0aD1cXFwiMTAwJVxcXCIgJmd0O1xcbiZsdDt0ciZn
dDtcXG4gICAgJmx0O3RkIGNvbHNwYW49XFxcIjJcXFwiJmd0O1xcbiAgICAgICAgJmx0O2gzIHN0
eWxlPVxcXCJjb2xvcjogcmdiKDY4LDExNCwxOTYpXFxcIiZndDtJTkNJREVOVCBERVRBSUxTJmx0
Oy9oMyZndDtcXG4gICAgICAgICZsdDtociBzaXplPVxcXCIxXFxcIiB3aWR0aD1cXFwiMTAwJVxc
XCIgbm9zaGFkZSBzdHlsZT1cXFwiY29sb3I6I0ZGREY1N1xcXCIgYWxpZ249XFxcImNlbnRlclxc
XCIvJmd0O1xcbiAgICAmbHQ7L3RkJmd0O1xcbiZsdDsvdHImZ3Q7XFxuICAgIHt7IGdldF9yb3co
J1NldmVyaXR5OicsJ3NldmVyaXR5X2NvZGUnKSB9fVxcbiAgICB7eyBnZXRfcm93KCdTdGF0dXM6
JywncGxhbl9zdGF0dXMnKSB9fSZsdDticiZndDtcXG4gICAge3sgZ2V0X3JvdygnQ3JlYXRlZDon
LCdjcmVhdGVfZGF0ZScpIH19Jmx0O2JyJmd0O1xcbiAgICB7eyBnZXRfcm93KCdDYXRlZ29yeTon
LCdpbmNpZGVudF90eXBlX2lkcycpIH19XFxuJmx0O3RyJmd0O1xcbiAgICAmbHQ7dGQgY29sc3Bh
bj1cXFwiMlxcXCImZ3Q7XFxuICAgICAgICAmbHQ7YnImZ3Q7Jmx0O2gzIHN0eWxlPVxcXCJjb2xv
cjogcmdiKDY4LDExNCwxOTYpXFxcIiZndDtJTkNJREVOVCBERVNDUklQVElPTiZsdDsvaDMmZ3Q7
XFxuICAgICAgICAmbHQ7aHIgc2l6ZT1cXFwiMVxcXCIgd2lkdGg9XFxcIjEwMCVcXFwiIG5vc2hh
ZGUgc3R5bGU9XFxcImNvbG9yOiNGRkRGNTdcXFwiIGFsaWduPVxcXCJjZW50ZXJcXFwiLyZndDtc
XG4gICAgJmx0Oy90ZCZndDtcXG4gICAge3sgZ2V0X3JvdygnRGVzY3JpcHRpb246JywnZGVzY3Jp
cHRpb24nKSB9fVxcbiZsdDsvdHImZ3Q7XFxuJmx0Oy90YWJsZSZndDtcXG4mbHQ7YnImZ3Q7XFxu
XFxcIlxcXCJcXFwiXCIsXCJyZXN1bHRfbmFtZVwiOlwiXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+
PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzEwMWVwaTg8L2luY29t
aW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMW1sNXJmeDwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFz
az48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzEwMWVwaThcIiBzb3VyY2VSZWY9XCJT
dGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wb21jenQwXCIvPjxl
bmRFdmVudCBpZD1cIkVuZEV2ZW50XzE4d3ZycHNcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFt
bDVyZng8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxv
d18xbWw1cmZ4XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMG9tY3p0MFwiIHRhcmdldFJlZj1c
IkVuZEV2ZW50XzE4d3ZycHNcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25f
MWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5v
dGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9
XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0
XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFhbDdmM2VcIj48dGV4dD5J
bnB1dHM6IG1haWxfdG86IG9uZSByZWNpcGllbnQgZW1haWwgYWRkcmVzcyBtYWlsX2NjOlx1MDBh
MG9uZVx1MDBhMHJlY2lwaWVudFx1MDBhMGVtYWlsIGFkZHJlc3MsIG1haWxfaW5jaWRlbnRfaWQs
IG1haWxfZnJvbTpcdTAwYTBvbmUgc2VuZGVyIGVtYWlsIGFkZHJlc3MsIG1haWxfc3ViamVjdDog
aW5jaWRlbnQgaWQgYW5kIG5hbWU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24g
aWQ9XCJBc3NvY2lhdGlvbl8xbTBjczFjXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMG9tY3p0
MFwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFhbDdmM2VcIi8+PHRleHRBbm5vdGF0aW9u
IGlkPVwiVGV4dEFubm90YXRpb25fMTN6d2ZxdFwiPjx0ZXh0Pk91dHB1dDogUmljaHRleHQgTm90
ZSBhZGRlZCB3aXRoIGluY2lkZW50IGRldGFpbHMvZGVzY3JpcHRpb24gd2l0aCBlbWFpbCBoZWFk
ZXIgZGV0YWlscyBvciBlcnJvciBub3RlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0
aW9uIGlkPVwiQXNzb2NpYXRpb25fMTlndm5tM1wiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzBv
bWN6dDBcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xM3p3ZnF0XCIvPjwvcHJvY2Vzcz48
YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5l
IGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBN
TlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50
XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9
XCIzMjVcIiB5PVwiMjA1XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMzIwXCIgeT1cIjI0MFwiLz48L2JwbW5kaTpCUE1OTGFi
ZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4
dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRc
Ii8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3Nv
Y2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndh
eXBvaW50IHg9XCIzMjZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyNlwiLz48b21n
ZGk6d2F5cG9pbnQgeD1cIjE5OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU2XCIv
PjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2Vydmlj
ZVRhc2tfMG9tY3p0MFwiIGlkPVwiU2VydmljZVRhc2tfMG9tY3p0MF9kaVwiPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCI2NjBcIiB5PVwiMTgzXCIvPjwvYnBt
bmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93
XzEwMWVwaThcIiBpZD1cIlNlcXVlbmNlRmxvd18xMDFlcGk4X2RpXCI+PG9tZ2RpOndheXBvaW50
IHg9XCIzNjFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyM1wiLz48b21nZGk6d2F5
cG9pbnQgeD1cIjY2MFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjIzXCIvPjxicG1u
ZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTRcIiB3aWR0aD1cIjkwXCIgeD1c
IjQ2NS41XCIgeT1cIjIwMVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+
PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8xOHd2cnBzXCIgaWQ9XCJF
bmRFdmVudF8xOHd2cnBzX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwi
MzZcIiB4PVwiMTA5NlwiIHk9XCIyMDVcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIxNFwiIHdpZHRoPVwiOTBcIiB4PVwiMTA2OVwiIHk9XCIyNDRcIi8+PC9icG1u
ZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVt
ZW50PVwiU2VxdWVuY2VGbG93XzFtbDVyZnhcIiBpZD1cIlNlcXVlbmNlRmxvd18xbWw1cmZ4X2Rp
XCI+PG9tZ2RpOndheXBvaW50IHg9XCI3NjBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjIyM1wiLz48b21nZGk6d2F5cG9pbnQgeD1cIjEwOTZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIyM1wiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjE0
XCIgd2lkdGg9XCI5MFwiIHg9XCI4ODNcIiB5PVwiMjAxXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48
L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5v
dGF0aW9uXzFhbDdmM2VcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFhbDdmM2VfZGlcIj48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjY2XCIgd2lkdGg9XCIxNDJcIiB4PVwiNDgzXCIgeT1cIjUyXCIvPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRp
b25fMW0wY3MxY1wiIGlkPVwiQXNzb2NpYXRpb25fMW0wY3MxY19kaVwiPjxvbWdkaTp3YXlwb2lu
dCB4PVwiNjY4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxODVcIi8+PG9tZ2RpOndh
eXBvaW50IHg9XCI1OTFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjExOFwiLz48L2Jw
bW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0
aW9uXzEzendmcXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzEzendmcXRfZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTAxXCIgeT1cIjcwXCIvPjwvYnBt
bmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25f
MTlndm5tM1wiIGlkPVwiQXNzb2NpYXRpb25fMTlndm5tM19kaVwiPjxvbWdkaTp3YXlwb2ludCB4
PVwiNzYwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxOTRcIi8+PG9tZ2RpOndheXBv
aW50IHg9XCI5MjVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEwMFwiLz48L2JwbW5k
aTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZp
bml0aW9ucz4ifSwgImNvbnRlbnRfdmVyc2lvbiI6IDYyLCAiY3JlYXRvcl9pZCI6ICJzZWFuLm9n
b3JtYW5AaWJtLmNvbSIsICJkZXNjcmlwdGlvbiI6ICJTZW5kIGFuIEhUTUwtZm9ybWF0dGVkIGVt
YWlsIGNvbnRhaW5pbmcgUmVzaWxpZW50IEluY2lkZW50IERldGFpbHMgaW4gdGhlIGVtYWlsIGJv
ZHkgYW5kIGluY2lkZW50IGF0dGFjaG1lbnRzLiAgQSBub3RlIGNvbnRhaW5pbmcgdGhlIGVtYWls
IGRldGFpbHMgaXMgcG9zdGVkIHRvIHRoZSBpbmNpZGVudC4iLCAiZXhwb3J0X2tleSI6ICJleGFt
cGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfaHRtbCIsICJsYXN0X21vZGlmaWVkX2J5IjogInNlYW4u
b2dvcm1hbkBpYm0uY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1ODc2NDgxNDU5MTksICJu
YW1lIjogIkV4YW1wbGU6IFNlbmQgSW5jaWRlbnQgRW1haWwgSFRNTCIsICJvYmplY3RfdHlwZSI6
ICJpbmNpZGVudCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3NlbmRfaW5jaWRlbnRf
ZW1haWxfaHRtbCIsICJ0YWdzIjogW10sICJ1dWlkIjogIjdkNTA2NTA4LTAyOTQtNDQyZS05M2U3
LTlmM2M1MWYyYmM3MiIsICJ3b3JrZmxvd19pZCI6IDUxM31dLCAid29ya3NwYWNlcyI6IFtdfQ==
"""
    )