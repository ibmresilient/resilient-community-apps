# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_outbound_email"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_outbound_email package"""
    reload_params = {"package": u"fn_outbound_email",
                    "incident_fields": [], 
                    "action_fields": [u"mail_cc", u"mail_to"], 
                    "function_params": [u"mail_bcc", u"mail_body_html", u"mail_body_text", u"mail_cc", u"mail_from", u"mail_incident_id", u"mail_subject", u"mail_to"], 
                    "datatables": [], 
                    "message_destinations": [u"email_outbound"], 
                    "functions": [u"send_email"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_send_incident_email_html", u"example_send_incident_email_text"], 
                    "actions": [u"Example: Send Incident Email HTML", u"Example: Send Incident Email Text"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     mail_cc
    #     mail_to
    #   Function inputs:
    #     mail_bcc
    #     mail_body_html
    #     mail_body_text
    #     mail_cc
    #     mail_from
    #     mail_incident_id
    #     mail_subject
    #     mail_to
    #   Message Destinations:
    #     email_outbound
    #   Functions:
    #     send_email
    #   Workflows:
    #     example_send_incident_email_html
    #     example_send_incident_email_text
    #   Rules:
    #     Example: Send Incident Email HTML
    #     Example: Send Incident Email Text


    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFNl
bmQgSW5jaWRlbnQgRW1haWwgSFRNTCIsICJpZCI6IDEyMjIsICJsb2dpY190eXBlIjogImFsbCIs
ICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBTZW5kIEluY2lk
ZW50IEVtYWlsIEhUTUwiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAidGFncyI6IFtdLCAi
dGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ0eXBlIjogMSwgInV1aWQiOiAiMzBkMjNkZWYtYWM1
MC00NjU5LTk3NzYtNGY2NTA1ZjkzY2UxIiwgInZpZXdfaXRlbXMiOiBbeyJjb250ZW50IjogIjJi
OWQ1NzBlLWRkNTgtNGE4MS04YjBkLWE5ODU3MmJkYzI2MSIsICJlbGVtZW50IjogImZpZWxkX3V1
aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNob3dfaWYiOiBudWxsLCAi
c2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7ImNvbnRlbnQi
OiAiOGMzZWU3MmItZjhjYi00MzE4LWE5NzgtZjhhMDQxMDlmYzdiIiwgImVsZW1lbnQiOiAiZmll
bGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAic2hvd19pZiI6IG51
bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAid29y
a2Zsb3dzIjogWyJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfaHRtbCJdfSwgeyJhdXRvbWF0
aW9ucyI6IFtdLCAiY29uZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5
IjogIkV4YW1wbGU6IFNlbmQgSW5jaWRlbnQgRW1haWwgVGV4dCIsICJpZCI6IDEyMjMsICJsb2dp
Y190eXBlIjogImFsbCIsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFt
cGxlOiBTZW5kIEluY2lkZW50IEVtYWlsIFRleHQiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQi
LCAidGFncyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ0eXBlIjogMSwgInV1aWQi
OiAiMWJiOGMxOTAtMTc1ZS00NDE2LWEwZTMtOGMxNzJlY2Y1MDRkIiwgInZpZXdfaXRlbXMiOiBb
eyJjb250ZW50IjogIjJiOWQ1NzBlLWRkNTgtNGE4MS04YjBkLWE5ODU3MmJkYzI2MSIsICJlbGVt
ZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNo
b3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51
bGx9LCB7ImNvbnRlbnQiOiAiOGMzZWU3MmItZjhjYi00MzE4LWE5NzgtZjhhMDQxMDlmYzdiIiwg
ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24i
LCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVs
IjogbnVsbH1dLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfdGV4
dCJdfV0sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImV4cG9ydF9kYXRlIjogMTU4NzU1ODQ0NzM1
NywgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJmaWVsZHMiOiBbeyJhbGxvd19kZWZhdWx0
X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxz
ZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19m
dW5jdGlvbi9tYWlsX2NjIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0ODQs
ICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF9j
YyIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVy
IjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBm
YWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJtYWlsX2NjIiwgInRv
b2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiMTI0ZTc0ZTktYTg5MS00NDJhLWIy
NTctN2Q3OWIwZWVlZDQ1IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjog
ZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5n
ZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIi
OiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9t
YWlsX3RvIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0ODMsICJpbnB1dF90
eXBlIjogInRleHQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF90byIsICJvcGVy
YXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJw
cmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRh
Z3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJtYWlsX3RvIiwgInRvb2x0aXAiOiAi
IiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiYTRiZmQ5ZjctZjkyNC00Mjg5LThiYjItZmQyZTNj
NTc3ZWI0IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJi
bGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0
cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwg
ImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9tYWlsX3N1Ympl
Y3QiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogOTQ4OSwgImlucHV0X3R5cGUi
OiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJtYWlsX3N1YmplY3QiLCAib3Bl
cmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAi
cHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0
YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAibWFpbF9zdWJqZWN0IiwgInRvb2x0
aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiZDM0M2Y4MGItNDc2MC00ZjRhLWI0OTIt
YmY4NWRmYzI5MjYxIiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFs
c2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFi
bGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9tYWls
X2JjYyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA5NDg2LCAiaW5wdXRfdHlw
ZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJuYW1lIjogIm1haWxfYmNjIiwgIm9wZXJh
dGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInBy
ZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFn
cyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfYmNjIiwgInRvb2x0aXAiOiAi
IiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiMzg2NGJhOTktYWU4Yy00OTI2LTliNzYtOWU4ZTY5
MTY5NmY1IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJi
bGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0
cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwg
ImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9tYWlsX2JvZHlf
dGV4dCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA5NDg1LCAiaW5wdXRfdHlw
ZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJuYW1lIjogIm1haWxfYm9keV90ZXh0Iiwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAi
IiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfYm9keV90ZXh0Iiwg
InRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiZjg2NDc5ZjctM2E2Ni00ZmJi
LWEyN2EtZGI2ZGViNmMwYmM5IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVl
IjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNo
YW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2
ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlv
bi9tYWlsX2luY2lkZW50X2lkIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0
ODgsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJt
YWlsX2luY2lkZW50X2lkIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtd
LCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwg
InJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0Ijog
Im1haWxfaW5jaWRlbnRfaWQiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6IDExLCAidXVpZCI6
ICJmZGJjZGExNi1kNmYyLTQ4ZDEtODZkNy04MDRlMjU4OTBiYzEiLCAidmFsdWVzIjogW119LCB7
ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiY2Fs
Y3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhw
b3J0X2tleSI6ICJfX2Z1bmN0aW9uL21haWxfYm9keV9odG1sIiwgImhpZGVfbm90aWZpY2F0aW9u
IjogZmFsc2UsICJpZCI6IDk0ODIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJuYWwiOiBm
YWxzZSwgIm5hbWUiOiAibWFpbF9ib2R5X2h0bWwiLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJv
cGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJlYWRf
b25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMi
OiBbXSwgInRleHQiOiAibWFpbF9ib2R5X2h0bWwiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6
IDExLCAidXVpZCI6ICIxYjlkMGE3NS00Njk5LTQzMzUtYjNiOS1iZDYyZTVmNDA1MDMiLCAidmFs
dWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4i
OiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6
IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL21haWxfZnJvbSIsICJoaWRlX25vdGlm
aWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA5NDg3LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVy
bmFsIjogZmFsc2UsICJuYW1lIjogIm1haWxfZnJvbSIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwg
Im9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVh
ZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRl
cyI6IFtdLCAidGV4dCI6ICJtYWlsX2Zyb20iLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6IDEx
LCAidXVpZCI6ICJlMDk3ODliZi0wNTdjLTQ5MTQtOTg3Ny00NTVmYjExZTNmNGQiLCAidmFsdWVz
IjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL21haWxfY2MiLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgImlkIjogOTQ4MSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRl
cm5hbCI6IGZhbHNlLCAibmFtZSI6ICJtYWlsX2NjIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAi
b3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVz
IiwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0
ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAibWFpbF9jYyIsICJ0b29sdGlwIjogIiIsICJ0eXBlX2lk
IjogNiwgInV1aWQiOiAiOGMzZWU3MmItZjhjYi00MzE4LWE5NzgtZjhhMDQxMDlmYzdiIiwgInZh
bHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24i
OiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2Vu
IjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQi
OiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9tYWlsX3RvIiwgImhpZGVf
bm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0ODAsICJpbnB1dF90eXBlIjogInRleHQiLCAi
aW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF90byIsICJvcGVyYXRpb25fcGVybXMiOiB7
fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiAicHJvcGVy
dGllcyIsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtd
LCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfdG8iLCAidG9vbHRpcCI6ICIiLCAidHlw
ZV9pZCI6IDYsICJ1dWlkIjogIjJiOWQ1NzBlLWRkNTgtNGE4MS04YjBkLWE5ODU3MmJkYzI2MSIs
ICJ2YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0
aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNo
b3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXByZWNh
dGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogImluY2lkZW50L2luY190cmFpbmluZyIsICJoaWRl
X25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA4NjgzLCAiaW5wdXRfdHlwZSI6ICJib29sZWFu
IiwgImludGVybmFsIjogZmFsc2UsICJuYW1lIjogImluY190cmFpbmluZyIsICJvcGVyYXRpb25f
cGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHki
OiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwg
InRleHQiOiAiU2ltdWxhdGlvbiIsICJ0b29sdGlwIjogIldoZXRoZXIgdGhlIGluY2lkZW50IGlz
IGEgc2ltdWxhdGlvbiBvciBhIHJlZ3VsYXIgaW5jaWRlbnQuICBUaGlzIGZpZWxkIGlzIHJlYWQt
b25seS4iLCAidHlwZV9pZCI6IDAsICJ1dWlkIjogImMzZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZl
NWNhMzMwOGNjYSIsICJ2YWx1ZXMiOiBbXX1dLCAiZnVuY3Rpb25zIjogW3siY3JlYXRvciI6IHsi
ZGlzcGxheV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJpZCI6IDE2OSwgIm5hbWUiOiAi
c2Vhbi5vZ29ybWFuQGlibS5jb20iLCAidHlwZSI6ICJ1c2VyIn0sICJkZXNjcmlwdGlvbiI6IHsi
Zm9ybWF0IjogInRleHQiLCAiY29udGVudCI6ICJTZW5kIGEgcGxhaW4gdGV4dCBvciBIVE1MLWZv
cm1hdHRlZCBlbWFpbCB3aXRoIFJlc2lsaWVudCBJbmNpZGVudCBkZXRhaWxzIGluIHRoZSBlbWFp
bCBib2R5IGFzIHdlbGwgYXMgaW5jaWRlbnQgYXR0YWNobWVudHMgYWRkZWQgdG8gdGhpcyBvdXRn
b2luZyBlbWFpbC4ifSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJlbWFpbF9vdXRib3VuZCIsICJk
aXNwbGF5X25hbWUiOiAiT3V0Ym91bmQgRW1haWw6IFNlbmQgRW1haWwiLCAiZXhwb3J0X2tleSI6
ICJzZW5kX2VtYWlsIiwgImlkIjogNjAyLCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9u
YW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJpZCI6IDE2OSwgIm5hbWUiOiAic2Vhbi5vZ29y
bWFuQGlibS5jb20iLCAidHlwZSI6ICJ1c2VyIn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTg3
MzIzMDMxNDgwLCAibmFtZSI6ICJzZW5kX2VtYWlsIiwgInRhZ3MiOiBbXSwgInV1aWQiOiAiYzgw
Y2Q1NWQtNmFiOC00NjczLTgyNzMtMWI4YTBiZjNiNDU2IiwgInZlcnNpb24iOiA2LCAidmlld19p
dGVtcyI6IFt7ImNvbnRlbnQiOiAiZTA5Nzg5YmYtMDU3Yy00OTE0LTk4NzctNDU1ZmIxMWUzZjRk
IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAi
c2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjog
bnVsbH0sIHsiY29udGVudCI6ICJmZGJjZGExNi1kNmYyLTQ4ZDEtODZkNy04MDRlMjU4OTBiYzEi
LCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJz
aG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBu
dWxsfSwgeyJjb250ZW50IjogImE0YmZkOWY3LWY5MjQtNDI4OS04YmIyLWZkMmUzYzU3N2ViNCIs
ICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNo
b3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51
bGx9LCB7ImNvbnRlbnQiOiAiMTI0ZTc0ZTktYTg5MS00NDJhLWIyNTctN2Q3OWIwZWVlZDQ1Iiwg
ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hv
d19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVs
bH0sIHsiY29udGVudCI6ICIzODY0YmE5OS1hZThjLTQ5MjYtOWI3Ni05ZThlNjkxNjk2ZjUiLCAi
ZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93
X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxs
fSwgeyJjb250ZW50IjogImQzNDNmODBiLTQ3NjAtNGY0YS1iNDkyLWJmODVkZmMyOTI2MSIsICJl
bGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3df
aWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9
LCB7ImNvbnRlbnQiOiAiZjg2NDc5ZjctM2E2Ni00ZmJiLWEyN2EtZGI2ZGViNmMwYmM5IiwgImVs
ZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19p
ZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0s
IHsiY29udGVudCI6ICIxYjlkMGE3NS00Njk5LTQzMzUtYjNiOS1iZDYyZTVmNDA1MDMiLCAiZWxl
bWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lm
IjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfV0s
ICJ3b3JrZmxvd3MiOiBbeyJhY3Rpb25zIjogW10sICJkZXNjcmlwdGlvbiI6IG51bGwsICJuYW1l
IjogIkV4YW1wbGU6IFNlbmQgSW5jaWRlbnQgRW1haWwgSFRNTCIsICJvYmplY3RfdHlwZSI6ICJp
bmNpZGVudCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1h
aWxfaHRtbCIsICJ0YWdzIjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogNTEzfSwg
eyJhY3Rpb25zIjogW10sICJkZXNjcmlwdGlvbiI6IG51bGwsICJuYW1lIjogIkV4YW1wbGU6IFNl
bmQgSW5jaWRlbnQgRW1haWwgVGV4dCIsICJvYmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJwcm9n
cmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfdGV4dCIsICJ0YWdz
IjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogNTEyfV19XSwgImdlb3MiOiBudWxs
LCAiZ3JvdXBzIjogbnVsbCwgImlkIjogMjkyLCAiaW5ib3VuZF9tYWlsYm94ZXMiOiBudWxsLCAi
aW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgImluY2lkZW50X3R5cGVzIjogW3sidXBkYXRl
X2RhdGUiOiAxNTg3NTU4NDU2Nzc0LCAiY3JlYXRlX2RhdGUiOiAxNTg3NTU4NDU2Nzc0LCAidXVp
ZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZGVzY3JpcHRpb24i
OiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3Vz
dG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQ
YWNrYWdlcyAoaW50ZXJuYWwpIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAi
cGFyZW50X2lkIjogbnVsbCwgImhpZGRlbiI6IGZhbHNlLCAiaWQiOiAwfV0sICJpbmR1c3RyaWVz
IjogbnVsbCwgImxheW91dHMiOiBbXSwgImxvY2FsZSI6IG51bGwsICJtZXNzYWdlX2Rlc3RpbmF0
aW9ucyI6IFt7ImFwaV9rZXlzIjogW10sICJkZXN0aW5hdGlvbl90eXBlIjogMCwgImV4cGVjdF9h
Y2siOiB0cnVlLCAiZXhwb3J0X2tleSI6ICJlbWFpbF9vdXRib3VuZCIsICJuYW1lIjogImVtYWls
X291dGJvdW5kIiwgInByb2dyYW1tYXRpY19uYW1lIjogImVtYWlsX291dGJvdW5kIiwgInRhZ3Mi
OiBbXSwgInVzZXJzIjogWyJtYXJrLnNjaGVyZmxpbmdAaWJtLmNvbSIsICJseWRlQHZtd2FyZS5j
b20iLCAic2Vhbi5vZ29ybWFuQGlibS5jb20iXSwgInV1aWQiOiAiNDJmNjNlYTItNTU3Mi00MmU3
LTliZmYtMDFhNGUzODA4M2E5In1dLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJvdmVycmlkZXMi
OiBbXSwgInBoYXNlcyI6IFtdLCAicmVndWxhdG9ycyI6IG51bGwsICJyb2xlcyI6IFtdLCAic2Ny
aXB0cyI6IFtdLCAic2VydmVyX3ZlcnNpb24iOiB7ImJ1aWxkX251bWJlciI6IDUxMTIsICJtYWpv
ciI6IDMzLCAibWlub3IiOiAwLCAidmVyc2lvbiI6ICIzMy4wLjUxMTIifSwgInRhZ3MiOiBbXSwg
InRhc2tfb3JkZXIiOiBbXSwgInRpbWVmcmFtZXMiOiBudWxsLCAidHlwZXMiOiBbXSwgIndvcmtm
bG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImNvbnRlbnQiOiB7InZlcnNpb24iOiA2MSwgIndvcmtm
bG93X2lkIjogImV4YW1wbGVfc2VuZF9pbmNpZGVudF9lbWFpbF9odG1sIiwgInhtbCI6ICI8P3ht
bCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9
XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBt
bmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9t
Z2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdk
aT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxp
ZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8v
d3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3Jn
LzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5j
YW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1h
aWxfaHRtbFwiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTogU2VuZCBJbmNp
ZGVudCBFbWFpbCBIVE1MXCI+PGRvY3VtZW50YXRpb24+U2VuZCBhbiBIVE1MLWZvcm1hdHRlZCBl
bWFpbCBjb250YWluaW5nIFJlc2lsaWVudCBJbmNpZGVudCBEZXRhaWxzIGluIHRoZSBlbWFpbCBi
b2R5IGFuZCBpbmNpZGVudCBhdHRhY2htZW50cy4gIEEgbm90ZSBjb250YWluaW5nIHRoZSBlbWFp
bCBkZXRhaWxzIGlzIHBvc3RlZCB0byB0aGUgaW5jaWRlbnQuPC9kb2N1bWVudGF0aW9uPjxzdGFy
dEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18x
MDFlcGk4PC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRh
c2tfMG9tY3p0MFwiIG5hbWU9XCJPdXRib3VuZCBFbWFpbDogU2VuZCBFbWFpbFwiIHJlc2lsaWVu
dDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlv
biB1dWlkPVwiYzgwY2Q1NWQtNmFiOC00NjczLTgyNzMtMWI4YTBiZjNiNDU2XCI+e1wiaW5wdXRz
XCI6e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpZiByZXN1bHRzLnN1Y2Nlc3M6XFxu
ICBub3RlVGV4dCA9IHVcXFwiXFxcIlxcXCJFbWFpbCBTZW50IGlmIG1haWwgc2VydmVyIGlzIHZh
bGlkL2F1dGhlbnRpY2F0ZWRcXFxcbiBcXG4gICZsdDticiZndDtGcm9tOiB7MH0mbHQ7YnImZ3Q7
IFRvOiB7MX0mbHQ7YnImZ3Q7IENDOiB7Mn0mbHQ7YnImZ3Q7IEJDQzogezN9Jmx0O2JyJmd0OyBT
dWJqZWN0OiB7NH0gJmx0O2JyJmd0OyBcXG4gIEJvZHk6IHs1fSAmbHQ7YnImZ3Q7XFxcIlxcXCJc
XFwiLmZvcm1hdChyZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzBdLnN0cmlwKFxcXCJ1XFxcXFxcXCJb
XVxcXCIpLCByZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzFdLnN0cmlwKFxcXCJ1XFxcXFxcXCJbXVxc
XCIpLCByZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzJdLnN0cmlwKFxcXCJ1XFxcXFxcXCJbXVxcXCIp
LCByZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzNdLnN0cmlwKFxcXCJ1XFxcXFxcXCJbXVxcXCIpLCBy
ZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzRdLnN0cmlwKFxcXCJ1XFxcXFxcXCJcXFwiKSwgcmVzdWx0
cy5jb250ZW50LnRleHQpXFxuZWxzZTpcXG4gIG5vdGVUZXh0ID0gdVxcXCJFbWFpbCBOT1QgU2Vu
dFxcXFxuIEZyb206IHswfVxcXFxuIFRvOiB7MX1cXFwiLmZvcm1hdChyZXN1bHRzLmNvbnRlbnQu
aW5wdXRzWzBdLnN0cmlwKFxcXCJ1XFxcXFxcXCJbXVxcXCIpLCByZXN1bHRzLmNvbnRlbnQuaW5w
dXRzWzFdLnN0cmlwKFxcXCJ1XFxcXFxcXCJbXVxcXCIpKVxcbmluY2lkZW50LmFkZE5vdGUoaGVs
cGVyLmNyZWF0ZVJpY2hUZXh0KG5vdGVUZXh0KSlcIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwi
OlwiaW5wdXRzLm1haWxfdG8gPSBydWxlLnByb3BlcnRpZXMubWFpbF90b1xcbmlucHV0cy5tYWls
X2NjID0gcnVsZS5wcm9wZXJ0aWVzLm1haWxfY2NcXG5pbnB1dHMubWFpbF9pbmNpZGVudF9pZCA9
IGluY2lkZW50LmlkXFxuaW5wdXRzLm1haWxfZnJvbSA9IFxcXCJjaGFuZ2VtZUByZXNpbGllbnRz
eXN0ZW1zLmNvbVxcXCJcXG5pbnB1dHMubWFpbF9zdWJqZWN0ID0gXFxcIlt7MH1dIHsxfVxcXCIu
Zm9ybWF0KGluY2lkZW50LmlkLCBpbmNpZGVudC5uYW1lKVxcblxcbmlucHV0cy5tYWlsX2JvZHlf
aHRtbCA9IFxcXCJcXFwiXFxcInslIHNldCBOT1RfRk9VTkQgPSBbXFxcIk5vdCBGb3VuZCFcXFwi
LFxcXCItXFxcIixcXFwiTm9uZVxcXCIsTm9uZV0gJX1cXG57JSBtYWNybyBnZXRfcm93KGxhYmVs
LGZpZWxkX25hbWUpIC0lfVxcblxcdHslIHNldCB2YWx1ZSA9IHRlbXBsYXRlX2hlbHBlci5nZXRf
aW5jaWRlbnRfdmFsdWUoaW5jaWRlbnQsZmllbGRfbmFtZSkgJX1cXG5cXHR7JSBzZXQgc3R5bGUg
PSBcXFwiZm9udC1mYW1pbHk6IENhbGlicmk7IGNvbG9yOiByZ2IoMzEsNzMsMTI1KVxcXCIgJX1c
XG4gICAgeyUgaWYgdmFsdWUgYW5kIHZhbHVlIG5vdCBpbiBOT1RfRk9VTkQgYW5kIG5vdCB2YWx1
ZS5zdGFydHN3aXRoKCctJykgJX1cXG4gICAgJmx0O3RyJmd0O1xcbiAgICAgICAgJmx0O3RkIHdp
ZHRoPVxcXCIxMDBcXFwiIHN0eWxlPVxcXCJ7e3N0eWxlfX07IGZvbnQtd2VpZ2h0OmJvbGRcXFwi
Jmd0O3t7IGxhYmVsIH19Jmx0Oy90ZCZndDtcXG4gICAgICAgICZsdDt0ZCBzdHlsZT1cXFwie3tz
dHlsZX19XFxcIiZndDt7eyB2YWx1ZSB9fSZsdDsvdGQmZ3Q7XFxuICAgICZsdDsvdHImZ3Q7XFxu
ICAgIHslIGVuZGlmICV9XFxueyUtIGVuZG1hY3JvICV9XFxuJmx0O3RhYmxlIHdpZHRoPVxcXCIx
MDAlXFxcIiAmZ3Q7XFxuJmx0O3RyJmd0O1xcbiAgICAmbHQ7dGQgY29sc3Bhbj1cXFwiMlxcXCIm
Z3Q7XFxuICAgICAgICAmbHQ7aDMgc3R5bGU9XFxcImNvbG9yOiByZ2IoNjgsMTE0LDE5NilcXFwi
Jmd0O0lOQ0lERU5UIERFVEFJTFMmbHQ7L2gzJmd0O1xcbiAgICAgICAgJmx0O2hyIHNpemU9XFxc
IjFcXFwiIHdpZHRoPVxcXCIxMDAlXFxcIiBub3NoYWRlIHN0eWxlPVxcXCJjb2xvcjojRkZERjU3
XFxcIiBhbGlnbj1cXFwiY2VudGVyXFxcIi8mZ3Q7XFxuICAgICZsdDsvdGQmZ3Q7XFxuJmx0Oy90
ciZndDtcXG4gICAge3sgZ2V0X3JvdygnU2V2ZXJpdHk6Jywnc2V2ZXJpdHlfY29kZScpIH19XFxu
ICAgIHt7IGdldF9yb3coJ1N0YXR1czonLCdzdGF0dXMnKSB9fSZsdDticiZndDtcXG4gICAge3sg
Z2V0X3JvdygnQ3JlYXRlZDonLCdjcmVhdGVfZGF0ZScpIH19Jmx0O2JyJmd0O1xcbiAgICB7eyBn
ZXRfcm93KCdDYXRlZ29yeTonLCdpbmNpZGVudF90eXBlX2lkcycpIH19XFxuJmx0O3RyJmd0O1xc
biAgICAmbHQ7dGQgY29sc3Bhbj1cXFwiMlxcXCImZ3Q7XFxuICAgICAgICAmbHQ7YnImZ3Q7Jmx0
O2gzIHN0eWxlPVxcXCJjb2xvcjogcmdiKDY4LDExNCwxOTYpXFxcIiZndDtJTkNJREVOVCBERVND
UklQVElPTiZsdDsvaDMmZ3Q7XFxuICAgICAgICAmbHQ7aHIgc2l6ZT1cXFwiMVxcXCIgd2lkdGg9
XFxcIjEwMCVcXFwiIG5vc2hhZGUgc3R5bGU9XFxcImNvbG9yOiNGRkRGNTdcXFwiIGFsaWduPVxc
XCJjZW50ZXJcXFwiLyZndDtcXG4gICAgJmx0Oy90ZCZndDtcXG4gICAge3sgZ2V0X3JvdygnRGVz
Y3JpcHRpb246JywnZGVzY3JpcHRpb24nKSB9fVxcbiZsdDsvdHImZ3Q7XFxuJmx0Oy90YWJsZSZn
dDtcXG4mbHQ7YnImZ3Q7XFxuXFxcIlxcXCJcXFwiXCIsXCJyZXN1bHRfbmFtZVwiOlwiXCJ9PC9y
ZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VG
bG93XzEwMWVwaTg8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMW1sNXJmeDwvb3V0
Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzEwMWVw
aThcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNl
VGFza18wb21jenQwXCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzE4d3ZycHNcIj48aW5jb21p
bmc+U2VxdWVuY2VGbG93XzFtbDVyZng8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxv
dyBpZD1cIlNlcXVlbmNlRmxvd18xbWw1cmZ4XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMG9t
Y3p0MFwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzE4d3ZycHNcIi8+PHRleHRBbm5vdGF0aW9uIGlk
PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVy
ZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFz
ZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9u
XzFhbDdmM2VcIj48dGV4dD5JbnB1dHM6IG1haWxfdG86IG9uZSByZWNpcGllbnQgZW1haWwgYWRk
cmVzcyBtYWlsX2NjOlx1MDBhMG9uZVx1MDBhMHJlY2lwaWVudFx1MDBhMGVtYWlsIGFkZHJlc3Ms
IG1haWxfaW5jaWRlbnRfaWQsIG1haWxfZnJvbTpcdTAwYTBvbmUgc2VuZGVyIGVtYWlsIGFkZHJl
c3MsIG1haWxfc3ViamVjdDogaW5jaWRlbnQgaWQgYW5kIG5hbWU8L3RleHQ+PC90ZXh0QW5ub3Rh
dGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xbTBjczFjXCIgc291cmNlUmVmPVwi
U2VydmljZVRhc2tfMG9tY3p0MFwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFhbDdmM2Vc
Ii8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMTN6d2ZxdFwiPjx0ZXh0Pk91
dHB1dDogUmljaHRleHQgTm90ZSBhZGRlZCB3aXRoIGluY2lkZW50IGRldGFpbHMvZGVzY3JpcHRp
b24gd2l0aCBlbWFpbCBoZWFkZXIgZGV0YWlscyBvciBlcnJvciBub3RlPC90ZXh0PjwvdGV4dEFu
bm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMTlndm5tM1wiIHNvdXJjZVJl
Zj1cIlNlcnZpY2VUYXNrXzBvbWN6dDBcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xM3p3
ZnF0XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwi
PjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxh
bmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3ht
XCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2
XCIgd2lkdGg9XCIzNlwiIHg9XCIzMjVcIiB5PVwiMjA1XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMzIwXCIgeT1cIjI0MFwi
Lz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRp
b25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwi
IHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2Ug
YnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1
ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzMjZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIyNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE5OVwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjU2XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJw
bW5FbGVtZW50PVwiU2VydmljZVRhc2tfMG9tY3p0MFwiIGlkPVwiU2VydmljZVRhc2tfMG9tY3p0
MF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCI2NjBc
IiB5PVwiMTgzXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVt
ZW50PVwiU2VxdWVuY2VGbG93XzEwMWVwaThcIiBpZD1cIlNlcXVlbmNlRmxvd18xMDFlcGk4X2Rp
XCI+PG9tZ2RpOndheXBvaW50IHg9XCIzNjFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjIyM1wiLz48b21nZGk6d2F5cG9pbnQgeD1cIjY2MFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjIzXCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTRc
IiB3aWR0aD1cIjkwXCIgeD1cIjQ2NS41XCIgeT1cIjIwMVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+
PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVu
dF8xOHd2cnBzXCIgaWQ9XCJFbmRFdmVudF8xOHd2cnBzX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTA5NlwiIHk9XCIyMDVcIi8+PGJwbW5kaTpCUE1O
TGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxNFwiIHdpZHRoPVwiOTBcIiB4PVwiMTA2OVwi
IHk9XCIyNDRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRp
OkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFtbDVyZnhcIiBpZD1cIlNlcXVl
bmNlRmxvd18xbWw1cmZ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI3NjBcIiB4c2k6dHlwZT1c
Im9tZ2RjOlBvaW50XCIgeT1cIjIyM1wiLz48b21nZGk6d2F5cG9pbnQgeD1cIjEwOTZcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyM1wiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjE0XCIgd2lkdGg9XCI5MFwiIHg9XCI4ODNcIiB5PVwiMjAxXCIvPjwv
YnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1u
RWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFhbDdmM2VcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFh
bDdmM2VfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjY2XCIgd2lkdGg9XCIxNDJcIiB4PVwi
NDgzXCIgeT1cIjUyXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5F
bGVtZW50PVwiQXNzb2NpYXRpb25fMW0wY3MxY1wiIGlkPVwiQXNzb2NpYXRpb25fMW0wY3MxY19k
aVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNjY4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIxODVcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1OTFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjExOFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIlRleHRBbm5vdGF0aW9uXzEzendmcXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzEzendm
cXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTAx
XCIgeT1cIjcwXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVt
ZW50PVwiQXNzb2NpYXRpb25fMTlndm5tM1wiIGlkPVwiQXNzb2NpYXRpb25fMTlndm5tM19kaVwi
PjxvbWdkaTp3YXlwb2ludCB4PVwiNzYwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIx
OTRcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI5MjVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjEwMFwiLz48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6
QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4ifSwgImNvbnRlbnRfdmVyc2lvbiI6IDYxLCAiY3Jl
YXRvcl9pZCI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJkZXNjcmlwdGlvbiI6ICJTZW5kIGFu
IEhUTUwtZm9ybWF0dGVkIGVtYWlsIGNvbnRhaW5pbmcgUmVzaWxpZW50IEluY2lkZW50IERldGFp
bHMgaW4gdGhlIGVtYWlsIGJvZHkgYW5kIGluY2lkZW50IGF0dGFjaG1lbnRzLiAgQSBub3RlIGNv
bnRhaW5pbmcgdGhlIGVtYWlsIGRldGFpbHMgaXMgcG9zdGVkIHRvIHRoZSBpbmNpZGVudC4iLCAi
ZXhwb3J0X2tleSI6ICJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfaHRtbCIsICJsYXN0X21v
ZGlmaWVkX2J5IjogInNlYW4ub2dvcm1hbkBpYm0uY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6
IDE1ODc1NTc5ODYzODIsICJuYW1lIjogIkV4YW1wbGU6IFNlbmQgSW5jaWRlbnQgRW1haWwgSFRN
TCIsICJvYmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFt
cGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfaHRtbCIsICJ0YWdzIjogW10sICJ1dWlkIjogIjdkNTA2
NTA4LTAyOTQtNDQyZS05M2U3LTlmM2M1MWYyYmM3MiIsICJ3b3JrZmxvd19pZCI6IDUxM30sIHsi
YWN0aW9ucyI6IFtdLCAiY29udGVudCI6IHsidmVyc2lvbiI6IDEyLCAid29ya2Zsb3dfaWQiOiAi
ZXhhbXBsZV9zZW5kX2luY2lkZW50X2VtYWlsX3RleHQiLCAieG1sIjogIjw/eG1sIHZlcnNpb249
XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93
d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRw
Oi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRw
Oi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRw
Oi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3Jn
LzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxT
Y2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3Jn
L3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVfc2VuZF9pbmNpZGVudF9lbWFpbF90ZXh0XCIg
aXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBTZW5kIEluY2lkZW50IEVtYWls
IFRleHRcIj48ZG9jdW1lbnRhdGlvbj5TZW5kIGEgcGxhaW4gdGV4dCBlbWFpbCBjb250YWluaW5n
IFJlc2lsaWVudCBJbmNpZGVudCBEZXRhaWxzIGluIHRoZSBlbWFpbCBib2R5IGFuZCBpbmNpZGVu
dCBhdHRhY2htZW50cy4gIEEgbm90ZSBjb250YWluaW5nIHRoZSBlbWFpbCBkZXRhaWxzIGlzIHBv
c3QgdG8gdGhlIGluY2lkZW50LjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0
RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMWUxZHk5bzwvb3V0Z29pbmc+
PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzF0bHYzajlcIiBuYW1l
PVwiT3V0Ym91bmQgRW1haWw6IFNlbmQgRW1haWxcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9u
XCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cImM4MGNkNTVk
LTZhYjgtNDY3My04MjczLTFiOGEwYmYzYjQ1NlwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9j
ZXNzaW5nX3NjcmlwdFwiOlwiaWYgcmVzdWx0cy5zdWNjZXNzOlxcbiAgbm90ZVRleHQgPSB1XFxc
IkVtYWlsIFNlbnQgaWYgbWFpbCBzZXJ2ZXIgaXMgdmFsaWQvYXV0aGVudGljYXRlZFxcXFxuIEZy
b206IHswfVxcXFxuIFRvOiB7MX1cXFxcbiBDQzogezJ9XFxcXG4gQkNDOiB7M31cXFxcbiBTdWJq
ZWN0OiB7NH1cXFxcbiBCb2R5OiB7NX1cXFwiLmZvcm1hdChyZXN1bHRzLmNvbnRlbnQuaW5wdXRz
WzBdLnN0cmlwKFxcXCJ1XFxcXFxcXCJbXVxcXCIpLCByZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzFd
LnN0cmlwKFxcXCJ1XFxcXFxcXCJbXVxcXCIpLCByZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzJdLnN0
cmlwKFxcXCJ1XFxcXFxcXCJbXVxcXCIpLCByZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzNdLnN0cmlw
KFxcXCJ1XFxcXFxcXCJbXVxcXCIpLCByZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzRdLnN0cmlwKFxc
XCJ1XFxcXFxcXCJcXFwiKSwgcmVzdWx0cy5jb250ZW50LnRleHQgKSAgIFxcbmVsc2U6XFxuICBu
b3RlVGV4dCA9IHVcXFwiRW1haWwgTk9UIFNlbnRcXFxcbiBGcm9tOiB7MH1cXFxcbiBUbzogezF9
XFxcIi5mb3JtYXQocmVzdWx0cy5jb250ZW50LmlucHV0c1swXS5zdHJpcChcXFwidVxcXFxcXFwi
W11cXFwiKSwgcmVzdWx0cy5jb250ZW50LmlucHV0c1sxXS5zdHJpcChcXFwidVxcXFxcXFwiW11c
XFwiKSlcXG5pbmNpZGVudC5hZGROb3RlKG5vdGVUZXh0KVwiLFwicHJlX3Byb2Nlc3Npbmdfc2Ny
aXB0XCI6XCJpbnB1dHMubWFpbF90byA9IHJ1bGUucHJvcGVydGllcy5tYWlsX3RvXFxuaW5wdXRz
Lm1haWxfY2MgPSBydWxlLnByb3BlcnRpZXMubWFpbF9jY1xcbmlucHV0cy5tYWlsX2luY2lkZW50
X2lkID0gaW5jaWRlbnQuaWRcXG5pbnB1dHMubWFpbF9mcm9tID0gXFxcImNoYW5nZW1lQHJlc2ls
aWVudHN5c3RlbXMuY29tXFxcIlxcbmlucHV0cy5tYWlsX3N1YmplY3QgPSBcXFwiW3swfV0gezF9
XFxcIi5mb3JtYXQoaW5jaWRlbnQuaWQsIGluY2lkZW50Lm5hbWUpXFxuXFxuZnJvbSBqYXZhLnV0
aWwgaW1wb3J0IERhdGVcXG5jcmVhdGlvbl9kYXRlID0gRGF0ZShpbmNpZGVudC5jcmVhdGVfZGF0
ZSlcXG50eXBlX2lkcyA9IHVcXFwiLCBcXFwiLmpvaW4oaW5jaWRlbnQuaW5jaWRlbnRfdHlwZV9p
ZHMpXFxuc2V2X2NvZGUgPSB1XFxcInt9XFxcIi5mb3JtYXQoaW5jaWRlbnQuc2V2ZXJpdHlfY29k
ZSlcXG5jdXJyZW50X3BsYW4gPSB1XFxcInt9XFxcIi5mb3JtYXQoaW5jaWRlbnQucGxhbl9zdGF0
dXMpXFxuXFxuaW5wdXRzLm1haWxfYm9keV90ZXh0ID0gXFxcIlxcXCJcXFwiXFxuSW5jaWRlbnQg
U3VtbWFyeTpcXG4gICAgU2V2ZXJpdHkgQ29kZTogezB9XFxuICAgIFBsYW4gU3RhdHVzOiB7MX1c
XG4gICAgQ3JlYXRlZDogezJ9XFxuICAgIEluY2lkZW50IFR5cGU6IHszfVxcblxcXCJcXFwiXFxc
Ii5mb3JtYXQoc2V2X2NvZGUsIGN1cnJlbnRfcGxhbiwgY3JlYXRpb25fZGF0ZSwgdHlwZV9pZHMp
XFxuXCIsXCJyZXN1bHRfbmFtZVwiOlwiXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNp
b25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFlMWR5OW88L2luY29taW5nPjxvdXRn
b2luZz5TZXF1ZW5jZUZsb3dfMGNqNjhsYTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVu
Y2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzFlMWR5OW9cIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18xdGx2M2o5XCIvPjxlbmRFdmVudCBp
ZD1cIkVuZEV2ZW50XzFoenhhZmJcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBjajY4bGE8L2lu
Y29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wY2o2OGxh
XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMXRsdjNqOVwiIHRhcmdldFJlZj1cIkVuZEV2ZW50
XzFoenhhZmJcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwi
Pjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxh
c3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0ZXh0
QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFpd3doY2FcIj48dGV4dD5JbnB1dHM6IG1h
aWxfdG86IG9uZSByZWNpcGllbnQgZW1haWwgYWRkcmVzcyBtYWlsX2NjOlx1MDBhMG9uZVx1MDBh
MHJlY2lwaWVudFx1MDBhMGVtYWlsIGFkZHJlc3MsIG1haWxfaW5jaWRlbnRfaWQsIG1haWxfZnJv
bTpcdTAwYTBvbmUgc2VuZGVyIGVtYWlsIGFkZHJlc3MsIG1haWxfc3ViamVjdDogaW5jaWRlbnQg
aWQgYW5kIG5hbWU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3Nv
Y2lhdGlvbl8wcnFiZG03XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMXRsdjNqOVwiIHRhcmdl
dFJlZj1cIlRleHRBbm5vdGF0aW9uXzFpd3doY2FcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4
dEFubm90YXRpb25fMDl6cmd1dlwiPjx0ZXh0Pk91dHB1dDogUmljaHRleHQgTm90ZSBhZGRlZCB3
aXRoIGluY2lkZW50IGRldGFpbHMvZGVzY3JpcHRpb24gd2l0aCBlbWFpbCBoZWFkZXIgZGV0YWls
cyBvciBlcnJvciBub3RlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwi
QXNzb2NpYXRpb25fMTZ3a2dhMVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzF0bHYzajlcIiB0
YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8wOXpyZ3V2XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQ
TU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVt
ZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJw
bW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1f
ZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5
PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdp
ZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1u
ZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRp
b25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1u
ZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8x
c2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9
XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9p
bnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRp
OkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMXRs
djNqOVwiIGlkPVwiU2VydmljZVRhc2tfMXRsdjNqOV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCI1MjFcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5T
aGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFlMWR5OW9c
IiBpZD1cIlNlcXVlbmNlRmxvd18xZTFkeTlvX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1c
IjUyMVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxh
YmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1cIjMxNC41XCIg
eT1cIjE4NC41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRp
OkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzFoenhhZmJcIiBpZD1cIkVuZEV2ZW50
XzFoenhhZmJfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9
XCI5NTdcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1cIjkzMFwiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxh
YmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2Vx
dWVuY2VGbG93XzBjajY4bGFcIiBpZD1cIlNlcXVlbmNlRmxvd18wY2o2OGxhX2RpXCI+PG9tZ2Rp
OndheXBvaW50IHg9XCI2MjFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48
b21nZGk6d2F5cG9pbnQgeD1cIjk1N1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2
XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1c
IjkwXCIgeD1cIjc0NFwiIHk9XCIxODQuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6
QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8x
aXd3aGNhXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xaXd3aGNhX2RpXCI+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjM1MlwiIHk9XCI2OFwiLz48L2JwbW5kaTpC
UE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzBycWJk
bTdcIiBpZD1cIkFzc29jaWF0aW9uXzBycWJkbTdfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjUy
NFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTczXCIvPjxvbWdkaTp3YXlwb2ludCB4
PVwiNDIyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI5OFwiLz48L2JwbW5kaTpCUE1O
RWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzA5enJn
dXZcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzA5enJndXZfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiNzQ2XCIgeT1cIjY4XCIvPjwvYnBtbmRpOkJQTU5T
aGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMTZ3a2dhMVwi
IGlkPVwiQXNzb2NpYXRpb25fMTZ3a2dhMV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNjIxXCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNzlcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI3
NjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjk4XCIvPjwvYnBtbmRpOkJQTU5FZGdl
PjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiJ9
LCAiY29udGVudF92ZXJzaW9uIjogMTIsICJjcmVhdG9yX2lkIjogInNlYW4ub2dvcm1hbkBpYm0u
Y29tIiwgImRlc2NyaXB0aW9uIjogIlNlbmQgYSBwbGFpbiB0ZXh0IGVtYWlsIGNvbnRhaW5pbmcg
UmVzaWxpZW50IEluY2lkZW50IERldGFpbHMgaW4gdGhlIGVtYWlsIGJvZHkgYW5kIGluY2lkZW50
IGF0dGFjaG1lbnRzLiAgQSBub3RlIGNvbnRhaW5pbmcgdGhlIGVtYWlsIGRldGFpbHMgaXMgcG9z
dCB0byB0aGUgaW5jaWRlbnQuIiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9zZW5kX2luY2lkZW50
X2VtYWlsX3RleHQiLCAibGFzdF9tb2RpZmllZF9ieSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIs
ICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTg3NTU4MDE5ODg3LCAibmFtZSI6ICJFeGFtcGxlOiBT
ZW5kIEluY2lkZW50IEVtYWlsIFRleHQiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAicHJv
Z3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9zZW5kX2luY2lkZW50X2VtYWlsX3RleHQiLCAidGFn
cyI6IFtdLCAidXVpZCI6ICI3NTJlZmNmNi05OGI3LTRkNjEtODVhNi1lMmRiNzYxOTAwMTMiLCAi
d29ya2Zsb3dfaWQiOiA1MTJ9XSwgIndvcmtzcGFjZXMiOiBbXX0=
"""
    )