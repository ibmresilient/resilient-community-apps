# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_outbound_email"""

# This here to support Apps running on resilient-circuits <= v34
try:
    import resilient_circuits
    if int(resilient_circuits.__version__.split(".")[0]) >= 34:
        raise ImportError
    ImportDefinition = resilient_circuits.util.ImportDefinition

except ImportError:
    from resilient import ImportDefinition


def codegen_reload_data():
    """
    Parameters required reload codegen for the fn_outbound_email package
    """
    return {
        "package": u"fn_outbound_email",
        "message_destinations": [u"email_outbound"],
        "functions": [u"send_email"],
        "workflows": [u"example_send_incident_email_text", u"example_send_incident_email_html"],
        "actions": [u"Example: Send Incident Email HTML", u"Example: Send Incident Email Text"],
        "incident_fields": [],
        "incident_artifact_types": [],
        "datatables": [],
        "automatic_tasks": [],
        "scripts": []
    }


def customization_data(client=None):
    """
    Returns a Generator of ImportDefinitions (Customizations).
    Install them using `resilient-circuits customize`

    Contents:
    - Message Destinations:
        - email_outbound
    - Functions:
        - send_email
    - Workflows:
        - example_send_incident_email_text
        - example_send_incident_email_html
    - Rules:
        - Example: Send Incident Email HTML
        - Example: Send Incident Email Text
    """

    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFNl
bmQgSW5jaWRlbnQgRW1haWwgSFRNTCIsICJpZCI6IDEyMjIsICJsb2dpY190eXBlIjogImFsbCIs
ICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBTZW5kIEluY2lk
ZW50IEVtYWlsIEhUTUwiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAidGFncyI6IFtdLCAi
dGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ0eXBlIjogMSwgInV1aWQiOiAiMzBkMjNkZWYtYWM1
MC00NjU5LTk3NzYtNGY2NTA1ZjkzY2UxIiwgInZpZXdfaXRlbXMiOiBbeyJjb250ZW50IjogIjJi
OWQ1NzBlLWRkNTgtNGE4MS04YjBkLWE5ODU3MmJkYzI2MSIsICJlbGVtZW50IjogImZpZWxkX3V1
aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNob3dfaWYiOiBudWxsLCAi
c2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7ImNvbnRlbnQi
OiAiOGMzZWU3MmItZjhjYi00MzE4LWE5NzgtZjhhMDQxMDlmYzdiIiwgImVsZW1lbnQiOiAiZmll
bGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAic2hvd19pZiI6IG51
bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAid29y
a2Zsb3dzIjogWyJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfaHRtbCJdfSwgeyJhdXRvbWF0
aW9ucyI6IFtdLCAiY29uZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5
IjogIkV4YW1wbGU6IFNlbmQgSW5jaWRlbnQgRW1haWwgVGV4dCIsICJpZCI6IDEyMjMsICJsb2dp
Y190eXBlIjogImFsbCIsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFt
cGxlOiBTZW5kIEluY2lkZW50IEVtYWlsIFRleHQiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQi
LCAidGFncyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ0eXBlIjogMSwgInV1aWQi
OiAiMWJiOGMxOTAtMTc1ZS00NDE2LWEwZTMtOGMxNzJlY2Y1MDRkIiwgInZpZXdfaXRlbXMiOiBb
eyJjb250ZW50IjogIjJiOWQ1NzBlLWRkNTgtNGE4MS04YjBkLWE5ODU3MmJkYzI2MSIsICJlbGVt
ZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNo
b3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51
bGx9LCB7ImNvbnRlbnQiOiAiOGMzZWU3MmItZjhjYi00MzE4LWE5NzgtZjhhMDQxMDlmYzdiIiwg
ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24i
LCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVs
IjogbnVsbH1dLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfdGV4
dCJdfV0sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImV4cG9ydF9kYXRlIjogMTU4Njk2NjQyNzIw
OSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJmaWVsZHMiOiBbeyJhbGxvd19kZWZhdWx0
X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxz
ZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19m
dW5jdGlvbi9tYWlsX2JjYyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA5NDg2
LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJuYW1lIjogIm1haWxf
YmNjIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xk
ZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6
IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfYmNjIiwg
InRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiMzg2NGJhOTktYWU4Yy00OTI2
LTliNzYtOWU4ZTY5MTY5NmY1IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVl
IjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNo
YW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2
ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlv
bi9tYWlsX2luY2lkZW50X2lkIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0
ODgsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJt
YWlsX2luY2lkZW50X2lkIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtd
LCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwg
InJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0Ijog
Im1haWxfaW5jaWRlbnRfaWQiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6IDExLCAidXVpZCI6
ICJmZGJjZGExNi1kNmYyLTQ4ZDEtODZkNy04MDRlMjU4OTBiYzEiLCAidmFsdWVzIjogW119LCB7
ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiY2Fs
Y3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwgImRl
ZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhw
b3J0X2tleSI6ICJfX2Z1bmN0aW9uL21haWxfYm9keV9odG1sIiwgImhpZGVfbm90aWZpY2F0aW9u
IjogZmFsc2UsICJpZCI6IDk0ODIsICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJuYWwiOiBm
YWxzZSwgIm5hbWUiOiAibWFpbF9ib2R5X2h0bWwiLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJv
cGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJlYWRf
b25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMi
OiBbXSwgInRleHQiOiAibWFpbF9ib2R5X2h0bWwiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6
IDExLCAidXVpZCI6ICIxYjlkMGE3NS00Njk5LTQzMzUtYjNiOS1iZDYyZTVmNDA1MDMiLCAidmFs
dWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4i
OiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6
IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL21haWxfZnJvbSIsICJoaWRlX25vdGlm
aWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA5NDg3LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVy
bmFsIjogZmFsc2UsICJuYW1lIjogIm1haWxfZnJvbSIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwg
Im9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVh
ZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRl
cyI6IFtdLCAidGV4dCI6ICJtYWlsX2Zyb20iLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6IDEx
LCAidXVpZCI6ICJlMDk3ODliZi0wNTdjLTQ5MTQtOTg3Ny00NTVmYjExZTNmNGQiLCAidmFsdWVz
IjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL21haWxfYm9keV90ZXh0IiwgImhpZGVfbm90
aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0ODUsICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50
ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF9ib2R5X3RleHQiLCAib3BlcmF0aW9uX3Blcm1z
Ijoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogbnVs
bCwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0
ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAibWFpbF9ib2R5X3RleHQiLCAidG9vbHRpcCI6ICIiLCAi
dHlwZV9pZCI6IDExLCAidXVpZCI6ICJmODY0NzlmNy0zYTY2LTRmYmItYTI3YS1kYjZkZWI2YzBi
YzkiLCAidmFsdWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5r
X29wdGlvbiI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUs
ICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVw
cmVjYXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL21haWxfdG8iLCAiaGlk
ZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogOTQ4MywgImlucHV0X3R5cGUiOiAidGV4dCIs
ICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJtYWlsX3RvIiwgIm9wZXJhdGlvbl9wZXJtcyI6
IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6IG51bGws
ICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVt
cGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfdG8iLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6
IDExLCAidXVpZCI6ICJhNGJmZDlmNy1mOTI0LTQyODktOGJiMi1mZDJlM2M1NzdlYjQiLCAidmFs
dWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4i
OiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6
IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL21haWxfY2MiLCAiaGlkZV9ub3RpZmlj
YXRpb24iOiBmYWxzZSwgImlkIjogOTQ4NCwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5h
bCI6IGZhbHNlLCAibmFtZSI6ICJtYWlsX2NjIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3Bl
cmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29u
bHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjog
W10sICJ0ZXh0IjogIm1haWxfY2MiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6IDExLCAidXVp
ZCI6ICIxMjRlNzRlOS1hODkxLTQ0MmEtYjI1Ny03ZDc5YjBlZWVkNDUiLCAidmFsdWVzIjogW119
LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAi
Y2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwg
ImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAi
ZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL21haWxfc3ViamVjdCIsICJoaWRlX25vdGlmaWNhdGlv
biI6IGZhbHNlLCAiaWQiOiA5NDg5LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjog
ZmFsc2UsICJuYW1lIjogIm1haWxfc3ViamVjdCIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9w
ZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9v
bmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6
IFtdLCAidGV4dCI6ICJtYWlsX3N1YmplY3QiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6IDEx
LCAidXVpZCI6ICJkMzQzZjgwYi00NzYwLTRmNGEtYjQ5Mi1iZjg1ZGZjMjkyNjEiLCAidmFsdWVz
IjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL21haWxfdG8iLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgImlkIjogOTQ4MCwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRl
cm5hbCI6IGZhbHNlLCAibmFtZSI6ICJtYWlsX3RvIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAi
b3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVz
IiwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0
ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAibWFpbF90byIsICJ0b29sdGlwIjogIiIsICJ0eXBlX2lk
IjogNiwgInV1aWQiOiAiMmI5ZDU3MGUtZGQ1OC00YTgxLThiMGQtYTk4NTcyYmRjMjYxIiwgInZh
bHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24i
OiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2Vu
IjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQi
OiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9tYWlsX2NjIiwgImhpZGVf
bm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0ODEsICJpbnB1dF90eXBlIjogInRleHQiLCAi
aW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF9jYyIsICJvcGVyYXRpb25fcGVybXMiOiB7
fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiAicHJvcGVy
dGllcyIsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtd
LCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfY2MiLCAidG9vbHRpcCI6ICIiLCAidHlw
ZV9pZCI6IDYsICJ1dWlkIjogIjhjM2VlNzJiLWY4Y2ItNDMxOC1hOTc4LWY4YTA0MTA5ZmM3YiIs
ICJ2YWx1ZXMiOiBbXX0sIHsiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbnRlcm5hbF9jdXN0b21p
emF0aW9uc19maWVsZCIsICJpZCI6IDAsICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJuYWwi
OiB0cnVlLCAibmFtZSI6ICJpbnRlcm5hbF9jdXN0b21pemF0aW9uc19maWVsZCIsICJyZWFkX29u
bHkiOiB0cnVlLCAidGV4dCI6ICJDdXN0b21pemF0aW9ucyBGaWVsZCAoaW50ZXJuYWwpIiwgInR5
cGVfaWQiOiAwLCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTEi
fV0sICJmdW5jdGlvbnMiOiBbeyJjcmVhdG9yIjogeyJkaXNwbGF5X25hbWUiOiAiUmVzaWxpZW50
IFN5c2FkbWluIiwgImlkIjogMTY5LCAibmFtZSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJ0
eXBlIjogInVzZXIifSwgImRlc2NyaXB0aW9uIjogeyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50
IjogIlNlbmQgYSBwbGFpbiB0ZXh0IG9yIEhUTUwtZm9ybWF0dGVkIGVtYWlsIHdpdGggUmVzaWxp
ZW50IEluY2lkZW50IGRldGFpbHMgaW4gdGhlIGVtYWlsIGJvZHkgYXMgd2VsbCBhcyBpbmNpZGVu
dCBhdHRhY2htZW50cyBhZGRlZCB0byB0aGlzIG91dGdvaW5nIGVtYWlsLiJ9LCAiZGVzdGluYXRp
b25faGFuZGxlIjogImVtYWlsX291dGJvdW5kIiwgImRpc3BsYXlfbmFtZSI6ICJPdXRib3VuZCBF
bWFpbDogU2VuZCBFbWFpbCIsICJleHBvcnRfa2V5IjogInNlbmRfZW1haWwiLCAiaWQiOiA2MDIs
ICJsYXN0X21vZGlmaWVkX2J5IjogeyJkaXNwbGF5X25hbWUiOiAiUmVzaWxpZW50IFN5c2FkbWlu
IiwgImlkIjogMTY5LCAibmFtZSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJ0eXBlIjogInVz
ZXIifSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1ODY5NjM4ODQ4NTIsICJuYW1lIjogInNlbmRf
ZW1haWwiLCAidGFncyI6IFtdLCAidXVpZCI6ICJjODBjZDU1ZC02YWI4LTQ2NzMtODI3My0xYjhh
MGJmM2I0NTYiLCAidmVyc2lvbiI6IDQsICJ2aWV3X2l0ZW1zIjogW3siY29udGVudCI6ICJlMDk3
ODliZi0wNTdjLTQ5MTQtOTg3Ny00NTVmYjExZTNmNGQiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlk
IiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlu
a19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJjb250ZW50IjogImZkYmNk
YTE2LWQ2ZjItNDhkMS04NmQ3LTgwNGUyNTg5MGJjMSIsICJlbGVtZW50IjogImZpZWxkX3V1aWQi
LCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5r
X2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7ImNvbnRlbnQiOiAiYTRiZmQ5
ZjctZjkyNC00Mjg5LThiYjItZmQyZTNjNTc3ZWI0IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIs
ICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtf
aGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsiY29udGVudCI6ICIxMjRlNzRl
OS1hODkxLTQ0MmEtYjI1Ny03ZDc5YjBlZWVkNDUiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwg
ImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19o
ZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJjb250ZW50IjogIjM4NjRiYTk5
LWFlOGMtNDkyNi05Yjc2LTllOGU2OTE2OTZmNSIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAi
ZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hl
YWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7ImNvbnRlbnQiOiAiZDM0M2Y4MGIt
NDc2MC00ZjRhLWI0OTItYmY4NWRmYzI5MjYxIiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJm
aWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVh
ZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsiY29udGVudCI6ICJmODY0NzlmNy0z
YTY2LTRmYmItYTI3YS1kYjZkZWI2YzBiYzkiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZp
ZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFk
ZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJjb250ZW50IjogIjFiOWQwYTc1LTQ2
OTktNDMzNS1iM2I5LWJkNjJlNWY0MDUwMyIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmll
bGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRl
ciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMi
OiBbXSwgImRlc2NyaXB0aW9uIjogbnVsbCwgIm5hbWUiOiAiRXhhbXBsZTogU2VuZCBJbmNpZGVu
dCBFbWFpbCBIVE1MIiwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgInByb2dyYW1tYXRpY19u
YW1lIjogImV4YW1wbGVfc2VuZF9pbmNpZGVudF9lbWFpbF9odG1sIiwgInRhZ3MiOiBbXSwgInV1
aWQiOiBudWxsLCAid29ya2Zsb3dfaWQiOiA1MTN9LCB7ImFjdGlvbnMiOiBbXSwgImRlc2NyaXB0
aW9uIjogbnVsbCwgIm5hbWUiOiAiRXhhbXBsZTogU2VuZCBJbmNpZGVudCBFbWFpbCBUZXh0Iiwg
Im9iamVjdF90eXBlIjogImluY2lkZW50IiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVf
c2VuZF9pbmNpZGVudF9lbWFpbF90ZXh0IiwgInRhZ3MiOiBbXSwgInV1aWQiOiBudWxsLCAid29y
a2Zsb3dfaWQiOiA1MTJ9XX1dLCAiZ2VvcyI6IG51bGwsICJncm91cHMiOiBudWxsLCAiaWQiOiAy
NjIsICJpbmJvdW5kX21haWxib3hlcyI6IG51bGwsICJpbmNpZGVudF9hcnRpZmFjdF90eXBlcyI6
IFtdLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1ODY5NjY0MjU0MzQsICJj
cmVhdGVfZGF0ZSI6IDE1ODY5NjY0MjU0MzQsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1h
ZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2Vz
IChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRl
cm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZW5h
YmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlkZGVu
IjogZmFsc2UsICJpZCI6IDB9XSwgImluZHVzdHJpZXMiOiBudWxsLCAibGF5b3V0cyI6IFtdLCAi
bG9jYWxlIjogbnVsbCwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3siYXBpX2tleXMiOiBbXSwg
ImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJleHBvcnRfa2V5Ijog
ImVtYWlsX291dGJvdW5kIiwgIm5hbWUiOiAiZW1haWxfb3V0Ym91bmQiLCAicHJvZ3JhbW1hdGlj
X25hbWUiOiAiZW1haWxfb3V0Ym91bmQiLCAidGFncyI6IFtdLCAidXNlcnMiOiBbIm1hcmsuc2No
ZXJmbGluZ0BpYm0uY29tIiwgImx5ZGVAdm13YXJlLmNvbSIsICJzZWFuLm9nb3JtYW5AaWJtLmNv
bSJdLCAidXVpZCI6ICI0MmY2M2VhMi01NTcyLTQyZTctOWJmZi0wMWE0ZTM4MDgzYTkifV0sICJu
b3RpZmljYXRpb25zIjogbnVsbCwgIm92ZXJyaWRlcyI6IFtdLCAicGhhc2VzIjogW10sICJyZWd1
bGF0b3JzIjogbnVsbCwgInJvbGVzIjogW10sICJzY3JpcHRzIjogW10sICJzZXJ2ZXJfdmVyc2lv
biI6IHsiYnVpbGRfbnVtYmVyIjogNTExMiwgIm1ham9yIjogMzMsICJtaW5vciI6IDAsICJ2ZXJz
aW9uIjogIjMzLjAuNTExMiJ9LCAidGFncyI6IFtdLCAidGFza19vcmRlciI6IFtdLCAidGltZWZy
YW1lcyI6IG51bGwsICJ0eXBlcyI6IFtdLCAid29ya2Zsb3dzIjogW3siYWN0aW9ucyI6IFtdLCAi
Y29udGVudCI6IHsidmVyc2lvbiI6IDQ3LCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9zZW5kX2lu
Y2lkZW50X2VtYWlsX2h0bWwiLCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGlu
Zz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVj
L0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcv
c3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcv
c3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3Nw
ZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50Lmli
bS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1h
XCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2Vc
IiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2Vz
cyBpZD1cImV4YW1wbGVfc2VuZF9pbmNpZGVudF9lbWFpbF9odG1sXCIgaXNFeGVjdXRhYmxlPVwi
dHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBTZW5kIEluY2lkZW50IEVtYWlsIEhUTUxcIj48ZG9jdW1l
bnRhdGlvbj5TZW5kIGEgSFRNTC1mb3JtYXR0ZWQgZW1haWwgd2l0aCBSZXNpbGllbnQgSW5jaWRl
bnQgZGV0YWlscyBpbiB0aGUgZW1haWwgYm9keSBhcyB3ZWxsIGFzIGluY2lkZW50IGF0dGFjaG1l
bnRzLCBub3RlIGF0dGFjaGVkIHRvIGluY2lkZW50LjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVu
dCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMTAxZXBp
ODwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzBv
bWN6dDBcIiBuYW1lPVwiT3V0Ym91bmQgRW1haWw6IFNlbmQgRW1haWxcIiByZXNpbGllbnQ6dHlw
ZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVp
ZD1cImM4MGNkNTVkLTZhYjgtNDY3My04MjczLTFiOGEwYmYzYjQ1NlwiPntcImlucHV0c1wiOnt9
LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaWYgcmVzdWx0cy5zdWNjZXNzOlxcbiAgbm90
ZVRleHQgPSB1XFxcIkVtYWlsIFNlbnQgaWYgbWFpbCBzZXJ2ZXIgaXMgdmFsaWQvYXV0aGVudGlj
YXRlZFxcXFxuIEZyb206IHswfVxcXFxuIFRvOiB7MX1cXFxcbiBDQzogezJ9XFxcXG4gQkNDOiB7
M31cXFxcbiBTdWJqZWN0OiB7NH0gXFxcXG4gQm9keSBiZWxvdyBpbiBub3RlOlxcXCIuZm9ybWF0
KHJlc3VsdHMuY29udGVudC5pbnB1dHNbMF0uc3RyaXAoXFxcInVcXFxcXFxcIltdXFxcIiksIHJl
c3VsdHMuY29udGVudC5pbnB1dHNbMV0uc3RyaXAoXFxcInVcXFxcXFxcIltdXFxcIiksIHJlc3Vs
dHMuY29udGVudC5pbnB1dHNbMl0uc3RyaXAoXFxcInVcXFxcXFxcIltdXFxcIiksIHJlc3VsdHMu
Y29udGVudC5pbnB1dHNbM10uc3RyaXAoXFxcInVcXFxcXFxcIltdXFxcIiksIHJlc3VsdHMuY29u
dGVudC5pbnB1dHNbNF0uc3RyaXAoXFxcInVcXFxcXFxcIlxcXCIpKVxcbiAgYm9keVRleHQgPSB1
XFxcIlxcXCJcXFwie31cXFwiXFxcIlxcXCIuZm9ybWF0KHJlc3VsdHMuY29udGVudC50ZXh0KVxc
bmVsc2U6XFxuICBub3RlVGV4dCA9IHVcXFwiRW1haWwgTk9UIFNlbnRcXFxcbiBGcm9tOiB7MH1c
XFxcbiBUbzogezF9XFxcIi5mb3JtYXQocmVzdWx0cy5jb250ZW50LmlucHV0c1swXS5zdHJpcChc
XFwidVxcXFxcXFwiW11cXFwiKSwgcmVzdWx0cy5jb250ZW50LmlucHV0c1sxXS5zdHJpcChcXFwi
dVxcXFxcXFwiW11cXFwiKSlcXG4gIGJvZHlUZXh0ID0gXFxcIk4vQVxcXCJcXG5pbmNpZGVudC5h
ZGROb3RlKGhlbHBlci5jcmVhdGVSaWNoVGV4dChib2R5VGV4dCkpXFxuaW5jaWRlbnQuYWRkTm90
ZShub3RlVGV4dClcIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLm1haWxfdG8g
PSBydWxlLnByb3BlcnRpZXMubWFpbF90b1xcbmlucHV0cy5tYWlsX2NjID0gcnVsZS5wcm9wZXJ0
aWVzLm1haWxfY2NcXG5pbnB1dHMubWFpbF9pbmNpZGVudF9pZCA9IGluY2lkZW50LmlkXFxuaW5w
dXRzLm1haWxfZnJvbSA9IFxcXCJjaGFuZ2VtZUByZXNpbGllbnRzeXN0ZW1zLmNvbVxcXCJcXG5p
bnB1dHMubWFpbF9zdWJqZWN0ID0gXFxcIlt7MH1dIHsxfVxcXCIuZm9ybWF0KGluY2lkZW50Lmlk
LCBpbmNpZGVudC5uYW1lKVxcblxcbmlucHV0cy5tYWlsX2JvZHlfaHRtbCA9IFxcXCJcXFwiXFxc
IlxcbnslIHNldCBOT1RfRk9VTkQgPSBbXFxcIk5vdCBGb3VuZCFcXFwiLFxcXCItXFxcIixcXFwi
Tm9uZVxcXCIsTm9uZV0gJX1cXG57JSBtYWNybyBnZXRfcm93KGxhYmVsLGZpZWxkX25hbWUpIC0l
fVxcblxcdHslIHNldCB2YWx1ZSA9IHRlbXBsYXRlX2hlbHBlci5nZXRfaW5jaWRlbnRfdmFsdWUo
aW5jaWRlbnQsZmllbGRfbmFtZSkgJX1cXG5cXHR7JSBzZXQgc3R5bGUgPSBcXFwiZm9udC1mYW1p
bHk6IENhbGlicmk7IGNvbG9yOiByZ2IoMzEsNzMsMTI1KVxcXCIgJX1cXG4gICAgeyUgaWYgdmFs
dWUgYW5kIHZhbHVlIG5vdCBpbiBOT1RfRk9VTkQgYW5kIG5vdCB2YWx1ZS5zdGFydHN3aXRoKCct
JykgJX1cXG4gICAgJmx0O3RyJmd0O1xcbiAgICAgICAgJmx0O3RkIHdpZHRoPVxcXCIxMDBcXFwi
IHN0eWxlPVxcXCJ7e3N0eWxlfX07IGZvbnQtd2VpZ2h0OmJvbGRcXFwiJmd0O3t7IGxhYmVsIH19
Jmx0Oy90ZCZndDtcXG4gICAgICAgICZsdDt0ZCBzdHlsZT1cXFwie3tzdHlsZX19XFxcIiZndDt7
eyB2YWx1ZSB8IHN0cmlwdGFnc319Jmx0Oy90ZCZndDtcXG4gICAgJmx0Oy90ciZndDtcXG4gICAg
eyUgZW5kaWYgJX1cXG57JS0gZW5kbWFjcm8gJX1cXG4mbHQ7dGFibGUgd2lkdGg9XFxcIjEwMCVc
XFwiICZndDtcXG4mbHQ7dHImZ3Q7XFxuICAgICZsdDt0ZCBjb2xzcGFuPVxcXCIyXFxcIiZndDtc
XG4gICAgICAgICZsdDtoMyBzdHlsZT1cXFwiY29sb3I6IHJnYig2OCwxMTQsMTk2KVxcXCImZ3Q7
SU5DSURFTlQgREVUQUlMUyZsdDsvaDMmZ3Q7XFxuICAgICAgICAmbHQ7aHIgc2l6ZT1cXFwiMVxc
XCIgd2lkdGg9XFxcIjEwMCVcXFwiIG5vc2hhZGUgc3R5bGU9XFxcImNvbG9yOiNGRkRGNTdcXFwi
IGFsaWduPVxcXCJjZW50ZXJcXFwiLyZndDtcXG4gICAgJmx0Oy90ZCZndDtcXG4mbHQ7L3RyJmd0
O1xcbiAgICB7eyBnZXRfcm93KCdTZXZlcml0eTonLCdzZXZlcml0eV9jb2RlJykgfX0mbHQ7YnIm
Z3Q7XFxuICAgIHt7IGdldF9yb3coJ1N0YXR1czonLCdwbGFuX3N0YXR1cycpIH19Jmx0O2JyJmd0
O1xcbiAgICB7eyBnZXRfcm93KCdDcmVhdGVkOicsJ2NyZWF0ZV9kYXRlJykgfX0mbHQ7YnImZ3Q7
XFxuICAgIHt7IGdldF9yb3coJ0NhdGVnb3J5OicsJ2luY2lkZW50X3R5cGVfaWRzJykgfX0mbHQ7
YnImZ3Q7XFxuJmx0O3RyJmd0O1xcbiAgICAmbHQ7dGQgY29sc3Bhbj1cXFwiMlxcXCImZ3Q7XFxu
ICAgICAgICAmbHQ7YnImZ3Q7Jmx0O2gzIHN0eWxlPVxcXCJjb2xvcjogcmdiKDY4LDExNCwxOTYp
XFxcIiZndDtJTkNJREVOVCBERVNDUklQVElPTiZsdDsvaDMmZ3Q7XFxuICAgICAgICAmbHQ7aHIg
c2l6ZT1cXFwiMVxcXCIgd2lkdGg9XFxcIjEwMCVcXFwiIG5vc2hhZGUgc3R5bGU9XFxcImNvbG9y
OiNGRkRGNTdcXFwiIGFsaWduPVxcXCJjZW50ZXJcXFwiLyZndDtcXG4gICAgJmx0Oy90ZCZndDtc
XG4gICAge3sgZ2V0X3JvdygnRGVzY3JpcHRpb246JywnZGVzY3JpcHRpb24nKSB9fVxcbiZsdDsv
dHImZ3Q7XFxuJmx0Oy90YWJsZSZndDtcXG4mbHQ7YnImZ3Q7XFxuXFxcIlxcXCJcXFwiXCIsXCJy
ZXN1bHRfbmFtZVwiOlwiXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50
cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzEwMWVwaTg8L2luY29taW5nPjxvdXRnb2luZz5TZXF1
ZW5jZUZsb3dfMW1sNXJmeDwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlk
PVwiU2VxdWVuY2VGbG93XzEwMWVwaThcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1c
IiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wb21jenQwXCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2
ZW50XzE4d3ZycHNcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFtbDVyZng8L2luY29taW5nPjwv
ZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xbWw1cmZ4XCIgc291cmNl
UmVmPVwiU2VydmljZVRhc2tfMG9tY3p0MFwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzE4d3ZycHNc
Ii8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0
YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlv
biBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFz
eG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vzcz48YnBt
bmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJw
bW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNo
YXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1
NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIx
NjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+
PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFu
bm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+
PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lh
dGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBv
aW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6
d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwv
YnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRh
c2tfMG9tY3p0MFwiIGlkPVwiU2VydmljZVRhc2tfMG9tY3p0MF9kaVwiPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIyODZcIiB5PVwiMTE4XCIvPjwvYnBtbmRp
OkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzEw
MWVwaThcIiBpZD1cIlNlcXVlbmNlRmxvd18xMDFlcGk4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9
XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9p
bnQgeD1cIjI0MlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3
YXlwb2ludCB4PVwiMjQyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNThcIi8+PG9t
Z2RpOndheXBvaW50IHg9XCIyODZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE1OFwi
Lz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjE0XCIgd2lkdGg9XCIw
XCIgeD1cIjI1N1wiIHk9XCIxNzVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5F
ZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMTh3dnJwc1wiIGlk
PVwiRW5kRXZlbnRfMTh3dnJwc19kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0
aD1cIjM2XCIgeD1cIjQ2MFwiIHk9XCIxNDBcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCIxNFwiIHdpZHRoPVwiMFwiIHg9XCI0NzhcIiB5PVwiMTc5XCIvPjwvYnBt
bmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxl
bWVudD1cIlNlcXVlbmNlRmxvd18xbWw1cmZ4XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMW1sNXJmeF9k
aVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzg2XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIxNThcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0NjBcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjE1OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjE0
XCIgd2lkdGg9XCIwXCIgeD1cIjQyM1wiIHk9XCIxMzZcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwv
YnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48
L2RlZmluaXRpb25zPiJ9LCAiY29udGVudF92ZXJzaW9uIjogNDcsICJjcmVhdG9yX2lkIjogInNl
YW4ub2dvcm1hbkBpYm0uY29tIiwgImRlc2NyaXB0aW9uIjogIlNlbmQgYSBIVE1MLWZvcm1hdHRl
ZCBlbWFpbCB3aXRoIFJlc2lsaWVudCBJbmNpZGVudCBkZXRhaWxzIGluIHRoZSBlbWFpbCBib2R5
IGFzIHdlbGwgYXMgaW5jaWRlbnQgYXR0YWNobWVudHMsIG5vdGUgYXR0YWNoZWQgdG8gaW5jaWRl
bnQuIiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9zZW5kX2luY2lkZW50X2VtYWlsX2h0bWwiLCAi
bGFzdF9tb2RpZmllZF9ieSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJsYXN0X21vZGlmaWVk
X3RpbWUiOiAxNTg2OTY0MjcwMDc2LCAibmFtZSI6ICJFeGFtcGxlOiBTZW5kIEluY2lkZW50IEVt
YWlsIEhUTUwiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAicHJvZ3JhbW1hdGljX25hbWUi
OiAiZXhhbXBsZV9zZW5kX2luY2lkZW50X2VtYWlsX2h0bWwiLCAidGFncyI6IFtdLCAidXVpZCI6
ICI3ZDUwNjUwOC0wMjk0LTQ0MmUtOTNlNy05ZjNjNTFmMmJjNzIiLCAid29ya2Zsb3dfaWQiOiA1
MTN9LCB7ImFjdGlvbnMiOiBbXSwgImNvbnRlbnQiOiB7InZlcnNpb24iOiA3LCAid29ya2Zsb3df
aWQiOiAiZXhhbXBsZV9zZW5kX2luY2lkZW50X2VtYWlsX3RleHQiLCAieG1sIjogIjw/eG1sIHZl
cnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0
dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9
XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9
XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwi
aHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9
XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cu
dzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAw
MS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVu
ZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVfc2VuZF9pbmNpZGVudF9lbWFpbF90
ZXh0XCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBTZW5kIEluY2lkZW50
IEVtYWlsIFRleHRcIj48ZG9jdW1lbnRhdGlvbj5TZW5kIGEgcGxhaW4gdGV4dCBlbWFpbCB3aXRo
IFJlc2lsaWVudCBJbmNpZGVudCBkZXRhaWxzIGluIHRoZSBlbWFpbCBib2R5IGFzIHdlbGwgYXMg
aW5jaWRlbnQgYXR0YWNobWVudCwgd2l0aCBhIG5vdGUgYWRkZWQgdG8gdGhlIGluY2lkZW50Ljwv
ZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRn
b2luZz5TZXF1ZW5jZUZsb3dfMWUxZHk5bzwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNl
VGFzayBpZD1cIlNlcnZpY2VUYXNrXzF0bHYzajlcIiBuYW1lPVwiT3V0Ym91bmQgRW1haWw6IFNl
bmQgRW1haWxcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRz
PjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cImM4MGNkNTVkLTZhYjgtNDY3My04MjczLTFiOGEw
YmYzYjQ1NlwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaWYg
cmVzdWx0cy5zdWNjZXNzOlxcbiAgbm90ZVRleHQgPSB1XFxcIkVtYWlsIFNlbnQgaWYgbWFpbCBz
ZXJ2ZXIgaXMgdmFsaWQvYXV0aGVudGljYXRlZFxcXFxuIEZyb206IHswfVxcXFxuIFRvOiB7MX1c
XFxcbiBDQzogezJ9XFxcXG4gQkNDOiB7M31cXFxcbiBTdWJqZWN0OiB7NH1cXFxcbiBCb2R5OiB7
NX1cXFwiLmZvcm1hdChyZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzBdLnN0cmlwKFxcXCJ1XFxcXFxc
XCJbXVxcXCIpLCByZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzFdLnN0cmlwKFxcXCJ1XFxcXFxcXCJb
XVxcXCIpLCByZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzJdLnN0cmlwKFxcXCJ1XFxcXFxcXCJbXVxc
XCIpLCByZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzNdLnN0cmlwKFxcXCJ1XFxcXFxcXCJbXVxcXCIp
LCByZXN1bHRzLmNvbnRlbnQuaW5wdXRzWzRdLnN0cmlwKFxcXCJ1XFxcXFxcXCJcXFwiKSwgcmVz
dWx0cy5jb250ZW50LnRleHQgKSAgIFxcbmVsc2U6XFxuICBub3RlVGV4dCA9IHVcXFwiRW1haWwg
Tk9UIFNlbnRcXFxcbiBGcm9tOiB7MH1cXFxcbiBUbzogezF9XFxcIi5mb3JtYXQocmVzdWx0cy5j
b250ZW50LmlucHV0c1swXS5zdHJpcChcXFwidVxcXFxcXFwiW11cXFwiKSwgcmVzdWx0cy5jb250
ZW50LmlucHV0c1sxXS5zdHJpcChcXFwidVxcXFxcXFwiW11cXFwiKSlcXG5pbmNpZGVudC5hZGRO
b3RlKG5vdGVUZXh0KVwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMubWFpbF90
byA9IHJ1bGUucHJvcGVydGllcy5tYWlsX3RvXFxuaW5wdXRzLm1haWxfY2MgPSBydWxlLnByb3Bl
cnRpZXMubWFpbF9jY1xcbmlucHV0cy5tYWlsX2luY2lkZW50X2lkID0gaW5jaWRlbnQuaWRcXG5p
bnB1dHMubWFpbF9mcm9tID0gXFxcImNoYW5nZW1lQHJlc2lsaWVudHN5c3RlbXMuY29tXFxcIlxc
bmlucHV0cy5tYWlsX3N1YmplY3QgPSBcXFwiW3swfV0gezF9XFxcIi5mb3JtYXQoaW5jaWRlbnQu
aWQsIGluY2lkZW50Lm5hbWUpXFxuXFxuZnJvbSBqYXZhLnV0aWwgaW1wb3J0IERhdGVcXG5jcmVh
dGlvbl9kYXRlID0gRGF0ZShpbmNpZGVudC5jcmVhdGVfZGF0ZSlcXG50eXBlX2lkcyA9IHVcXFwi
LCBcXFwiLmpvaW4oaW5jaWRlbnQuaW5jaWRlbnRfdHlwZV9pZHMpXFxuc2V2X2NvZGUgPSB1XFxc
Int9XFxcIi5mb3JtYXQoaW5jaWRlbnQuc2V2ZXJpdHlfY29kZSlcXG5jdXJyZW50X3BsYW4gPSB1
XFxcInt9XFxcIi5mb3JtYXQoaW5jaWRlbnQucGxhbl9zdGF0dXMpXFxuXFxuaW5wdXRzLm1haWxf
Ym9keV90ZXh0ID0gXFxcIlxcXCJcXFwiXFxuSW5jaWRlbnQgU3VtbWFyeTpcXG4gICAgU2V2ZXJp
dHkgQ29kZTogezB9XFxuICAgIFBsYW4gU3RhdHVzOiB7MX1cXG4gICAgQ3JlYXRlZDogezJ9XFxu
ICAgIEluY2lkZW50IFR5cGU6IHszfVxcblxcXCJcXFwiXFxcIi5mb3JtYXQoc2V2X2NvZGUsIGN1
cnJlbnRfcGxhbiwgY3JlYXRpb25fZGF0ZSwgdHlwZV9pZHMpXFxuXCIsXCJyZXN1bHRfbmFtZVwi
OlwiXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+
U2VxdWVuY2VGbG93XzFlMWR5OW88L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMGNq
NjhsYTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VG
bG93XzFlMWR5OW9cIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9
XCJTZXJ2aWNlVGFza18xdGx2M2o5XCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzFoenhhZmJc
Ij48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBjajY4bGE8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNl
cXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wY2o2OGxhXCIgc291cmNlUmVmPVwiU2Vydmlj
ZVRhc2tfMXRsdjNqOVwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzFoenhhZmJcIi8+PHRleHRBbm5v
dGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29y
a2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29j
aWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRS
ZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFn
cmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwi
dW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVt
ZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4
XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwi
OTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBN
TlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4
eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBN
TlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4
XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1c
IjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5F
ZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMXRsdjNqOVwi
IGlkPVwiU2VydmljZVRhc2tfMXRsdjNqOV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBc
IiB3aWR0aD1cIjEwMFwiIHg9XCIyNzVcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48
YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFlMWR5OW9cIiBpZD1c
IlNlcXVlbmNlRmxvd18xZTFkeTlvX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI3NVwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMjM2LjVcIiB5PVwiMTg0
XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFw
ZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzFoenhhZmJcIiBpZD1cIkVuZEV2ZW50XzFoenhhZmJf
ZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI0OTNcIiB5
PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3
aWR0aD1cIjBcIiB4PVwiNTExXCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1u
ZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3df
MGNqNjhsYVwiIGlkPVwiU2VxdWVuY2VGbG93XzBjajY4bGFfZGlcIj48b21nZGk6d2F5cG9pbnQg
eD1cIjM3NVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlw
b2ludCB4PVwiNDkzXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5k
aTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI0
MzRcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2Jw
bW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4ifSwgImNv
bnRlbnRfdmVyc2lvbiI6IDcsICJjcmVhdG9yX2lkIjogInNlYW4ub2dvcm1hbkBpYm0uY29tIiwg
ImRlc2NyaXB0aW9uIjogIlNlbmQgYSBwbGFpbiB0ZXh0IGVtYWlsIHdpdGggUmVzaWxpZW50IElu
Y2lkZW50IGRldGFpbHMgaW4gdGhlIGVtYWlsIGJvZHkgYXMgd2VsbCBhcyBpbmNpZGVudCBhdHRh
Y2htZW50LCB3aXRoIGEgbm90ZSBhZGRlZCB0byB0aGUgaW5jaWRlbnQuIiwgImV4cG9ydF9rZXki
OiAiZXhhbXBsZV9zZW5kX2luY2lkZW50X2VtYWlsX3RleHQiLCAibGFzdF9tb2RpZmllZF9ieSI6
ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTg2OTYzODg1
MDA5LCAibmFtZSI6ICJFeGFtcGxlOiBTZW5kIEluY2lkZW50IEVtYWlsIFRleHQiLCAib2JqZWN0
X3R5cGUiOiAiaW5jaWRlbnQiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9zZW5kX2lu
Y2lkZW50X2VtYWlsX3RleHQiLCAidGFncyI6IFtdLCAidXVpZCI6ICI3NTJlZmNmNi05OGI3LTRk
NjEtODVhNi1lMmRiNzYxOTAwMTMiLCAid29ya2Zsb3dfaWQiOiA1MTJ9XSwgIndvcmtzcGFjZXMi
OiBbXX0=
""")
