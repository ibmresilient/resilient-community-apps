# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_outbound_email"""

# This here to support Apps running on resilient-circuits <= v34
try:
    import resilient_circuits
    if int(resilient_circuits.__version__.split(".")[0]) >= 34:
        raise ImportError
    ImportDefinition = resilient_circuits.util.ImportDefinition

except ImportError:
    from resilient import ImportDefinition


def codegen_reload_data():
    """
    Parameters required reload codegen for the fn_outbound_email package
    """
    return {
        "package": u"fn_outbound_email",
        "message_destinations": [u"email_outbound"],
        "functions": [u"send_email"],
        "workflows": [u"example_send_incident_email_text", u"example_send_incident_email_html"],
        "actions": [u"Example: Send Incident Email Text", u"Example: Send Incident Email HTML"],
        "incident_fields": [],
        "incident_artifact_types": [],
        "datatables": [],
        "automatic_tasks": [],
        "scripts": []
    }


def customization_data(client=None):
    """
    Returns a Generator of ImportDefinitions (Customizations).
    Install them using `resilient-circuits customize`

    Contents:
    - Message Destinations:
        - email_outbound
    - Functions:
        - send_email
    - Workflows:
        - example_send_incident_email_text
        - example_send_incident_email_html
    - Rules:
        - Example: Send Incident Email Text
        - Example: Send Incident Email HTML
    """

    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFNl
bmQgSW5jaWRlbnQgRW1haWwgSFRNTCIsICJpZCI6IDEyMjIsICJsb2dpY190eXBlIjogImFsbCIs
ICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBTZW5kIEluY2lk
ZW50IEVtYWlsIEhUTUwiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAidGFncyI6IFtdLCAi
dGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ0eXBlIjogMSwgInV1aWQiOiAiMzBkMjNkZWYtYWM1
MC00NjU5LTk3NzYtNGY2NTA1ZjkzY2UxIiwgInZpZXdfaXRlbXMiOiBbeyJjb250ZW50IjogIjJi
OWQ1NzBlLWRkNTgtNGE4MS04YjBkLWE5ODU3MmJkYzI2MSIsICJlbGVtZW50IjogImZpZWxkX3V1
aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNob3dfaWYiOiBudWxsLCAi
c2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7ImNvbnRlbnQi
OiAiOGMzZWU3MmItZjhjYi00MzE4LWE5NzgtZjhhMDQxMDlmYzdiIiwgImVsZW1lbnQiOiAiZmll
bGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAic2hvd19pZiI6IG51
bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAid29y
a2Zsb3dzIjogWyJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfaHRtbCJdfSwgeyJhdXRvbWF0
aW9ucyI6IFtdLCAiY29uZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5
IjogIkV4YW1wbGU6IFNlbmQgSW5jaWRlbnQgRW1haWwgVGV4dCIsICJpZCI6IDEyMjMsICJsb2dp
Y190eXBlIjogImFsbCIsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFt
cGxlOiBTZW5kIEluY2lkZW50IEVtYWlsIFRleHQiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQi
LCAidGFncyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ0eXBlIjogMSwgInV1aWQi
OiAiMWJiOGMxOTAtMTc1ZS00NDE2LWEwZTMtOGMxNzJlY2Y1MDRkIiwgInZpZXdfaXRlbXMiOiBb
eyJjb250ZW50IjogIjJiOWQ1NzBlLWRkNTgtNGE4MS04YjBkLWE5ODU3MmJkYzI2MSIsICJlbGVt
ZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNo
b3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51
bGx9LCB7ImNvbnRlbnQiOiAiOGMzZWU3MmItZjhjYi00MzE4LWE5NzgtZjhhMDQxMDlmYzdiIiwg
ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24i
LCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVs
IjogbnVsbH1dLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfdGV4
dCJdfV0sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImV4cG9ydF9kYXRlIjogMTU4NzEyODk1MzU5
NSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJmaWVsZHMiOiBbeyJhbGxvd19kZWZhdWx0
X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxz
ZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19m
dW5jdGlvbi9tYWlsX2Zyb20iLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogOTQ4
NywgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJtYWls
X2Zyb20iLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhv
bGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0
IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAibWFpbF9mcm9t
IiwgInRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiZTA5Nzg5YmYtMDU3Yy00
OTE0LTk4NzctNDU1ZmIxMWUzZjRkIiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3Zh
bHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwg
ImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9z
ZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5j
dGlvbi9tYWlsX2NjIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0ODQsICJp
bnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF9jYyIs
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjog
IiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxz
ZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJtYWlsX2NjIiwgInRvb2x0
aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiMTI0ZTc0ZTktYTg5MS00NDJhLWIyNTct
N2Q3OWIwZWVlZDQ1IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFs
c2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFi
bGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9tYWls
X3N1YmplY3QiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogOTQ4OSwgImlucHV0
X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJtYWlsX3N1YmplY3Qi
LCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6
ICIiLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFs
c2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAibWFpbF9zdWJqZWN0Iiwg
InRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiZDM0M2Y4MGItNDc2MC00ZjRh
LWI0OTItYmY4NWRmYzI5MjYxIiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVl
IjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNo
YW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2
ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlv
bi9tYWlsX3RvIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0ODMsICJpbnB1
dF90eXBlIjogInRleHQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF90byIsICJv
cGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIs
ICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwg
InRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJtYWlsX3RvIiwgInRvb2x0aXAi
OiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiYTRiZmQ5ZjctZjkyNC00Mjg5LThiYjItZmQy
ZTNjNTc3ZWI0IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2Us
ICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUi
OiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxz
ZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9tYWlsX2Jv
ZHlfaHRtbCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA5NDgyLCAiaW5wdXRf
dHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJuYW1lIjogIm1haWxfYm9keV9odG1s
IiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIi
OiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZh
bHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfYm9keV9odG1s
IiwgInRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiMWI5ZDBhNzUtNDY5OS00
MzM1LWIzYjktYmQ2MmU1ZjQwNTAzIiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3Zh
bHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwg
ImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9z
ZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5j
dGlvbi9tYWlsX2JvZHlfdGV4dCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA5
NDg1LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJuYW1lIjogIm1h
aWxfYm9keV90ZXh0IiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAi
cGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJp
Y2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm1h
aWxfYm9keV90ZXh0IiwgInRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiZjg2
NDc5ZjctM2E2Ni00ZmJiLWEyN2EtZGI2ZGViNmMwYmM5IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxv
d19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0
ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0
X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9r
ZXkiOiAiX19mdW5jdGlvbi9tYWlsX2luY2lkZW50X2lkIiwgImhpZGVfbm90aWZpY2F0aW9uIjog
ZmFsc2UsICJpZCI6IDk0ODgsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJpbnRlcm5hbCI6IGZh
bHNlLCAibmFtZSI6ICJtYWlsX2luY2lkZW50X2lkIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAi
b3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFk
X29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVz
IjogW10sICJ0ZXh0IjogIm1haWxfaW5jaWRlbnRfaWQiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9p
ZCI6IDExLCAidXVpZCI6ICJmZGJjZGExNi1kNmYyLTQ4ZDEtODZkNy04MDRlMjU4OTBiYzEiLCAi
dmFsdWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlv
biI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9z
ZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRl
ZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL21haWxfYmNjIiwgImhpZGVfbm90
aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0ODYsICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50
ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF9iY2MiLCAib3BlcmF0aW9uX3Blcm1zIjoge30s
ICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJl
YWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0
ZXMiOiBbXSwgInRleHQiOiAibWFpbF9iY2MiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6IDEx
LCAidXVpZCI6ICIzODY0YmE5OS1hZThjLTQ5MjYtOWI3Ni05ZThlNjkxNjk2ZjUiLCAidmFsdWVz
IjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL21haWxfdG8iLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgImlkIjogOTQ4MCwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRl
cm5hbCI6IGZhbHNlLCAibmFtZSI6ICJtYWlsX3RvIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAi
b3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVz
IiwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0
ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAibWFpbF90byIsICJ0b29sdGlwIjogIiIsICJ0eXBlX2lk
IjogNiwgInV1aWQiOiAiMmI5ZDU3MGUtZGQ1OC00YTgxLThiMGQtYTk4NTcyYmRjMjYxIiwgInZh
bHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24i
OiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2Vu
IjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQi
OiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9tYWlsX2NjIiwgImhpZGVf
bm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDk0ODEsICJpbnB1dF90eXBlIjogInRleHQiLCAi
aW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF9jYyIsICJvcGVyYXRpb25fcGVybXMiOiB7
fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiAicHJvcGVy
dGllcyIsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtd
LCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfY2MiLCAidG9vbHRpcCI6ICIiLCAidHlw
ZV9pZCI6IDYsICJ1dWlkIjogIjhjM2VlNzJiLWY4Y2ItNDMxOC1hOTc4LWY4YTA0MTA5ZmM3YiIs
ICJ2YWx1ZXMiOiBbXX0sIHsiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbnRlcm5hbF9jdXN0b21p
emF0aW9uc19maWVsZCIsICJpZCI6IDAsICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJuYWwi
OiB0cnVlLCAibmFtZSI6ICJpbnRlcm5hbF9jdXN0b21pemF0aW9uc19maWVsZCIsICJyZWFkX29u
bHkiOiB0cnVlLCAidGV4dCI6ICJDdXN0b21pemF0aW9ucyBGaWVsZCAoaW50ZXJuYWwpIiwgInR5
cGVfaWQiOiAwLCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTEi
fV0sICJmdW5jdGlvbnMiOiBbeyJjcmVhdG9yIjogeyJkaXNwbGF5X25hbWUiOiAiUmVzaWxpZW50
IFN5c2FkbWluIiwgImlkIjogMTY5LCAibmFtZSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJ0
eXBlIjogInVzZXIifSwgImRlc2NyaXB0aW9uIjogeyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50
IjogIlNlbmQgYSBwbGFpbiB0ZXh0IG9yIEhUTUwtZm9ybWF0dGVkIGVtYWlsIHdpdGggUmVzaWxp
ZW50IEluY2lkZW50IGRldGFpbHMgaW4gdGhlIGVtYWlsIGJvZHkgYXMgd2VsbCBhcyBpbmNpZGVu
dCBhdHRhY2htZW50cyBhZGRlZCB0byB0aGlzIG91dGdvaW5nIGVtYWlsLiJ9LCAiZGVzdGluYXRp
b25faGFuZGxlIjogImVtYWlsX291dGJvdW5kIiwgImRpc3BsYXlfbmFtZSI6ICJPdXRib3VuZCBF
bWFpbDogU2VuZCBFbWFpbCIsICJleHBvcnRfa2V5IjogInNlbmRfZW1haWwiLCAiaWQiOiA2MDIs
ICJsYXN0X21vZGlmaWVkX2J5IjogeyJkaXNwbGF5X25hbWUiOiAiUmVzaWxpZW50IFN5c2FkbWlu
IiwgImlkIjogMTY5LCAibmFtZSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJ0eXBlIjogInVz
ZXIifSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1ODY5NjcyMzgwODYsICJuYW1lIjogInNlbmRf
ZW1haWwiLCAidGFncyI6IFtdLCAidXVpZCI6ICJjODBjZDU1ZC02YWI4LTQ2NzMtODI3My0xYjhh
MGJmM2I0NTYiLCAidmVyc2lvbiI6IDUsICJ2aWV3X2l0ZW1zIjogW3siY29udGVudCI6ICJlMDk3
ODliZi0wNTdjLTQ5MTQtOTg3Ny00NTVmYjExZTNmNGQiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlk
IiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlu
a19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJjb250ZW50IjogImZkYmNk
YTE2LWQ2ZjItNDhkMS04NmQ3LTgwNGUyNTg5MGJjMSIsICJlbGVtZW50IjogImZpZWxkX3V1aWQi
LCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5r
X2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7ImNvbnRlbnQiOiAiYTRiZmQ5
ZjctZjkyNC00Mjg5LThiYjItZmQyZTNjNTc3ZWI0IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIs
ICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtf
aGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsiY29udGVudCI6ICIxMjRlNzRl
OS1hODkxLTQ0MmEtYjI1Ny03ZDc5YjBlZWVkNDUiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwg
ImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19o
ZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJjb250ZW50IjogIjM4NjRiYTk5
LWFlOGMtNDkyNi05Yjc2LTllOGU2OTE2OTZmNSIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAi
ZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hl
YWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7ImNvbnRlbnQiOiAiZDM0M2Y4MGIt
NDc2MC00ZjRhLWI0OTItYmY4NWRmYzI5MjYxIiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJm
aWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVh
ZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsiY29udGVudCI6ICJmODY0NzlmNy0z
YTY2LTRmYmItYTI3YS1kYjZkZWI2YzBiYzkiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZp
ZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFk
ZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJjb250ZW50IjogIjFiOWQwYTc1LTQ2
OTktNDMzNS1iM2I5LWJkNjJlNWY0MDUwMyIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmll
bGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRl
ciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMi
OiBbXSwgImRlc2NyaXB0aW9uIjogbnVsbCwgIm5hbWUiOiAiRXhhbXBsZTogU2VuZCBJbmNpZGVu
dCBFbWFpbCBIVE1MIiwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgInByb2dyYW1tYXRpY19u
YW1lIjogImV4YW1wbGVfc2VuZF9pbmNpZGVudF9lbWFpbF9odG1sIiwgInRhZ3MiOiBbXSwgInV1
aWQiOiBudWxsLCAid29ya2Zsb3dfaWQiOiA1MTN9LCB7ImFjdGlvbnMiOiBbXSwgImRlc2NyaXB0
aW9uIjogbnVsbCwgIm5hbWUiOiAiRXhhbXBsZTogU2VuZCBJbmNpZGVudCBFbWFpbCBUZXh0Iiwg
Im9iamVjdF90eXBlIjogImluY2lkZW50IiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVf
c2VuZF9pbmNpZGVudF9lbWFpbF90ZXh0IiwgInRhZ3MiOiBbXSwgInV1aWQiOiBudWxsLCAid29y
a2Zsb3dfaWQiOiA1MTJ9XX1dLCAiZ2VvcyI6IG51bGwsICJncm91cHMiOiBudWxsLCAiaWQiOiAy
NjgsICJpbmJvdW5kX21haWxib3hlcyI6IG51bGwsICJpbmNpZGVudF9hcnRpZmFjdF90eXBlcyI6
IFtdLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1ODcxMjkyMzIyMDcsICJj
cmVhdGVfZGF0ZSI6IDE1ODcxMjkyMzIyMDcsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1h
ZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2Vz
IChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRl
cm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZW5h
YmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlkZGVu
IjogZmFsc2UsICJpZCI6IDB9XSwgImluZHVzdHJpZXMiOiBudWxsLCAibGF5b3V0cyI6IFtdLCAi
bG9jYWxlIjogbnVsbCwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3siYXBpX2tleXMiOiBbXSwg
ImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJleHBvcnRfa2V5Ijog
ImVtYWlsX291dGJvdW5kIiwgIm5hbWUiOiAiZW1haWxfb3V0Ym91bmQiLCAicHJvZ3JhbW1hdGlj
X25hbWUiOiAiZW1haWxfb3V0Ym91bmQiLCAidGFncyI6IFtdLCAidXNlcnMiOiBbIm1hcmsuc2No
ZXJmbGluZ0BpYm0uY29tIiwgImx5ZGVAdm13YXJlLmNvbSIsICJzZWFuLm9nb3JtYW5AaWJtLmNv
bSJdLCAidXVpZCI6ICI0MmY2M2VhMi01NTcyLTQyZTctOWJmZi0wMWE0ZTM4MDgzYTkifV0sICJu
b3RpZmljYXRpb25zIjogbnVsbCwgIm92ZXJyaWRlcyI6IFtdLCAicGhhc2VzIjogW10sICJyZWd1
bGF0b3JzIjogbnVsbCwgInJvbGVzIjogW10sICJzY3JpcHRzIjogW10sICJzZXJ2ZXJfdmVyc2lv
biI6IHsiYnVpbGRfbnVtYmVyIjogNTExMiwgIm1ham9yIjogMzMsICJtaW5vciI6IDAsICJ2ZXJz
aW9uIjogIjMzLjAuNTExMiJ9LCAidGFncyI6IFtdLCAidGFza19vcmRlciI6IFtdLCAidGltZWZy
YW1lcyI6IG51bGwsICJ0eXBlcyI6IFtdLCAid29ya2Zsb3dzIjogW3siYWN0aW9ucyI6IFtdLCAi
Y29udGVudCI6IHsidmVyc2lvbiI6IDEwLCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9zZW5kX2lu
Y2lkZW50X2VtYWlsX3RleHQiLCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGlu
Zz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVj
L0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcv
c3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcv
c3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3Nw
ZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50Lmli
bS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1h
XCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2Vc
IiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2Vz
cyBpZD1cImV4YW1wbGVfc2VuZF9pbmNpZGVudF9lbWFpbF90ZXh0XCIgaXNFeGVjdXRhYmxlPVwi
dHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBTZW5kIEluY2lkZW50IEVtYWlsIFRleHRcIj48ZG9jdW1l
bnRhdGlvbj5TZW5kIGEgcGxhaW4gdGV4dCBlbWFpbCB3aXRoIFJlc2lsaWVudCBJbmNpZGVudCBk
ZXRhaWxzIGluIHRoZSBlbWFpbCBib2R5IGFzIHdlbGwgYXMgaW5jaWRlbnQgYXR0YWNobWVudCwg
d2l0aCBhIG5vdGUgYWRkZWQgdG8gdGhlIGluY2lkZW50LjwvZG9jdW1lbnRhdGlvbj48c3RhcnRF
dmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMWUx
ZHk5bzwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNr
XzF0bHYzajlcIiBuYW1lPVwiT3V0Ym91bmQgRW1haWw6IFNlbmQgRW1haWxcIiByZXNpbGllbnQ6
dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24g
dXVpZD1cImM4MGNkNTVkLTZhYjgtNDY3My04MjczLTFiOGEwYmYzYjQ1NlwiPntcImlucHV0c1wi
Ont9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaWYgcmVzdWx0cy5zdWNjZXNzOlxcbiAg
bm90ZVRleHQgPSB1XFxcIkVtYWlsIFNlbnQgaWYgbWFpbCBzZXJ2ZXIgaXMgdmFsaWQvYXV0aGVu
dGljYXRlZFxcXFxuIEZyb206IHswfVxcXFxuIFRvOiB7MX1cXFxcbiBDQzogezJ9XFxcXG4gQkND
OiB7M31cXFxcbiBTdWJqZWN0OiB7NH1cXFxcbiBCb2R5OiB7NX1cXFwiLmZvcm1hdChyZXN1bHRz
LmNvbnRlbnQuaW5wdXRzWzBdLnN0cmlwKFxcXCJ1XFxcXFxcXCJbXVxcXCIpLCByZXN1bHRzLmNv
bnRlbnQuaW5wdXRzWzFdLnN0cmlwKFxcXCJ1XFxcXFxcXCJbXVxcXCIpLCByZXN1bHRzLmNvbnRl
bnQuaW5wdXRzWzJdLnN0cmlwKFxcXCJ1XFxcXFxcXCJbXVxcXCIpLCByZXN1bHRzLmNvbnRlbnQu
aW5wdXRzWzNdLnN0cmlwKFxcXCJ1XFxcXFxcXCJbXVxcXCIpLCByZXN1bHRzLmNvbnRlbnQuaW5w
dXRzWzRdLnN0cmlwKFxcXCJ1XFxcXFxcXCJcXFwiKSwgcmVzdWx0cy5jb250ZW50LnRleHQgKSAg
IFxcbmVsc2U6XFxuICBub3RlVGV4dCA9IHVcXFwiRW1haWwgTk9UIFNlbnRcXFxcbiBGcm9tOiB7
MH1cXFxcbiBUbzogezF9XFxcIi5mb3JtYXQocmVzdWx0cy5jb250ZW50LmlucHV0c1swXS5zdHJp
cChcXFwidVxcXFxcXFwiW11cXFwiKSwgcmVzdWx0cy5jb250ZW50LmlucHV0c1sxXS5zdHJpcChc
XFwidVxcXFxcXFwiW11cXFwiKSlcXG5pbmNpZGVudC5hZGROb3RlKG5vdGVUZXh0KVwiLFwicHJl
X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMubWFpbF90byA9IHJ1bGUucHJvcGVydGllcy5t
YWlsX3RvXFxuaW5wdXRzLm1haWxfY2MgPSBydWxlLnByb3BlcnRpZXMubWFpbF9jY1xcbmlucHV0
cy5tYWlsX2luY2lkZW50X2lkID0gaW5jaWRlbnQuaWRcXG5pbnB1dHMubWFpbF9mcm9tID0gXFxc
ImNoYW5nZW1lQHJlc2lsaWVudHN5c3RlbXMuY29tXFxcIlxcbmlucHV0cy5tYWlsX3N1YmplY3Qg
PSBcXFwiW3swfV0gezF9XFxcIi5mb3JtYXQoaW5jaWRlbnQuaWQsIGluY2lkZW50Lm5hbWUpXFxu
XFxuZnJvbSBqYXZhLnV0aWwgaW1wb3J0IERhdGVcXG5jcmVhdGlvbl9kYXRlID0gRGF0ZShpbmNp
ZGVudC5jcmVhdGVfZGF0ZSlcXG50eXBlX2lkcyA9IHVcXFwiLCBcXFwiLmpvaW4oaW5jaWRlbnQu
aW5jaWRlbnRfdHlwZV9pZHMpXFxuc2V2X2NvZGUgPSB1XFxcInt9XFxcIi5mb3JtYXQoaW5jaWRl
bnQuc2V2ZXJpdHlfY29kZSlcXG5jdXJyZW50X3BsYW4gPSB1XFxcInt9XFxcIi5mb3JtYXQoaW5j
aWRlbnQucGxhbl9zdGF0dXMpXFxuXFxuaW5wdXRzLm1haWxfYm9keV90ZXh0ID0gXFxcIlxcXCJc
XFwiXFxuSW5jaWRlbnQgU3VtbWFyeTpcXG4gICAgU2V2ZXJpdHkgQ29kZTogezB9XFxuICAgIFBs
YW4gU3RhdHVzOiB7MX1cXG4gICAgQ3JlYXRlZDogezJ9XFxuICAgIEluY2lkZW50IFR5cGU6IHsz
fVxcblxcXCJcXFwiXFxcIi5mb3JtYXQoc2V2X2NvZGUsIGN1cnJlbnRfcGxhbiwgY3JlYXRpb25f
ZGF0ZSwgdHlwZV9pZHMpXFxuXCIsXCJyZXN1bHRfbmFtZVwiOlwiXCJ9PC9yZXNpbGllbnQ6ZnVu
Y3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFlMWR5OW88
L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMGNqNjhsYTwvb3V0Z29pbmc+PC9zZXJ2
aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzFlMWR5OW9cIiBzb3VyY2VS
ZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18xdGx2M2o5
XCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzFoenhhZmJcIj48aW5jb21pbmc+U2VxdWVuY2VG
bG93XzBjajY4bGE8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVl
bmNlRmxvd18wY2o2OGxhXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMXRsdjNqOVwiIHRhcmdl
dFJlZj1cIkVuZEV2ZW50XzFoenhhZmJcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90
YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3Rl
eHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3Vy
Y2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8x
a3h4aXl0XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFpd3doY2FcIj48
dGV4dD5JbnB1dHM6IG1haWxfdG86IG9uZSByZWNpcGllbnQgZW1haWwgYWRkcmVzcyBtYWlsX2Nj
Olx1MDBhMG9uZVx1MDBhMHJlY2lwaWVudFx1MDBhMGVtYWlsIGFkZHJlc3MsIG1haWxfaW5jaWRl
bnRfaWQsIG1haWxfZnJvbTpcdTAwYTBvbmUgc2VuZGVyIGVtYWlsIGFkZHJlc3MsIG1haWxfc3Vi
amVjdDogaW5jaWRlbnQgaWQgYW5kIG5hbWU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2Np
YXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wcnFiZG03XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tf
MXRsdjNqOVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFpd3doY2FcIi8+PHRleHRBbm5v
dGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMDl6cmd1dlwiPjx0ZXh0Pk91dHB1dDogUmljaHRl
eHQgTm90ZSBhZGRlZCB3aXRoIGluY2lkZW50IGRldGFpbHMvZGVzY3JpcHRpb24gd2l0aCBlbWFp
bCBoZWFkZXIgZGV0YWlscyBvciBlcnJvciBub3RlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFz
c29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMTZ3a2dhMVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VU
YXNrXzF0bHYzajlcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8wOXpyZ3V2XCIvPjwvcHJv
Y2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBN
TlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1u
ZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFy
dEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIz
NlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpC
UE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50
PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9k
aVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9
XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9
XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9t
Z2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwi
Lz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwi
MjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwi
U2VydmljZVRhc2tfMXRsdjNqOVwiIGlkPVwiU2VydmljZVRhc2tfMXRsdjNqOV9kaVwiPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCI1MjFcIiB5PVwiMTY2XCIv
PjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVu
Y2VGbG93XzFlMWR5OW9cIiBpZD1cIlNlcXVlbmNlRmxvd18xZTFkeTlvX2RpXCI+PG9tZ2RpOndh
eXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21n
ZGk6d2F5cG9pbnQgeD1cIjUyMVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIv
PjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkw
XCIgeD1cIjMxNC41XCIgeT1cIjE4NC41XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpC
UE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzFoenhhZmJc
IiBpZD1cIkVuZEV2ZW50XzFoenhhZmJfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIg
d2lkdGg9XCIzNlwiIHg9XCI5NTdcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1cIjkzMFwiIHk9XCIyMjdcIi8+
PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJw
bW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzBjajY4bGFcIiBpZD1cIlNlcXVlbmNlRmxvd18wY2o2
OGxhX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI2MjFcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjk1N1wiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMTNcIiB3aWR0aD1cIjkwXCIgeD1cIjc0NFwiIHk9XCIxODQuNVwiLz48L2JwbW5kaTpCUE1O
TGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJU
ZXh0QW5ub3RhdGlvbl8xaXd3aGNhXCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xaXd3aGNhX2RpXCI+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjM1MlwiIHk9XCI2
OFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFz
c29jaWF0aW9uXzBycWJkbTdcIiBpZD1cIkFzc29jaWF0aW9uXzBycWJkbTdfZGlcIj48b21nZGk6
d2F5cG9pbnQgeD1cIjUyNFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTczXCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiNDIyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI5OFwi
Lz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRB
bm5vdGF0aW9uXzA5enJndXZcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzA5enJndXZfZGlcIj48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiNzQ2XCIgeT1cIjY4XCIv
PjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2Np
YXRpb25fMTZ3a2dhMVwiIGlkPVwiQXNzb2NpYXRpb25fMTZ3a2dhMV9kaVwiPjxvbWdkaTp3YXlw
b2ludCB4PVwiNjIxXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNzlcIi8+PG9tZ2Rp
OndheXBvaW50IHg9XCI3NjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjk4XCIvPjwv
YnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48
L2RlZmluaXRpb25zPiJ9LCAiY29udGVudF92ZXJzaW9uIjogMTAsICJjcmVhdG9yX2lkIjogInNl
YW4ub2dvcm1hbkBpYm0uY29tIiwgImRlc2NyaXB0aW9uIjogIlNlbmQgYSBwbGFpbiB0ZXh0IGVt
YWlsIHdpdGggUmVzaWxpZW50IEluY2lkZW50IGRldGFpbHMgaW4gdGhlIGVtYWlsIGJvZHkgYXMg
d2VsbCBhcyBpbmNpZGVudCBhdHRhY2htZW50LCB3aXRoIGEgbm90ZSBhZGRlZCB0byB0aGUgaW5j
aWRlbnQuIiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9zZW5kX2luY2lkZW50X2VtYWlsX3RleHQi
LCAibGFzdF9tb2RpZmllZF9ieSI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJsYXN0X21vZGlm
aWVkX3RpbWUiOiAxNTg3MTI4OTA0MDgwLCAibmFtZSI6ICJFeGFtcGxlOiBTZW5kIEluY2lkZW50
IEVtYWlsIFRleHQiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAicHJvZ3JhbW1hdGljX25h
bWUiOiAiZXhhbXBsZV9zZW5kX2luY2lkZW50X2VtYWlsX3RleHQiLCAidGFncyI6IFtdLCAidXVp
ZCI6ICI3NTJlZmNmNi05OGI3LTRkNjEtODVhNi1lMmRiNzYxOTAwMTMiLCAid29ya2Zsb3dfaWQi
OiA1MTJ9LCB7ImFjdGlvbnMiOiBbXSwgImNvbnRlbnQiOiB7InZlcnNpb24iOiA1MiwgIndvcmtm
bG93X2lkIjogImV4YW1wbGVfc2VuZF9pbmNpZGVudF9lbWFpbF9odG1sIiwgInhtbCI6ICI8P3ht
bCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9
XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBt
bmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9t
Z2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdk
aT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxp
ZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8v
d3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3Jn
LzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5j
YW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1h
aWxfaHRtbFwiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTogU2VuZCBJbmNp
ZGVudCBFbWFpbCBIVE1MXCI+PGRvY3VtZW50YXRpb24+U2VuZCBhIEhUTUwtZm9ybWF0dGVkIGVt
YWlsIHdpdGggUmVzaWxpZW50IEluY2lkZW50IGRldGFpbHMgaW4gdGhlIGVtYWlsIGJvZHkgYXMg
d2VsbCBhcyBpbmNpZGVudCBhdHRhY2htZW50cywgbm90ZSBhdHRhY2hlZCB0byBpbmNpZGVudC48
L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0
Z29pbmc+U2VxdWVuY2VGbG93XzEwMWVwaTg8L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2Vydmlj
ZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wb21jenQwXCIgbmFtZT1cIk91dGJvdW5kIEVtYWlsOiBT
ZW5kIEVtYWlsXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50
cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCJjODBjZDU1ZC02YWI4LTQ2NzMtODI3My0xYjhh
MGJmM2I0NTZcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlm
IHJlc3VsdHMuc3VjY2VzczpcXG4gIG5vdGVUZXh0ID0gdVxcXCJcXFwiXFxcIkVtYWlsIFNlbnQg
aWYgbWFpbCBzZXJ2ZXIgaXMgdmFsaWQvYXV0aGVudGljYXRlZFxcXFxuIFxcbiAgRnJvbTogezB9
Jmx0O2JyJmd0OyBUbzogezF9Jmx0O2JyJmd0OyBDQzogezJ9Jmx0O2JyJmd0OyBCQ0M6IHszfSZs
dDticiZndDsgU3ViamVjdDogezR9ICZsdDticiZndDsgXFxuICBCb2R5OiB7NX0gJmx0O2JyJmd0
O1xcXCJcXFwiXFxcIi5mb3JtYXQocmVzdWx0cy5jb250ZW50LmlucHV0c1swXS5zdHJpcChcXFwi
dVxcXFxcXFwiW11cXFwiKSwgcmVzdWx0cy5jb250ZW50LmlucHV0c1sxXS5zdHJpcChcXFwidVxc
XFxcXFwiW11cXFwiKSwgcmVzdWx0cy5jb250ZW50LmlucHV0c1syXS5zdHJpcChcXFwidVxcXFxc
XFwiW11cXFwiKSwgcmVzdWx0cy5jb250ZW50LmlucHV0c1szXS5zdHJpcChcXFwidVxcXFxcXFwi
W11cXFwiKSwgcmVzdWx0cy5jb250ZW50LmlucHV0c1s0XS5zdHJpcChcXFwidVxcXFxcXFwiXFxc
IiksIHJlc3VsdHMuY29udGVudC50ZXh0KVxcbmVsc2U6XFxuICBub3RlVGV4dCA9IHVcXFwiRW1h
aWwgTk9UIFNlbnRcXFxcbiBGcm9tOiB7MH1cXFxcbiBUbzogezF9XFxcIi5mb3JtYXQocmVzdWx0
cy5jb250ZW50LmlucHV0c1swXS5zdHJpcChcXFwidVxcXFxcXFwiW11cXFwiKSwgcmVzdWx0cy5j
b250ZW50LmlucHV0c1sxXS5zdHJpcChcXFwidVxcXFxcXFwiW11cXFwiKSlcXG5pbmNpZGVudC5h
ZGROb3RlKGhlbHBlci5jcmVhdGVSaWNoVGV4dChub3RlVGV4dCkpXCIsXCJwcmVfcHJvY2Vzc2lu
Z19zY3JpcHRcIjpcImlucHV0cy5tYWlsX3RvID0gcnVsZS5wcm9wZXJ0aWVzLm1haWxfdG9cXG5p
bnB1dHMubWFpbF9jYyA9IHJ1bGUucHJvcGVydGllcy5tYWlsX2NjXFxuaW5wdXRzLm1haWxfaW5j
aWRlbnRfaWQgPSBpbmNpZGVudC5pZFxcbmlucHV0cy5tYWlsX2Zyb20gPSBcXFwiY2hhbmdlbWVA
cmVzaWxpZW50c3lzdGVtcy5jb21cXFwiXFxuaW5wdXRzLm1haWxfc3ViamVjdCA9IFxcXCJbezB9
XSB7MX1cXFwiLmZvcm1hdChpbmNpZGVudC5pZCwgaW5jaWRlbnQubmFtZSlcXG5cXG5pbnB1dHMu
bWFpbF9ib2R5X2h0bWwgPSBcXFwiXFxcIlxcXCJcXG57JSBzZXQgTk9UX0ZPVU5EID0gW1xcXCJO
b3QgRm91bmQhXFxcIixcXFwiLVxcXCIsXFxcIk5vbmVcXFwiLE5vbmVdICV9XFxueyUgbWFjcm8g
Z2V0X3JvdyhsYWJlbCxmaWVsZF9uYW1lKSAtJX1cXG5cXHR7JSBzZXQgdmFsdWUgPSB0ZW1wbGF0
ZV9oZWxwZXIuZ2V0X2luY2lkZW50X3ZhbHVlKGluY2lkZW50LGZpZWxkX25hbWUpICV9XFxuXFx0
eyUgc2V0IHN0eWxlID0gXFxcImZvbnQtZmFtaWx5OiBDYWxpYnJpOyBjb2xvcjogcmdiKDMxLDcz
LDEyNSlcXFwiICV9XFxuICAgIHslIGlmIHZhbHVlIGFuZCB2YWx1ZSBub3QgaW4gTk9UX0ZPVU5E
IGFuZCBub3QgdmFsdWUuc3RhcnRzd2l0aCgnLScpICV9XFxuICAgICZsdDt0ciZndDtcXG4gICAg
ICAgICZsdDt0ZCB3aWR0aD1cXFwiMTAwXFxcIiBzdHlsZT1cXFwie3tzdHlsZX19OyBmb250LXdl
aWdodDpib2xkXFxcIiZndDt7eyBsYWJlbCB9fSZsdDsvdGQmZ3Q7XFxuICAgICAgICAmbHQ7dGQg
c3R5bGU9XFxcInt7c3R5bGV9fVxcXCImZ3Q7e3sgdmFsdWUgfCByZXBsYWNlKCcmbHQ7ZGl2Jmd0
OycsICctLS09PT1uZXdsaW5lPT09LS0tJykgfCAgc3RyaXB0YWdzfX0mbHQ7L3RkJmd0O1xcbiAg
ICAmbHQ7L3RyJmd0O1xcbiAgICB7JSBlbmRpZiAlfVxcbnslLSBlbmRtYWNybyAlfVxcbiZsdDt0
YWJsZSB3aWR0aD1cXFwiMTAwJVxcXCIgJmd0O1xcbiZsdDt0ciZndDtcXG4gICAgJmx0O3RkIGNv
bHNwYW49XFxcIjJcXFwiJmd0O1xcbiAgICAgICAgJmx0O2gzIHN0eWxlPVxcXCJjb2xvcjogcmdi
KDY4LDExNCwxOTYpXFxcIiZndDtJTkNJREVOVCBERVRBSUxTJmx0Oy9oMyZndDtcXG4gICAgICAg
ICZsdDtociBzaXplPVxcXCIxXFxcIiB3aWR0aD1cXFwiMTAwJVxcXCIgbm9zaGFkZSBzdHlsZT1c
XFwiY29sb3I6I0ZGREY1N1xcXCIgYWxpZ249XFxcImNlbnRlclxcXCIvJmd0O1xcbiAgICAmbHQ7
L3RkJmd0O1xcbiZsdDsvdHImZ3Q7XFxuICAgIHt7IGdldF9yb3coJ1NldmVyaXR5OicsJ3NldmVy
aXR5X2NvZGUnKSB9fSZsdDticiZndDtcXG4gICAge3sgZ2V0X3JvdygnU3RhdHVzOicsJ3BsYW5f
c3RhdHVzJykgfX0mbHQ7YnImZ3Q7XFxuICAgIHt7IGdldF9yb3coJ0NyZWF0ZWQ6JywnY3JlYXRl
X2RhdGUnKSB9fSZsdDticiZndDtcXG4gICAge3sgZ2V0X3JvdygnQ2F0ZWdvcnk6JywnaW5jaWRl
bnRfdHlwZV9pZHMnKSB9fSZsdDticiZndDtcXG4mbHQ7dHImZ3Q7XFxuICAgICZsdDt0ZCBjb2xz
cGFuPVxcXCIyXFxcIiZndDtcXG4gICAgICAgICZsdDticiZndDsmbHQ7aDMgc3R5bGU9XFxcImNv
bG9yOiByZ2IoNjgsMTE0LDE5NilcXFwiJmd0O0lOQ0lERU5UIERFU0NSSVBUSU9OJmx0Oy9oMyZn
dDtcXG4gICAgICAgICZsdDtociBzaXplPVxcXCIxXFxcIiB3aWR0aD1cXFwiMTAwJVxcXCIgbm9z
aGFkZSBzdHlsZT1cXFwiY29sb3I6I0ZGREY1N1xcXCIgYWxpZ249XFxcImNlbnRlclxcXCIvJmd0
O1xcbiAgICAmbHQ7L3RkJmd0O1xcbiAgICB7eyBnZXRfcm93KCdEZXNjcmlwdGlvbjonLCdkZXNj
cmlwdGlvbicpIH19XFxuJmx0Oy90ciZndDtcXG4mbHQ7L3RhYmxlJmd0O1xcbiZsdDticiZndDtc
XG5cXFwiXFxcIlxcXCJcIixcInJlc3VsdF9uYW1lXCI6XCJcIn08L3Jlc2lsaWVudDpmdW5jdGlv
bj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMTAxZXBpODwvaW5j
b21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xbWw1cmZ4PC9vdXRnb2luZz48L3NlcnZpY2VU
YXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMTAxZXBpOFwiIHNvdXJjZVJlZj1c
IlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzBvbWN6dDBcIi8+
PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMTh3dnJwc1wiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3df
MW1sNXJmeDwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VG
bG93XzFtbDVyZnhcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wb21jenQwXCIgdGFyZ2V0UmVm
PVwiRW5kRXZlbnRfMTh3dnJwc1wiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlv
bl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFu
bm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJl
Zj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhp
eXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWFsN2YzZVwiPjx0ZXh0
PklucHV0czogbWFpbF90bzogb25lIHJlY2lwaWVudCBlbWFpbCBhZGRyZXNzIG1haWxfY2M6XHUw
MGEwb25lXHUwMGEwcmVjaXBpZW50XHUwMGEwZW1haWwgYWRkcmVzcywgbWFpbF9pbmNpZGVudF9p
ZCwgbWFpbF9mcm9tOlx1MDBhMG9uZSBzZW5kZXIgZW1haWwgYWRkcmVzcywgbWFpbF9zdWJqZWN0
OiBpbmNpZGVudCBpZCBhbmQgbmFtZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlv
biBpZD1cIkFzc29jaWF0aW9uXzFtMGNzMWNcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wb21j
enQwXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWFsN2YzZVwiLz48dGV4dEFubm90YXRp
b24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xM3p3ZnF0XCI+PHRleHQ+T3V0cHV0OiBSaWNodGV4dCBO
b3RlIGFkZGVkIHdpdGggaW5jaWRlbnQgZGV0YWlscy9kZXNjcmlwdGlvbiB3aXRoIGVtYWlsIGhl
YWRlciBkZXRhaWxzIG9yIGVycm9yIG5vdGU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2Np
YXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xOWd2bm0zXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tf
MG9tY3p0MFwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzEzendmcXRcIi8+PC9wcm9jZXNz
PjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxh
bmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpC
UE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZl
bnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIg
eD1cIjMyNVwiIHk9XCIyMDVcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIzMjBcIiB5PVwiMjQwXCIvPjwvYnBtbmRpOkJQTU5M
YWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJU
ZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1
NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFz
c29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6
d2F5cG9pbnQgeD1cIjMyNlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjI2XCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiMTk5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTZc
Ii8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2
aWNlVGFza18wb21jenQwXCIgaWQ9XCJTZXJ2aWNlVGFza18wb21jenQwX2RpXCI+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjY3MlwiIHk9XCIxODNcIi8+PC9i
cG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZs
b3dfMTAxZXBpOFwiIGlkPVwiU2VxdWVuY2VGbG93XzEwMWVwaThfZGlcIj48b21nZGk6d2F5cG9p
bnQgeD1cIjM2MVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjIzXCIvPjxvbWdkaTp3
YXlwb2ludCB4PVwiNjcyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjNcIi8+PGJw
bW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxNFwiIHdpZHRoPVwiOTBcIiB4
PVwiNDcxLjVcIiB5PVwiMjAxXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRn
ZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzE4d3ZycHNcIiBpZD1c
IkVuZEV2ZW50XzE4d3ZycHNfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9
XCIzNlwiIHg9XCIxMDk2XCIgeT1cIjIwNVwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjE0XCIgd2lkdGg9XCI5MFwiIHg9XCIxMDY5XCIgeT1cIjI0NFwiLz48L2Jw
bW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVs
ZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMW1sNXJmeFwiIGlkPVwiU2VxdWVuY2VGbG93XzFtbDVyZnhf
ZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjY3MlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMjIzXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTYwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2lu
dFwiIHk9XCIyMjNcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI1NjBcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjIyM1wiLz48b21nZGk6d2F5cG9pbnQgeD1cIjEwOTZcIiB4c2k6dHlwZT1c
Im9tZ2RjOlBvaW50XCIgeT1cIjIyM1wiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjE0XCIgd2lkdGg9XCI5MFwiIHg9XCI1MzBcIiB5PVwiMjE2XCIvPjwvYnBtbmRp
OkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVu
dD1cIlRleHRBbm5vdGF0aW9uXzFhbDdmM2VcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFhbDdmM2Vf
ZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjY2XCIgd2lkdGg9XCIxNDJcIiB4PVwiNDgzXCIg
eT1cIjUyXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50
PVwiQXNzb2NpYXRpb25fMW0wY3MxY1wiIGlkPVwiQXNzb2NpYXRpb25fMW0wY3MxY19kaVwiPjxv
bWdkaTp3YXlwb2ludCB4PVwiNjc4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxODdc
Ii8+PG9tZ2RpOndheXBvaW50IHg9XCI1OTRcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjExOFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1c
IlRleHRBbm5vdGF0aW9uXzEzendmcXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzEzendmcXRfZGlc
Ij48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTAxXCIgeT1c
IjcwXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwi
QXNzb2NpYXRpb25fMTlndm5tM1wiIGlkPVwiQXNzb2NpYXRpb25fMTlndm5tM19kaVwiPjxvbWdk
aTp3YXlwb2ludCB4PVwiNzcyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxOTNcIi8+
PG9tZ2RpOndheXBvaW50IHg9XCI5MjZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEw
MFwiLz48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRp
YWdyYW0+PC9kZWZpbml0aW9ucz4ifSwgImNvbnRlbnRfdmVyc2lvbiI6IDUyLCAiY3JlYXRvcl9p
ZCI6ICJzZWFuLm9nb3JtYW5AaWJtLmNvbSIsICJkZXNjcmlwdGlvbiI6ICJTZW5kIGEgSFRNTC1m
b3JtYXR0ZWQgZW1haWwgd2l0aCBSZXNpbGllbnQgSW5jaWRlbnQgZGV0YWlscyBpbiB0aGUgZW1h
aWwgYm9keSBhcyB3ZWxsIGFzIGluY2lkZW50IGF0dGFjaG1lbnRzLCBub3RlIGF0dGFjaGVkIHRv
IGluY2lkZW50LiIsICJleHBvcnRfa2V5IjogImV4YW1wbGVfc2VuZF9pbmNpZGVudF9lbWFpbF9o
dG1sIiwgImxhc3RfbW9kaWZpZWRfYnkiOiAic2Vhbi5vZ29ybWFuQGlibS5jb20iLCAibGFzdF9t
b2RpZmllZF90aW1lIjogMTU4NzEyNzI4NjE5MywgIm5hbWUiOiAiRXhhbXBsZTogU2VuZCBJbmNp
ZGVudCBFbWFpbCBIVE1MIiwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgInByb2dyYW1tYXRp
Y19uYW1lIjogImV4YW1wbGVfc2VuZF9pbmNpZGVudF9lbWFpbF9odG1sIiwgInRhZ3MiOiBbXSwg
InV1aWQiOiAiN2Q1MDY1MDgtMDI5NC00NDJlLTkzZTctOWYzYzUxZjJiYzcyIiwgIndvcmtmbG93
X2lkIjogNTEzfV0sICJ3b3Jrc3BhY2VzIjogW119
""")
