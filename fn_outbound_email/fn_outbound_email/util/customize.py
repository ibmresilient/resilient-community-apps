# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_outbound_email"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_outbound_email package"""
    reload_params = {"package": u"fn_outbound_email",
                    "incident_fields": [], 
                    "action_fields": [u"mail_cc", u"mail_to"], 
                    "function_params": [u"mail_bcc", u"mail_body_html", u"mail_body_text", u"mail_cc", u"mail_from", u"mail_incident_id", u"mail_subject", u"mail_to"], 
                    "datatables": [], 
                    "message_destinations": [u"email_outbound"], 
                    "functions": [u"send_email"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_send_incident_email_html", u"example_send_incident_email_text"], 
                    "actions": [u"Example: Send Incident Email HTML", u"Example: Send Incident Email Text"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     mail_cc
    #     mail_to
    #   Function inputs:
    #     mail_bcc
    #     mail_body_html
    #     mail_body_text
    #     mail_cc
    #     mail_from
    #     mail_incident_id
    #     mail_subject
    #     mail_to
    #   Message Destinations:
    #     email_outbound
    #   Functions:
    #     send_email
    #   Workflows:
    #     example_send_incident_email_html
    #     example_send_incident_email_text
    #   Rules:
    #     Example: Send Incident Email HTML
    #     Example: Send Incident Email Text


    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFNl
bmQgSW5jaWRlbnQgRW1haWwgSFRNTCIsICJpZCI6IDk1OSwgImxvZ2ljX3R5cGUiOiAiYWxsIiwg
Im1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6IFNlbmQgSW5jaWRl
bnQgRW1haWwgSFRNTCIsICJvYmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJ0YWdzIjogW10sICJ0
aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInR5cGUiOiAxLCAidXVpZCI6ICIzMGQyM2RlZi1hYzUw
LTQ2NTktOTc3Ni00ZjY1MDVmOTNjZTEiLCAidmlld19pdGVtcyI6IFt7ImNvbnRlbnQiOiAiMmI5
ZDU3MGUtZGQ1OC00YTgxLThiMGQtYTk4NTcyYmRjMjYxIiwgImVsZW1lbnQiOiAiZmllbGRfdXVp
ZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAic2hvd19pZiI6IG51bGwsICJz
aG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsiY29udGVudCI6
ICI4YzNlZTcyYi1mOGNiLTQzMTgtYTk3OC1mOGEwNDEwOWZjN2IiLCAiZWxlbWVudCI6ICJmaWVs
ZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJzaG93X2lmIjogbnVs
bCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJ3b3Jr
Zmxvd3MiOiBbImV4YW1wbGVfc2VuZF9pbmNpZGVudF9lbWFpbF9odG1sIl19LCB7ImF1dG9tYXRp
b25zIjogW10sICJjb25kaXRpb25zIjogW10sICJlbmFibGVkIjogdHJ1ZSwgImV4cG9ydF9rZXki
OiAiRXhhbXBsZTogU2VuZCBJbmNpZGVudCBFbWFpbCBUZXh0IiwgImlkIjogOTYwLCAibG9naWNf
dHlwZSI6ICJhbGwiLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBs
ZTogU2VuZCBJbmNpZGVudCBFbWFpbCBUZXh0IiwgIm9iamVjdF90eXBlIjogImluY2lkZW50Iiwg
InRhZ3MiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidHlwZSI6IDEsICJ1dWlkIjog
IjFiYjhjMTkwLTE3NWUtNDQxNi1hMGUzLThjMTcyZWNmNTA0ZCIsICJ2aWV3X2l0ZW1zIjogW3si
Y29udGVudCI6ICIyYjlkNTcwZS1kZDU4LTRhODEtOGIwZC1hOTg1NzJiZGMyNjEiLCAiZWxlbWVu
dCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJzaG93
X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxs
fSwgeyJjb250ZW50IjogIjhjM2VlNzJiLWY4Y2ItNDMxOC1hOTc4LWY4YTA0MTA5ZmM3YiIsICJl
bGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwg
InNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6
IG51bGx9XSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV9zZW5kX2luY2lkZW50X2VtYWlsX3RleHQi
XX1dLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJleHBvcnRfZGF0ZSI6IDE1ODI5MTE5NjcyMzEs
ICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAyLCAiZmllbGRzIjogW3siYWxsb3dfZGVmYXVsdF92
YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2Us
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVu
Y3Rpb24vbWFpbF9ib2R5X2h0bWwiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjog
NTQ0OSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJt
YWlsX2JvZHlfaHRtbCIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwg
InBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJy
aWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJt
YWlsX2JvZHlfaHRtbCIsICJ0b29sdGlwIjogIiIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogIjFi
OWQwYTc1LTQ2OTktNDMzNS1iM2I5LWJkNjJlNWY0MDUwMyIsICJ2YWx1ZXMiOiBbXX0sIHsiYWxs
b3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxh
dGVkIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVs
dF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRf
a2V5IjogIl9fZnVuY3Rpb24vbWFpbF90byIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
aWQiOiA1NDQ3LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJuYW1l
IjogIm1haWxfdG8iLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJw
bGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmlj
aF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAibWFp
bF90byIsICJ0b29sdGlwIjogIiIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogImE0YmZkOWY3LWY5
MjQtNDI4OS04YmIyLWZkMmUzYzU3N2ViNCIsICJ2YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVmYXVs
dF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFs
c2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5f
Ynlfc2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9f
ZnVuY3Rpb24vbWFpbF9jYyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA1NDQ2
LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJuYW1lIjogIm1haWxf
Y2MiLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRl
ciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0Ijog
ZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAibWFpbF9jYyIsICJ0
b29sdGlwIjogIiIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogIjEyNGU3NGU5LWE4OTEtNDQyYS1i
MjU3LTdkNzliMGVlZWQ0NSIsICJ2YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVmYXVsdF92YWx1ZSI6
IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJjaGFu
Z2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVy
IjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24v
bWFpbF9ib2R5X3RleHQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogNTQ0NSwg
ImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJtYWlsX2Jv
ZHlfdGV4dCIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNl
aG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3Rl
eHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJtYWlsX2Jv
ZHlfdGV4dCIsICJ0b29sdGlwIjogIiIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogImY4NjQ3OWY3
LTNhNjYtNGZiYi1hMjdhLWRiNmRlYjZjMGJjOSIsICJ2YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVm
YXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjog
ZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9z
ZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5Ijog
Il9fZnVuY3Rpb24vbWFpbF9iY2MiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjog
NTQ1MSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJt
YWlsX2JjYyIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNl
aG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3Rl
eHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJtYWlsX2Jj
YyIsICJ0b29sdGlwIjogIiIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogIjM4NjRiYTk5LWFlOGMt
NDkyNi05Yjc2LTllOGU2OTE2OTZmNSIsICJ2YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVmYXVsdF92
YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2Us
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlf
c2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVu
Y3Rpb24vbWFpbF9mcm9tIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDU0NTIs
ICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF9m
cm9tIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xk
ZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6
IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfZnJvbSIs
ICJ0b29sdGlwIjogIiIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogImUwOTc4OWJmLTA1N2MtNDkx
NC05ODc3LTQ1NWZiMTFlM2Y0ZCIsICJ2YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVmYXVsdF92YWx1
ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJj
aGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2Vy
dmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rp
b24vbWFpbF9pbmNpZGVudF9pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA1
NDUwLCAiaW5wdXRfdHlwZSI6ICJudW1iZXIiLCAiaW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAi
bWFpbF9pbmNpZGVudF9pZCIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBb
XSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2Us
ICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6
ICJtYWlsX2luY2lkZW50X2lkIiwgInRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwgInV1aWQi
OiAiZmRiY2RhMTYtZDZmMi00OGQxLTg2ZDctODA0ZTI1ODkwYmMxIiwgInZhbHVlcyI6IFtdfSwg
eyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNh
bGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJk
ZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4
cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9tYWlsX3N1YmplY3QiLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgImlkIjogNTQ0OCwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZh
bHNlLCAibmFtZSI6ICJtYWlsX3N1YmplY3QiLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVy
YXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25s
eSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBb
XSwgInRleHQiOiAibWFpbF9zdWJqZWN0IiwgInRvb2x0aXAiOiAiIiwgInR5cGVfaWQiOiAxMSwg
InV1aWQiOiAiZDM0M2Y4MGItNDc2MC00ZjRhLWI0OTItYmY4NWRmYzI5MjYxIiwgInZhbHVlcyI6
IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxz
ZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFs
c2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxz
ZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9tYWlsX3RvIiwgImhpZGVfbm90aWZp
Y2F0aW9uIjogZmFsc2UsICJpZCI6IDU0NDQsICJpbnB1dF90eXBlIjogInRleHQiLCAiaW50ZXJu
YWwiOiBmYWxzZSwgIm5hbWUiOiAibWFpbF90byIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9w
ZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiAicHJvcGVydGllcyIs
ICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVt
cGxhdGVzIjogW10sICJ0ZXh0IjogIm1haWxfdG8iLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6
IDYsICJ1dWlkIjogIjJiOWQ1NzBlLWRkNTgtNGE4MS04YjBkLWE5ODU3MmJkYzI2MSIsICJ2YWx1
ZXMiOiBbXX0sIHsiYWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjog
ZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6
IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjog
ZmFsc2UsICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRpb24vbWFpbF9jYyIsICJoaWRlX25v
dGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA1NDQzLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImlu
dGVybmFsIjogZmFsc2UsICJuYW1lIjogIm1haWxfY2MiLCAib3BlcmF0aW9uX3Blcm1zIjoge30s
ICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogInByb3BlcnRp
ZXMiLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwg
InRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJtYWlsX2NjIiwgInRvb2x0aXAiOiAiIiwgInR5cGVf
aWQiOiA2LCAidXVpZCI6ICI4YzNlZTcyYi1mOGNiLTQzMTgtYTk3OC1mOGEwNDEwOWZjN2IiLCAi
dmFsdWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlv
biI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9z
ZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRl
ZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5pbmciLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogODA1LCAiaW5wdXRfdHlwZSI6ICJib29sZWFuIiwg
ImludGVybmFsIjogZmFsc2UsICJuYW1lIjogImluY190cmFpbmluZyIsICJvcGVyYXRpb25fcGVy
bXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBu
dWxsLCAicmVhZF9vbmx5IjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAi
dGVtcGxhdGVzIjogW10sICJ0ZXh0IjogIlNpbXVsYXRpb24iLCAidG9vbHRpcCI6ICJXaGV0aGVy
IHRoZSBpbmNpZGVudCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhp
cyBmaWVsZCBpcyByZWFkLW9ubHkuIiwgInR5cGVfaWQiOiAwLCAidXVpZCI6ICJjM2YwZTNlZC0y
MWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAidmFsdWVzIjogW119XSwgImZ1bmN0aW9ucyI6
IFt7ImNyZWF0b3IiOiB7ImRpc3BsYXlfbmFtZSI6ICJSb21pbmEgSm9zZSIsICJpZCI6IDEsICJu
YW1lIjogInJvbWluYS5qb3NlQGlibS5jb20iLCAidHlwZSI6ICJ1c2VyIn0sICJkZXNjcmlwdGlv
biI6IHsiZm9ybWF0IjogInRleHQiLCAiY29udGVudCI6IG51bGx9LCAiZGVzdGluYXRpb25faGFu
ZGxlIjogImVtYWlsX291dGJvdW5kIiwgImRpc3BsYXlfbmFtZSI6ICJTZW5kIEVtYWlsIiwgImV4
cG9ydF9rZXkiOiAic2VuZF9lbWFpbCIsICJpZCI6IDM4OCwgImxhc3RfbW9kaWZpZWRfYnkiOiB7
ImRpc3BsYXlfbmFtZSI6ICJSb21pbmEgSm9zZSIsICJpZCI6IDEsICJuYW1lIjogInJvbWluYS5q
b3NlQGlibS5jb20iLCAidHlwZSI6ICJ1c2VyIn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTgy
OTExODgwNjAxLCAibmFtZSI6ICJzZW5kX2VtYWlsIiwgInRhZ3MiOiBbXSwgInV1aWQiOiAiYzgw
Y2Q1NWQtNmFiOC00NjczLTgyNzMtMWI4YTBiZjNiNDU2IiwgInZlcnNpb24iOiAxLCAidmlld19p
dGVtcyI6IFt7ImNvbnRlbnQiOiAiZTA5Nzg5YmYtMDU3Yy00OTE0LTk4NzctNDU1ZmIxMWUzZjRk
IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAi
c2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjog
bnVsbH0sIHsiY29udGVudCI6ICJmZGJjZGExNi1kNmYyLTQ4ZDEtODZkNy04MDRlMjU4OTBiYzEi
LCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJz
aG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBu
dWxsfSwgeyJjb250ZW50IjogImE0YmZkOWY3LWY5MjQtNDI4OS04YmIyLWZkMmUzYzU3N2ViNCIs
ICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNo
b3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51
bGx9LCB7ImNvbnRlbnQiOiAiMTI0ZTc0ZTktYTg5MS00NDJhLWIyNTctN2Q3OWIwZWVlZDQ1Iiwg
ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hv
d19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVs
bH0sIHsiY29udGVudCI6ICIzODY0YmE5OS1hZThjLTQ5MjYtOWI3Ni05ZThlNjkxNjk2ZjUiLCAi
ZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93
X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxs
fSwgeyJjb250ZW50IjogImQzNDNmODBiLTQ3NjAtNGY0YS1iNDkyLWJmODVkZmMyOTI2MSIsICJl
bGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3df
aWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9
LCB7ImNvbnRlbnQiOiAiZjg2NDc5ZjctM2E2Ni00ZmJiLWEyN2EtZGI2ZGViNmMwYmM5IiwgImVs
ZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19p
ZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0s
IHsiY29udGVudCI6ICIxYjlkMGE3NS00Njk5LTQzMzUtYjNiOS1iZDYyZTVmNDA1MDMiLCAiZWxl
bWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lm
IjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfV0s
ICJ3b3JrZmxvd3MiOiBbeyJhY3Rpb25zIjogW10sICJkZXNjcmlwdGlvbiI6IG51bGwsICJuYW1l
IjogIkV4YW1wbGU6IFNlbmQgSW5jaWRlbnQgRW1haWwgSFRNTCIsICJvYmplY3RfdHlwZSI6ICJp
bmNpZGVudCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1h
aWxfaHRtbCIsICJ0YWdzIjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogNDcyfSwg
eyJhY3Rpb25zIjogW10sICJkZXNjcmlwdGlvbiI6IG51bGwsICJuYW1lIjogIkV4YW1wbGU6IFNl
bmQgSW5jaWRlbnQgRW1haWwgVGV4dCIsICJvYmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJwcm9n
cmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfdGV4dCIsICJ0YWdz
IjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogNDcxfV19XSwgImdlb3MiOiBudWxs
LCAiZ3JvdXBzIjogbnVsbCwgImlkIjogOTcsICJpbmJvdW5kX21haWxib3hlcyI6IG51bGwsICJp
bmNpZGVudF9hcnRpZmFjdF90eXBlcyI6IFtdLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVf
ZGF0ZSI6IDE1ODI5MTE5Njg3MTcsICJjcmVhdGVfZGF0ZSI6IDE1ODI5MTE5Njg3MTcsICJ1dWlk
IjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6
ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0
b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBh
Y2thZ2VzIChpbnRlcm5hbCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJw
YXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgImluZHVzdHJpZXMi
OiBudWxsLCAibGF5b3V0cyI6IFtdLCAibG9jYWxlIjogbnVsbCwgIm1lc3NhZ2VfZGVzdGluYXRp
b25zIjogW3siYXBpX2tleXMiOiBbXSwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2Fj
ayI6IHRydWUsICJleHBvcnRfa2V5IjogImVtYWlsX291dGJvdW5kIiwgIm5hbWUiOiAiZW1haWxf
b3V0Ym91bmQiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZW1haWxfb3V0Ym91bmQiLCAidGFncyI6
IFtdLCAidXNlcnMiOiBbInJvbWluYS5qb3NlQGlibS5jb20iXSwgInV1aWQiOiAiNDJmNjNlYTIt
NTU3Mi00MmU3LTliZmYtMDFhNGUzODA4M2E5In1dLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJv
dmVycmlkZXMiOiBbXSwgInBoYXNlcyI6IFtdLCAicmVndWxhdG9ycyI6IG51bGwsICJyb2xlcyI6
IFtdLCAic2NyaXB0cyI6IFtdLCAic2VydmVyX3ZlcnNpb24iOiB7ImJ1aWxkX251bWJlciI6IDQ3
LCAibWFqb3IiOiAzNCwgIm1pbm9yIjogMiwgInZlcnNpb24iOiAiMzQuMi40NyJ9LCAidGFncyI6
IFtdLCAidGFza19vcmRlciI6IFtdLCAidGltZWZyYW1lcyI6IG51bGwsICJ0eXBlcyI6IFtdLCAi
d29ya2Zsb3dzIjogW3siYWN0aW9ucyI6IFtdLCAiY29udGVudCI6IHsidmVyc2lvbiI6IDEsICJ3
b3JrZmxvd19pZCI6ICJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfaHRtbCIsICJ4bWwiOiAi
PD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHht
bG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5z
OmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxu
czpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6
b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJl
c2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3Lncz
Lm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93
d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9zZW5kX2luY2lkZW50
X2VtYWlsX2h0bWxcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IFNlbmQg
SW5jaWRlbnQgRW1haWwgSFRNTFwiPjxkb2N1bWVudGF0aW9uLz48c3RhcnRFdmVudCBpZD1cIlN0
YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMTAxZXBpODwvb3V0Z29p
bmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzBvbWN6dDBcIiBu
YW1lPVwiU2VuZCBFbWFpbFwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9u
RWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiYzgwY2Q1NWQtNmFiOC00NjczLTgy
NzMtMWI4YTBiZjNiNDU2XCI+e1wiaW5wdXRzXCI6e30sXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRc
IjpcImlucHV0cy5tYWlsX3RvID0gcnVsZS5wcm9wZXJ0aWVzLm1haWxfdG9cXG5pbnB1dHMubWFp
bF9jYyA9IHJ1bGUucHJvcGVydGllcy5tYWlsX2NjXFxuaW5wdXRzLm1haWxfaW5jaWRlbnRfaWQg
PSBpbmNpZGVudC5pZFxcbmlucHV0cy5tYWlsX2Zyb20gPSBcXFwiaXJodWJAbWFpbC5yZXNpbGll
bnRzeXN0ZW1zLmNvbVxcXCJcXG5pbnB1dHMubWFpbF9zdWJqZWN0ID0gXFxcIlt7MH1dIHsxfVxc
XCIuZm9ybWF0KGluY2lkZW50LmlkLCBpbmNpZGVudC5uYW1lKVxcblxcbmlucHV0cy5tYWlsX2Jv
ZHlfaHRtbCA9IFxcXCJcXFwiXFxcIlxcbnslIHNldCBOT1RfRk9VTkQgPSBbXFxcIk5vdCBGb3Vu
ZCFcXFwiLFxcXCItXFxcIixcXFwiTm9uZVxcXCIsTm9uZV0gJX1cXG57JSBtYWNybyBnZXRfcm93
KGxhYmVsLGZpZWxkX25hbWUpIC0lfVxcblxcdHslIHNldCB2YWx1ZSA9IHRlbXBsYXRlX2hlbHBl
ci5nZXRfaW5jaWRlbnRfdmFsdWUoaW5jaWRlbnQsZmllbGRfbmFtZSkgJX1cXG5cXHR7JSBzZXQg
c3R5bGUgPSBcXFwiZm9udC1mYW1pbHk6IENhbGlicmk7IGNvbG9yOiByZ2IoMzEsNzMsMTI1KVxc
XCIgJX1cXG4gICAgeyUgaWYgdmFsdWUgYW5kIHZhbHVlIG5vdCBpbiBOT1RfRk9VTkQgYW5kIG5v
dCB2YWx1ZS5zdGFydHN3aXRoKCctJykgJX1cXG4gICAgJmx0O3RyJmd0O1xcbiAgICAgICAgJmx0
O3RkIHdpZHRoPVxcXCIxMDBcXFwiIHN0eWxlPVxcXCJ7e3N0eWxlfX07IGZvbnQtd2VpZ2h0OmJv
bGRcXFwiJmd0O3t7IGxhYmVsIH19Jmx0Oy90ZCZndDtcXG4gICAgICAgICZsdDt0ZCBzdHlsZT1c
XFwie3tzdHlsZX19XFxcIiZndDt7eyB2YWx1ZSB9fSZsdDsvdGQmZ3Q7XFxuICAgICZsdDsvdHIm
Z3Q7XFxuICAgIHslIGVuZGlmICV9XFxueyUtIGVuZG1hY3JvICV9XFxuJmx0O3RhYmxlIHdpZHRo
PVxcXCIxMDAlXFxcIiAmZ3Q7XFxuJmx0O3RyJmd0O1xcbiAgICAmbHQ7dGQgY29sc3Bhbj1cXFwi
MlxcXCImZ3Q7XFxuICAgICAgICAmbHQ7aDMgc3R5bGU9XFxcImNvbG9yOiByZ2IoNjgsMTE0LDE5
NilcXFwiJmd0O0lOQ0lERU5UIERFVEFJTFMmbHQ7L2gzJmd0O1xcbiAgICAgICAgJmx0O2hyIHNp
emU9XFxcIjFcXFwiIHdpZHRoPVxcXCIxMDAlXFxcIiBub3NoYWRlIHN0eWxlPVxcXCJjb2xvcjoj
RkZERjU3XFxcIiBhbGlnbj1cXFwiY2VudGVyXFxcIi8mZ3Q7XFxuICAgICZsdDsvdGQmZ3Q7XFxu
Jmx0Oy90ciZndDtcXG4gICAge3sgZ2V0X3JvdygnU2V2ZXJpdHknLCdzZXZlcml0eV9jb2RlJykg
fX1cXG4gICAge3sgZ2V0X3JvdygnU3RhdHVzJywncGxhbl9zdGF0dXMnKSB9fVxcbiAgICB7eyBn
ZXRfcm93KCdDcmVhdGVkJywnY3JlYXRlX2RhdGUnKSB9fVxcbiAgICB7eyBnZXRfcm93KCdDYXRl
Z29yeScsJ2luY2lkZW50X3R5cGVfaWRzJykgfX1cXG4mbHQ7dHImZ3Q7XFxuICAgICZsdDt0ZCBj
b2xzcGFuPVxcXCIyXFxcIiZndDtcXG4gICAgICAgICZsdDticiZndDsmbHQ7aDMgc3R5bGU9XFxc
ImNvbG9yOiByZ2IoNjgsMTE0LDE5NilcXFwiJmd0O0lOQ0lERU5UIERFU0NSSVBUSU9OJmx0Oy9o
MyZndDtcXG4gICAgICAgICZsdDtociBzaXplPVxcXCIxXFxcIiB3aWR0aD1cXFwiMTAwJVxcXCIg
bm9zaGFkZSBzdHlsZT1cXFwiY29sb3I6I0ZGREY1N1xcXCIgYWxpZ249XFxcImNlbnRlclxcXCIv
Jmd0O1xcbiAgICAmbHQ7L3RkJmd0O1xcbiZsdDsvdHImZ3Q7XFxuJmx0Oy90YWJsZSZndDtcXG4m
bHQ7YnImZ3Q7XFxuXFxcIlxcXCJcXFwiXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNp
b25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzEwMWVwaTg8L2luY29taW5nPjxvdXRn
b2luZz5TZXF1ZW5jZUZsb3dfMW1sNXJmeDwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVu
Y2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzEwMWVwaThcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wb21jenQwXCIvPjxlbmRFdmVudCBp
ZD1cIkVuZEV2ZW50XzE4d3ZycHNcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFtbDVyZng8L2lu
Y29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xbWw1cmZ4
XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMG9tY3p0MFwiIHRhcmdldFJlZj1cIkVuZEV2ZW50
XzE4d3ZycHNcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwi
Pjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxh
c3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjwvcHJv
Y2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBN
TlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1u
ZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFy
dEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIz
NlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpC
UE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50
PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9k
aVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9
XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9
XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9t
Z2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwi
Lz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwi
MjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwi
U2VydmljZVRhc2tfMG9tY3p0MFwiIGlkPVwiU2VydmljZVRhc2tfMG9tY3p0MF9kaVwiPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIyODZcIiB5PVwiMTE4XCIv
PjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVu
Y2VGbG93XzEwMWVwaThcIiBpZD1cIlNlcXVlbmNlRmxvd18xMDFlcGk4X2RpXCI+PG9tZ2RpOndh
eXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21n
ZGk6d2F5cG9pbnQgeD1cIjI0MlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIv
PjxvbWdkaTp3YXlwb2ludCB4PVwiMjQyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIx
NThcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIyODZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjE1OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjE0XCIg
d2lkdGg9XCIwXCIgeD1cIjI1N1wiIHk9XCIxNzVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBt
bmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMTh3
dnJwc1wiIGlkPVwiRW5kRXZlbnRfMTh3dnJwc19kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MzZcIiB3aWR0aD1cIjM2XCIgeD1cIjQ2MFwiIHk9XCIxNDBcIi8+PGJwbW5kaTpCUE1OTGFiZWw+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxNFwiIHdpZHRoPVwiMFwiIHg9XCI0NzhcIiB5PVwiMTc5
XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRn
ZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xbWw1cmZ4XCIgaWQ9XCJTZXF1ZW5jZUZsb3df
MW1sNXJmeF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMzg2XCIgeHNpOnR5cGU9XCJvbWdkYzpQ
b2ludFwiIHk9XCIxNThcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0NjBcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjE1OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjE0XCIgd2lkdGg9XCIwXCIgeD1cIjQyM1wiIHk9XCIxMzZcIi8+PC9icG1uZGk6QlBN
TkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1O
RGlhZ3JhbT48L2RlZmluaXRpb25zPiJ9LCAiY29udGVudF92ZXJzaW9uIjogMSwgImNyZWF0b3Jf
aWQiOiAicm9taW5hLmpvc2VAaWJtLmNvbSIsICJkZXNjcmlwdGlvbiI6ICIiLCAiZXhwb3J0X2tl
eSI6ICJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfaHRtbCIsICJsYXN0X21vZGlmaWVkX2J5
IjogInJvbWluYS5qb3NlQGlibS5jb20iLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU4MjkxMTky
ODk1NSwgIm5hbWUiOiAiRXhhbXBsZTogU2VuZCBJbmNpZGVudCBFbWFpbCBIVE1MIiwgIm9iamVj
dF90eXBlIjogImluY2lkZW50IiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfc2VuZF9p
bmNpZGVudF9lbWFpbF9odG1sIiwgInRhZ3MiOiBbXSwgInV1aWQiOiAiN2Q1MDY1MDgtMDI5NC00
NDJlLTkzZTctOWYzYzUxZjJiYzcyIiwgIndvcmtmbG93X2lkIjogNDcyfSwgeyJhY3Rpb25zIjog
W10sICJjb250ZW50IjogeyJ2ZXJzaW9uIjogMSwgIndvcmtmbG93X2lkIjogImV4YW1wbGVfc2Vu
ZF9pbmNpZGVudF9lbWFpbF90ZXh0IiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5j
b2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcv
c3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcu
b3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcu
b3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9y
Zy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVu
dC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNj
aGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3Rh
bmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHBy
b2Nlc3MgaWQ9XCJleGFtcGxlX3NlbmRfaW5jaWRlbnRfZW1haWxfdGV4dFwiIGlzRXhlY3V0YWJs
ZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTogU2VuZCBJbmNpZGVudCBFbWFpbCBUZXh0XCI+PGRv
Y3VtZW50YXRpb24vPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdv
aW5nPlNlcXVlbmNlRmxvd18xZTFkeTlvPC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZpY2VU
YXNrIGlkPVwiU2VydmljZVRhc2tfMXRsdjNqOVwiIG5hbWU9XCJTZW5kIEVtYWlsXCIgcmVzaWxp
ZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0
aW9uIHV1aWQ9XCJjODBjZDU1ZC02YWI4LTQ2NzMtODI3My0xYjhhMGJmM2I0NTZcIj57XCJpbnB1
dHNcIjp7fSxcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLm1haWxfdG8gPSBydWxl
LnByb3BlcnRpZXMubWFpbF90b1xcbmlucHV0cy5tYWlsX2NjID0gcnVsZS5wcm9wZXJ0aWVzLm1h
aWxfY2NcXG5pbnB1dHMubWFpbF9pbmNpZGVudF9pZCA9IGluY2lkZW50LmlkXFxuaW5wdXRzLm1h
aWxfZnJvbSA9IFxcXCJpcmh1YkBtYWlsLnJlc2lsaWVudHN5c3RlbXMuY29tXFxcIlxcbmlucHV0
cy5tYWlsX3N1YmplY3QgPSBcXFwiW3swfV0gezF9XFxcIi5mb3JtYXQoaW5jaWRlbnQuaWQsIGlu
Y2lkZW50Lm5hbWUpXFxuXFxuaW5wdXRzLm1haWxfYm9keV90ZXh0ID0gXFxcIlxcXCJcXFwiXFxu
SW5jaWRlbnQgU3VtbWFyeTpcXG4gICAgU2V2ZXJpdHkgQ29kZToge3sgaW5jaWRlbnQuc2V2ZXJp
dHlfY29kZSB9fVxcbiAgICBQbGFuIFN0YXR1czoge3sgaW5jaWRlbnQucGxhbl9zdGF0dXMgfX1c
XG4gICAgQ3JlYXRlZDoge3sgdGVtcGxhdGVfaGVscGVyLmZvcm1hdF90aW1lc3RhbXAoaW5jaWRl
bnQuY3JlYXRlX2RhdGUpIH19XFxuICAgIEluY2lkZW50IFR5cGU6IHt7IGluY2lkZW50LmluY2lk
ZW50X3R5cGVfaWRzIH19XFxuXFxuXFxcIlxcXCJcXFwiXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+
PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFlMWR5OW88L2luY29t
aW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMGNqNjhsYTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFz
az48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzFlMWR5OW9cIiBzb3VyY2VSZWY9XCJT
dGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18xdGx2M2o5XCIvPjxl
bmRFdmVudCBpZD1cIkVuZEV2ZW50XzFoenhhZmJcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBj
ajY4bGE8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxv
d18wY2o2OGxhXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMXRsdjNqOVwiIHRhcmdldFJlZj1c
IkVuZEV2ZW50XzFoenhhZmJcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25f
MWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5v
dGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9
XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0
XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxi
cG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVf
MVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIg
aWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIg
d2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48
L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJw
bW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25f
MWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9
XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBt
bkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4
X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5F
bGVtZW50PVwiU2VydmljZVRhc2tfMXRsdjNqOVwiIGlkPVwiU2VydmljZVRhc2tfMXRsdjNqOV9k
aVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIyNzVcIiB5
PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50
PVwiU2VxdWVuY2VGbG93XzFlMWR5OW9cIiBpZD1cIlNlcXVlbmNlRmxvd18xZTFkeTlvX2RpXCI+
PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIw
NlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI3NVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3
aWR0aD1cIjBcIiB4PVwiMjM2LjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2Jw
bW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzFo
enhhZmJcIiBpZD1cIkVuZEV2ZW50XzFoenhhZmJfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI0OTNcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVs
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNTExXCIgeT1cIjIy
N1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVk
Z2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMGNqNjhsYVwiIGlkPVwiU2VxdWVuY2VGbG93
XzBjajY4bGFfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjM3NVwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDkzXCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI0MzRcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQ
TU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBN
TkRpYWdyYW0+PC9kZWZpbml0aW9ucz4ifSwgImNvbnRlbnRfdmVyc2lvbiI6IDEsICJjcmVhdG9y
X2lkIjogInJvbWluYS5qb3NlQGlibS5jb20iLCAiZGVzY3JpcHRpb24iOiAiIiwgImV4cG9ydF9r
ZXkiOiAiZXhhbXBsZV9zZW5kX2luY2lkZW50X2VtYWlsX3RleHQiLCAibGFzdF9tb2RpZmllZF9i
eSI6ICJyb21pbmEuam9zZUBpYm0uY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1ODI5MTE4
ODA3NTcsICJuYW1lIjogIkV4YW1wbGU6IFNlbmQgSW5jaWRlbnQgRW1haWwgVGV4dCIsICJvYmpl
Y3RfdHlwZSI6ICJpbmNpZGVudCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3NlbmRf
aW5jaWRlbnRfZW1haWxfdGV4dCIsICJ0YWdzIjogW10sICJ1dWlkIjogIjc1MmVmY2Y2LTk4Yjct
NGQ2MS04NWE2LWUyZGI3NjE5MDAxMyIsICJ3b3JrZmxvd19pZCI6IDQ3MX1dLCAid29ya3NwYWNl
cyI6IFtdfQ==
"""
    )