# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_exchange_online"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_exchange_online package"""
    reload_params = {"package": u"fn_exchange_online",
                    "incident_fields": [], 
                    "action_fields": [u"exo_email_address_sender", u"exo_has_attachments"],
                    "function_params": [u"exo_email_address", u"exo_email_address_sender", u"exo_has_attachments"],
                    "datatables": [], 
                    "message_destinations": [u"fn_exchange_online"], 
                    "functions": [u"exchange_online_get_email_user_profile", u"exchange_online_query_emails"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_exchange_online_get_user_profile", u"example_exchange_online_query_emails"], 
                    "actions": [u"Example: Exchange Online Get User Profile", u"Example: Exchange Online Query Emails"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     exo_email_address_sender
    #   Function inputs:
    #     exo_email_address
    #     exo_email_address_sender
    #   Message Destinations:
    #     fn_exchange_online
    #   Functions:
    #     exchange_online_get_email_user_profile
    #     exchange_online_query_emails
    #   Workflows:
    #     example_exchange_online_get_user_profile
    #     example_exchange_online_query_emails
    #   Rules:
    #     Example: Exchange Online Get User Profile
    #     Example: Exchange Online Query Emails


    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFt7ImV2YWx1YXRpb25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFj
dC50eXBlIiwgIm1ldGhvZCI6ICJlcXVhbHMiLCAidHlwZSI6IG51bGwsICJ2YWx1ZSI6ICJFbWFp
bCBTZW5kZXIifV0sICJlbmFibGVkIjogdHJ1ZSwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTogRXhj
aGFuZ2UgT25saW5lIEdldCBVc2VyIFByb2ZpbGUiLCAiaWQiOiA1MSwgImxvZ2ljX3R5cGUiOiAi
YWxsIiwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6IEV4Y2hh
bmdlIE9ubGluZSBHZXQgVXNlciBQcm9maWxlIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0Iiwg
InRhZ3MiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidHlwZSI6IDEsICJ1dWlkIjog
IjFkOTY2ZjZjLWEwYTMtNGM4My05YmM3LWQwMjNlODkzNGJlMSIsICJ2aWV3X2l0ZW1zIjogW10s
ICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfZXhjaGFuZ2Vfb25saW5lX2dldF91c2VyX3Byb2ZpbGUi
XX0sIHsiYXV0b21hdGlvbnMiOiBbXSwgImNvbmRpdGlvbnMiOiBbeyJldmFsdWF0aW9uX2lkIjog
bnVsbCwgImZpZWxkX25hbWUiOiAiYXJ0aWZhY3QudHlwZSIsICJtZXRob2QiOiAiZXF1YWxzIiwg
InR5cGUiOiBudWxsLCAidmFsdWUiOiAiRW1haWwgU2VuZGVyIn1dLCAiZW5hYmxlZCI6IHRydWUs
ICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IEV4Y2hhbmdlIE9ubGluZSBRdWVyeSBFbWFpbHMiLCAi
aWQiOiA2MSwgImxvZ2ljX3R5cGUiOiAiYWxsIiwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10s
ICJuYW1lIjogIkV4YW1wbGU6IEV4Y2hhbmdlIE9ubGluZSBRdWVyeSBFbWFpbHMiLCAib2JqZWN0
X3R5cGUiOiAiYXJ0aWZhY3QiLCAidGFncyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAs
ICJ0eXBlIjogMSwgInV1aWQiOiAiYzdjZDViZGUtOTZiNS00NjlmLTg2MzItZWExMmEzYTIxYmE5
IiwgInZpZXdfaXRlbXMiOiBbeyJjb250ZW50IjogIjg3NjBiMzJlLTc4MmYtNDIwNC05NDkyLWU3
ZTAwYTJlN2Q5NSIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rp
b25pbnZvY2F0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNl
LCAic3RlcF9sYWJlbCI6IG51bGx9XSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV9leGNoYW5nZV9v
bmxpbmVfcXVlcnlfZW1haWxzIl19XSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAiZXhwb3J0X2Rh
dGUiOiAxNTc1ODEzMTI1OTA0LCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjogMiwgImZpZWxkcyI6
IFt7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAi
Y2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwg
ImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAi
ZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2V4b19lbWFpbF9hZGRyZXNzX3NlbmRlciIsICJoaWRl
X25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAzNDcsICJpbnB1dF90eXBlIjogInRleHQiLCAi
aW50ZXJuYWwiOiBmYWxzZSwgIm5hbWUiOiAiZXhvX2VtYWlsX2FkZHJlc3Nfc2VuZGVyIiwgIm9w
ZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxhY2Vob2xkZXIiOiAidXNl
ckBleGFtcGxlLmNvbSIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNo
X3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJleG9f
ZW1haWxfYWRkcmVzc19zZW5kZXIiLCAidG9vbHRpcCI6ICJPbmx5IGdldCBlbWFpbHMgc2VudCBm
cm9tIHRoaXMgZW1haWwgYWRkcmVzczsgbGVhdmUgYmxhbmsgdG8gaWdub3JlIHNlbmRlciBhdHRy
aWJ1dGUiLCAidHlwZV9pZCI6IDExLCAidXVpZCI6ICI4ZGQ0NjkyNi1iMWRjLTRkMWUtYWI2YS00
MjM5NTEwYjE5OWQiLCAidmFsdWVzIjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxz
ZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJs
ZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZh
bHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2V4b19l
bWFpbF9hZGRyZXNzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDMyMywgImlu
cHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAibmFtZSI6ICJleG9fZW1haWxf
YWRkcmVzcyIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNl
aG9sZGVyIjogInVzZXJAZXhhbXBsZS5jb20iLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6
IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6
IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogImV4b19lbWFpbF9hZGRyZXNzIiwgInRvb2x0
aXAiOiAiR2V0IGluZm9ybWF0aW9uIG9uIHRoaXMgdXNlciBlbWFpbCBhY2NvdW50IiwgInR5cGVf
aWQiOiAxMSwgInV1aWQiOiAiMDkyYTc1MmYtMTI5Ny00NmE0LWJhZTYtZTc1ZDFhOWI0ODA0Iiwg
InZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRp
b24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hv
c2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0
ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9leG9fZW1haWxfYWRk
cmVzc19zZW5kZXIiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogMzQ4LCAiaW5w
dXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJuYW1lIjogImV4b19lbWFpbF9h
ZGRyZXNzX3NlbmRlciIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwg
InBsYWNlaG9sZGVyIjogInVzZXJAZXhhbXBsZS5jb20iLCAicHJlZml4IjogInByb3BlcnRpZXMi
LCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRl
bXBsYXRlcyI6IFtdLCAidGV4dCI6ICJleG9fZW1haWxfYWRkcmVzc19zZW5kZXIiLCAidG9vbHRp
cCI6ICJFbnRlciB0aGUgZW1haWwgYWRkcmVzcyBvZiB0aGUgc2VuZGVyIiwgInR5cGVfaWQiOiA2
LCAidXVpZCI6ICI4NzYwYjMyZS03ODJmLTQyMDQtOTQ5Mi1lN2UwMGEyZTdkOTUiLCAidmFsdWVz
IjogW119LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZh
bHNlLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5pbmciLCAiaGlkZV9ub3RpZmlj
YXRpb24iOiBmYWxzZSwgImlkIjogNjEsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaW50ZXJu
YWwiOiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9
LCAib3BlcmF0aW9ucyI6IFtdLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IHRydWUsICJy
aWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJT
aW11bGF0aW9uIiwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRlbnQgaXMgYSBzaW11bGF0
aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gVGhpcyBmaWVsZCBpcyByZWFkLW9ubHkuIiwgInR5
cGVfaWQiOiAwLCAidXVpZCI6ICJjM2YwZTNlZC0yMWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2Ei
LCAidmFsdWVzIjogW119XSwgImZ1bmN0aW9ucyI6IFt7ImNyZWF0b3IiOiB7ImRpc3BsYXlfbmFt
ZSI6ICJSZXNpbGllbnQgU3lzYWRtaW4iLCAiaWQiOiAzLCAibmFtZSI6ICJhQGEuY29tIiwgInR5
cGUiOiAidXNlciJ9LCAiZGVzY3JpcHRpb24iOiB7ImZvcm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQi
OiAiVGhpcyBmdW5jdGlvbiB3aWxsIGdldCBFeGNoYW5nZSBPbmxpbmUgdXNlciBwcm9maWxlIGZv
ciBhIGdpdmVuIGVtYWlsIGFkZHJlc3MuIn0sICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAiZm5fZXhj
aGFuZ2Vfb25saW5lIiwgImRpc3BsYXlfbmFtZSI6ICJFeGNoYW5nZSBPbmxpbmU6IEdldCBFbWFp
bCBVc2VyIFByb2ZpbGUiLCAiZXhwb3J0X2tleSI6ICJleGNoYW5nZV9vbmxpbmVfZ2V0X2VtYWls
X3VzZXJfcHJvZmlsZSIsICJpZCI6IDM2LCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9u
YW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJpZCI6IDMsICJuYW1lIjogImFAYS5jb20iLCAi
dHlwZSI6ICJ1c2VyIn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTc0NDMyMzM4MjIwLCAibmFt
ZSI6ICJleGNoYW5nZV9vbmxpbmVfZ2V0X2VtYWlsX3VzZXJfcHJvZmlsZSIsICJ0YWdzIjogW10s
ICJ1dWlkIjogImY3YWY5Mjc3LWRlYTYtNDgyNS05Mjc5LTA5NTk0ZDhlMDc3MCIsICJ2ZXJzaW9u
IjogNywgInZpZXdfaXRlbXMiOiBbeyJjb250ZW50IjogIjA5MmE3NTJmLTEyOTctNDZhNC1iYWU2
LWU3NWQxYTliNDgwNCIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJf
X2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAi
c3RlcF9sYWJlbCI6IG51bGx9XSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImRlc2Ny
aXB0aW9uIjogbnVsbCwgIm5hbWUiOiAiRXhhbXBsZTogRXhjaGFuZ2UgT25saW5lIEdldCBVc2Vy
IFByb2ZpbGUiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAicHJvZ3JhbW1hdGljX25hbWUi
OiAiZXhhbXBsZV9leGNoYW5nZV9vbmxpbmVfZ2V0X3VzZXJfcHJvZmlsZSIsICJ0YWdzIjogW10s
ICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogMzF9XX0sIHsiY3JlYXRvciI6IHsiZGlzcGxh
eV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJpZCI6IDMsICJuYW1lIjogImFAYS5jb20i
LCAidHlwZSI6ICJ1c2VyIn0sICJkZXNjcmlwdGlvbiI6IHsiZm9ybWF0IjogInRleHQiLCAiY29u
dGVudCI6ICJUaGlzIGZ1bmN0aW9uIHdpbGwgcXVlcnkgRXhjaGFuZ2UgT25saW5lIHRvIGZpbmQg
ZW1haWxzIG1hdGNoaW5nIHRoZSBzcGVjaWZpZWQgaW5wdXQgcGFyYW1ldGVycy4ifSwgImRlc3Rp
bmF0aW9uX2hhbmRsZSI6ICJmbl9leGNoYW5nZV9vbmxpbmUiLCAiZGlzcGxheV9uYW1lIjogIkV4
Y2hhbmdlIE9ubGluZTogUXVlcnkgRW1haWxzIiwgImV4cG9ydF9rZXkiOiAiZXhjaGFuZ2Vfb25s
aW5lX3F1ZXJ5X2VtYWlscyIsICJpZCI6IDQ0LCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxh
eV9uYW1lIjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJpZCI6IDMsICJuYW1lIjogImFAYS5jb20i
LCAidHlwZSI6ICJ1c2VyIn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTc1ODExOTU2MTY3LCAi
bmFtZSI6ICJleGNoYW5nZV9vbmxpbmVfcXVlcnlfZW1haWxzIiwgInRhZ3MiOiBbXSwgInV1aWQi
OiAiNmYwOWZhYjItMjE3Ni00YzI3LWFiMzktY2MxOTU2OGUwOGU1IiwgInZlcnNpb24iOiAzLCAi
dmlld19pdGVtcyI6IFt7ImNvbnRlbnQiOiAiMDkyYTc1MmYtMTI5Ny00NmE0LWJhZTYtZTc1ZDFh
OWI0ODA0IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rp
b24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xh
YmVsIjogbnVsbH0sIHsiY29udGVudCI6ICI4ZGQ0NjkyNi1iMWRjLTRkMWUtYWI2YS00MjM5NTEw
YjE5OWQiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlv
biIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFi
ZWwiOiBudWxsfV0sICJ3b3JrZmxvd3MiOiBbeyJhY3Rpb25zIjogW10sICJkZXNjcmlwdGlvbiI6
IG51bGwsICJuYW1lIjogIkV4YW1wbGU6IEV4Y2hhbmdlIE9ubGluZSBRdWVyeSBFbWFpbHMiLCAi
b2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9l
eGNoYW5nZV9vbmxpbmVfcXVlcnlfZW1haWxzIiwgInRhZ3MiOiBbXSwgInV1aWQiOiBudWxsLCAi
d29ya2Zsb3dfaWQiOiAzMn1dfV0sICJnZW9zIjogbnVsbCwgImdyb3VwcyI6IG51bGwsICJpZCI6
IDQ0LCAiaW5ib3VuZF9tYWlsYm94ZXMiOiBudWxsLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMi
OiBbXSwgImluY2lkZW50X3R5cGVzIjogW3sidXBkYXRlX2RhdGUiOiAxNTc1ODMxMTI5NzQ1LCAi
Y3JlYXRlX2RhdGUiOiAxNTc1ODMxMTI5NzQ1LCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgt
YWQzOS00YTAwMDQwNDRhYTAiLCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdl
cyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50
ZXJuYWwpIiwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImVu
YWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVsbCwgImhpZGRl
biI6IGZhbHNlLCAiaWQiOiAwfV0sICJpbmR1c3RyaWVzIjogbnVsbCwgImxheW91dHMiOiBbXSwg
ImxvY2FsZSI6IG51bGwsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7ImFwaV9rZXlzIjogW10s
ICJkZXN0aW5hdGlvbl90eXBlIjogMCwgImV4cGVjdF9hY2siOiB0cnVlLCAiZXhwb3J0X2tleSI6
ICJmbl9leGNoYW5nZV9vbmxpbmUiLCAibmFtZSI6ICJmbl9leGNoYW5nZV9vbmxpbmUiLCAicHJv
Z3JhbW1hdGljX25hbWUiOiAiZm5fZXhjaGFuZ2Vfb25saW5lIiwgInRhZ3MiOiBbXSwgInVzZXJz
IjogWyJhQGEuY29tIl0sICJ1dWlkIjogImVmMTFjODcxLTY3ODQtNDEwMS1iN2EwLWJiZmJlNTU3
NGFhZiJ9XSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAib3ZlcnJpZGVzIjogW10sICJwaGFzZXMi
OiBbXSwgInJlZ3VsYXRvcnMiOiBudWxsLCAicm9sZXMiOiBbXSwgInNjcmlwdHMiOiBbXSwgInNl
cnZlcl92ZXJzaW9uIjogeyJidWlsZF9udW1iZXIiOiA1MTEyLCAibWFqb3IiOiAzMywgIm1pbm9y
IjogMCwgInZlcnNpb24iOiAiMzMuMC41MTEyIn0sICJ0YWdzIjogW10sICJ0YXNrX29yZGVyIjog
W10sICJ0aW1lZnJhbWVzIjogbnVsbCwgInR5cGVzIjogW10sICJ3b3JrZmxvd3MiOiBbeyJhY3Rp
b25zIjogW10sICJjb250ZW50IjogeyJ2ZXJzaW9uIjogNSwgIndvcmtmbG93X2lkIjogImV4YW1w
bGVfZXhjaGFuZ2Vfb25saW5lX2dldF91c2VyX3Byb2ZpbGUiLCAieG1sIjogIjw/eG1sIHZlcnNp
b249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJo
dHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJo
dHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0
cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJo
dHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMu
b3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9Y
TUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEu
b3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVfZXhjaGFuZ2Vfb25saW5lX2dldF91c2Vy
X3Byb2ZpbGVcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IEV4Y2hhbmdl
IE9ubGluZSBHZXQgVXNlciBQcm9maWxlXCI+PGRvY3VtZW50YXRpb24+VGhpcyBleGFtcGxlIHdv
cmtmbG93IGdldHMgdGhlIEV4Y2hhbmdlIE9ubGluZSB1c2VyIHByb2ZpbGUgdGhhdCBtYXRjaGVz
IHRoZSBpbnB1dCBlbWFpbCBhZGRyZXNzIGFuZCB3cml0ZXMgdGhlIGluZm9ybWF0aW9uIHRvIGEg
bm90ZS48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1c
Ij48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzE4enRqOWI8L291dGdvaW5nPjwvc3RhcnRFdmVudD48
c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wajZ6cDg5XCIgbmFtZT1cIkV4Y2hhbmdlIE9u
bGluZTogR2V0IEVtYWlsIFVzZXIgUC4uLlwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48
ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiZjdhZjkyNzctZGVh
Ni00ODI1LTkyNzktMDk1OTRkOGUwNzcwXCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0X3Byb2Nlc3Np
bmdfc2NyaXB0XCI6XCJpZiByZXN1bHRzLmNvbnRlbnRbXFxcImVycm9yXFxcIl0gaXMgbm90IE5v
bmU6XFxuICBub3RlVGV4dCA9IHVcXFwiRXhjaGFuZ2UgT25saW5lIHVzZXIgcHJvZmlsZSBmb3Ig
ZW1haWwgTk9UIEZPVU5EOiB7MH1cXFxcbnsxfVxcXCIuZm9ybWF0KHJlc3VsdHMuaW5wdXRzW1xc
XCJleG9fZW1haWxfYWRkcmVzc1xcXCJdLCByZXN1bHRzLnByZXR0eV9zdHJpbmcpXFxuZWxzZTpc
XG4gIG5vdGVUZXh0ID0gdVxcXCJFeGNoYW5nZSBPbmxpbmUgdXNlciBwcm9maWxlIGZvciBlbWFp
bDogezB9XFxcXG57MX1cXFwiLmZvcm1hdChyZXN1bHRzLmlucHV0c1tcXFwiZXhvX2VtYWlsX2Fk
ZHJlc3NcXFwiXSwgcmVzdWx0cy5wcmV0dHlfc3RyaW5nKVxcblxcbmluY2lkZW50LmFkZE5vdGUo
bm90ZVRleHQpXCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5leG9fZW1haWxf
YWRkcmVzcyA9IGFydGlmYWN0LnZhbHVlXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNp
b25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzE4enRqOWI8L2luY29taW5nPjxvdXRn
b2luZz5TZXF1ZW5jZUZsb3dfMWU2MHJ5ODwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVu
Y2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzE4enRqOWJcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wajZ6cDg5XCIvPjxlbmRFdmVudCBp
ZD1cIkVuZEV2ZW50XzBpZ3FsZGJcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzFlNjByeTg8L2lu
Y29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xZTYwcnk4
XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMGo2enA4OVwiIHRhcmdldFJlZj1cIkVuZEV2ZW50
XzBpZ3FsZGJcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwi
Pjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxh
c3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0ZXh0
QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzF3c2JocTVcIj48dGV4dD48IVtDREFUQVtJ
bnB1dDogZW1haWwgYWRkcmVzcyBvZiBFeGNoYW5nZSBPbmxpbmUgdXNlclxuXV0+PC90ZXh0Pjwv
dGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMTFiejlxeVwiIHNv
dXJjZVJlZj1cIlNlcnZpY2VUYXNrXzBqNnpwODlcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlv
bl8xd3NiaHE1XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzBubG1ya3lc
Ij48dGV4dD48IVtDREFUQVtPdXRwdXQ6IEluY2lkZW50IE5vdGUgY29udGFpbiB0aGUgZW1haWwg
dXNlciBpbmZvcm1hdGlvblxuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9u
IGlkPVwiQXNzb2NpYXRpb25fMG13enNnZFwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzBqNnpw
ODlcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8wbmxtcmt5XCIvPjwvcHJvY2Vzcz48YnBt
bmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJw
bW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNo
YXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1
NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIx
NjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+
PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFu
bm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+
PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lh
dGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBv
aW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6
d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwv
YnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRh
c2tfMGo2enA4OVwiIGlkPVwiU2VydmljZVRhc2tfMGo2enA4OV9kaVwiPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCI1MDdcIiB5PVwiMTY2XCIvPjwvYnBtbmRp
OkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzE4
enRqOWJcIiBpZD1cIlNlcXVlbmNlRmxvd18xOHp0ajliX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9
XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9p
bnQgeD1cIjUwN1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6
QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMzUy
LjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBt
bmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzBpZ3FsZGJcIiBpZD1cIkVuZEV2
ZW50XzBpZ3FsZGJfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwi
IHg9XCI3OTYuNzkzMTc5MzE3OTMxOFwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9t
Z2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI4MTQuNzkzMTc5MzE3OTMx
OFwiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBt
bmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFlNjByeThcIiBpZD1cIlNl
cXVlbmNlRmxvd18xZTYwcnk4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI2MDdcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjc5N1wiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNzAyXCIgeT1cIjE4NFwiLz48
L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBt
bkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xd3NiaHE1XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8x
d3NiaHE1X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1c
IjI4NlwiIHk9XCI1OFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1u
RWxlbWVudD1cIkFzc29jaWF0aW9uXzExYno5cXlcIiBpZD1cIkFzc29jaWF0aW9uXzExYno5cXlf
ZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjUwN1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMTc2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzYxXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2lu
dFwiIHk9XCI4OFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIlRleHRBbm5vdGF0aW9uXzBubG1ya3lcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzBubG1y
a3lfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiNjYw
XCIgeT1cIjU4XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVt
ZW50PVwiQXNzb2NpYXRpb25fMG13enNnZFwiIGlkPVwiQXNzb2NpYXRpb25fMG13enNnZF9kaVwi
PjxvbWdkaTp3YXlwb2ludCB4PVwiNjAwXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIx
NjlcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2OTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjg4XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpC
UE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiJ9LCAiY29udGVudF92ZXJzaW9uIjogNSwgImNyZWF0
b3JfaWQiOiAiYUBhLmNvbSIsICJkZXNjcmlwdGlvbiI6ICJUaGlzIGV4YW1wbGUgd29ya2Zsb3cg
Z2V0cyB0aGUgRXhjaGFuZ2UgT25saW5lIHVzZXIgcHJvZmlsZSB0aGF0IG1hdGNoZXMgdGhlIGlu
cHV0IGVtYWlsIGFkZHJlc3MgYW5kIHdyaXRlcyB0aGUgaW5mb3JtYXRpb24gdG8gYSBub3RlLiIs
ICJleHBvcnRfa2V5IjogImV4YW1wbGVfZXhjaGFuZ2Vfb25saW5lX2dldF91c2VyX3Byb2ZpbGUi
LCAibGFzdF9tb2RpZmllZF9ieSI6ICJhQGEuY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1
NzQ2MTY0MjU2OTUsICJuYW1lIjogIkV4YW1wbGU6IEV4Y2hhbmdlIE9ubGluZSBHZXQgVXNlciBQ
cm9maWxlIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInByb2dyYW1tYXRpY19uYW1lIjog
ImV4YW1wbGVfZXhjaGFuZ2Vfb25saW5lX2dldF91c2VyX3Byb2ZpbGUiLCAidGFncyI6IFtdLCAi
dXVpZCI6ICIxYmIzZDE0Yi03YzI2LTQ4YmMtYWM1ZS1jYmYzZTU1YmMxOTUiLCAid29ya2Zsb3df
aWQiOiAzMX0sIHsiYWN0aW9ucyI6IFtdLCAiY29udGVudCI6IHsidmVyc2lvbiI6IDUsICJ3b3Jr
Zmxvd19pZCI6ICJleGFtcGxlX2V4Y2hhbmdlX29ubGluZV9xdWVyeV9lbWFpbHMiLCAieG1sIjog
Ijw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4
bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxu
czpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1s
bnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5z
Om9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpy
ZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0
dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53
My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8v
d3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVfZXhjaGFuZ2Vfb25s
aW5lX3F1ZXJ5X2VtYWlsc1wiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTog
RXhjaGFuZ2UgT25saW5lIFF1ZXJ5IEVtYWlsc1wiPjxkb2N1bWVudGF0aW9uPlRoaXMgd29ya2Zs
b3cgd2lsbCBxdWVyeSB0aGUgRXhjaGFuZ2UgT25saW5lIGVtYWlscyBmb3IgdGhlIHNwZWNpZmll
ZCBhcnRpZmFjdCBzZW5kZXIgZW1haWwgYWRkcmVzcyBhbmQgd3JpdGUgdGhlIHJlc3VsdHMgdG8g
LjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxv
dXRnb2luZz5TZXF1ZW5jZUZsb3dfMWJnYjVrZjwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2
aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzFpc2thcTlcIiBuYW1lPVwiRXhjaGFuZ2UgT25saW5l
OiBRdWVyeSBFbWFpbHNcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVs
ZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cIjZmMDlmYWIyLTIxNzYtNGMyNy1hYjM5
LWNjMTk1NjhlMDhlNVwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwi
OlwiIyBHZXQgZW1haWwgaWRzXFxuZW1haWxfaWRzID0gcmVzdWx0cy5lbWFpbF9pZHNcXG4jIEdl
dCBlbWFpbHNcXG5lbWFpbHMgPSByZXN1bHRzLmVtYWlsc1xcblxcbiMgTG9vcCB0aHJvdWdoIGFs
bCBxdWVyaWVkIGVtYWlsc1xcbmZvciBlbWFpbF9pZCBpbiBlbWFpbF9pZHM6XFxuICAjIEdldCBl
bWFpbCB0aGF0IGNvcnJlc3BvbmRzIHRvIGVtYWlsX2lkXFxuICBlbWFpbCA9IGVtYWlsc1tlbWFp
bF9pZF1cXG4gICMgQ3JlYXRlIGFydGlmYWN0cyBmcm9tIHNlbmRlciBpbmZvcm1hdGlvbiB0aGF0
IGlzbid0IE5vbmVcXG4gIGlmIGVtYWlsWydzZW5kZXJfbmFtZSddOlxcbiAgICBpbmNpZGVudC5h
ZGRBcnRpZmFjdCgnRW1haWwgU2VuZGVyIE5hbWUnLCBlbWFpbFsnc2VuZGVyX25hbWUnXSwgJ1Nl
bmRlciBuYW1lIGZvciBlbWFpbCB7fScuZm9ybWF0KGVtYWlsX2lkKSlcXG4gIGlmIGVtYWlsWydz
ZW5kZXJfZW1haWwnXTpcXG4gICAgaW5jaWRlbnQuYWRkQXJ0aWZhY3QoJ0VtYWlsIFNlbmRlcics
IGVtYWlsWydzZW5kZXJfZW1haWwnXSwgJ1NlbmRlciBlbWFpbCBhZGRyZXNzIGZvciBlbWFpbCB7
fScuZm9ybWF0KGVtYWlsX2lkKSlcXG4gIGlmIGVtYWlsWydzdWJqZWN0J106XFxuICAgIGluY2lk
ZW50LmFkZEFydGlmYWN0KCdFbWFpbCBTdWJqZWN0JywgZW1haWxbJ3N1YmplY3QnXSwgJ0VtYWls
IHN1YmplY3QgZm9yIGVtYWlsIHt9Jy5mb3JtYXQoZW1haWxfaWQpKVxcbiAgaWYgZW1haWxbJ2Jv
ZHknXTpcXG4gICAgaW5jaWRlbnQuYWRkQXJ0aWZhY3QoJ0VtYWlsIEJvZHknLCBlbWFpbFsnYm9k
eSddLCAnRW1haWwgYm9keSBpbiBIVE1MIGZvciBlbWFpbCB7fScuZm9ybWF0KGVtYWlsX2lkKSlc
XG4gICAgXFxuICAjIExvb3AgdGhyb3VnaCBhdHRhY2htZW50cyBhbmQgY3JlYXRlIGFydGlmYWN0
cyBhbmQgbm90ZXMgZm9yIHRoZW1cXG4gIGF0dGFjaG1lbnRfaWRzID0gZW1haWxbJ2F0dGFjaG1l
bnRfaWRzJ11cXG4gIGF0dGFjaG1lbnRzID0gZW1haWxbJ2F0dGFjaG1lbnRzJ11cXG4gIGZvciBh
dHRhY2htZW50X2lkIGluIGF0dGFjaG1lbnRfaWRzOlxcbiAgICBhdHRhY2htZW50ID0gYXR0YWNo
bWVudHNbYXR0YWNobWVudF9pZF1cXG4gICAgaW5jaWRlbnQuYWRkQXJ0aWZhY3QoJ0VtYWlsIEF0
dGFjaG1lbnQgTmFtZScsIGF0dGFjaG1lbnRbJ2F0dGFjaG1lbnRfbmFtZSddLCAnQXR0YWNobWVu
dCBuYW1lIGZvciBhdHRhY2htZW50IHt9IGZyb20gZW1haWwge30nLmZvcm1hdChhdHRhY2htZW50
X2lkLCBlbWFpbF9pZCkpXFxuICAgIFxcbiAgICAjIEFkZCBub3RlXFxuICAgIG5vdGVUZXh0ID0g
J2Jhc2U2NCBhdHRhY2htZW50IG9mIHt9IGZyb20gZW1haWwge306IFxcXFxue30nLmZvcm1hdChh
dHRhY2htZW50WydhdHRhY2htZW50X25hbWUnXSwgZW1haWxfaWQsIGF0dGFjaG1lbnRbJ2F0dGFj
aG1lbnRfYmFzZTY0J10pXFxuICAgIGluY2lkZW50LmFkZE5vdGUobm90ZVRleHQpXCIsXCJwcmVf
cHJvY2Vzc2luZ19zY3JpcHRcIjpcIiMgR2V0IHRoZSBlbWFpbCBhZGRyZXNzIG9mIHRoZSB1c2Vy
IHdob3NlIG1haWxib3ggd2lsbCBiZSBxdWVyaWVkLlxcbmlucHV0cy5leG9fZW1haWxfYWRkcmVz
cyA9IGFydGlmYWN0LnZhbHVlXFxuXFxuIyBHZXQgdGhlIHNlYXJjaCBjcml0ZXJpYSBmcm9tIHRo
ZSBhY3Rpdml0eSBydWxlcyBpZiBhdmFpbGFibGUuIFxcbmlucHV0cy5leG9fZW1haWxfYWRkcmVz
c19zZW5kZXIgPSBpbnB1dHMuZXhvX2VtYWlsX2FkZHJlc3Nfc2VuZGVyIGlmIHJ1bGUucHJvcGVy
dGllcy5leG9fZW1haWxfYWRkcmVzc19zZW5kZXIgaXMgTm9uZSBlbHNlIHJ1bGUucHJvcGVydGll
cy5leG9fZW1haWxfYWRkcmVzc19zZW5kZXJcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVu
c2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMWJnYjVrZjwvaW5jb21pbmc+PG91
dGdvaW5nPlNlcXVlbmNlRmxvd18wOXJsM3VxPC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxlbmRF
dmVudCBpZD1cIkVuZEV2ZW50XzF0b3I5c2VcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzA5cmwz
dXE8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18w
OXJsM3VxXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWlza2FxOVwiIHRhcmdldFJlZj1cIkVu
ZEV2ZW50XzF0b3I5c2VcIi8+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xYmdiNWtm
XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRh
c2tfMWlza2FxOVwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0
XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+
PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0
RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRl
eHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMG81MHU3OFwiLz48YXNzb2NpYXRpb24g
aWQ9XCJBc3NvY2lhdGlvbl8wN3R5ODBzXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWlza2Fx
OVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzBvNTB1NzhcIi8+PHRleHRBbm5vdGF0aW9u
IGlkPVwiVGV4dEFubm90YXRpb25fMDNqdG1yeVwiLz48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lh
dGlvbl8xZWFxbmV5XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWlza2FxOVwiIHRhcmdldFJl
Zj1cIlRleHRBbm5vdGF0aW9uXzAzanRtcnlcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdy
YW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1
bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1l
bnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxv
bWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhc
Ii8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5
MFwiIHg9XCIxNTdcIiB5PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1O
U2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4
aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1O
U2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhc
IiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2OVwi
IHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwi
MTUzXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVk
Z2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18xaXNrYXE5XCIg
aWQ9XCJTZXJ2aWNlVGFza18xaXNrYXE5X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwi
IHdpZHRoPVwiMTAwXCIgeD1cIjQ1MFwiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMXRvcjlzZVwiIGlkPVwiRW5k
RXZlbnRfMXRvcjlzZV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2
XCIgeD1cIjc0MC43Nzk5Nzc5OTc3OTk3XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjE0XCIgd2lkdGg9XCIwXCIgeD1cIjc1OC43Nzk5Nzc5OTc3
OTk3XCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMDlybDN1cVwiIGlkPVwi
U2VxdWVuY2VGbG93XzA5cmwzdXFfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjU1MFwiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNzQxXCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9t
Z2RjOkJvdW5kcyBoZWlnaHQ9XCIxNFwiIHdpZHRoPVwiOTBcIiB4PVwiNjAwLjVcIiB5PVwiMTg0
XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5FZGdl
IGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFiZ2I1a2ZcIiBpZD1cIlNlcXVlbmNlRmxvd18x
YmdiNWtmX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQ1MFwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMTRcIiB3aWR0aD1cIjkwXCIgeD1cIjI3OVwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBN
TkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwi
VGV4dEFubm90YXRpb25fMG81MHU3OFwiIGlkPVwiVGV4dEFubm90YXRpb25fMG81MHU3OF9kaVwi
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI2MjYuNzc5OTc3
OTk3Nzk5N1wiIHk9XCI0NC42NDc5NjQ3OTY0Nzk2NVwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJw
bW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzA3dHk4MHNcIiBpZD1cIkFz
c29jaWF0aW9uXzA3dHk4MHNfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjU0NFwiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMTcwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNjU5XCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCI3NVwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRp
OkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzAzanRtcnlcIiBpZD1cIlRl
eHRBbm5vdGF0aW9uXzAzanRtcnlfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lk
dGg9XCIxMDBcIiB4PVwiMjY3Ljc3OTk3Nzk5Nzc5OThcIiB5PVwiNDVcIi8+PC9icG1uZGk6QlBN
TlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xZWFxbmV5
XCIgaWQ9XCJBc3NvY2lhdGlvbl8xZWFxbmV5X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0NTZc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE3MFwiLz48b21nZGk6d2F5cG9pbnQgeD1c
IjMzN1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiNzVcIi8+PC9icG1uZGk6QlBNTkVk
Z2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+
In0sICJjb250ZW50X3ZlcnNpb24iOiA1LCAiY3JlYXRvcl9pZCI6ICJhQGEuY29tIiwgImRlc2Ny
aXB0aW9uIjogIlRoaXMgd29ya2Zsb3cgd2lsbCBxdWVyeSB0aGUgRXhjaGFuZ2UgT25saW5lIGVt
YWlscyBmb3IgdGhlIHNwZWNpZmllZCBhcnRpZmFjdCBzZW5kZXIgZW1haWwgYWRkcmVzcyBhbmQg
d3JpdGUgdGhlIHJlc3VsdHMgdG8gLiIsICJleHBvcnRfa2V5IjogImV4YW1wbGVfZXhjaGFuZ2Vf
b25saW5lX3F1ZXJ5X2VtYWlscyIsICJsYXN0X21vZGlmaWVkX2J5IjogImFAYS5jb20iLCAibGFz
dF9tb2RpZmllZF90aW1lIjogMTU3NTgxMjU2ODQ0MywgIm5hbWUiOiAiRXhhbXBsZTogRXhjaGFu
Z2UgT25saW5lIFF1ZXJ5IEVtYWlscyIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJwcm9n
cmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX2V4Y2hhbmdlX29ubGluZV9xdWVyeV9lbWFpbHMiLCAi
dGFncyI6IFtdLCAidXVpZCI6ICI4MDA2NjUxZC0xOTcyLTQ3OWEtYWM3NC00NWY5YWFlNDc1MjMi
LCAid29ya2Zsb3dfaWQiOiAzMn1dLCAid29ya3NwYWNlcyI6IFtdfQ==
"""
    )