language: python
python: 3.6
os: linux
env:
  global:
    - PATH_ALLOW_IMAGE_NAMES="$TRAVIS_BUILD_DIR/.scripts/ALLOW_IMAGE_NAMES.txt"
    - PATH_PIP_REQ_MAIN="$TRAVIS_BUILD_DIR/.scripts/requirements_main.txt"
    - PATH_PIP_REQ_TESTS="$TRAVIS_BUILD_DIR/.scripts/requirements_tests.txt"
    - SCRIPTS_DIR="$TRAVIS_BUILD_DIR/.scripts"

    - ARTIFACTORY_BASE_URL="https://na.$ARTIFACTORY_URL_2/artifactory"
    - ARTIFACTORY_GENERIC_STORAGE="$ARTIFACTORY_BASE_URL/$ARTIFACTORY_GENERIC_STORAGE"
    - ARTIFACTORY_DOCKER_REPO="$ARTIFACTORY_DOCKER_REPO_NAME.$ARTIFACTORY_URL_2"
    - ARTIFACTORY_PYPI_INDEX="https://$ARTIFACTORY_USERNAME:$ARTIFACTORY_PASSWORD@na.artifactory.swg-devops.com/artifactory/api/pypi/sec-resilient-team-integrations-pypi-virtual/simple"

    - PYPI_INDEX="https://pypi.org/simple"

    - PACKAGE_NAME=`python .scripts/get_package_name_from_cmt_msg.py "$TRAVIS_COMMIT_MESSAGE"`

    - KEYWORD_BUILD_DEV_APP="[build-dev-app]"
    - BUILD_DEV_APP=$([[ "$TRAVIS_COMMIT_MESSAGE" != *"$KEYWORD_BUILD_DEV_APP"* ]]; echo $?)

    - KEYWORD_BUILD_MAIN_APP="[build-main-app]"
    - BUILD_MAIN_APP=$([[ "$TRAVIS_COMMIT_MESSAGE" != *"$KEYWORD_BUILD_MAIN_APP"* ]]; echo $?)

    - KEYWORD_DEV_DEPS='[dev-deps]'
    - USE_ARTIFACTORY_DEPS=`[[ "$TRAVIS_COMMIT_MESSAGE" != *"$KEYWORD_DEV_DEPS"* ]]; echo $?`
    - PYPI_INDEX_TO_USE=`if [ $USE_ARTIFACTORY_DEPS == 1 ]; then echo "$ARTIFACTORY_PYPI_INDEX"; else echo "$PYPI_INDEX"; fi`
    - DEV_DEPS=`[[ ( -z $TRAVIS_TAG && "$LATEST_COMMIT_MSG" =~ "$DEV_DEPS_KEYWORD" ) || "$TAG_MSG" =~ "$DEV_DEPS_KEYWORD" ]]; echo $?`

    - TEST_RESILIENT_APPLIANCE=staging2.internal.resilientsystems.com
    - OCTOKIT_API_ENDPOINT="https://github.ibm.com/api/v3/"
    - secure: VU1PL2bWOE+E3ieBz/0Oa2hIRXGeSFYubE9SYh3dH541h8V8FWE0kGt8P6xdZOGmf9xNsDL/O+rKqrq5TCKTdUQqFXm7RCD//iQrHUcbu2YU38XPpBQrWxSZs29sR3R6UkUypZahHmn/ghjgZnRxQIWGscYPvvNCiOP9X85ckmVaKLYPwW0HPH7vIKs9zcT8tEyRDANokc0BQDjeVu0s29FeKGyy9JVbuye8/1TmVkQWBvutvcQ/z/mOQ7dOO3fW0wkVwOHPF9FtBc79WzjK5w/Ej30EWHC5zdRG46+2FLcqKSHvkyuV59f0ojxLzRmeR1ueS37pNncmXfVMREwtiIYN/Dd3isLsg14RK1leu/JHiPxfQtz2TV4+yeVO4aZk+Bs/JLf1ZbXAE+A71hIH6rTUpEBq1S8qjKsfTPEWLg1cuq1ujf2WOAumdIf8rSOnQ9EbEfBlm3N8Wo9RjXbEx6hq+UHr7L28tw0u00gcAex6Ky2eRk+USFnXBHs/Kf5i29CWzw4Lcnb2hPa0bup3yNQuss/Yy+cQO5tDW8jJPP8joR5Fvr8fJZVtGlTGp09odHcrDGKvbdlf0gVmVDYawKi0v4m0URCKVy0vYAbzVOgZF46nW+VfcexiLxomwYpKeltigk+L52aV5DIodfuxS9aB6IJtEYSTO8Mf+Yo2x8Q=
    - secure: kr5Zz5frfrGOeuAylefGbDhY5s/YwyRhktuAly1ovOn/7Q3OJYjTq6h7wvnt1KQ/YeSdA+bxwOhWKbYHPQHAhovyo/5gsII7LruSs7VjdcD9tDoaYEoDBP7nki+NGr+dBVwrooGJ3f7TbuZs+4OSyPWD2FdN4PsOYLof4soDEW7C0cTP2KZ/wNGDjBGB2stOb6a5h4MQSohx+7B795noUoK5ojmygZObIGSDWmahR4kzCm+rEVLlMV0ptDCBXvn4xmJLCz5UOZhR27ckuiW342vNxShlms+rwWcvoxwbj61Qn3MEf9S9D59aJ+n4+u9Kb3VD4HJjlQ3rWZ/DADPfp7h6XOmfrQq3Xj3sQ4K2+8RMSFHdxWPsmhWd/Aty+YmWjoOnewoBfFaDUzFRURqwO3K+oh1H0IALTOTYQSYEeuVfi/+mwJRkKh0+IgvgscL5/bo+nVnQBk4FpWJRHV0x2fWiG8DHCKmInkkFSDHax3dHc9pYZXQTdNdfvsJRtc0rEn6GyVnRMia1TKLpB1joRhb7mkyc7pgDSatvV9W6+v6+evplHFxS7lkm9gqlW/ygJzPVYx7UaFuqo9cOi/c8sR6qf7NUTUi9Aa4aqY6qHNrkxfh7+5ck7wLTWmE0WL+0r3Z09Zg746SIGYqLrFQJZPn+JanFEy0q7kAU2Zr8vgE=
    - MASTER_BUILD=$( [[ $TRAVIS_BRANCH == "master"  &&  $TRAVIS_EVENT_TYPE != "pull_request" ]]; echo $? )
    # get the message of the latest tag this code is described by
    - LATEST_COMMIT_MSG=`if [[ $TRAVIS_EVENT_TYPE == "pull_request" ]]; then git --no-pager log --format=%B -n 1 $(echo $TRAVIS_COMMIT_RANGE | tr '.' '\n' | tail -n 1); else echo $TRAVIS_COMMIT_MESSAGE; fi`
    - TAG_MSG=`git tag -ln --format '%(subject)' $(git describe --tags --abbrev=0) | head -n 1`
    # this checks if commit message or a tag message if it's a tag push have [dev-deps] in them
    - GITHUB_PR_COMMENT_URL=https://api.github.ibm.com/repos/${TRAVIS_REPO_SLUG}/issues/${TRAVIS_PULL_REQUEST}/comments
# Exclude these branches from having jobs ran.
branches:
  except:
    - public
    - /^_.*$/

stages:
  - name: run all tests
    if: branch = master AND type = cron
  - name: run package tests
    if: branch != master
  # Every commit not on master runs tests and performs static analysis
  - name: static analysis
    if: branch != master OR type in (pull_request)
  # For every commit in pull_request, or on special tag - images and packages are built and pushed to Artifactory
  - name: build images and packages
    if: type in (pull_request) OR ( tag IS present AND tag =~ ^container/.+ )
  # Rebuild all images
  - name: rebuild all images
    if: tag =~ ^rebuild/.+

matrix:

  # Specification of jobs which may fail but should not fail the build
  # TODO: Review
  allow_failures:
    # The safety checker job is likely to fail often in its initial usage
    # Rather than explicity setting it to always pass
    # Allow failures of the job to still gather the useful info
    - name: Safety Checker

  fast_finish: true

  include:

    - stage: run all tests
      name: Python 2.7 Unit Tests - Main
      python: 2.7
      env:
        - RUN_TYPE=unit_test_main TOXENV=py27
      install:
        - pip install -U -r "$PATH_PIP_REQ_MAIN"
        - pip install -U -r "$PATH_PIP_REQ_TESTS"
      script:
        - echo "Starting Python 2.7 Unit Tests - Main"
        - .scripts/run_tests.sh "ALL" "$PYPI_INDEX_TO_USE"

    - stage: run all tests
      name: Python 3.6 Unit Tests - Main
      python: 3.6
      env:
        - RUN_TYPE=unit_test_main TOXENV=py36
      install:
        - pip install -U -r "$PATH_PIP_REQ_MAIN"
        - pip install -U -r "$PATH_PIP_REQ_TESTS"
      script:
        - echo "Starting Python 3.6 Unit Tests - Main"
        - .scripts/run_tests.sh "ALL" "$PYPI_INDEX_TO_USE"

    - stage: run package tests
      name: Python 2.7 Unit Tests - Package
      python: 2.7
      env:
        - RUN_TYPE=unit_test_package TOXENV=py27
      install:
        - pip install -U -r "$PATH_PIP_REQ_MAIN"
        - pip install -U -r "$PATH_PIP_REQ_TESTS"
      script:
        - echo "Starting Python 2.7 Unit Tests - Package"
        - .scripts/run_tests.sh "$PACKAGE_NAME" "$PYPI_INDEX_TO_USE"

    - stage: run package tests
      name: Python 3.6 Build and Run Tests
      python: 3.6
      env:
        - RUN_TYPE=unit_test_package TOXENV=py36
      install:
        - pip install -U -r "$PATH_PIP_REQ_MAIN"
        - pip install -U -r "$PATH_PIP_REQ_TESTS"
      script:
        - echo "Starting Python 3.6 Unit Tests - Package"
        - .scripts/run_tests.sh "$PACKAGE_NAME" "$PYPI_INDEX_TO_USE"

    # Jobs that perform static analysis; code quality, security scans etc
    - stage: static analysis
      name: Py2.7 Bandit Security Scan
      python: 2.7
      env:
        - ANALYSIS_NAME="Py2.7 Bandit Security Scan"
      install:
        - pip install bandit==1.6.2
      script:
        - .scripts/run_bandit_scan_on_updated_packages.sh

    - stage: static analysis
      name: Py3.6 Bandit Security Scan
      python: 3.6
      env:
        - ANALYSIS_NAME="Py3.6 Bandit Security Scan"
      install:
        - pip install bandit
      script:
        - .scripts/run_bandit_scan_on_updated_packages.sh

    - stage: static analysis
      name: Pylint
      python: 3.6
      env:
        - ANALYSIS_NAME="Pylint"
      install:
        - pip install pylint
      script:
        - .scripts/pylint.sh

    - stage: static analysis
      name: Safety Checker
      python: 3.6
      env:
        - ANALYSIS_NAME="CVE Search against dependancies"
      install:
        - pip install safety
      script:
        - .scripts/run_safety_scan_for_cve.sh

    - stage: build image and app zip
      name: Build Image and App zip
      services:
        - docker
      install:
        - pip install resilient-sdk -i $PYPI_INDEX_TO_USE
      script:
        - if [ $BUILD_DEV_APP == 1 ]; then
            .scripts/build_image_and_app_zip.sh "$PACKAGE_NAME" "DEV" "$PYPI_INDEX_TO_USE";
            PATH_APP_ZIP=`cat "$TRAVIS_BUILD_DIR/PATH_APP_ZIP.txt"`;
            echo "PATH_APP_ZIP=$PATH_APP_ZIP";
            FILE_NAME=$(basename $PATH_APP_ZIP);
            .scripts/send_slack_notification.sh "Built DEV version of [$PACKAGE_NAME] \n Artifactory App.zip - <$PATH_APP_ZIP|$FILE_NAME>" "success";

          elif [ $BUILD_MAIN_APP == 1 ]; then
            .scripts/build_image_and_app_zip.sh "$PACKAGE_NAME" "MAIN" "$PYPI_INDEX_TO_USE";
            PATH_APP_ZIP=`cat "$TRAVIS_BUILD_DIR/PATH_APP_ZIP.txt"`;
            echo "PATH_APP_ZIP=$PATH_APP_ZIP";
            FILE_NAME=$(basename $PATH_APP_ZIP);
            .scripts/send_slack_notification.sh "Built MAIN version of [$PACKAGE_NAME] \n Artifactory App.zip - <$PATH_APP_ZIP|$FILE_NAME> \n Pushed image to <https://quay.io/user/ibmresilient|quay.io>" "success";

          else
            echo "No build keywords found. Not building...";
          fi

    - stage: rebuild all images
      python: 3.6
      services:
        - docker
      install:
        - pip install -U -r "$PATH_PIP_REQ_MAIN"
        - pip install resilient-sdk
        - sudo apt-get install jq
      script:
        # This will take split the git tag on '/'
        # E.g.: tag is 'rebuild/40.1.1880/fn_utilities/ARTIFACTORY' OR rebuild/40.1.1880/ALL/QUAY
        - PYTHON_LIBRARIES_VERSION=$(echo $TRAVIS_TAG | cut -d "/" -f 2)
        - IMAGE_TO_REBUILD=$(echo $TRAVIS_TAG | cut -d "/" -f 3)
        - REPO_TO_PUSH=$(echo $TRAVIS_TAG | cut -d "/" -f 4)
        - .scripts/rebuild_images.sh "$PYTHON_LIBRARIES_VERSION" "$IMAGE_TO_REBUILD" "$REPO_TO_PUSH"

# If one job fails the whole build fails, so we can send it here
after_failure:
  - .scripts/send_notification.sh "" failure
