# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_cloud_foundry"""

try:
    from resilient import ImportDefinition
except ImportError:
    # Support Apps running on resilient-circuits < v35.0.195
    from resilient_circuits.util import ImportDefinition


def codegen_reload_data():
    """
    Parameters required reload codegen for the fn_cloud_foundry package
    """
    return {
        "package": u"fn_cloud_foundry",
        "message_destinations": [u"cloud_foundry"],
        "functions": [u"fn_cloud_foundry_instance_command", u"fn_cloud_foundry_create_app", u"fn_cloud_foundry_manage_applications"],
        "workflows": [u"cloud_foundry_stop_application", u"cloud_foundry_instance_command", u"cloud_foundry_create_an_application"],
        "actions": [u"Example: Cloud Foundry Create Application", u"Example: Cloud Foundry Instance Command", u"Example: Cloud Foundry Stop Application"],
        "incident_fields": [],
        "incident_artifact_types": [],
        "datatables": [],
        "automatic_tasks": [],
        "scripts": []
    }


def customization_data(client=None):
    """
    Returns a Generator of ImportDefinitions (Customizations).
    Install them using `resilient-circuits customize`

    Contents:
    - Message Destinations:
        - cloud_foundry
    - Functions:
        - fn_cloud_foundry_instance_command
        - fn_cloud_foundry_create_app
        - fn_cloud_foundry_manage_applications
    - Workflows:
        - cloud_foundry_stop_application
        - cloud_foundry_instance_command
        - cloud_foundry_create_an_application
    - Rules:
        - Example: Cloud Foundry Create Application
        - Example: Cloud Foundry Instance Command
        - Example: Cloud Foundry Stop Application
    """

    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFt7ImV2YWx1YXRpb25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFj
dC52YWx1ZSIsICJtZXRob2QiOiAiZXF1YWxzIiwgInR5cGUiOiBudWxsLCAidmFsdWUiOiAiZG9j
a2VyX2FwcCJ9XSwgImVuYWJsZWQiOiB0cnVlLCAiZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBDbG91
ZCBGb3VuZHJ5IENyZWF0ZSBBcHBsaWNhdGlvbiIsICJpZCI6IDE0LCAibG9naWNfdHlwZSI6ICJh
bGwiLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTogQ2xvdWQg
Rm91bmRyeSBDcmVhdGUgQXBwbGljYXRpb24iLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAi
dGFncyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ0eXBlIjogMSwgInV1aWQiOiAi
ZWFhYmYzYjktN2NlYS00Njk2LTg0NDUtYzhjNTBiYTI5MmRiIiwgInZpZXdfaXRlbXMiOiBbXSwg
IndvcmtmbG93cyI6IFsiY2xvdWRfZm91bmRyeV9jcmVhdGVfYW5fYXBwbGljYXRpb24iXX0sIHsi
YXV0b21hdGlvbnMiOiBbXSwgImNvbmRpdGlvbnMiOiBbeyJldmFsdWF0aW9uX2lkIjogbnVsbCwg
ImZpZWxkX25hbWUiOiAiYXJ0aWZhY3QudmFsdWUiLCAibWV0aG9kIjogImVxdWFscyIsICJ0eXBl
IjogbnVsbCwgInZhbHVlIjogImRvY2tlcl9hcHAifV0sICJlbmFibGVkIjogdHJ1ZSwgImV4cG9y
dF9rZXkiOiAiRXhhbXBsZTogQ2xvdWQgRm91bmRyeSBJbnN0YW5jZSBDb21tYW5kIiwgImlkIjog
MTUsICJsb2dpY190eXBlIjogImFsbCIsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFt
ZSI6ICJFeGFtcGxlOiBDbG91ZCBGb3VuZHJ5IEluc3RhbmNlIENvbW1hbmQiLCAib2JqZWN0X3R5
cGUiOiAiYXJ0aWZhY3QiLCAidGFncyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ0
eXBlIjogMSwgInV1aWQiOiAiMzcyOTk5NzYtZTU0YS00OTA0LThjZjAtNmI5NjkyMzIyNDFjIiwg
InZpZXdfaXRlbXMiOiBbXSwgIndvcmtmbG93cyI6IFsiY2xvdWRfZm91bmRyeV9pbnN0YW5jZV9j
b21tYW5kIl19LCB7ImF1dG9tYXRpb25zIjogW10sICJjb25kaXRpb25zIjogW3siZXZhbHVhdGlv
bl9pZCI6IG51bGwsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnZhbHVlIiwgIm1ldGhvZCI6ICJl
cXVhbHMiLCAidHlwZSI6IG51bGwsICJ2YWx1ZSI6ICJkb2NrZXJfYXBwIn1dLCAiZW5hYmxlZCI6
IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IENsb3VkIEZvdW5kcnkgU3RvcCBBcHBsaWNh
dGlvbiIsICJpZCI6IDE2LCAibG9naWNfdHlwZSI6ICJhbGwiLCAibWVzc2FnZV9kZXN0aW5hdGlv
bnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTogQ2xvdWQgRm91bmRyeSBTdG9wIEFwcGxpY2F0aW9u
IiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInRhZ3MiOiBbXSwgInRpbWVvdXRfc2Vjb25k
cyI6IDg2NDAwLCAidHlwZSI6IDEsICJ1dWlkIjogIjY4YTdkYWQzLTRmYjctNDFmMi1iZTQxLTMz
OWEwMGY4ZjA1NSIsICJ2aWV3X2l0ZW1zIjogW10sICJ3b3JrZmxvd3MiOiBbImNsb3VkX2ZvdW5k
cnlfc3RvcF9hcHBsaWNhdGlvbiJdfV0sICJhcHBzIjogW10sICJhdXRvbWF0aWNfdGFza3MiOiBb
XSwgImV4cG9ydF9kYXRlIjogMTYwMjA1OTA0Mzk4MiwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6
IDIsICJmaWVsZHMiOiBbeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRp
b24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hv
c2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0
ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9mbl9jbG91ZF9mb3VuZHJ5X2Fk
ZGl0aW9uYWxfcGFyYW1ldGVyc19qc29uIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJp
ZCI6IDE4MiwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNfdHJh
Y2tlZCI6IGZhbHNlLCAibmFtZSI6ICJmbl9jbG91ZF9mb3VuZHJ5X2FkZGl0aW9uYWxfcGFyYW1l
dGVyc19qc29uIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxh
Y2Vob2xkZXIiOiAie30iLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmlj
aF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAiZm5f
Y2xvdWRfZm91bmRyeV9hZGRpdGlvbmFsX3BhcmFtZXRlcnNfanNvbiIsICJ0b29sdGlwIjogIkFk
ZGl0aW9uYWwgcGFyYW1ldGVycyBpbiBKU09OIGZvcm1hdCB0byBiZSBwYXNzZWQgdG8gdGhlIGZ1
bmN0aW9uLiIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogIjhjMTc0YWEwLTNmMTYtNGZjZC1iNGUz
LTgxMGY4NTMwYWQ0MyIsICJ2YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZh
bHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJjaGFuZ2Vh
YmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vZm5f
Y2xvdWRfZm91bmRyeV9pbnN0YW5jZV9hY3Rpb24iLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxz
ZSwgImlkIjogMTgzLCAiaW5wdXRfdHlwZSI6ICJzZWxlY3QiLCAiaW50ZXJuYWwiOiBmYWxzZSwg
ImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAiZm5fY2xvdWRfZm91bmRyeV9pbnN0YW5jZV9h
Y3Rpb24iLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhv
bGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmVxdWlyZWQi
OiAiYWx3YXlzIiwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjog
W10sICJ0ZXh0IjogImZuX2Nsb3VkX2ZvdW5kcnlfaW5zdGFuY2VfYWN0aW9uIiwgInRvb2x0aXAi
OiAiQWN0aW9ucyB0aGF0IGNhbiBiZSBhcHBsaWVkIHRvIHRoZSBpbnN0YW5jZXMgb2YgYW4gYXBw
LiIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogIjU3NGFkMjIxLTE5ZGYtNDQ3NC05MGMxLTY0OTE3
OGIwOGVhOCIsICJ2YWx1ZXMiOiBbeyJkZWZhdWx0IjogdHJ1ZSwgImVuYWJsZWQiOiB0cnVlLCAi
aGlkZGVuIjogZmFsc2UsICJsYWJlbCI6ICJkZWxldGUiLCAicHJvcGVydGllcyI6IG51bGwsICJ1
dWlkIjogImY1NjcwNzk4LTJkZDItNGM3ZS1iNzNhLTZkN2UzNjNmNGM3YSIsICJ2YWx1ZSI6IDcw
fV19LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNl
LCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxz
ZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNl
LCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0aW9uL2ZuX2Nsb3VkX2ZvdW5kcnlfYXBwbGljYXRpb25z
IiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDE4NiwgImlucHV0X3R5cGUiOiAi
dGV4dCIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJm
bl9jbG91ZF9mb3VuZHJ5X2FwcGxpY2F0aW9ucyIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9w
ZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIlBsYWNlaG9sZGVyIGFwcGxpY2F0aW9uIiwg
InByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJlcXVpcmVkIjogImFsd2F5cyIs
ICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6
ICJmbl9jbG91ZF9mb3VuZHJ5X2FwcGxpY2F0aW9ucyIsICJ0b29sdGlwIjogIlNpbmdsZSBvciBj
b21tYSBzZXBhcmF0ZWQgbmFtZXMgb2YgdGhlIGFwcGxpY2F0aW9ucyB0aGF0IG5lZWQgYWN0aW9u
IGFwcGxpZWQgdG8gdGhlbSwgb3IgdGhlaXIgaW5zdGFuY2VzIChzaW5nbGUgbmFtZSBvbmx5IGlu
IHRoaXMgY2FzZSkuIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiYjNiNTU1OTctZTA5MS00ODcy
LWI4MzAtYjg3NmI4YTI1OWE1IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVl
IjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNo
YW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2
ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlv
bi9mbl9jbG91ZF9mb3VuZHJ5X2FjdGlvbiIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAi
aWQiOiAxODcsICJpbnB1dF90eXBlIjogInNlbGVjdCIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNf
dHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJmbl9jbG91ZF9mb3VuZHJ5X2FjdGlvbiIsICJvcGVy
YXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJw
cmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAi
cmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAi
Zm5fY2xvdWRfZm91bmRyeV9hY3Rpb24iLCAidG9vbHRpcCI6ICJDaG9vc2UgdGhlIGFjdGlvbiB0
byBiZSBleGVjdXRlZCBvbiB0aGUgc2VsZWN0ZWQgYXBwbGljYXRpb25zLiIsICJ0eXBlX2lkIjog
MTEsICJ1dWlkIjogImUxZTI1ZjBhLTY2MjMtNDlkYS04Yzk3LWViYTQ0NzhhZDU0MiIsICJ2YWx1
ZXMiOiBbeyJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRlbiI6IGZhbHNl
LCAibGFiZWwiOiAiaW5mbyIsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiMDZhNGUyMmQt
NWIzNC00NjcyLWIxNjItMjA3MjgzZDcxNzIyIiwgInZhbHVlIjogNzF9LCB7ImRlZmF1bHQiOiB0
cnVlLCAiZW5hYmxlZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjogInN0YXJ0Iiwg
InByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICIzZTQ2OWU4Mi1hNzM3LTQ5MTItYTUxZi0wYzI2
NGJlNmNhNjMiLCAidmFsdWUiOiA3Mn0sIHsiZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRy
dWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjogInN0b3AiLCAicHJvcGVydGllcyI6IG51bGws
ICJ1dWlkIjogImQ2NGUyMDY2LThkOWYtNDVlNy04MTM3LTJkM2RhZmMxOWU3MSIsICJ2YWx1ZSI6
IDczfSwgeyJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRlbiI6IGZhbHNl
LCAibGFiZWwiOiAicmVzdGFnZSIsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiNDc2YjA2
MGItMjMyNS00YmMyLWE3YWEtNDYzZTgzOTlhMjYzIiwgInZhbHVlIjogNzR9LCB7ImRlZmF1bHQi
OiBmYWxzZSwgImVuYWJsZWQiOiB0cnVlLCAiaGlkZGVuIjogZmFsc2UsICJsYWJlbCI6ICJpbnN0
YW5jZXMiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjQ4NWNhNTYxLTRjMDAtNDgyZi1h
YTc0LWNkMTg2NmFiNDQ1OCIsICJ2YWx1ZSI6IDc1fSwgeyJkZWZhdWx0IjogZmFsc2UsICJlbmFi
bGVkIjogdHJ1ZSwgImhpZGRlbiI6IGZhbHNlLCAibGFiZWwiOiAiZGVsZXRlIiwgInByb3BlcnRp
ZXMiOiBudWxsLCAidXVpZCI6ICI4ZDIyNGYzNS1kYjhkLTRiZmEtYWUzYS0yYzY3OGZhNjhkMjAi
LCAidmFsdWUiOiA3Nn1dfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19v
cHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAi
Y2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJl
Y2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9mbl9jbG91ZF9mb3VuZHJ5
X3NwYWNlX2d1aWQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogMTg1LCAiaW5w
dXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2UsICJpc190cmFja2VkIjogZmFsc2Us
ICJuYW1lIjogImZuX2Nsb3VkX2ZvdW5kcnlfc3BhY2VfZ3VpZCIsICJvcGVyYXRpb25fcGVybXMi
OiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxs
LCAicmVhZF9vbmx5IjogZmFsc2UsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAicmljaF90ZXh0Ijog
ZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAiZm5fY2xvdWRfZm91
bmRyeV9zcGFjZV9ndWlkIiwgInRvb2x0aXAiOiAiR1VJRCBvZiB0aGUgc3BhY2Ugd2hlcmUgYSBj
cmVhdGVkIGFwcGxpY2F0aW9uIHdpbGwgcmVzaWRlLiIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjog
ImVhOWFlMWJlLWVjZTgtNDM1ZS1iZDMzLTJjN2VlOGY5NDM1MiIsICJ2YWx1ZXMiOiBbXX0sIHsi
YWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxj
dWxhdGVkIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVm
YXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBv
cnRfa2V5IjogIl9fZnVuY3Rpb24vZm5fY2xvdWRfZm91bmRyeV9pbnN0YW5jZXMiLCAiaGlkZV9u
b3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogMTg0LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImlu
dGVybmFsIjogZmFsc2UsICJpc190cmFja2VkIjogZmFsc2UsICJuYW1lIjogImZuX2Nsb3VkX2Zv
dW5kcnlfaW5zdGFuY2VzIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtd
LCAicGxhY2Vob2xkZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwg
InJlcXVpcmVkIjogImFsd2F5cyIsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRl
bXBsYXRlcyI6IFtdLCAidGV4dCI6ICJmbl9jbG91ZF9mb3VuZHJ5X2luc3RhbmNlcyIsICJ0b29s
dGlwIjogIkFwcGxpY2F0aW9uIGluc3RhbmNlIGlkJ3MgdG8gcnVuIHRoZSBjb21tYW5kcyBvbiwg
Y29tbWEgc2VwYXJhdGVkLiIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogImE2NDBlZDNjLTE2NjQt
NDljMi1hMWUzLTUzOTExNjBmNWM3NiIsICJ2YWx1ZXMiOiBbXX0sIHsiZXhwb3J0X2tleSI6ICJp
bmNpZGVudC9pbnRlcm5hbF9jdXN0b21pemF0aW9uc19maWVsZCIsICJpZCI6IDAsICJpbnB1dF90
eXBlIjogInRleHQiLCAiaW50ZXJuYWwiOiB0cnVlLCAibmFtZSI6ICJpbnRlcm5hbF9jdXN0b21p
emF0aW9uc19maWVsZCIsICJyZWFkX29ubHkiOiB0cnVlLCAidGV4dCI6ICJDdXN0b21pemF0aW9u
cyBGaWVsZCAoaW50ZXJuYWwpIiwgInR5cGVfaWQiOiAwLCAidXVpZCI6ICJiZmVlYzJkNC0zNzcw
LTExZTgtYWQzOS00YTAwMDQwNDRhYTEifV0sICJmdW5jdGlvbnMiOiBbeyJjcmVhdG9yIjogeyJk
aXNwbGF5X25hbWUiOiAiUmVzaWxpZW50IFN5c2FkbWluIiwgImlkIjogMywgIm5hbWUiOiAiYUBh
LmNvbSIsICJ0eXBlIjogInVzZXIifSwgImRlc2NyaXB0aW9uIjogeyJmb3JtYXQiOiAidGV4dCIs
ICJjb250ZW50IjogIkNyZWF0ZSBhbmQgZGVwbG95IGEgY2xvdWQgZm91bmRyeSBhcHBsaWNhdGlv
biBmcm9tIHRoZSBzcGVjaWZpZWQgcGFyYW1ldGVycy9kb2NrZXIgZmlsZXMuIGFkZGl0aW9uYWxf
cGFyYW1ldGVycyBhY2NlcHQgYW55IGFkZGl0aW9uYWwgcGFyYW1ldGVycyB0aGF0IENGIEFQSSBh
Y2NlcHRzIGluIEpTT04gZm9ybWF0LiJ9LCAiZGVzdGluYXRpb25faGFuZGxlIjogImNsb3VkX2Zv
dW5kcnkiLCAiZGlzcGxheV9uYW1lIjogIkNsb3VkIEZvdW5kcnk6IENyZWF0ZSBhbiBBcHAiLCAi
ZXhwb3J0X2tleSI6ICJmbl9jbG91ZF9mb3VuZHJ5X2NyZWF0ZV9hcHAiLCAiaWQiOiAxLCAibGFz
dF9tb2RpZmllZF9ieSI6IHsiZGlzcGxheV9uYW1lIjogImludGVncmF0aW9ucyIsICJpZCI6IDQs
ICJuYW1lIjogImViMmQxZjdkLTY2NTEtNDE1YS1iNGZmLWExNGZjZDJmODRmNSIsICJ0eXBlIjog
ImFwaWtleSJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTYwMjAxODA4ODM0NCwgIm5hbWUiOiAi
Zm5fY2xvdWRfZm91bmRyeV9jcmVhdGVfYXBwIiwgInRhZ3MiOiBbXSwgInV1aWQiOiAiMjYyZjdk
NzItMGUwMi00YmNjLTg1YjEtOGUwMDQ5YmJlNjBjIiwgInZlcnNpb24iOiAyLCAidmlld19pdGVt
cyI6IFt7ImNvbnRlbnQiOiAiYjNiNTU1OTctZTA5MS00ODcyLWI4MzAtYjg3NmI4YTI1OWE1Iiwg
ImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hv
d19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVs
bH0sIHsiY29udGVudCI6ICJlYTlhZTFiZS1lY2U4LTQzNWUtYmQzMy0yYzdlZThmOTQzNTIiLCAi
ZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93
X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxs
fSwgeyJjb250ZW50IjogIjhjMTc0YWEwLTNmMTYtNGZjZC1iNGUzLTgxMGY4NTMwYWQ0MyIsICJl
bGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3df
aWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9
XSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImRlc2NyaXB0aW9uIjogbnVsbCwgIm5h
bWUiOiAiQ2xvdWQgRm91bmRyeTogQ3JlYXRlIGFuIEFwcGxpY2F0aW9uIiwgIm9iamVjdF90eXBl
IjogImFydGlmYWN0IiwgInByb2dyYW1tYXRpY19uYW1lIjogImNsb3VkX2ZvdW5kcnlfY3JlYXRl
X2FuX2FwcGxpY2F0aW9uIiwgInRhZ3MiOiBbXSwgInV1aWQiOiBudWxsLCAid29ya2Zsb3dfaWQi
OiAxfV19LCB7ImNyZWF0b3IiOiB7ImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQgU3lzYWRtaW4i
LCAiaWQiOiAzLCAibmFtZSI6ICJhQGEuY29tIiwgInR5cGUiOiAidXNlciJ9LCAiZGVzY3JpcHRp
b24iOiB7ImZvcm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAiUGVyZm9ybXMgYW4gYWN0aW9uIG9u
IHRoZSBzcGVjaWZpZWQgaW5zdGFuY2VzIG9mIGFuIGFwcGxpY2F0aW9uLiBDdXJyZW50bHkgYXZh
aWxhYmxlOiBkZWxldGUuIE11bHRpcGxlIGluc3RhbmNlcyBjYW4gYmUgcHJvdmlkZWQsIGJ1dCBv
bmx5IG9uZSBhcHBsaWNhdGlvbiBuYW1lIHNob3VsZCBiZSBnaXZlbi4ifSwgImRlc3RpbmF0aW9u
X2hhbmRsZSI6ICJjbG91ZF9mb3VuZHJ5IiwgImRpc3BsYXlfbmFtZSI6ICJDbG91ZCBGb3VuZHJ5
OiBJbnN0YW5jZSBDb21tYW5kIiwgImV4cG9ydF9rZXkiOiAiZm5fY2xvdWRfZm91bmRyeV9pbnN0
YW5jZV9jb21tYW5kIiwgImlkIjogMiwgImxhc3RfbW9kaWZpZWRfYnkiOiB7ImRpc3BsYXlfbmFt
ZSI6ICJpbnRlZ3JhdGlvbnMiLCAiaWQiOiA0LCAibmFtZSI6ICJlYjJkMWY3ZC02NjUxLTQxNWEt
YjRmZi1hMTRmY2QyZjg0ZjUiLCAidHlwZSI6ICJhcGlrZXkifSwgImxhc3RfbW9kaWZpZWRfdGlt
ZSI6IDE2MDIwMTgwODgzNDQsICJuYW1lIjogImZuX2Nsb3VkX2ZvdW5kcnlfaW5zdGFuY2VfY29t
bWFuZCIsICJ0YWdzIjogW10sICJ1dWlkIjogImRiZDRhZDVmLWYzZTAtNDM5Zi05MDA5LWRjOTg4
NTFlMjc2OSIsICJ2ZXJzaW9uIjogMiwgInZpZXdfaXRlbXMiOiBbeyJjb250ZW50IjogImIzYjU1
NTk3LWUwOTEtNDg3Mi1iODMwLWI4NzZiOGEyNTlhNSIsICJlbGVtZW50IjogImZpZWxkX3V1aWQi
LCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5r
X2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7ImNvbnRlbnQiOiAiYTY0MGVk
M2MtMTY2NC00OWMyLWExZTMtNTM5MTE2MGY1Yzc2IiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIs
ICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtf
aGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsiY29udGVudCI6ICI1NzRhZDIy
MS0xOWRmLTQ0NzQtOTBjMS02NDkxNzhiMDhlYTgiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwg
ImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19o
ZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJjb250ZW50IjogIjhjMTc0YWEw
LTNmMTYtNGZjZC1iNGUzLTgxMGY4NTMwYWQ0MyIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAi
ZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hl
YWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9XSwgIndvcmtmbG93cyI6IFt7ImFjdGlv
bnMiOiBbXSwgImRlc2NyaXB0aW9uIjogbnVsbCwgIm5hbWUiOiAiQ2xvdWQgRm91bmRyeTogSW5z
dGFuY2UgQ29tbWFuZCIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJwcm9ncmFtbWF0aWNf
bmFtZSI6ICJjbG91ZF9mb3VuZHJ5X2luc3RhbmNlX2NvbW1hbmQiLCAidGFncyI6IFtdLCAidXVp
ZCI6IG51bGwsICJ3b3JrZmxvd19pZCI6IDN9XX0sIHsiY3JlYXRvciI6IHsiZGlzcGxheV9uYW1l
IjogIlJlc2lsaWVudCBTeXNhZG1pbiIsICJpZCI6IDMsICJuYW1lIjogImFAYS5jb20iLCAidHlw
ZSI6ICJ1c2VyIn0sICJkZXNjcmlwdGlvbiI6IHsiZm9ybWF0IjogInRleHQiLCAiY29udGVudCI6
ICJQZXJmb3JtcyBhIHNwZWNpZmllZCBhY3Rpb24gb24gdGhlIGNob3NlbiBDbG91ZCBGb3VuZHJ5
IGFwcGxpY2F0aW9ucy5cbkN1cnJlbnRseSBhdmFpbGFibGUgYWN0aW9uczogc3RhcnQsIHN0b3As
IHJlc3RhZ2UsIGluZm8sIGRlbGV0ZSwgYW5kIGluc3RhbmNlcy4ifSwgImRlc3RpbmF0aW9uX2hh
bmRsZSI6ICJjbG91ZF9mb3VuZHJ5IiwgImRpc3BsYXlfbmFtZSI6ICJDbG91ZCBGb3VuZHJ5OiBB
cHBsaWNhdGlvbiBDb21tYW5kIiwgImV4cG9ydF9rZXkiOiAiZm5fY2xvdWRfZm91bmRyeV9tYW5h
Z2VfYXBwbGljYXRpb25zIiwgImlkIjogMywgImxhc3RfbW9kaWZpZWRfYnkiOiB7ImRpc3BsYXlf
bmFtZSI6ICJpbnRlZ3JhdGlvbnMiLCAiaWQiOiA0LCAibmFtZSI6ICJlYjJkMWY3ZC02NjUxLTQx
NWEtYjRmZi1hMTRmY2QyZjg0ZjUiLCAidHlwZSI6ICJhcGlrZXkifSwgImxhc3RfbW9kaWZpZWRf
dGltZSI6IDE2MDIwMTgwODgzNDQsICJuYW1lIjogImZuX2Nsb3VkX2ZvdW5kcnlfbWFuYWdlX2Fw
cGxpY2F0aW9ucyIsICJ0YWdzIjogW10sICJ1dWlkIjogIjNkNmQ4NzMwLTViNDYtNDBhZS05OTkw
LTIwYmIwOTQwNzVkZiIsICJ2ZXJzaW9uIjogMiwgInZpZXdfaXRlbXMiOiBbeyJjb250ZW50Ijog
ImIzYjU1NTk3LWUwOTEtNDg3Mi1iODMwLWI4NzZiOGEyNTlhNSIsICJlbGVtZW50IjogImZpZWxk
X3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hv
d19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7ImNvbnRlbnQiOiAi
ZTFlMjVmMGEtNjYyMy00OWRhLThjOTctZWJhNDQ3OGFkNTQyIiwgImVsZW1lbnQiOiAiZmllbGRf
dXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93
X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsiY29udGVudCI6ICI4
YzE3NGFhMC0zZjE2LTRmY2QtYjRlMy04MTBmODUzMGFkNDMiLCAiZWxlbWVudCI6ICJmaWVsZF91
dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNob3df
bGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJ3b3JrZmxvd3MiOiBb
eyJhY3Rpb25zIjogW10sICJkZXNjcmlwdGlvbiI6IG51bGwsICJuYW1lIjogIkNsb3VkIEZvdW5k
cnk6IFN0b3AgQXBwbGljYXRpb24iLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAicHJvZ3Jh
bW1hdGljX25hbWUiOiAiY2xvdWRfZm91bmRyeV9zdG9wX2FwcGxpY2F0aW9uIiwgInRhZ3MiOiBb
XSwgInV1aWQiOiBudWxsLCAid29ya2Zsb3dfaWQiOiAyfV19XSwgImdlb3MiOiBudWxsLCAiZ3Jv
dXBzIjogbnVsbCwgImlkIjogMSwgImluYm91bmRfbWFpbGJveGVzIjogbnVsbCwgImluY2lkZW50
X2FydGlmYWN0X3R5cGVzIjogW10sICJpbmNpZGVudF90eXBlcyI6IFt7InVwZGF0ZV9kYXRlIjog
MTYwMjI1NDI0OTk1NCwgImNyZWF0ZV9kYXRlIjogMTYwMjI1NDI0OTk1NCwgInV1aWQiOiAiYmZl
ZWMyZDQtMzc3MC0xMWU4LWFkMzktNGEwMDA0MDQ0YWEwIiwgImRlc2NyaXB0aW9uIjogIkN1c3Rv
bWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJleHBvcnRfa2V5IjogIkN1c3RvbWl6YXRp
b24gUGFja2FnZXMgKGludGVybmFsKSIsICJuYW1lIjogIkN1c3RvbWl6YXRpb24gUGFja2FnZXMg
KGludGVybmFsKSIsICJlbmFibGVkIjogZmFsc2UsICJzeXN0ZW0iOiBmYWxzZSwgInBhcmVudF9p
ZCI6IG51bGwsICJoaWRkZW4iOiBmYWxzZSwgImlkIjogMH1dLCAiaW5kdXN0cmllcyI6IG51bGws
ICJsYXlvdXRzIjogW10sICJsb2NhbGUiOiBudWxsLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBb
eyJhcGlfa2V5cyI6IFsiZWIyZDFmN2QtNjY1MS00MTVhLWI0ZmYtYTE0ZmNkMmY4NGY1Il0sICJk
ZXN0aW5hdGlvbl90eXBlIjogMCwgImV4cGVjdF9hY2siOiB0cnVlLCAiZXhwb3J0X2tleSI6ICJj
bG91ZF9mb3VuZHJ5IiwgIm5hbWUiOiAiY2xvdWRfZm91bmRyeSIsICJwcm9ncmFtbWF0aWNfbmFt
ZSI6ICJjbG91ZF9mb3VuZHJ5IiwgInRhZ3MiOiBbXSwgInVzZXJzIjogW10sICJ1dWlkIjogImNj
OTczZjQyLTMxOTktNGU0NS04YTA1LWMzYjJjMWVlZTUzOCJ9XSwgIm5vdGlmaWNhdGlvbnMiOiBu
dWxsLCAib3ZlcnJpZGVzIjogW10sICJwaGFzZXMiOiBbXSwgInJlZ3VsYXRvcnMiOiBudWxsLCAi
cm9sZXMiOiBbXSwgInNjcmlwdHMiOiBbXSwgInNlcnZlcl92ZXJzaW9uIjogeyJidWlsZF9udW1i
ZXIiOiA3NiwgIm1ham9yIjogMzYsICJtaW5vciI6IDIsICJ2ZXJzaW9uIjogIjM2LjIuNzYifSwg
InRhZ3MiOiBbXSwgInRhc2tfb3JkZXIiOiBbXSwgInRpbWVmcmFtZXMiOiBudWxsLCAidHlwZXMi
OiBbXSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImNvbnRlbnQiOiB7InZlcnNpb24i
OiAzLCAid29ya2Zsb3dfaWQiOiAiY2xvdWRfZm91bmRyeV9jcmVhdGVfYW5fYXBwbGljYXRpb24i
LCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZp
bml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9E
RUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0
L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9E
Q1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElc
IiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5z
OnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9
XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImNsb3VkX2ZvdW5k
cnlfY3JlYXRlX2FuX2FwcGxpY2F0aW9uXCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJD
bG91ZCBGb3VuZHJ5OiBDcmVhdGUgYW4gQXBwbGljYXRpb25cIj48ZG9jdW1lbnRhdGlvbj5FeGFt
cGxlIHdvcmtmbG93IHRvIGNyZWF0ZSBhbmQgZGVwbG95IGEgQ2xvdWQgRm91bmRyeSBhcHBsaWNh
dGlvbiBmcm9tIHRoZSBzcGVjaWZpZWQgcGFyYW1ldGVycy9kb2NrZXIgZmlsZXMuPC9kb2N1bWVu
dGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdvaW5nPlNl
cXVlbmNlRmxvd18xM3Vvcmw1PC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlk
PVwiU2VydmljZVRhc2tfMWZxcWsyeVwiIG5hbWU9XCJDbG91ZCBGb3VuZHJ5OiBDcmVhdGUgYW4g
QXBwXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVz
aWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCIyNjJmN2Q3Mi0wZTAyLTRiY2MtODViMS04ZTAwNDliYmU2
MGNcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcIiMgQ2hlY2sg
dGhlIHJlc3VsdCBhbmQgdXBkYXRlIHRoZSBhcnRpZmFjdCBkZXNjcmlwdGlvbi5cXG5pZiByZXN1
bHRzW1xcXCJzdWNjZXNzXFxcIl0gPT0gVHJ1ZTpcXG4gICAgYXJ0aWZhY3QuZGVzY3JpcHRpb24g
PSBcXFwiQXBwbGljYXRpb24gQ3JlYXRlZFxcXCJcXG5lbHNlOlxcbiAgICBhcnRpZmFjdC5kZXNj
cmlwdGlvbiA9ICBcXFwiRmFpbGVkIHRvIGNyZWF0ZSBhcHBsaWNhdGlvblxcXCJcXG5cIixcInBy
ZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiIyBHZXQgdGhlIGFwcGxpY2F0aW9uIG5hbWUgZnJvbSB0
aGUgYXJ0aWZhY3QgdmFsdWVcXG5pbnB1dHMuZm5fY2xvdWRfZm91bmRyeV9hcHBsaWNhdGlvbnM9
YXJ0aWZhY3QudmFsdWVcXG4jXFxuIyBHZXQgdGhlIHNwYWNlIEdVSUQgdXNpbmcgdGhlIGNvbW1h
bmQ6ICQgY2Ygc3BhY2UgZGV2IC0tZ3VpZFxcbmlucHV0cy5mbl9jbG91ZF9mb3VuZHJ5X3NwYWNl
X2d1aWQ9dSdlZjY2NGQ2Mi1kNDQ5LTQxNjgtOTcxYy0wMzI3ZDAxNTQ2ZTgnIFxcbiNcXG4jIGRv
Y2tlciBjcmVkZW50aWFscyAodXNlcm5hbWUgYW5kIHBhc3N3b3JkKSB3aWxsIGJlIGZpbGxlZCBp
biBieSBmdW5jdGlvbiB1c2luZyB2YWx1ZXMgc2V0IGluIGFwcC5jb25maWdcXG5pbnB1dHMuZm5f
Y2xvdWRfZm91bmRyeV9hZGRpdGlvbmFsX3BhcmFtZXRlcnNfanNvbj1cXFwiXFxcIlxcXCJ7XFxc
Im5hbWVcXFwiOiBcXFwiZG9ja2VyX2FwcFxcXCIsXFxuICAgIFxcXCJzcGFjZV9ndWlkXFxcIjog
XFxcIjU1ODIxODc3LTRlMjAtNGFmNC1iMGU1LTlkMzc2OTY0YjAyN1xcXCIsXFxuICAgIFxcXCJk
b2NrZXJfaW1hZ2VcXFwiOiBcXFwiY2xvdWRmb3VuZHJ5L2RpZWdvLWRvY2tlci1hcHBcXFwiLCBc
XG4gICAgXFxcImRvY2tlcl9jcmVkZW50aWFsc1xcXCI6IHtcXFwidXNlcm5hbWVcXFwiOiBcXFwi
dXNlcm5hbWVcXFwiLCBcXFwicGFzc3dvcmRcXFwiOiBcXFwicGFzc3dvcmRcXFwifSwgXFxuICAg
IFxcXCJzdGF0ZVxcXCI6IFxcXCJTVEFSVEVEXFxcIixcXG4gICAgXFxcImRpZWdvXFxcIjogdHJ1
ZX1cXFwiXFxcIlxcXCJcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRz
PjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMTN1b3JsNTwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVl
bmNlRmxvd18xbm1mcGxlPC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9
XCJTZXF1ZW5jZUZsb3dfMTN1b3JsNVwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwi
IHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzFmcXFrMnlcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZl
bnRfMXMydnFta1wiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMW5tZnBsZTwvaW5jb21pbmc+PC9l
bmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzFubWZwbGVcIiBzb3VyY2VS
ZWY9XCJTZXJ2aWNlVGFza18xZnFxazJ5XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMXMydnFta1wi
Lz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3Rh
cnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9u
IGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4
bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5vdGF0aW9u
IGlkPVwiVGV4dEFubm90YXRpb25fMHNueHc1NFwiPjx0ZXh0PjwhW0NEQVRBW0lucHV0czogY2xv
dWQgZm91bmRyeSBhcHBsaWNhdGlvbiBuYW1lLFx1MDBhMCBzcGFjZSBHVUlEIGFuZCBleHRyYSBq
c29uIHBhcmFtZXRlcnMuXG5dXT48L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24g
aWQ9XCJBc3NvY2lhdGlvbl8weXMxejg5XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWZxcWsy
eVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzBzbnh3NTRcIi8+PC9wcm9jZXNzPjxicG1u
ZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBt
bkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hh
cGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1
YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2
MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIw
XCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdcIiB5PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48
L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5u
b3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2Rj
OkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48
L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0
aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9p
bnQgeD1cIjE2OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3
YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9i
cG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFz
a18xZnFxazJ5XCIgaWQ9XCJTZXJ2aWNlVGFza18xZnFxazJ5X2RpXCI+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjM3M1wiIHk9XCIxNjZcIi8+PC9icG1uZGk6
QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMTN1
b3JsNVwiIGlkPVwiU2VxdWVuY2VGbG93XzEzdW9ybDVfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1c
IjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2lu
dCB4PVwiMzczXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpC
UE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyODUu
NVwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1u
ZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMXMydnFta1wiIGlkPVwiRW5kRXZl
bnRfMXMydnFta19kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIg
eD1cIjYyOVwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI2NDdcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5M
YWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNl
cXVlbmNlRmxvd18xbm1mcGxlXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMW5tZnBsZV9kaVwiPjxvbWdk
aTp3YXlwb2ludCB4PVwiNDczXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+
PG9tZ2RpOndheXBvaW50IHg9XCI2MjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIw
NlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9
XCIwXCIgeD1cIjU1MVwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQ
TU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMHNu
eHc1NFwiIGlkPVwiVGV4dEFubm90YXRpb25fMHNueHc1NF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCIxODlcIiB5PVwiNDlcIi8+PC9icG1uZGk6QlBN
TlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8weXMxejg5
XCIgaWQ9XCJBc3NvY2lhdGlvbl8weXMxejg5X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzNzhc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjE3MVwiLz48b21nZGk6d2F5cG9pbnQgeD1c
IjI1OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiNzlcIi8+PC9icG1uZGk6QlBNTkVk
Z2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+
In0sICJjb250ZW50X3ZlcnNpb24iOiAzLCAiY3JlYXRvcl9pZCI6ICJhQGEuY29tIiwgImRlc2Ny
aXB0aW9uIjogIkV4YW1wbGUgd29ya2Zsb3cgdG8gY3JlYXRlIGFuZCBkZXBsb3kgYSBDbG91ZCBG
b3VuZHJ5IGFwcGxpY2F0aW9uIGZyb20gdGhlIHNwZWNpZmllZCBwYXJhbWV0ZXJzL2RvY2tlciBm
aWxlcy4iLCAiZXhwb3J0X2tleSI6ICJjbG91ZF9mb3VuZHJ5X2NyZWF0ZV9hbl9hcHBsaWNhdGlv
biIsICJsYXN0X21vZGlmaWVkX2J5IjogImFAYS5jb20iLCAibGFzdF9tb2RpZmllZF90aW1lIjog
MTYwMjAxODI4MzY1NCwgIm5hbWUiOiAiQ2xvdWQgRm91bmRyeTogQ3JlYXRlIGFuIEFwcGxpY2F0
aW9uIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInByb2dyYW1tYXRpY19uYW1lIjogImNs
b3VkX2ZvdW5kcnlfY3JlYXRlX2FuX2FwcGxpY2F0aW9uIiwgInRhZ3MiOiBbXSwgInV1aWQiOiAi
M2MxYzIzNTYtYzQ5Ni00OGI5LWE2ZTctZTNjZjU4MGU4MDE0IiwgIndvcmtmbG93X2lkIjogMX0s
IHsiYWN0aW9ucyI6IFtdLCAiY29udGVudCI6IHsidmVyc2lvbiI6IDYsICJ3b3JrZmxvd19pZCI6
ICJjbG91ZF9mb3VuZHJ5X2luc3RhbmNlX2NvbW1hbmQiLCAieG1sIjogIjw/eG1sIHZlcnNpb249
XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93
d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRw
Oi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRw
Oi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDov
L3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRw
Oi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3Jn
LzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxT
Y2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3Jn
L3Rlc3RcIj48cHJvY2VzcyBpZD1cImNsb3VkX2ZvdW5kcnlfaW5zdGFuY2VfY29tbWFuZFwiIGlz
RXhlY3V0YWJsZT1cInRydWVcIiBuYW1lPVwiQ2xvdWQgRm91bmRyeTogSW5zdGFuY2UgQ29tbWFu
ZFwiPjxkb2N1bWVudGF0aW9uPlRoaXMgZXhhbXBsZSB3b3JrZmxvdyBwZXJmb3JtcyBhbiBhY3Rp
b24gb24gdGhlIHNwZWNpZmllZCBpbnN0YW5jZXMgb2YgYSBDbG91ZCBGb3VuZHJ5IGFwcGxpY2F0
aW9uLiAgQXZhaWxhYmxlIGNvbW1hbmRzOiBERUxFVEUuPC9kb2N1bWVudGF0aW9uPjxzdGFydEV2
ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xMmNw
amNoPC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tf
MWZ3ZXJmZVwiIG5hbWU9XCJDbG91ZCBGb3VuZHJ5OiBJbnN0YW5jZSBDb21tYW5kXCIgcmVzaWxp
ZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0
aW9uIHV1aWQ9XCJkYmQ0YWQ1Zi1mM2UwLTQzOWYtOTAwOS1kYzk4ODUxZTI3NjlcIj57XCJpbnB1
dHNcIjp7XCI1NzRhZDIyMS0xOWRmLTQ0NzQtOTBjMS02NDkxNzhiMDhlYThcIjp7XCJpbnB1dF90
eXBlXCI6XCJzdGF0aWNcIixcInN0YXRpY19pbnB1dFwiOntcIm11bHRpc2VsZWN0X3ZhbHVlXCI6
W10sXCJzZWxlY3RfdmFsdWVcIjpcImY1NjcwNzk4LTJkZDItNGM3ZS1iNzNhLTZkN2UzNjNmNGM3
YVwifX19LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiIyBsb29wcyB0aG91Z2ggdGhlIGFw
cGxpY2F0aW9ucyBhbmQgc2V0cyB0aGUgZGVzY3JpcHRpb24gZm9yIHRoZSBhcnRpZmFjdC5cXG5m
b3IgYXBwX25hbWUgaW4gcmVzdWx0c1tcXFwiX2tleXNcXFwiXTpcXG4gIGFwcCA9IHJlc3VsdHNb
YXBwX25hbWVdXFxuICBpZiBhcHBbXFxcInN1Y2Nlc3NcXFwiXSA9PSBUcnVlOlxcbiAgICBhcnRp
ZmFjdC5kZXNjcmlwdGlvbiA9IFxcXCJJbnN0YW5jZSBkZWxldGVkXFxcIlxcbiAgZWxzZTpcXG4g
ICAgYXJ0aWZhY3QuZGVzY3JpcHRpb24gPSAgXFxcIkZhaWxlZCB0byBkZWxldGVcXFwiXCIsXCJw
cmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5mbl9jbG91ZF9mb3VuZHJ5X2FwcGxpY2F0
aW9ucz1hcnRpZmFjdC52YWx1ZVxcbmlucHV0cy5mbl9jbG91ZF9mb3VuZHJ5X2luc3RhbmNlcz1c
XFwiMFxcXCJcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNv
bWluZz5TZXF1ZW5jZUZsb3dfMTJjcGpjaDwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxv
d18wc3NrN3dhPC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1
ZW5jZUZsb3dfMTJjcGpjaFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdl
dFJlZj1cIlNlcnZpY2VUYXNrXzFmd2VyZmVcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMDcy
OXYyb1wiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMHNzazd3YTwvaW5jb21pbmc+PC9lbmRFdmVu
dD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBzc2s3d2FcIiBzb3VyY2VSZWY9XCJT
ZXJ2aWNlVGFza18xZndlcmZlXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMDcyOXYyb1wiLz48dGV4
dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91
ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwi
QXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRh
cmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwi
VGV4dEFubm90YXRpb25fMDU1c3p3eFwiPjx0ZXh0PjwhW0NEQVRBW0lucHV0czogY2xvdWQgZm91
bmRyeSBhY3Rpb24gbmFtZSwgYXBwbGljYXRpb24gbmFtZSwgYW5kIGluc3RhbmNlcy5cbl1dPjwv
dGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzByczhx
MGNcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xZndlcmZlXCIgdGFyZ2V0UmVmPVwiVGV4dEFu
bm90YXRpb25fMDU1c3p3eFwiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQ
TU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwi
IGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0
RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRp
OkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1
N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBt
bmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1c
IlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIg
d2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBt
bmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNz
b2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6
dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRp
OkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzFmd2VyZmVcIiBpZD1cIlNlcnZp
Y2VUYXNrXzFmd2VyZmVfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIx
MDBcIiB4PVwiMzA5XCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1O
RWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xMmNwamNoXCIgaWQ9XCJTZXF1ZW5jZUZs
b3dfMTJjcGpjaF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIyNDlcIiB4c2k6dHlwZT1c
Im9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI0OVwiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMzA5XCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9t
Z2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyNjRcIiB5PVwiMTk5LjVc
Ii8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMDcyOXYyb1wiIGlkPVwiRW5kRXZlbnRfMDcyOXYyb19k
aVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjUzM1wiIHk9
XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdp
ZHRoPVwiMFwiIHg9XCI1NTFcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5k
aTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18w
c3NrN3dhXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMHNzazd3YV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4
PVwiNDA5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBv
aW50IHg9XCI1MzNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRp
OkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjQ3
MVwiIHk9XCIxODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1u
ZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMDU1c3p3eFwiIGlkPVwi
VGV4dEFubm90YXRpb25fMDU1c3p3eF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3
aWR0aD1cIjEwMFwiIHg9XCIxNzdcIiB5PVwiNDZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1u
ZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8wcnM4cTBjXCIgaWQ9XCJBc3Nv
Y2lhdGlvbl8wcnM4cTBjX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzMjNcIiB4c2k6dHlwZT1c
Im9tZ2RjOlBvaW50XCIgeT1cIjE2NlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI0MVwiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiNzZcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6
QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+In0sICJjb250ZW50
X3ZlcnNpb24iOiA2LCAiY3JlYXRvcl9pZCI6ICJhQGEuY29tIiwgImRlc2NyaXB0aW9uIjogIlRo
aXMgZXhhbXBsZSB3b3JrZmxvdyBwZXJmb3JtcyBhbiBhY3Rpb24gb24gdGhlIHNwZWNpZmllZCBp
bnN0YW5jZXMgb2YgYSBDbG91ZCBGb3VuZHJ5IGFwcGxpY2F0aW9uLiAgQXZhaWxhYmxlIGNvbW1h
bmRzOiBERUxFVEUuIiwgImV4cG9ydF9rZXkiOiAiY2xvdWRfZm91bmRyeV9pbnN0YW5jZV9jb21t
YW5kIiwgImxhc3RfbW9kaWZpZWRfYnkiOiAiYUBhLmNvbSIsICJsYXN0X21vZGlmaWVkX3RpbWUi
OiAxNjAyMDU4OTQ2NzYyLCAibmFtZSI6ICJDbG91ZCBGb3VuZHJ5OiBJbnN0YW5jZSBDb21tYW5k
IiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInByb2dyYW1tYXRpY19uYW1lIjogImNsb3Vk
X2ZvdW5kcnlfaW5zdGFuY2VfY29tbWFuZCIsICJ0YWdzIjogW10sICJ1dWlkIjogIjI2YmYwNDIw
LWU5OGQtNGU1NC04ZDIyLTFjNjViOTcwMWEyNyIsICJ3b3JrZmxvd19pZCI6IDN9LCB7ImFjdGlv
bnMiOiBbXSwgImNvbnRlbnQiOiB7InZlcnNpb24iOiAzLCAid29ya2Zsb3dfaWQiOiAiY2xvdWRf
Zm91bmRyeV9zdG9wX2FwcGxpY2F0aW9uIiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIg
ZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5v
cmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5v
bWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5v
bWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21n
Lm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2ls
aWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hN
TFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWlu
c3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+
PHByb2Nlc3MgaWQ9XCJjbG91ZF9mb3VuZHJ5X3N0b3BfYXBwbGljYXRpb25cIiBpc0V4ZWN1dGFi
bGU9XCJ0cnVlXCIgbmFtZT1cIkNsb3VkIEZvdW5kcnk6IFN0b3AgQXBwbGljYXRpb25cIj48ZG9j
dW1lbnRhdGlvbj5BIGV4YW1wbGUgd29ya2Zsb3cgdGhhdCB0YWtlcyBhIGRlcGxveWVkIENsb3Vk
IEZvdW5kcnkgYXBwbGljYXRpb24gbmFtZSBhcyBpbnB1dCBhbmQgc2VuZHMgYSBTVE9QIGNvbW1h
bmQgdG8gc3RvcCB0aGUgYXBwbGljYXRpb24uPC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlk
PVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xeXlraDVjPC9v
dXRnb2luZz48L3N0YXJ0RXZlbnQ+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMXFlaGtnd1wiPjxp
bmNvbWluZz5TZXF1ZW5jZUZsb3dfMHkycTJrMjwvaW5jb21pbmc+PC9lbmRFdmVudD48c2Vydmlj
ZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xcWtlbnYzXCIgbmFtZT1cIkNsb3VkIEZvdW5kcnk6IEFw
cGxpY2F0aW9uIENvbW1hbi4uLlwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5z
aW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiM2Q2ZDg3MzAtNWI0Ni00MGFl
LTk5OTAtMjBiYjA5NDA3NWRmXCI+e1wiaW5wdXRzXCI6e1wiZTFlMjVmMGEtNjYyMy00OWRhLThj
OTctZWJhNDQ3OGFkNTQyXCI6e1wiaW5wdXRfdHlwZVwiOlwic3RhdGljXCIsXCJzdGF0aWNfaW5w
dXRcIjp7XCJtdWx0aXNlbGVjdF92YWx1ZVwiOltdLFwic2VsZWN0X3ZhbHVlXCI6XCJkNjRlMjA2
Ni04ZDlmLTQ1ZTctODEzNy0yZDNkYWZjMTllNzFcIn19fSxcInBvc3RfcHJvY2Vzc2luZ19zY3Jp
cHRcIjpcIiMgbG9vcHMgdGhvdWdoIHRoZSBhcHBsaWNhdGlvbnMgYW5kIHNldHMgdGhlIGFydGlm
YWN0IGRlc2NyaXB0aW9uXFxuZm9yIGFwcF9uYW1lIGluIHJlc3VsdHNbXFxcIl9rZXlzXFxcIl06
XFxuICBhcHAgPSByZXN1bHRzW2FwcF9uYW1lXVxcbiAgaWYgYXBwW1xcXCJzdWNjZXNzXFxcIl0g
PT0gVHJ1ZTpcXG4gICAgYXJ0aWZhY3QuZGVzY3JpcHRpb24gPSBcXFwiQXBwbGljYXRpb24gXFxc
IiArIGFwcFtcXFwiY3VycmVudF9zdGF0ZVxcXCJdXFxuICBlbHNlOlxcbiAgICBhcnRpZmFjdC5k
ZXNjcmlwdGlvbiA9ICBcXFwiRmFpbGVkIHRvIHN0b3BcXFwiXCIsXCJwcmVfcHJvY2Vzc2luZ19z
Y3JpcHRcIjpcImlucHV0cy5mbl9jbG91ZF9mb3VuZHJ5X2FwcGxpY2F0aW9ucz1hcnRpZmFjdC52
YWx1ZVwiLFwicmVzdWx0X25hbWVcIjpcIlwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5z
aW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18xeXlraDVjPC9pbmNvbWluZz48b3V0
Z29pbmc+U2VxdWVuY2VGbG93XzB5MnEyazI8L291dGdvaW5nPjwvc2VydmljZVRhc2s+PHNlcXVl
bmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18weTJxMmsyXCIgc291cmNlUmVmPVwiU2VydmljZVRh
c2tfMXFrZW52M1wiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzFxZWhrZ3dcIi8+PHNlcXVlbmNlRmxv
dyBpZD1cIlNlcXVlbmNlRmxvd18xeXlraDVjXCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVh
c3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMXFrZW52M1wiLz48dGV4dEFubm90YXRpb24g
aWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBo
ZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25f
MXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRl
eHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRp
b25fMDhwa2ozcFwiPjx0ZXh0PjwhW0NEQVRBW0lucHV0czogYWN0aW9uIG5hbWUsIGFwcGxpY2F0
aW9uIG5hbWVzLFx1MDBhMCBhZGRpdGlvbmFsIGpzb24gcGFyYW1ldGVyc1xuXV0+PC90ZXh0Pjwv
dGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMWo1N2U0c1wiIHNv
dXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFxa2VudjNcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlv
bl8wOHBrajNwXCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdy
YW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJC
UE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8x
NTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxh
YmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1c
IjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBN
TlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFu
bm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1c
IjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBN
TkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlv
bl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNo
YXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMXFlaGtnd1wiIGlkPVwiRW5kRXZlbnRfMXFlaGtn
d19kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjQ4MC44
NDIyNTYyMTQxNDkxM1wiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI0OTguODQyMjU2MjE0MTQ5MTNcIiB5PVwi
MjI3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18xcWtlbnYzXCIgaWQ9XCJTZXJ2aWNlVGFz
a18xcWtlbnYzX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIg
eD1cIjI3Mi44NDIyNTYyMTQxNDkxM1wiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxi
cG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHkycTJrMlwiIGlkPVwi
U2VxdWVuY2VGbG93XzB5MnEyazJfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjM3M1wiIHhzaTp0
eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDgxXCIg
eHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9t
Z2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI0MjdcIiB5PVwiMTg0XCIv
PjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5FZGdlIGJw
bW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzF5eWtoNWNcIiBpZD1cIlNlcXVlbmNlRmxvd18xeXlr
aDVjX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI3M1wiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMjM1LjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5M
YWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRl
eHRBbm5vdGF0aW9uXzA4cGtqM3BcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzA4cGtqM3BfZGlcIj48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMTU1XCIgeT1cIjQw
XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNz
b2NpYXRpb25fMWo1N2U0c1wiIGlkPVwiQXNzb2NpYXRpb25fMWo1N2U0c19kaVwiPjxvbWdkaTp3
YXlwb2ludCB4PVwiMjkyXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxNjZcIi8+PG9t
Z2RpOndheXBvaW50IHg9XCIyMTdcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjcwXCIv
PjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2JwbW5kaTpCUE1ORGlhZ3Jh
bT48L2RlZmluaXRpb25zPiJ9LCAiY29udGVudF92ZXJzaW9uIjogMywgImNyZWF0b3JfaWQiOiAi
YUBhLmNvbSIsICJkZXNjcmlwdGlvbiI6ICJBIGV4YW1wbGUgd29ya2Zsb3cgdGhhdCB0YWtlcyBh
IGRlcGxveWVkIENsb3VkIEZvdW5kcnkgYXBwbGljYXRpb24gbmFtZSBhcyBpbnB1dCBhbmQgc2Vu
ZHMgYSBTVE9QIGNvbW1hbmQgdG8gc3RvcCB0aGUgYXBwbGljYXRpb24uIiwgImV4cG9ydF9rZXki
OiAiY2xvdWRfZm91bmRyeV9zdG9wX2FwcGxpY2F0aW9uIiwgImxhc3RfbW9kaWZpZWRfYnkiOiAi
YUBhLmNvbSIsICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNjAyMDU4OTU4OTcyLCAibmFtZSI6ICJD
bG91ZCBGb3VuZHJ5OiBTdG9wIEFwcGxpY2F0aW9uIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0
IiwgInByb2dyYW1tYXRpY19uYW1lIjogImNsb3VkX2ZvdW5kcnlfc3RvcF9hcHBsaWNhdGlvbiIs
ICJ0YWdzIjogW10sICJ1dWlkIjogIjZlOTBmNTc2LTYyMzYtNGY4Yi1hNGRkLTI4MDdlMzRiZGUw
YyIsICJ3b3JrZmxvd19pZCI6IDJ9XSwgIndvcmtzcGFjZXMiOiBbXX0=
""")
