# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_symantec_dlp"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_symantec_dlp package"""
    reload_params = {"package": u"fn_symantec_dlp",
                    "incident_fields": [u"sdlp_incident_id", u"sdlp_incident_url"], 
                    "action_fields": [u"sdlp_note_to_be_sent"], 
                    "function_params": [u"sdlp_update_payload"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_symantec_dlp"], 
                    "functions": [u"fn_symantec_dlp_update_incident"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"sdlp_send_note_to_incident", u"sdlp_set_incident_status"], 
                    "actions": [u"Example: Symantec DLP - Send a note to a DLP Incident", u"Example: Symantec DLP - Update DLP when this Incident is closed "], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Incident fields:
    #     sdlp_incident_id
    #     sdlp_incident_url
    #   Action fields:
    #     sdlp_note_to_be_sent
    #   Function inputs:
    #     sdlp_update_payload
    #   Message Destinations:
    #     fn_symantec_dlp
    #   Functions:
    #     fn_symantec_dlp_update_incident
    #   Workflows:
    #     sdlp_send_note_to_incident
    #     sdlp_set_incident_status
    #   Rules:
    #     Example: Symantec DLP - Send a note to a DLP Incident
    #     Example: Symantec DLP - Update DLP when this Incident is closed 


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMCwgImJ1aWxkX251bWJl
ciI6IDQyMzUsICJ2ZXJzaW9uIjogIjMxLjAuNDIzNSJ9LCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9u
IjogMiwgImlkIjogOTQsICJleHBvcnRfZGF0ZSI6IDE1NzI2MDE3MDQyODUsICJmaWVsZHMiOiBb
eyJpZCI6IDQzNywgIm5hbWUiOiAic2RscF9pbmNpZGVudF9pZCIsICJ0ZXh0IjogIlN5bWFudGVj
IERMUCBJbmNpZGVudCBJRCIsICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJ0eXBlX2lkIjogMCwg
InRvb2x0aXAiOiAiVGhlIElEIG9mIGEgU3ltYW50ZWMgRExQIEluY2lkZW50IiwgInBsYWNlaG9s
ZGVyIjogIiIsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZh
bHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwg
ImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiNTVmMzVl
MjItMTYxMC00MmIwLWFjY2MtZjY1OTc0ZTg2ZTRlIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJh
dGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5n
ZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImluY2lkZW50
L3NkbHBfaW5jaWRlbnRfaWQiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFsc2V9
LCB7ImlkIjogNDM4LCAibmFtZSI6ICJzZGxwX2luY2lkZW50X3VybCIsICJ0ZXh0IjogIlN5bWFu
dGVjIERMUCBJbmNpZGVudCBVUkwgIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwgInR5cGVfaWQi
OiAwLCAidG9vbHRpcCI6ICIiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAidGV4
dGFyZWEiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVm
YXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImlu
dGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjQ5NTk4NjkzLTJhYzMtNDNhZi1hMjZiLTAxMWNkYmU3
YmQ0YSIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6
IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6
IHRydWUsICJleHBvcnRfa2V5IjogImluY2lkZW50L3NkbHBfaW5jaWRlbnRfdXJsIiwgInRlbXBs
YXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDQ4MiwgIm5hbWUiOiAic2Rs
cF9ub3RlX3RvX2JlX3NlbnQiLCAidGV4dCI6ICJTRExQIE5vdGUgVGV4dCIsICJwcmVmaXgiOiAi
cHJvcGVydGllcyIsICJ0eXBlX2lkIjogNiwgInRvb2x0aXAiOiAiQSBBY3Rpdml0eSBGaWVsZCB0
byB0YWtlIGEgdXNlciBlbnRlcmVkIHBpZWNlIG9mIHRleHQgdG8gYmUgc2VudCB0byBETFAuIE9u
bHkgcGxhaW50ZXh0IGNhbiBiZSBzZW50IiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBl
IjogInRleHQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAi
ZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwg
ImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjMwOGM4ODgwLWNkYWQtNDEwYy05NjQwLTZkZDM2
MTNmMTJmMiIsICJvcGVyYXRpb25zIjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVl
cyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4
dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL3NkbHBfbm90ZV90b19i
ZV9zZW50IiwgInRlbXBsYXRlcyI6IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDQ3
MiwgIm5hbWUiOiAic2RscF91cGRhdGVfcGF5bG9hZCIsICJ0ZXh0IjogInNkbHBfdXBkYXRlX3Bh
eWxvYWQiLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiQSBKU09O
LWxpa2Ugb2JqZWN0IHdoaWNoIGNvbnRhaW5zIHZhbHVlcyB0byBiZSB1cGRhdGVkIG9uIGEgZ2l2
ZW4gU3ltYW50ZWMgRExQIEluY2lkZW50IiwgInBsYWNlaG9sZGVyIjogIiIsICJpbnB1dF90eXBl
IjogInRleHRhcmVhIiwgInJlcXVpcmVkIjogImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6
IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxz
ZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiYjE1
ODcxZWItYjQzNi00MjY2LWIxYmItODM2OGI3NDM5NzJiIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9w
ZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNo
YW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVu
Y3Rpb24vc2RscF91cGRhdGVfcGF5bG9hZCIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQi
OiBmYWxzZX1dLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1NzI2MDE3MDU1
NTMsICJjcmVhdGVfZGF0ZSI6IDE1NzI2MDE3MDU1NTMsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAt
MTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBh
Y2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2Vz
IChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCki
LCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAi
aGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgInBoYXNlcyI6IFtdLCAiYXV0b21hdGljX3Rhc2tz
IjogW10sICJvdmVycmlkZXMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3sibmFtZSI6
ICJTeW1hbnRlYyBETFAgTWVzc2FnZSBEZXN0aW5hdGlvbiIsICJwcm9ncmFtbWF0aWNfbmFtZSI6
ICJmbl9zeW1hbnRlY19kbHAiLCAiZGVzdGluYXRpb25fdHlwZSI6IDAsICJleHBlY3RfYWNrIjog
dHJ1ZSwgInVzZXJzIjogWyJpbnRlZ3JhdGlvbi1zZXJ2ZXIuYWxmcmVkQHdheW5lY29ycC5jb20i
XSwgInV1aWQiOiAiZDc1Yzg1NjAtNjRkMi00NGNhLTg3Y2UtNGRiNTEwYTNjNWQxIiwgImV4cG9y
dF9rZXkiOiAiZm5fc3ltYW50ZWNfZGxwIn1dLCAiYWN0aW9ucyI6IFt7ImlkIjogODMsICJuYW1l
IjogIkV4YW1wbGU6IFN5bWFudGVjIERMUCAtIFNlbmQgYSBub3RlIHRvIGEgRExQIEluY2lkZW50
IiwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiY29uZGl0aW9ucyI6IFt7
Im1ldGhvZCI6ICJoYXNfYV92YWx1ZSIsICJmaWVsZF9uYW1lIjogImluY2lkZW50LnByb3BlcnRp
ZXMuc2RscF9pbmNpZGVudF9pZCIsICJ2YWx1ZSI6IG51bGwsICJ0eXBlIjogbnVsbCwgImV2YWx1
YXRpb25faWQiOiBudWxsfV0sICJhdXRvbWF0aW9ucyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlv
bnMiOiBbXSwgIndvcmtmbG93cyI6IFsic2RscF9zZW5kX25vdGVfdG9faW5jaWRlbnQiXSwgInZp
ZXdfaXRlbXMiOiBbeyJzdGVwX2xhYmVsIjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVu
dCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJjb250
ZW50IjogIjMwOGM4ODgwLWNkYWQtNDEwYy05NjQwLTZkZDM2MTNmMTJmMiIsICJzaG93X2xpbmtf
aGVhZGVyIjogZmFsc2V9XSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6ICI0NGY1
MGE3OC00YjYyLTQ5NjUtYTIzZi04NGM2M2ZkNTI2YWUiLCAiZXhwb3J0X2tleSI6ICJFeGFtcGxl
OiBTeW1hbnRlYyBETFAgLSBTZW5kIGEgbm90ZSB0byBhIERMUCBJbmNpZGVudCIsICJsb2dpY190
eXBlIjogImFsbCJ9LCB7ImlkIjogNTYsICJuYW1lIjogIkV4YW1wbGU6IFN5bWFudGVjIERMUCAt
IFVwZGF0ZSBETFAgd2hlbiB0aGlzIEluY2lkZW50IGlzIGNsb3NlZCAiLCAidHlwZSI6IDAsICJv
YmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJjb25kaXRpb25zIjogW3sibWV0aG9kIjogImVxdWFs
cyIsICJmaWVsZF9uYW1lIjogImluY2lkZW50LnBsYW5fc3RhdHVzIiwgInZhbHVlIjogIkNsb3Nl
ZCIsICJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiBudWxsfSwgeyJtZXRob2QiOiAiaGFz
X2FfdmFsdWUiLCAiZmllbGRfbmFtZSI6ICJpbmNpZGVudC5wcm9wZXJ0aWVzLnNkbHBfaW5jaWRl
bnRfaWQiLCAidmFsdWUiOiBudWxsLCAidHlwZSI6IG51bGwsICJldmFsdWF0aW9uX2lkIjogbnVs
bH1dLCAiYXV0b21hdGlvbnMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10sICJ3b3Jr
Zmxvd3MiOiBbInNkbHBfc2V0X2luY2lkZW50X3N0YXR1cyJdLCAidmlld19pdGVtcyI6IFtdLCAi
dGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogIjQ1NjJjZjE3LTZhYzYtNGEwOS1iMmVl
LTkxZGQxMmZhYjY2MiIsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFN5bWFudGVjIERMUCAtIFVw
ZGF0ZSBETFAgd2hlbiB0aGlzIEluY2lkZW50IGlzIGNsb3NlZCAiLCAibG9naWNfdHlwZSI6ICJh
bGwifV0sICJsYXlvdXRzIjogW10sICJub3RpZmljYXRpb25zIjogbnVsbCwgInRpbWVmcmFtZXMi
OiBudWxsLCAibG9jYWxlIjogbnVsbCwgImluZHVzdHJpZXMiOiBudWxsLCAicmVndWxhdG9ycyI6
IG51bGwsICJnZW9zIjogbnVsbCwgInRhc2tfb3JkZXIiOiBbXSwgImFjdGlvbl9vcmRlciI6IFtd
LCAidHlwZXMiOiBbXSwgInNjcmlwdHMiOiBbXSwgImluY2lkZW50X2FydGlmYWN0X3R5cGVzIjog
W10sICJ3b3JrZmxvd3MiOiBbeyJ3b3JrZmxvd19pZCI6IDE2LCAibmFtZSI6ICJFeGFtcGxlOiBT
eW1hbnRlYyBETFAgLSBTZXQgSW5jaWRlbnQgU3RhdHVzIHRvIENsb3NlZCIsICJwcm9ncmFtbWF0
aWNfbmFtZSI6ICJzZGxwX3NldF9pbmNpZGVudF9zdGF0dXMiLCAib2JqZWN0X3R5cGUiOiAiaW5j
aWRlbnQiLCAiZGVzY3JpcHRpb24iOiAiQW4gZXhhbXBsZSB3b3JrZmxvdyB3aGljaCBpcyB1c2Vk
IHRvIHVwZGF0ZSBhIERMUCBJbmNpZGVudHMgU3RhdHVzIHRvIENsb3NlZC4iLCAiY3JlYXRvcl9p
ZCI6ICJhbGZyZWRAd2F5bmVjb3JwLmNvbSIsICJsYXN0X21vZGlmaWVkX2J5IjogInJ5YW5AcmVz
LmNvbSIsICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTcyNTEzNjkxMDE2LCAiZXhwb3J0X2tleSI6
ICJzZGxwX3NldF9pbmNpZGVudF9zdGF0dXMiLCAidXVpZCI6ICI2OGFmNTAwZi1mYjBhLTQ5MGEt
YjQzOC01ZjkwMDI0ZGZlMWUiLCAiY29udGVudCI6IHsid29ya2Zsb3dfaWQiOiAic2RscF9zZXRf
aW5jaWRlbnRfc3RhdHVzIiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9
XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9C
UE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3Nw
ZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3Nw
ZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVj
L0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0u
Y29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwi
IHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIg
dGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3Mg
aWQ9XCJzZGxwX3NldF9pbmNpZGVudF9zdGF0dXNcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFt
ZT1cIkV4YW1wbGU6IFN5bWFudGVjIERMUCAtIFNldCBJbmNpZGVudCBTdGF0dXMgdG8gQ2xvc2Vk
XCI+PGRvY3VtZW50YXRpb24+QW4gZXhhbXBsZSB3b3JrZmxvdyB3aGljaCBpcyB1c2VkIHRvIHVw
ZGF0ZSBhIERMUCBJbmNpZGVudHMgU3RhdHVzIHRvIENsb3NlZC48L2RvY3VtZW50YXRpb24+PHN0
YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93
XzBkenl4dmI8L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNl
VGFza18xZmJ5MzNtXCIgbmFtZT1cIlN5bWFudGVjIERMUDogVXBkYXRlIEluY2lkZW50XCIgcmVz
aWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1
bmN0aW9uIHV1aWQ9XCI4OTYyZjcxNS02MTE0LTRlOGYtYTI0Ny0yOWM0MDYyM2I5OGNcIj57XCJp
bnB1dHNcIjp7fSxcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjXFxuIyMjIERlZmluZSBwcmUtcHJvY2Vzc2luZyBmdW5jdGlv
bnMgIyMjXFxuIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXFxuZGVmIGRp
Y3RfdG9fanNvbl9zdHIoZCk6XFxuICBcXFwiXFxcIlxcXCJGdW5jdGlvbiB0aGF0IGNvbnZlcnRz
IGEgZGljdGlvbmFyeSBpbnRvIGEgSlNPTiBzdHJpbmdzZWxmLlxcbiAgICAgU3VwcG9ydHMgYmFz
ZXN0cmluZywgYm9vbCBhbmQgaW50LlxcbiAgICAgSWYgdGhlIHZhbHVlIGlzIE5vbmUsIGl0IHNl
dHMgaXQgdG8gRmFsc2VcXFwiXFxcIlxcXCJcXG5cXG4gIGpzb25fc3RyID0gJ1xcXCJ7IHswfSB9
XFxcIidcXG4gIGpzb25fZW50cnkgPSAnXFxcInswfVxcXCI6ezF9J1xcbiAganNvbl9lbnRyeV9z
dHIgPSAnXFxcInswfVxcXCI6XFxcInsxfVxcXCInXFxuICBqc29uX2VudHJ5X3VuaWNvZGUgPSB1
J1xcXCJ7MH1cXFwiOlxcXCJ7MX1cXFwiJ1xcbiAgZW50cmllcyA9IFtdIFxcbiAgXFxuICBmb3Ig
ZW50cnkgaW4gZDpcXG4gICAga2V5ID0gZW50cnlcXG4gICAgdmFsdWUgPSBkW2VudHJ5XVxcbiAg
ICBcXG4gICAgICBcXG4gICAgaWYgdmFsdWUgaXMgTm9uZTpcXG4gICAgICB2YWx1ZSA9IEZhbHNl
XFxuICAgICAgXFxuICAgIGlmIGlzaW5zdGFuY2UodmFsdWUsIHVuaWNvZGUpOlxcbiAgICAgIGVu
dHJpZXMuYXBwZW5kKGpzb25fZW50cnlfdW5pY29kZS5mb3JtYXQoa2V5LCB2YWx1ZSkpXFxuICAg
IGVsaWYgaXNpbnN0YW5jZSh2YWx1ZSwgYmFzZXN0cmluZyk6XFxuICAgICAgZW50cmllcy5hcHBl
bmQoanNvbl9lbnRyeV9zdHIuZm9ybWF0KGtleSwgdmFsdWUpKVxcbiAgICBcXG4gICAgZWxpZiBp
c2luc3RhbmNlKHZhbHVlLCBib29sKTpcXG4gICAgICB2YWx1ZSA9ICd0cnVlJyBpZiB2YWx1ZSA9
PSBUcnVlIGVsc2UgJ2ZhbHNlJ1xcbiAgICAgIGVudHJpZXMuYXBwZW5kKGpzb25fZW50cnkuZm9y
bWF0KGtleSwgdmFsdWUpKVxcbiAgICBcXG4gICAgZWxzZTpcXG4gICAgICBlbnRyaWVzLmFwcGVu
ZChqc29uX2VudHJ5LmZvcm1hdChrZXksIHZhbHVlKSlcXG4gIFxcbiAgcmV0dXJuICd7JyArICcs
Jy5qb2luKGVudHJpZXMpICsgJ30nXFxuXFxuZnJvbSBqYXZhLnV0aWwgaW1wb3J0IERhdGVcXG5c
XG5cXG5wYXlsb2FkID0ge1xcblxcXCJzdGF0dXNcXFwiOiBcXFwiQ2xvc2VkXFxcIixcXG5cXFwi
aW5jaWRlbnRfaWRcXFwiOiBpbmNpZGVudC5wcm9wZXJ0aWVzLnNkbHBfaW5jaWRlbnRfaWRcXG59
XFxuXFxucGF5bG9hZFsnbm90ZSddID0gdVxcXCJbe31dIFJlc2lsaWVudCBzZW50IGFuIFVwZGF0
ZSBSZXF1ZXN0IHRvIHRoaXMgSW5jaWRlbnQuIFN0YXR1cyB3YXMgY2hhbmdlZCB0byB7fVxcXCIu
Zm9ybWF0KERhdGUoKSwgcGF5bG9hZFtcXFwic3RhdHVzXFxcIl0pXFxuXFxuXFxuaW5wdXRzLnNk
bHBfdXBkYXRlX3BheWxvYWQgPSBkaWN0X3RvX2pzb25fc3RyKHBheWxvYWQpXCJ9PC9yZXNpbGll
bnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBk
enl4dmI8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMHZyZmJ5Nzwvb3V0Z29pbmc+
PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBkenl4dmJcIiBz
b3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18x
ZmJ5MzNtXCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzFjMnIyM2tcIj48aW5jb21pbmc+U2Vx
dWVuY2VGbG93XzB2cmZieTc8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1c
IlNlcXVlbmNlRmxvd18wdnJmYnk3XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWZieTMzbVwi
IHRhcmdldFJlZj1cIkVuZEV2ZW50XzFjMnIyM2tcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4
dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4
dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhc
IiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3Rh
dGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRp
YWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9
XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVu
dF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBN
TkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIg
eT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6
QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4
dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0
aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6
QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lh
dGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9t
Z2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBN
TlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMWZieTMzbVwiIGlkPVwiU2VydmljZVRh
c2tfMWZieTMzbV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwi
IHg9XCIzNzZcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdl
IGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzBkenl4dmJcIiBpZD1cIlNlcXVlbmNlRmxvd18w
ZHp5eHZiX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjM3NlwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMjg3XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1O
TGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJF
bmRFdmVudF8xYzJyMjNrXCIgaWQ9XCJFbmRFdmVudF8xYzJyMjNrX2RpXCI+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNjU5XCIgeT1cIjE4OFwiLz48YnBtbmRp
OkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjY3
N1wiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBt
bmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzB2cmZieTdcIiBpZD1cIlNl
cXVlbmNlRmxvd18wdnJmYnk3X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0NzZcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjY1OVwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNTY3LjVcIiB5PVwiMTg0XCIv
PjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+
PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAidmVyc2lvbiI6IDEwfSwgImFj
dGlvbnMiOiBbXX0sIHsid29ya2Zsb3dfaWQiOiAyOCwgIm5hbWUiOiAiRXhhbXBsZTogU3ltYW50
ZWMgRExQIC0gU2VuZCBOb3RlIHRvIEluY2lkZW50IiwgInByb2dyYW1tYXRpY19uYW1lIjogInNk
bHBfc2VuZF9ub3RlX3RvX2luY2lkZW50IiwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgImRl
c2NyaXB0aW9uIjogIkFuIGV4YW1wbGUgd29ya2Zsb3cgd2hpY2ggY2FuIGJlIHVzZWQgdG8gc2Vu
ZCBhIE5vdGUgdG8gYSBETFAgSW5jaWRlbnQuIFRoaXMgd29ya2Zsb3cgZ2V0cyBpdHMgbm90ZSB0
ZXh0IGZyb20gYW4gYXNzb2NpYXRlZCBSdWxlIHdoaWNoIGhhcyBhbiBhY3Rpdml0eSBmaWVsZC4g
SWYgbm8gdmFsdWUgaXMgZ2l2ZW4gd2l0aCB0aGUgYWN0aXZpdHkgZmllbGQgdGhlbiBpdCBzZW5k
cyBhIGRlZmF1bHQgcGllY2Ugb2YgdGV4dC4iLCAiY3JlYXRvcl9pZCI6ICJhbGZyZWRAd2F5bmVj
b3JwLmNvbSIsICJsYXN0X21vZGlmaWVkX2J5IjogInJ5YW5AcmVzLmNvbSIsICJsYXN0X21vZGlm
aWVkX3RpbWUiOiAxNTcyNjAxMTM4MTk4LCAiZXhwb3J0X2tleSI6ICJzZGxwX3NlbmRfbm90ZV90
b19pbmNpZGVudCIsICJ1dWlkIjogIjFmNDRkZjU0LTJkMmQtNGRmOS05NTgzLTQ2MTk0N2Q3NGRj
MSIsICJjb250ZW50IjogeyJ3b3JrZmxvd19pZCI6ICJzZGxwX3NlbmRfbm90ZV90b19pbmNpZGVu
dCIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRl
ZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9N
T0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1
MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0
L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9E
SVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1s
bnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJo
dHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFj
ZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwic2RscF9zZW5k
X25vdGVfdG9faW5jaWRlbnRcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6
IFN5bWFudGVjIERMUCAtIFNlbmQgTm90ZSB0byBJbmNpZGVudFwiPjxkb2N1bWVudGF0aW9uPkFu
IGV4YW1wbGUgd29ya2Zsb3cgd2hpY2ggY2FuIGJlIHVzZWQgdG8gc2VuZCBhIE5vdGUgdG8gYSBE
TFAgSW5jaWRlbnQuIFRoaXMgd29ya2Zsb3cgZ2V0cyBpdHMgbm90ZSB0ZXh0IGZyb20gYW4gYXNz
b2NpYXRlZCBSdWxlIHdoaWNoIGhhcyBhbiBhY3Rpdml0eSBmaWVsZC4gSWYgbm8gdmFsdWUgaXMg
Z2l2ZW4gd2l0aCB0aGUgYWN0aXZpdHkgZmllbGQgdGhlbiBpdCBzZW5kcyBhIGRlZmF1bHQgcGll
Y2Ugb2YgdGV4dC48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1
NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzA0azgydGs8L291dGdvaW5nPjwvc3RhcnRF
dmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wZ2pnZWNiXCIgbmFtZT1cIlN5bWFu
dGVjIERMUDogVXBkYXRlIEluY2lkZW50XCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxl
eHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI4OTYyZjcxNS02MTE0
LTRlOGYtYTI0Ny0yOWM0MDYyM2I5OGNcIj57XCJpbnB1dHNcIjp7fSxcInByZV9wcm9jZXNzaW5n
X3NjcmlwdFwiOlwiIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXFxuIyMj
IERlZmluZSBwcmUtcHJvY2Vzc2luZyBmdW5jdGlvbnMgIyMjXFxuIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjXFxuZGVmIGRpY3RfdG9fanNvbl9zdHIoZCk6XFxuICBcXFwi
XFxcIlxcXCJGdW5jdGlvbiB0aGF0IGNvbnZlcnRzIGEgZGljdGlvbmFyeSBpbnRvIGEgSlNPTiBz
dHJpbmdzZWxmLlxcbiAgICAgU3VwcG9ydHMgYmFzZXN0cmluZywgYm9vbCBhbmQgaW50LlxcbiAg
ICAgSWYgdGhlIHZhbHVlIGlzIE5vbmUsIGl0IHNldHMgaXQgdG8gRmFsc2VcXFwiXFxcIlxcXCJc
XG5cXG4gIGpzb25fc3RyID0gJ1xcXCJ7IHswfSB9XFxcIidcXG4gIGpzb25fZW50cnkgPSAnXFxc
InswfVxcXCI6ezF9J1xcbiAganNvbl9lbnRyeV9zdHIgPSAnXFxcInswfVxcXCI6XFxcInsxfVxc
XCInXFxuICBqc29uX2VudHJ5X3VuaWNvZGUgPSB1J1xcXCJ7MH1cXFwiOlxcXCJ7MX1cXFwiJ1xc
biAgZW50cmllcyA9IFtdIFxcbiAgXFxuICBmb3IgZW50cnkgaW4gZDpcXG4gICAga2V5ID0gZW50
cnlcXG4gICAgdmFsdWUgPSBkW2VudHJ5XVxcbiAgICBcXG4gICAgICBcXG4gICAgaWYgdmFsdWUg
aXMgTm9uZTpcXG4gICAgICB2YWx1ZSA9IEZhbHNlXFxuICAgICAgXFxuICAgIGlmIGlzaW5zdGFu
Y2UodmFsdWUsIHVuaWNvZGUpOlxcbiAgICAgIGVudHJpZXMuYXBwZW5kKGpzb25fZW50cnlfdW5p
Y29kZS5mb3JtYXQoa2V5LCB2YWx1ZSkpXFxuICAgICAgXFxuICAgIGVsaWYgaXNpbnN0YW5jZSh2
YWx1ZSwgYmFzZXN0cmluZyk6XFxuICAgICAgZW50cmllcy5hcHBlbmQoanNvbl9lbnRyeV9zdHIu
Zm9ybWF0KGtleSwgdmFsdWUpKVxcbiAgICBcXG4gICAgZWxpZiBpc2luc3RhbmNlKHZhbHVlLCBi
b29sKTpcXG4gICAgICB2YWx1ZSA9ICd0cnVlJyBpZiB2YWx1ZSA9PSBUcnVlIGVsc2UgJ2ZhbHNl
J1xcbiAgICAgIGVudHJpZXMuYXBwZW5kKGpzb25fZW50cnkuZm9ybWF0KGtleSwgdmFsdWUpKVxc
biAgICBcXG4gICAgZWxzZTpcXG4gICAgICBlbnRyaWVzLmFwcGVuZChqc29uX2VudHJ5LmZvcm1h
dChrZXksIHZhbHVlKSlcXG4gIFxcbiAgcmV0dXJuICd7JyArICcsJy5qb2luKGVudHJpZXMpICsg
J30nXFxuXFxuZnJvbSBqYXZhLnV0aWwgaW1wb3J0IERhdGVcXG5cXG4jIFByZXBhcmUgdGhlIHBh
eWxvYWQgd2hpY2ggd2lsbCBiZSBzZW50IHRvIERMUCBhcyBhbiB1cGRhdGUgcmVxdWVzdFxcbnBh
eWxvYWQgPSB7XFxuXFxcIm5vdGVcXFwiOiB1XFxcIk5vdGUgU2VudCB2aWEgUmVzaWxpZW50IElu
dGVncmF0aW9uIHdpdGggRExQLiBbe31de31cXFwiLmZvcm1hdChEYXRlKCksIHJ1bGUucHJvcGVy
dGllcy5zZGxwX25vdGVfdG9fYmVfc2VudCBvciBcXFwiRGVmYXVsdCBOb3RlIGZyb20gUmVzaWxp
ZW50XFxcIiksXFxuXFxcImluY2lkZW50X2lkXFxcIjogaW5jaWRlbnQucHJvcGVydGllcy5zZGxw
X2luY2lkZW50X2lkXFxufVxcblxcblxcbmlucHV0cy5zZGxwX3VwZGF0ZV9wYXlsb2FkID0gZGlj
dF90b19qc29uX3N0cihwYXlsb2FkKVwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9u
RWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18wNGs4MnRrPC9pbmNvbWluZz48b3V0Z29p
bmc+U2VxdWVuY2VGbG93XzFlMmJiaGk8L291dGdvaW5nPjwvc2VydmljZVRhc2s+PHNlcXVlbmNl
RmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wNGs4MnRrXCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8x
NTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMGdqZ2VjYlwiLz48ZW5kRXZlbnQgaWQ9
XCJFbmRFdmVudF8xZHZuZmh0XCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18xZTJiYmhpPC9pbmNv
bWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMWUyYmJoaVwi
IHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzBnamdlY2JcIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8x
ZHZuZmh0XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIj48
dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNz
b2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVu
dF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiLz48dGV4dEFu
bm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8wYndvankzXCI+PHRleHQ+SW5wdXRzOiBUaGUg
U0RMUCBVcGRhdGUgUGF5bG9hZCB0YWtlcyBrZXk6dmFsdWUgcGFpcnMgd2hpY2ggcmVwcmVzZW50
IHdoaWNoIHBhcnRzIG9mIHRoZSBpbmNpZGVudCB3ZSB3YW50IHRvIHVwZGF0ZS48L3RleHQ+PC90
ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wcTN3czR6XCIgc291
cmNlUmVmPVwiU2VydmljZVRhc2tfMGdqZ2VjYlwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9u
XzBid29qeTNcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWNwY3A5eVwi
Pjx0ZXh0PlRoZSByZXN1bHRzIG9mIHRoZSBBUEkgY2FsbCBhcmUgbm90IHJldHVybmVkIHRvIHRo
ZSBQb3N0LVByb2Nlc3Npbmcgc2NyaXB0IGFzIGFsbCB0aGUgaW5mb3JtYXRpb24gd2Ugc2VuZCB0
byBETFAgaXMgZm91bmQgaW4gdGhlIElucHV0cyBwYXJ0IG9mIHRoZSBwYXlsb2FkLjwvdGV4dD48
L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzBmM3N3cjdcIiBz
b3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wZ2pnZWNiXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRp
b25fMWNwY3A5eVwiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFn
cmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwi
QlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRf
MTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5M
YWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9
XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQ
TU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRB
bm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9
XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQ
TU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRp
b25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1c
Im9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5T
aGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzBnamdlY2JcIiBpZD1cIlNlcnZpY2VUYXNr
XzBnamdlY2JfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4
PVwiNDA4XCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBi
cG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18wNGs4MnRrXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMDRr
ODJ0a19kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2lu
dFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0MDhcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjMwM1wiIHk9XCIxODQuNVwiLz48L2JwbW5kaTpCUE1O
TGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJF
bmRFdmVudF8xZHZuZmh0XCIgaWQ9XCJFbmRFdmVudF8xZHZuZmh0X2RpXCI+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNzQ0XCIgeT1cIjE4OFwiLz48YnBtbmRp
OkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjc2
MlwiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBt
bmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzFlMmJiaGlcIiBpZD1cIlNl
cXVlbmNlRmxvd18xZTJiYmhpX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI1MDhcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjc0NFwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNjI2XCIgeT1cIjE4NC41XCIv
PjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBi
cG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzBid29qeTNcIiBpZD1cIlRleHRBbm5vdGF0aW9u
XzBid29qeTNfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjg2XCIgd2lkdGg9XCIxNDBcIiB4
PVwiMjM0XCIgeT1cIjM0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJw
bW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMHEzd3M0elwiIGlkPVwiQXNzb2NpYXRpb25fMHEzd3M0
el9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDE0XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwi
IHk9XCIxNzBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIzNTVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjEyMFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1u
RWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFjcGNwOXlcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFj
cGNwOXlfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjc1XCIgd2lkdGg9XCIyMjJcIiB4PVwi
NTk1XCIgeT1cIjM5XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5F
bGVtZW50PVwiQXNzb2NpYXRpb25fMGYzc3dyN1wiIGlkPVwiQXNzb2NpYXRpb25fMGYzc3dyN19k
aVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNTA4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIxODBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2MzVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjExNFwiLz48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1u
ZGk6QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAidmVyc2lvbiI6IDZ9LCAiYWN0aW9ucyI6
IFtdfV0sICJyb2xlcyI6IFtdLCAid29ya3NwYWNlcyI6IFtdLCAiZnVuY3Rpb25zIjogW3siaWQi
OiA0MywgIm5hbWUiOiAiZm5fc3ltYW50ZWNfZGxwX3VwZGF0ZV9pbmNpZGVudCIsICJkaXNwbGF5
X25hbWUiOiAiU3ltYW50ZWMgRExQOiBVcGRhdGUgSW5jaWRlbnQiLCAiZGVzY3JpcHRpb24iOiB7
ImZvcm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAiQSBmdW5jdGlvbiB3aGljaCBpcyB1c2VkIHRv
IHVwZGF0ZSB0aGUgZGV0YWlscyBvZiBhIFN5bWFudGVjIERMUCBJbmNpZGVudC4gVGFrZXMgMSBp
bnB1dCB3aGljaCBpcyBhIGRpY3Rpb25hcnkgb2YgdGhpbmdzIHRvIGJlIGNoYW5nZWQuIFRvIGVu
YWJsZSB0byB1cGRhdGluZyBvZiBtdWx0aXBsZSBjdXN0b20gYXR0cmlidXRlcywgcHJvdmlkZSBh
IGxpc3Qgb3IgZGljdGlvbmFyeSBvZiBhbGwgdGhlIGF0dHJpYnV0ZXMgdG8gYmUgY2hhbmdlZCBp
biB0aGUgZm9ybWF0OiA8YXR0cmlidXRlX25hbWU+OiA8bmV3X3ZhbHVlPiJ9LCAiZGVzdGluYXRp
b25faGFuZGxlIjogImZuX3N5bWFudGVjX2RscCIsICJleHBvcnRfa2V5IjogImZuX3N5bWFudGVj
X2RscF91cGRhdGVfaW5jaWRlbnQiLCAidXVpZCI6ICI4OTYyZjcxNS02MTE0LTRlOGYtYTI0Ny0y
OWM0MDYyM2I5OGMiLCAidmVyc2lvbiI6IDUsICJjcmVhdG9yIjogeyJpZCI6IDQwLCAidHlwZSI6
ICJ1c2VyIiwgIm5hbWUiOiAiaW50ZWdyYXRpb24tc2VydmVyLmFsZnJlZEB3YXluZWNvcnAuY29t
IiwgImRpc3BsYXlfbmFtZSI6ICJJbnRlZ3JhdGlvbnMgU2VydmVyIEEifSwgImxhc3RfbW9kaWZp
ZWRfYnkiOiB7ImlkIjogMzksICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJhbGZyZWRAd2F5bmVj
b3JwLmNvbSIsICJkaXNwbGF5X25hbWUiOiAiQWxmcmVkIFBlbm55d29ydGgifSwgImxhc3RfbW9k
aWZpZWRfdGltZSI6IDE1NzE2NTU1MzkxMjksICJ2aWV3X2l0ZW1zIjogW3sic3RlcF9sYWJlbCI6
IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90
eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICJiMTU4NzFlYi1iNDM2LTQyNjYtYjFiYi04
MzY4Yjc0Mzk3MmIiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfV0sICJ3b3JrZmxvd3MiOiBb
eyJ3b3JrZmxvd19pZCI6IDI4LCAibmFtZSI6ICJFeGFtcGxlOiBTeW1hbnRlYyBETFAgLSBTZW5k
IE5vdGUgdG8gSW5jaWRlbnQiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAic2RscF9zZW5kX25vdGVf
dG9faW5jaWRlbnQiLCAib2JqZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiZGVzY3JpcHRpb24iOiBu
dWxsLCAidXVpZCI6IG51bGwsICJhY3Rpb25zIjogW119LCB7IndvcmtmbG93X2lkIjogMTcsICJu
YW1lIjogIkV4YW1wbGU6IFN5bWFudGVjIERMUCAtIFNlbmQgTm90ZSB0byBJbmNpZGVudE9MRCIs
ICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJzZGxwX19zZW5kX25vdGVfdG9faW5jaWRlbnQiLCAib2Jq
ZWN0X3R5cGUiOiAiaW5jaWRlbnQiLCAiZGVzY3JpcHRpb24iOiBudWxsLCAidXVpZCI6IG51bGws
ICJhY3Rpb25zIjogW119LCB7IndvcmtmbG93X2lkIjogOSwgIm5hbWUiOiAiRXhhbXBsZTogU3lt
YW50ZWMgRExQIC0gU2VuZCB0aGlzIG5vdGUgdG8gRExQIEluY2lkZW50IiwgInByb2dyYW1tYXRp
Y19uYW1lIjogImV4YW1wbGVfc3ltYW50ZWNfZGxwX19zZW5kX3RoaXNfbm90ZV90b19kbHBfaW5j
aWRlbnQiLCAib2JqZWN0X3R5cGUiOiAibm90ZSIsICJkZXNjcmlwdGlvbiI6IG51bGwsICJ1dWlk
IjogbnVsbCwgImFjdGlvbnMiOiBbXX0sIHsid29ya2Zsb3dfaWQiOiAxNiwgIm5hbWUiOiAiRXhh
bXBsZTogU3ltYW50ZWMgRExQIC0gU2V0IEluY2lkZW50IFN0YXR1cyB0byBDbG9zZWQiLCAicHJv
Z3JhbW1hdGljX25hbWUiOiAic2RscF9zZXRfaW5jaWRlbnRfc3RhdHVzIiwgIm9iamVjdF90eXBl
IjogImluY2lkZW50IiwgImRlc2NyaXB0aW9uIjogbnVsbCwgInV1aWQiOiBudWxsLCAiYWN0aW9u
cyI6IFtdfV19XX0=
"""
    )