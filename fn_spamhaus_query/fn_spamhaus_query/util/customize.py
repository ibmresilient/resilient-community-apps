# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_spamhaus_query"""

try:
    from resilient import ImportDefinition
except ImportError:
    # Support Apps running on resilient-circuits < v35.0.195
    from resilient_circuits.util import ImportDefinition


def codegen_reload_data():
    """
    Parameters required reload codegen for the fn_spamhaus_query package
    """
    return {
        "package": u"fn_spamhaus_query",
        "message_destinations": [u"fn_spamhaus_query"],
        "functions": [u"fn_spamhaus_query_submit_artifact"],
        "workflows": [u"example_spamhaus_submit_ip_address", u"example_spamhaus_submit_domain_name"],
        "actions": [u"Example: SpamHaus: Submit Domain Name", u"Example: SpamHaus: Submit IP Address"],
        "incident_fields": [],
        "incident_artifact_types": [],
        "datatables": [],
        "automatic_tasks": [],
        "scripts": []
    }


def customization_data(client=None):
    """
    Returns a Generator of ImportDefinitions (Customizations).
    Install them using `resilient-circuits customize`

    Contents:
    - Message Destinations:
        - fn_spamhaus_query
    - Functions:
        - fn_spamhaus_query_submit_artifact
    - Workflows:
        - example_spamhaus_submit_ip_address
        - example_spamhaus_submit_domain_name
    - Rules:
        - Example: SpamHaus: Submit Domain Name
        - Example: SpamHaus: Submit IP Address
    """

    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFt7ImV2YWx1YXRpb25faWQiOiBudWxsLCAiZmllbGRfbmFtZSI6ICJhcnRpZmFj
dC50eXBlIiwgIm1ldGhvZCI6ICJlcXVhbHMiLCAidHlwZSI6IG51bGwsICJ2YWx1ZSI6ICJETlMg
TmFtZSJ9XSwgImVuYWJsZWQiOiB0cnVlLCAiZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBTcGFtSGF1
czogU3VibWl0IERvbWFpbiBOYW1lIiwgImlkIjogMTQsICJsb2dpY190eXBlIjogImFsbCIsICJt
ZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBTcGFtSGF1czogU3Vi
bWl0IERvbWFpbiBOYW1lIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInRhZ3MiOiBbXSwg
InRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidHlwZSI6IDEsICJ1dWlkIjogIjQzZDlkMGNlLWQ0
MTEtNDk2My05ZmQ4LWIyMjU4OTc2NTA3MiIsICJ2aWV3X2l0ZW1zIjogW3siY29udGVudCI6ICIy
Y2ZlYTI4Yi04ZjhmLTRmN2QtYTdkMi0xNGZkNWI4MjBhZGYiLCAiZWxlbWVudCI6ICJmaWVsZF91
dWlkIiwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIsICJzaG93X2lmIjogbnVsbCwg
InNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJ3b3JrZmxv
d3MiOiBbImV4YW1wbGVfc3BhbWhhdXNfc3VibWl0X2RvbWFpbl9uYW1lIl19LCB7ImF1dG9tYXRp
b25zIjogW10sICJjb25kaXRpb25zIjogW3siZXZhbHVhdGlvbl9pZCI6IG51bGwsICJmaWVsZF9u
YW1lIjogImFydGlmYWN0LnR5cGUiLCAibWV0aG9kIjogImVxdWFscyIsICJ0eXBlIjogbnVsbCwg
InZhbHVlIjogIklQIEFkZHJlc3MifV0sICJlbmFibGVkIjogdHJ1ZSwgImV4cG9ydF9rZXkiOiAi
RXhhbXBsZTogU3BhbUhhdXM6IFN1Ym1pdCBJUCBBZGRyZXNzIiwgImlkIjogMTUsICJsb2dpY190
eXBlIjogImFsbCIsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxl
OiBTcGFtSGF1czogU3VibWl0IElQIEFkZHJlc3MiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3Qi
LCAidGFncyI6IFtdLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ0eXBlIjogMSwgInV1aWQi
OiAiYTgzZDRhOWMtMzIwNy00ZWEyLTgyM2MtYTE4MmJmNmM4MTY1IiwgInZpZXdfaXRlbXMiOiBb
eyJjb250ZW50IjogIjBiNGNkOGYzLTk3ZGMtNGVjZC05NTI5LTkyNjNhYjZkMGU2ZiIsICJlbGVt
ZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgInNo
b3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51
bGx9XSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRfaXBfYWRkcmVzcyJd
fV0sICJhcHBzIjogW10sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImV4cG9ydF9kYXRlIjogMTU5
Nzc1MzA5OTg2MSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJmaWVsZHMiOiBbeyJhbGxv
d19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0
ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0
X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9r
ZXkiOiAiX19mdW5jdGlvbi9zcGFtaGF1c19xdWVyeV9zdHJpbmciLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgImlkIjogMTg2LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjog
ZmFsc2UsICJpc190cmFja2VkIjogZmFsc2UsICJuYW1lIjogInNwYW1oYXVzX3F1ZXJ5X3N0cmlu
ZyIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVy
IjogIklQIEFkZHJlc3MvRG9tYWluIE5hbWUiLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6
IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6
IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogInNwYW1oYXVzX3F1ZXJ5X3N0cmluZyIsICJ0
b29sdGlwIjogIklQIEFkcmVzcyBvciBEb21haW4gTmFtZSB0byBiZSBjaGVja2VkIGFnYWluc3Qg
U3BhbWhhdXMgZGF0YWJhc2UuIiwgInR5cGVfaWQiOiAxMSwgInV1aWQiOiAiMTJhMTFiNjQtMTZi
My00NTA5LTkzMzItNTk5MDk2Yjk5ZDk5IiwgInZhbHVlcyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0
X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxz
ZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9i
eV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19m
dW5jdGlvbi9zcGFtaGF1c19zZWFyY2hfcmVzb3VyY2UiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBm
YWxzZSwgImlkIjogMTg3LCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgImludGVybmFsIjogZmFsc2Us
ICJpc190cmFja2VkIjogZmFsc2UsICJuYW1lIjogInNwYW1oYXVzX3NlYXJjaF9yZXNvdXJjZSIs
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjog
IlNCTCxYQkwsUEJMLFNCTC1YQkwsWkVOLE1TUixBVVRIQkwsWlJEIChkb21haW5zIG9ubHkpLERC
TCAoZG9tYWlucyBvbmx5KS4iLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAi
cmVxdWlyZWQiOiAiYWx3YXlzIiwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVt
cGxhdGVzIjogW10sICJ0ZXh0IjogInNwYW1oYXVzX3NlYXJjaF9yZXNvdXJjZSIsICJ0b29sdGlw
IjogInJlc291cmNlLW5hbWUgaXMgYSByZXF1aXJlZCBlbnVtZXJhdGVkIGZpZWxkIHRoYXQgcmVw
cmVzZW50cyB3aGljaCBibG9ja2xpc3Qgc2hvdWxkIGJlIHF1ZXJpZWQuIiwgInR5cGVfaWQiOiAx
MSwgInV1aWQiOiAiNjgxZTRkMzYtZjlkMy00NmIzLThlNWUtMjZmOTk3MDgxYzA5IiwgInZhbHVl
cyI6IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBm
YWxzZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjog
ZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBm
YWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9zcGFtaGF1c19pcF9yZXNvdXJj
ZSIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAxODQsICJpbnB1dF90eXBlIjog
InNlbGVjdCIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6
ICJzcGFtaGF1c19pcF9yZXNvdXJjZSIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlv
bnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJyZWFk
X29ubHkiOiBmYWxzZSwgInJlcXVpcmVkIjogImFsd2F5cyIsICJyaWNoX3RleHQiOiBmYWxzZSwg
InRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJTcGFtSGF1cyBJUCBSZXNvdXJj
ZSIsICJ0b29sdGlwIjogInJlc291cmNlLW5hbWUgaXMgYSByZXF1aXJlZCBlbnVtZXJhdGVkIGZp
ZWxkIHRoYXQgcmVwcmVzZW50cyB3aGljaCBibG9ja2xpc3Qgc2hvdWxkIGJlIHF1ZXJpZWQiLCAi
dHlwZV9pZCI6IDYsICJ1dWlkIjogIjBiNGNkOGYzLTk3ZGMtNGVjZC05NTI5LTkyNjNhYjZkMGU2
ZiIsICJ2YWx1ZXMiOiBbeyJkZWZhdWx0IjogdHJ1ZSwgImVuYWJsZWQiOiB0cnVlLCAiaGlkZGVu
IjogZmFsc2UsICJsYWJlbCI6ICJTQkwiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjcz
MTM5YjdhLWE5ZTEtNGYzOS04YWU4LTQxOGU5NjM1OGYzOCIsICJ2YWx1ZSI6IDUyfSwgeyJkZWZh
dWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRlbiI6IGZhbHNlLCAibGFiZWwiOiAi
WEJMIiwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICJhNzg4ZDg4Mi1hOWQ4LTQ2YjEtYTdm
MC0xZGJmYmM1ZTI3MmMiLCAidmFsdWUiOiA1M30sIHsiZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxl
ZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjogIlBCTCIsICJwcm9wZXJ0aWVzIjog
bnVsbCwgInV1aWQiOiAiZGU0NDFkMWEtYzQ4NC00YWJjLTg2NGMtOGNlNDc5NmU3MjExIiwgInZh
bHVlIjogNTR9LCB7ImRlZmF1bHQiOiBmYWxzZSwgImVuYWJsZWQiOiB0cnVlLCAiaGlkZGVuIjog
ZmFsc2UsICJsYWJlbCI6ICJTQkwtWEJMIiwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICI2
NTVkMjNiMC1kNzAwLTQyNDUtYjNkNS1iNmMzMmNiZjU4NGMiLCAidmFsdWUiOiA1NX0sIHsiZGVm
YXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjog
IlpFTiIsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiODUxYTg0MTEtMzljMC00MTlkLTg0
NTAtYzhjNjE3YjllYTZiIiwgInZhbHVlIjogNTZ9LCB7ImRlZmF1bHQiOiBmYWxzZSwgImVuYWJs
ZWQiOiB0cnVlLCAiaGlkZGVuIjogZmFsc2UsICJsYWJlbCI6ICJNU1IiLCAicHJvcGVydGllcyI6
IG51bGwsICJ1dWlkIjogIjJjYzJmZmI4LTY4NWMtNDI0MC1hMzM4LTdkNTViYWZiZmE5OSIsICJ2
YWx1ZSI6IDU3fSwgeyJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRlbiI6
IGZhbHNlLCAibGFiZWwiOiAiQVVUSEJMIiwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICI4
MzhmMzQ2MS1kNjFhLTRkOTYtOGJlMi1hMDY3YmVhMjNiNTkiLCAidmFsdWUiOiA1OH1dfSwgeyJh
bGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImNhbGN1
bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZh
dWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9y
dF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9zcGFtaGF1c19kb21haW5fbmFtZV9yZXNvdXJjZSIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiAxODUsICJpbnB1dF90eXBlIjogInNl
bGVjdCIsICJpbnRlcm5hbCI6IGZhbHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJz
cGFtaGF1c19kb21haW5fbmFtZV9yZXNvdXJjZSIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9w
ZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiAicHJvcGVydGllcyIs
ICJyZWFkX29ubHkiOiBmYWxzZSwgInJlcXVpcmVkIjogImFsd2F5cyIsICJyaWNoX3RleHQiOiBm
YWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJTcGFtSGF1cyBEb21h
aW4gTmFtZSBSZXNvdXJjZSIsICJ0b29sdGlwIjogInJlc291cmNlLW5hbWUgaXMgYSByZXF1aXJl
ZCBlbnVtZXJhdGVkIGZpZWxkIHRoYXQgcmVwcmVzZW50cyB3aGljaCBibG9ja2xpc3Qgc2hvdWxk
IGJlIHF1ZXJpZWQiLCAidHlwZV9pZCI6IDYsICJ1dWlkIjogIjJjZmVhMjhiLThmOGYtNGY3ZC1h
N2QyLTE0ZmQ1YjgyMGFkZiIsICJ2YWx1ZXMiOiBbeyJkZWZhdWx0IjogdHJ1ZSwgImVuYWJsZWQi
OiB0cnVlLCAiaGlkZGVuIjogZmFsc2UsICJsYWJlbCI6ICJaUkQiLCAicHJvcGVydGllcyI6IG51
bGwsICJ1dWlkIjogIjE4MmY3NGQ2LWFhNzUtNGJjMS05NDgxLWI2NjcwMTZlZDc2ZCIsICJ2YWx1
ZSI6IDU5fSwgeyJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRlbiI6IGZh
bHNlLCAibGFiZWwiOiAiREJMIiwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICI0OGEwNDdl
NS1kYjNmLTRhMGUtOWU1My00ZWJhMGMwZTBlZDgiLCAidmFsdWUiOiA2MH1dfSwgeyJleHBvcnRf
a2V5IjogImluY2lkZW50L2ludGVybmFsX2N1c3RvbWl6YXRpb25zX2ZpZWxkIiwgImlkIjogMCwg
ImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRlcm5hbCI6IHRydWUsICJuYW1lIjogImludGVybmFs
X2N1c3RvbWl6YXRpb25zX2ZpZWxkIiwgInJlYWRfb25seSI6IHRydWUsICJ0ZXh0IjogIkN1c3Rv
bWl6YXRpb25zIEZpZWxkIChpbnRlcm5hbCkiLCAidHlwZV9pZCI6IDAsICJ1dWlkIjogImJmZWVj
MmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMSJ9XSwgImZ1bmN0aW9ucyI6IFt7ImNyZWF0
b3IiOiB7ImRpc3BsYXlfbmFtZSI6ICJMb2NhbCBJbnRlZ3JhdGlvbiBTZXJ2ZXIiLCAiaWQiOiA0
LCAibmFtZSI6ICJhZDI2MWMxZi1mMWNjLTQxMTUtYmJjZS1hMTUxZjg4YmFjNWUiLCAidHlwZSI6
ICJhcGlrZXkifSwgImRlc2NyaXB0aW9uIjogeyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50Ijog
IkZ1bmN0aW9uIHRvIGNoZWNrIElQIEFkZHJlc3MgJiBEb21haW4gTmFtZXMgYWdhaW5zdCBTcGFt
aGF1cyBEYXRhYmFzZSB0byBzZWUgd2hldGhlciBJUCBBZGRyZXNzIG9yIERvbWFpbiBOYW1lcyBh
cHBlYXJzIGluIFNwYW1oYXVzIGJsb2NrIGxpc3QgcmVjb3JkcyBvciBub3QuIn0sICJkZXN0aW5h
dGlvbl9oYW5kbGUiOiAiZm5fc3BhbWhhdXNfcXVlcnkiLCAiZGlzcGxheV9uYW1lIjogIlNwYW1o
YXVzIFF1ZXJ5IFN1Ym1pdCBBcnRpZmFjdCIsICJleHBvcnRfa2V5IjogImZuX3NwYW1oYXVzX3F1
ZXJ5X3N1Ym1pdF9hcnRpZmFjdCIsICJpZCI6IDEsICJsYXN0X21vZGlmaWVkX2J5IjogeyJkaXNw
bGF5X25hbWUiOiAiTG9jYWwgSW50ZWdyYXRpb24gU2VydmVyIiwgImlkIjogNCwgIm5hbWUiOiAi
YWQyNjFjMWYtZjFjYy00MTE1LWJiY2UtYTE1MWY4OGJhYzVlIiwgInR5cGUiOiAiYXBpa2V5In0s
ICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTk3Njc3ODMyNzE0LCAibmFtZSI6ICJmbl9zcGFtaGF1
c19xdWVyeV9zdWJtaXRfYXJ0aWZhY3QiLCAidGFncyI6IFtdLCAidXVpZCI6ICJhY2IyYTA3Yy04
MTVjLTQ1NDAtODA2YS1lMTEwMDJiOGEyYzYiLCAidmVyc2lvbiI6IDEsICJ2aWV3X2l0ZW1zIjog
W3siY29udGVudCI6ICIxMmExMWI2NC0xNmIzLTQ1MDktOTMzMi01OTkwOTZiOTlkOTkiLCAiZWxl
bWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lm
IjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwg
eyJjb250ZW50IjogIjY4MWU0ZDM2LWY5ZDMtNDZiMy04ZTVlLTI2Zjk5NzA4MWMwOSIsICJlbGVt
ZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYi
OiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9XSwg
IndvcmtmbG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImRlc2NyaXB0aW9uIjogbnVsbCwgIm5hbWUi
OiAiRXhhbXBsZTogU3BhbUhhdXM6IFN1Ym1pdCBEb21haW4gTmFtZSIsICJvYmplY3RfdHlwZSI6
ICJhcnRpZmFjdCIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3NwYW1oYXVzX3N1Ym1p
dF9kb21haW5fbmFtZSIsICJ0YWdzIjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjog
MX0sIHsiYWN0aW9ucyI6IFtdLCAiZGVzY3JpcHRpb24iOiBudWxsLCAibmFtZSI6ICJFeGFtcGxl
OiBTcGFtSGF1czogU3VibWl0IElQIEFkZHJlc3MiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3Qi
LCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRfaXBfYWRkcmVz
cyIsICJ0YWdzIjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93X2lkIjogMn1dfV0sICJnZW9z
IjogbnVsbCwgImdyb3VwcyI6IG51bGwsICJpZCI6IDEsICJpbmJvdW5kX21haWxib3hlcyI6IG51
bGwsICJpbmNpZGVudF9hcnRpZmFjdF90eXBlcyI6IFtdLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1
cGRhdGVfZGF0ZSI6IDE1OTc3NTM3NzU1NTYsICJjcmVhdGVfZGF0ZSI6IDE1OTc3NTM3NzU1NTYs
ICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlw
dGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6
ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0
aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFs
c2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgImluZHVz
dHJpZXMiOiBudWxsLCAibGF5b3V0cyI6IFtdLCAibG9jYWxlIjogbnVsbCwgIm1lc3NhZ2VfZGVz
dGluYXRpb25zIjogW3siYXBpX2tleXMiOiBbImFkMjYxYzFmLWYxY2MtNDExNS1iYmNlLWExNTFm
ODhiYWM1ZSJdLCAiZGVzdGluYXRpb25fdHlwZSI6IDAsICJleHBlY3RfYWNrIjogdHJ1ZSwgImV4
cG9ydF9rZXkiOiAiZm5fc3BhbWhhdXNfcXVlcnkiLCAibmFtZSI6ICJmbl9zcGFtaGF1c19xdWVy
eSIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl9zcGFtaGF1c19xdWVyeSIsICJ0YWdzIjogW10s
ICJ1c2VycyI6IFtdLCAidXVpZCI6ICI2YjMwMTJkMi0zN2UxLTRkZTAtYjU5MC03NGI5ZGJlMWQ0
ZWIifV0sICJub3RpZmljYXRpb25zIjogbnVsbCwgIm92ZXJyaWRlcyI6IFtdLCAicGhhc2VzIjog
W10sICJyZWd1bGF0b3JzIjogbnVsbCwgInJvbGVzIjogW10sICJzY3JpcHRzIjogW10sICJzZXJ2
ZXJfdmVyc2lvbiI6IHsiYnVpbGRfbnVtYmVyIjogMCwgIm1ham9yIjogMzUsICJtaW5vciI6IDAs
ICJ2ZXJzaW9uIjogIjM1LjAuMCJ9LCAidGFncyI6IFtdLCAidGFza19vcmRlciI6IFtdLCAidGlt
ZWZyYW1lcyI6IG51bGwsICJ0eXBlcyI6IFtdLCAid29ya2Zsb3dzIjogW3siYWN0aW9ucyI6IFtd
LCAiY29udGVudCI6IHsidmVyc2lvbiI6IDEsICJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX3NwYW1o
YXVzX3N1Ym1pdF9kb21haW5fbmFtZSIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVu
Y29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3Jn
L3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21n
Lm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21n
Lm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5v
cmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGll
bnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxT
Y2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0
YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxw
cm9jZXNzIGlkPVwiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRfZG9tYWluX25hbWVcIiBpc0V4ZWN1
dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IFNwYW1IYXVzOiBTdWJtaXQgRG9tYWluIE5h
bWVcIj48ZG9jdW1lbnRhdGlvbj5DaGVjayBEb21haW4gTmFtZSBhZ2FpbnN0IFNwYW1oYXVzIERh
dGFiYXNlIHRvIHNlZSB3aGV0aGVyIERvbWFpbiBOYW1lIGlzIGluIGJsb2NrIGxpc3QgcmVjb3Jk
cyBvciBub3QuaWYgZ2l2ZW4gYXJ0aWZhY3QgYXBwZWFycyBpbiBvbmUgb2YgdGhlIGJsb2NrIGxp
c3QgcmVjb3JkLCB0aGVuIGFydGlmYWN0cyBkZXNjcmlwdGlvbiBmaWxlZCB3aWxsIGJlIHVwZGF0
ZWQgd2l0aCBhZGRpdGlvbmFsIGluZm9ybWF0aW9uLjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVu
dCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMXg4cGVt
Mzwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzFr
aGZ1ZHFcIiBuYW1lPVwiU3BhbWhhdXMgUXVlcnkgU3VibWl0IEFydGlmYWN0XCIgcmVzaWxpZW50
OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9u
IHV1aWQ9XCJhY2IyYTA3Yy04MTVjLTQ1NDAtODA2YS1lMTEwMDJiOGEyYzZcIj57XCJpbnB1dHNc
Ijp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcInJlc3VsdHNfZGF0YSA9IHJlc3VsdHMu
Z2V0KCdjb250ZW50JylcXG50bXBfdGV4dCA9IFxcXCJcXFwiXFxudG1wX2Rlc2MgPSBhcnRpZmFj
dC5kZXNjcmlwdGlvblxcbmlmIHJlc3VsdHNfZGF0YS5nZXQoJ2lzX2luX2Jsb2NrbGlzdCcpOlxc
biAgICAgdG1wX3RleHQgPSBcXFwiJmx0O2JyJmd0OyZsdDticiZndDsmbHQ7YiZndDtUaGlzIGFy
dGlmYWN0IGNoZWNrZWQgYWdhaW5zdCBTcGFtaGF1cyBhbmQgaXQgaXMgaW4gYmxvY2sgbGlzdC4m
bHQ7L2ImZ3Q7XFxcIlxcbiAgICAgcmVzcF9saXN0ID0gcmVzdWx0c19kYXRhLmdldCgncmVzcCcp
XFxuICAgICBmb3IgY29kZSBpbiByZXNwX2xpc3Q6XFxuICAgICAgICAgIGNvZGUgPSBzdHIoY29k
ZSlcXG4gICAgICAgICAgdG1wX3RleHQgKz0gXFxcIiZsdDticiZndDsmbHQ7YiZndDtjb2RlIDom
bHQ7L2ImZ3Q7IHt9Jmx0Oy9iciZndDtcXFwiLmZvcm1hdChjb2RlKVxcbiAgICAgICAgICB0bXBf
dGV4dCArPSBcXFwiJmx0O2JyJmd0OyZsdDtiJmd0O2RhdGFzZXQgOiZsdDsvYiZndDsge30mbHQ7
L2JyJmd0O1xcXCIuZm9ybWF0KHJlc3VsdHNfZGF0YS5nZXQoY29kZSkuZ2V0KCdkYXRhc2V0Jykp
XFxuICAgICAgICAgIHRtcF90ZXh0ICs9IFxcXCImbHQ7YnImZ3Q7Jmx0O2ImZ3Q7ZXhwbGFuYXRp
b24gOiZsdDsvYiZndDsge30mbHQ7L2JyJmd0O1xcXCIuZm9ybWF0KHJlc3VsdHNfZGF0YS5nZXQo
Y29kZSkuZ2V0KCdleHBsYW5hdGlvbicpKVxcbiAgICAgICAgICB0bXBfdGV4dCArPSBcXFwiJmx0
O2JyJmd0OyZsdDtiJmd0O1VSTCA6Jmx0Oy9iJmd0OyAmbHQ7L2JyJmd0O3t9Jmx0Oy9iciZndDtc
XFwiLmZvcm1hdChyZXN1bHRzX2RhdGEuZ2V0KGNvZGUpLmdldCgnVVJMJykpXFxuZWxzZTpcXG4g
ICAgIHRtcF90ZXh0ID0gXFxcIiZsdDticiZndDsmbHQ7YnImZ3Q7Jmx0O2ImZ3Q7VGhpcyBhcnRp
ZmFjdCBjaGVja2VkIGFnYWluc3QgU3BhbWhhdXMgRGF0YXNldDoge30gYW5kIGl0IGlzIG5vdCBp
biBibG9jayBsaXN0LiZsdDsvYiZndDsmbHQ7L2JyJmd0OyZsdDsvYnImZ3Q7XFxcIi5mb3JtYXQo
cmVzdWx0cy5nZXQoJ2lucHV0cycpLmdldCgnc3BhbWhhdXNfc2VhcmNoX3Jlc291cmNlJykpXFxu
aWYgdG1wX2Rlc2M6XFxuICAgICB0bXBfZGVzYyA9IHRtcF9kZXNjLmdldCgnY29udGVudCcpXFxu
ZWxzZTpcXG4gICAgIHRtcF9kZXNjID0gXFxcIlxcXCIgXFxuY29tcGxldGVfdG1wX3RleHQgPSB0
bXBfZGVzYyt0bXBfdGV4dFxcbnJpY2hfdGV4dCA9IGhlbHBlci5jcmVhdGVSaWNoVGV4dChjb21w
bGV0ZV90bXBfdGV4dClcXG5hcnRpZmFjdC5kZXNjcmlwdGlvbiA9IHJpY2hfdGV4dFwiLFwicHJl
X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuc3BhbWhhdXNfcXVlcnlfc3RyaW5nID0gYXJ0
aWZhY3QudmFsdWVcXG5pbnB1dHMuc3BhbWhhdXNfc2VhcmNoX3Jlc291cmNlID0gcnVsZS5wcm9w
ZXJ0aWVzLnNwYW1oYXVzX2RvbWFpbl9uYW1lX3Jlc291cmNlXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rp
b24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzF4OHBlbTM8L2lu
Y29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMTNsNzVmNTwvb3V0Z29pbmc+PC9zZXJ2aWNl
VGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzF4OHBlbTNcIiBzb3VyY2VSZWY9
XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18xa2hmdWRxXCIv
PjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzE0amRmMzZcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93
XzEzbDc1ZjU8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNl
Rmxvd18xM2w3NWY1XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMWtoZnVkcVwiIHRhcmdldFJl
Zj1cIkVuZEV2ZW50XzE0amRmMzZcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRp
b25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRB
bm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VS
ZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4
aXl0XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFjM2IzcG9cIj48dGV4
dD48IVtDREFUQVtBIHdvcmtmbG93IHRvIGNoZWNrIERvbWFpbiBuYW1lcyBhZ2FpbnN0IFNwYW1o
YXVzIGRhdGFiYXNlIHRvIHNlZSB3aGV0aGVyIGRvbWFpbiBpcyBpbiBTcGFtaGF1cyBibG9jayBs
aXN0IG9yIG5vdC5cbl1dPjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1c
IkFzc29jaWF0aW9uXzBkcmFyeW1cIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xa2hmdWRxXCIg
dGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWMzYjNwb1wiLz48L3Byb2Nlc3M+PGJwbW5kaTpC
UE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxl
bWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBi
cG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3ht
X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIg
eT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3
aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBt
bmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0
aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwvYnBt
bmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25f
MXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4
PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndheXBv
aW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2JwbW5k
aTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzFr
aGZ1ZHFcIiBpZD1cIlNlcnZpY2VUYXNrXzFraGZ1ZHFfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiNDI1XCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1O
U2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xeDhwZW0z
XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMXg4cGVtM19kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTk4
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9
XCI0MjVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5M
YWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjMxMS41XCIg
eT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpC
UE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8xNGpkZjM2XCIgaWQ9XCJFbmRFdmVudF8x
NGpkZjM2X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwi
NzY5XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjEzXCIgd2lkdGg9XCIwXCIgeD1cIjc4N1wiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxhYmVs
PjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVu
Y2VGbG93XzEzbDc1ZjVcIiBpZD1cIlNlcXVlbmNlRmxvd18xM2w3NWY1X2RpXCI+PG9tZ2RpOndh
eXBvaW50IHg9XCI1MjVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21n
ZGk6d2F5cG9pbnQgeD1cIjc2OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIv
PjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBc
IiB4PVwiNjQ3XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVk
Z2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xYzNiM3Bv
XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xYzNiM3BvX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9
XCI1M1wiIHdpZHRoPVwiNDY2XCIgeD1cIjQ5NlwiIHk9XCI2MlwiLz48L2JwbW5kaTpCUE1OU2hh
cGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzBkcmFyeW1cIiBp
ZD1cIkFzc29jaWF0aW9uXzBkcmFyeW1fZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjUyNVwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTgzXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNjcz
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMTVcIi8+PC9icG1uZGk6QlBNTkVkZ2U+
PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+In0s
ICJjb250ZW50X3ZlcnNpb24iOiAxLCAiY3JlYXRvcl9pZCI6ICJhZDI2MWMxZi1mMWNjLTQxMTUt
YmJjZS1hMTUxZjg4YmFjNWUiLCAiZGVzY3JpcHRpb24iOiAiQ2hlY2sgRG9tYWluIE5hbWUgYWdh
aW5zdCBTcGFtaGF1cyBEYXRhYmFzZSB0byBzZWUgd2hldGhlciBEb21haW4gTmFtZSBpcyBpbiBi
bG9jayBsaXN0IHJlY29yZHMgb3Igbm90LmlmIGdpdmVuIGFydGlmYWN0IGFwcGVhcnMgaW4gb25l
IG9mIHRoZSBibG9jayBsaXN0IHJlY29yZCwgdGhlbiBhcnRpZmFjdHMgZGVzY3JpcHRpb24gZmls
ZWQgd2lsbCBiZSB1cGRhdGVkIHdpdGggYWRkaXRpb25hbCBpbmZvcm1hdGlvbi4iLCAiZXhwb3J0
X2tleSI6ICJleGFtcGxlX3NwYW1oYXVzX3N1Ym1pdF9kb21haW5fbmFtZSIsICJsYXN0X21vZGlm
aWVkX2J5IjogImFkMjYxYzFmLWYxY2MtNDExNS1iYmNlLWExNTFmODhiYWM1ZSIsICJsYXN0X21v
ZGlmaWVkX3RpbWUiOiAxNTk3Njc3ODMzMTg4LCAibmFtZSI6ICJFeGFtcGxlOiBTcGFtSGF1czog
U3VibWl0IERvbWFpbiBOYW1lIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInByb2dyYW1t
YXRpY19uYW1lIjogImV4YW1wbGVfc3BhbWhhdXNfc3VibWl0X2RvbWFpbl9uYW1lIiwgInRhZ3Mi
OiBbXSwgInV1aWQiOiAiZThlNmE0ZTktYWFmZS00ZmY0LWIzNWYtNTAyOGI2NjI2YjM1IiwgIndv
cmtmbG93X2lkIjogMX0sIHsiYWN0aW9ucyI6IFtdLCAiY29udGVudCI6IHsidmVyc2lvbiI6IDEs
ICJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX3NwYW1oYXVzX3N1Ym1pdF9pcF9hZGRyZXNzIiwgInht
bCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlv
bnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIg
eG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwi
IHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4
bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1s
bnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9
XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93
d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0
cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX3NwYW1oYXVz
X3N1Ym1pdF9pcF9hZGRyZXNzXCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxl
OiBTcGFtSGF1czogU3VibWl0IElQIEFkZHJlc3NcIj48ZG9jdW1lbnRhdGlvbj5DaGVjayBJUCBB
ZGRyZXNzIGFnYWluc3QgU3BhbWhhdXMgRGF0YWJhc2UgdG8gc2VlIHdoZXRoZXIgSVAgQWRkcmVz
cyBpcyBpbiBibG9jayBsaXN0IHJlY29yZHMgb3Igbm90LmlmIGdpdmVuIGFydGlmYWN0IGFwcGVh
cnMgaW4gb25lIG9mIHRoZSBibG9jayBsaXN0IHJlY29yZCwgdGhlbiBhcnRpZmFjdHMgZGVzY3Jp
cHRpb24gZmlsZWQgd2lsbCBiZSB1cGRhdGVkIHdpdGggYWRkaXRpb25hbCBpbmZvcm1hdGlvbi48
L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0
Z29pbmc+U2VxdWVuY2VGbG93XzBuZ2k4OTg8L291dGdvaW5nPjwvc3RhcnRFdmVudD48c2Vydmlj
ZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xMW8ycGdyXCIgbmFtZT1cIlNwYW1oYXVzIFF1ZXJ5IFN1
Ym1pdCBBcnRpZmFjdFwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxl
bWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiYWNiMmEwN2MtODE1Yy00NTQwLTgwNmEt
ZTExMDAyYjhhMmM2XCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6
XCJyZXN1bHRzX2RhdGEgPSByZXN1bHRzLmdldCgnY29udGVudCcpXFxudG1wX3RleHQgPSBcXFwi
XFxcIlxcbnRtcF9kZXNjID0gYXJ0aWZhY3QuZGVzY3JpcHRpb25cXG5pZiByZXN1bHRzX2RhdGEu
Z2V0KCdpc19pbl9ibG9ja2xpc3QnKTpcXG4gICAgIHRtcF90ZXh0ID0gXFxcIiZsdDticiZndDsm
bHQ7YnImZ3Q7Jmx0O2ImZ3Q7VGhpcyBhcnRpZmFjdCBjaGVja2VkIGFnYWluc3QgU3BhbWhhdXMg
YW5kIGl0IGlzIGluIGJsb2NrIGxpc3QuJmx0Oy9iJmd0O1xcXCJcXG4gICAgIHJlc3BfbGlzdCA9
IHJlc3VsdHNfZGF0YS5nZXQoJ3Jlc3AnKVxcbiAgICAgZm9yIGNvZGUgaW4gcmVzcF9saXN0Olxc
biAgICAgICAgICBjb2RlID0gc3RyKGNvZGUpXFxuICAgICAgICAgIHRtcF90ZXh0ICs9IFxcXCIm
bHQ7YnImZ3Q7Jmx0O2ImZ3Q7Y29kZSA6Jmx0Oy9iJmd0OyB7fSZsdDsvYnImZ3Q7XFxcIi5mb3Jt
YXQoY29kZSlcXG4gICAgICAgICAgdG1wX3RleHQgKz0gXFxcIiZsdDticiZndDsmbHQ7YiZndDtk
YXRhc2V0IDombHQ7L2ImZ3Q7IHt9Jmx0Oy9iciZndDtcXFwiLmZvcm1hdChyZXN1bHRzX2RhdGEu
Z2V0KGNvZGUpLmdldCgnZGF0YXNldCcpKVxcbiAgICAgICAgICB0bXBfdGV4dCArPSBcXFwiJmx0
O2JyJmd0OyZsdDtiJmd0O2V4cGxhbmF0aW9uIDombHQ7L2ImZ3Q7IHt9Jmx0Oy9iciZndDtcXFwi
LmZvcm1hdChyZXN1bHRzX2RhdGEuZ2V0KGNvZGUpLmdldCgnZXhwbGFuYXRpb24nKSlcXG4gICAg
ICAgICAgdG1wX3RleHQgKz0gXFxcIiZsdDticiZndDsmbHQ7YiZndDtVUkwgOiZsdDsvYiZndDsg
Jmx0Oy9iciZndDt7fSZsdDsvYnImZ3Q7XFxcIi5mb3JtYXQocmVzdWx0c19kYXRhLmdldChjb2Rl
KS5nZXQoJ1VSTCcpKVxcbmVsc2U6XFxuICAgICB0bXBfdGV4dCA9IFxcXCImbHQ7YnImZ3Q7Jmx0
O2JyJmd0OyZsdDtiJmd0O1RoaXMgYXJ0aWZhY3QgY2hlY2tlZCBhZ2FpbnN0IFNwYW1oYXVzIERh
dGFzZXQ6IHt9IGFuZCBpdCBpcyBub3QgaW4gYmxvY2sgbGlzdC4mbHQ7L2ImZ3Q7Jmx0Oy9iciZn
dDsmbHQ7L2JyJmd0O1xcXCIuZm9ybWF0KHJlc3VsdHMuZ2V0KCdpbnB1dHMnKS5nZXQoJ3NwYW1o
YXVzX3NlYXJjaF9yZXNvdXJjZScpKVxcbmlmIHRtcF9kZXNjOlxcbiAgICAgdG1wX2Rlc2MgPSB0
bXBfZGVzYy5nZXQoJ2NvbnRlbnQnKVxcbmVsc2U6XFxuICAgICB0bXBfZGVzYyA9IFxcXCJcXFwi
IFxcbmNvbXBsZXRlX3RtcF90ZXh0ID0gdG1wX2Rlc2MrdG1wX3RleHRcXG5yaWNoX3RleHQgPSBo
ZWxwZXIuY3JlYXRlUmljaFRleHQoY29tcGxldGVfdG1wX3RleHQpXFxuYXJ0aWZhY3QuZGVzY3Jp
cHRpb24gPSByaWNoX3RleHRcIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLnNw
YW1oYXVzX3F1ZXJ5X3N0cmluZyA9IGFydGlmYWN0LnZhbHVlXFxuaW5wdXRzLnNwYW1oYXVzX3Nl
YXJjaF9yZXNvdXJjZSA9IHJ1bGUucHJvcGVydGllcy5zcGFtaGF1c19pcF9yZXNvdXJjZVwifTwv
cmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNl
Rmxvd18wbmdpODk4PC9pbmNvbWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzB4eDE5b3k8L291
dGdvaW5nPjwvc2VydmljZVRhc2s+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wbmdp
ODk4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2Vydmlj
ZVRhc2tfMTFvMnBnclwiLz48ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8xZGMxdXhwXCI+PGluY29t
aW5nPlNlcXVlbmNlRmxvd18weHgxOW95PC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZs
b3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMHh4MTlveVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzEx
bzJwZ3JcIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8xZGMxdXhwXCIvPjx0ZXh0QW5ub3RhdGlvbiBp
ZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhl
cmU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8x
c2V1ajQ4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4
dEFubm90YXRpb25fMWt4eGl5dFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlv
bl8xdmpmeHF1XCI+PHRleHQ+QSB3b3JrZmxvdyB0byBjaGVjayBJUCBBZGRyZXNzIGFnYWluc3Qg
U3BhbWhhdXMgZGF0YWJhc2UgdG8gc2VlIHdoZXRoZXIgZG9tYWluIGlzIGluIFNwYW1oYXVzIGJs
b2NrIGxpc3Qgb3Igbm90LjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1c
IkFzc29jaWF0aW9uXzB0NjZ6cmNcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xMW8ycGdyXCIg
dGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMXZqZnhxdVwiLz48L3Byb2Nlc3M+PGJwbW5kaTpC
UE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxl
bWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBi
cG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3ht
X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIg
eT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3
aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBt
bmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0
aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwvYnBt
bmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25f
MXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4
PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndheXBv
aW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2JwbW5k
aTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzEx
bzJwZ3JcIiBpZD1cIlNlcnZpY2VUYXNrXzExbzJwZ3JfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdo
dD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMzU1XCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1O
U2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18wbmdpODk4
XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMG5naTg5OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTk4
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9
XCIyNzZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9p
bnQgeD1cIjI3NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3
YXlwb2ludCB4PVwiMzU1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJw
bW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9
XCIyOTFcIiB5PVwiMTk5LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdl
PjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMWRjMXV4cFwiIGlkPVwi
RW5kRXZlbnRfMWRjMXV4cF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1c
IjM2XCIgeD1cIjY1OFwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI2NzZcIiB5PVwiMjI3XCIvPjwvYnBtbmRp
OkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVu
dD1cIlNlcXVlbmNlRmxvd18weHgxOW95XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMHh4MTlveV9kaVwi
PjxvbWdkaTp3YXlwb2ludCB4PVwiNDU1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIy
MDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2NThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIg
d2lkdGg9XCIwXCIgeD1cIjU1Ni41XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3Rh
dGlvbl8xdmpmeHF1XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xdmpmeHF1X2RpXCI+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCI1M1wiIHdpZHRoPVwiNDAwXCIgeD1cIjQ1M1wiIHk9XCI2OVwiLz48L2Jw
bW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9u
XzB0NjZ6cmNcIiBpZD1cIkFzc29jaWF0aW9uXzB0NjZ6cmNfZGlcIj48b21nZGk6d2F5cG9pbnQg
eD1cIjQ1NVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMTg0XCIvPjxvbWdkaTp3YXlw
b2ludCB4PVwiNTk0XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMjJcIi8+PC9icG1u
ZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVm
aW5pdGlvbnM+In0sICJjb250ZW50X3ZlcnNpb24iOiAxLCAiY3JlYXRvcl9pZCI6ICJhZDI2MWMx
Zi1mMWNjLTQxMTUtYmJjZS1hMTUxZjg4YmFjNWUiLCAiZGVzY3JpcHRpb24iOiAiQ2hlY2sgSVAg
QWRkcmVzcyBhZ2FpbnN0IFNwYW1oYXVzIERhdGFiYXNlIHRvIHNlZSB3aGV0aGVyIElQIEFkZHJl
c3MgaXMgaW4gYmxvY2sgbGlzdCByZWNvcmRzIG9yIG5vdC5pZiBnaXZlbiBhcnRpZmFjdCBhcHBl
YXJzIGluIG9uZSBvZiB0aGUgYmxvY2sgbGlzdCByZWNvcmQsIHRoZW4gYXJ0aWZhY3RzIGRlc2Ny
aXB0aW9uIGZpbGVkIHdpbGwgYmUgdXBkYXRlZCB3aXRoIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24u
IiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRfaXBfYWRkcmVzcyIsICJs
YXN0X21vZGlmaWVkX2J5IjogImFkMjYxYzFmLWYxY2MtNDExNS1iYmNlLWExNTFmODhiYWM1ZSIs
ICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTk3Njc3ODMzMzE1LCAibmFtZSI6ICJFeGFtcGxlOiBT
cGFtSGF1czogU3VibWl0IElQIEFkZHJlc3MiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAi
cHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRfaXBfYWRkcmVzcyIs
ICJ0YWdzIjogW10sICJ1dWlkIjogIjQ0NTQ5ZWJhLWE4NDUtNGM4ZS1hNTY3LWQ3MGNkZDc0MGYy
ZSIsICJ3b3JrZmxvd19pZCI6IDJ9XSwgIndvcmtzcGFjZXMiOiBbXX0=
""")
