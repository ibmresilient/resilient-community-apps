# (c) Copyright IBM Corp. 2010, 2019. All Rights Reserved.
# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_spamhaus_query"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_spamhaus_query package"""
    reload_params = {"package": u"fn_spamhaus_query",
                    "incident_fields": [], 
                    "action_fields": [u"spamhaus_domain_name_resource", u"spamhaus_ip_resource"], 
                    "function_params": [u"spamhaus_query_string", u"spamhause_search_resource"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_spamhaus_query"], 
                    "functions": [u"fn_spamhaus_query_submit_artifact"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_spamhaus_submit_domain_name", u"example_spamhaus_submit_ip_address"], 
                    "actions": [u"Example: SpamHaus: Submit Domain Name", u"Example: SpamHaus: Submit IP Address"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     spamhaus_domain_name_resource
    #     spamhaus_ip_resource
    #   Function inputs:
    #     spamhaus_query_string
    #     spamhause_search_resource
    #   Message Destinations:
    #     fn_spamhaus_query
    #   Functions:
    #     fn_spamhaus_query_submit_artifact
    #   Workflows:
    #     example_spamhaus_submit_domain_name
    #     example_spamhaus_submit_ip_address
    #   Rules:
    #     Example: SpamHaus: Submit Domain Name
    #     Example: SpamHaus: Submit IP Address


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMSwgImJ1aWxkX251bWJl
ciI6IDc2LCAidmVyc2lvbiI6ICIzMS4xLjc2In0sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAy
LCAiaWQiOiAxMDksICJleHBvcnRfZGF0ZSI6IDE1NTczMzgzMzQ0NDEsICJmaWVsZHMiOiBbeyJp
ZCI6IDUxLCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAidGV4dCI6ICJTaW11bGF0aW9uIiwgInBy
ZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMCwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRl
bnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQgaXMg
cmVhZC1vbmx5LiIsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogImMz
ZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIsICJvcGVyYXRpb25zIjogW10sICJv
cGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogdHJ1ZSwgImNo
YW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImluY2lk
ZW50L2luY190cmFpbmluZyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0s
IHsiaWQiOiAyOTksICJuYW1lIjogInNwYW1oYXVzX2lwX3Jlc291cmNlIiwgInRleHQiOiAiU3Bh
bUhhdXMgSVAgUmVzb3VyY2UiLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAidHlwZV9pZCI6IDYs
ICJ0b29sdGlwIjogInJlc291cmNlLW5hbWUgaXMgYSByZXF1aXJlZCBlbnVtZXJhdGVkIGZpZWxk
IHRoYXQgcmVwcmVzZW50cyB3aGljaCBibG9ja2xpc3Qgc2hvdWxkIGJlIHF1ZXJpZWQiLCAicGxh
Y2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAic2VsZWN0IiwgInJlcXVpcmVkIjogImFsd2F5
cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0
X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJu
YWwiOiBmYWxzZSwgInV1aWQiOiAiMGI0Y2Q4ZjMtOTdkYy00ZWNkLTk1MjktOTI2M2FiNmQwZTZm
IiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW3si
dmFsdWUiOiAyMTAsICJsYWJlbCI6ICJTQkwiLCAiZW5hYmxlZCI6IHRydWUsICJwcm9wZXJ0aWVz
IjogbnVsbCwgInV1aWQiOiAiNzMxMzliN2EtYTllMS00ZjM5LThhZTgtNDE4ZTk2MzU4ZjM4Iiwg
ImhpZGRlbiI6IGZhbHNlLCAiZGVmYXVsdCI6IHRydWV9LCB7InZhbHVlIjogMjExLCAibGFiZWwi
OiAiWEJMIiwgImVuYWJsZWQiOiB0cnVlLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogImE3
ODhkODgyLWE5ZDgtNDZiMS1hN2YwLTFkYmZiYzVlMjcyYyIsICJoaWRkZW4iOiBmYWxzZSwgImRl
ZmF1bHQiOiBmYWxzZX0sIHsidmFsdWUiOiAyMTIsICJsYWJlbCI6ICJQQkwiLCAiZW5hYmxlZCI6
IHRydWUsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiZGU0NDFkMWEtYzQ4NC00YWJjLTg2
NGMtOGNlNDc5NmU3MjExIiwgImhpZGRlbiI6IGZhbHNlLCAiZGVmYXVsdCI6IGZhbHNlfSwgeyJ2
YWx1ZSI6IDIxMywgImxhYmVsIjogIlNCTC1YQkwiLCAiZW5hYmxlZCI6IHRydWUsICJwcm9wZXJ0
aWVzIjogbnVsbCwgInV1aWQiOiAiNjU1ZDIzYjAtZDcwMC00MjQ1LWIzZDUtYjZjMzJjYmY1ODRj
IiwgImhpZGRlbiI6IGZhbHNlLCAiZGVmYXVsdCI6IGZhbHNlfSwgeyJ2YWx1ZSI6IDIxNCwgImxh
YmVsIjogIlpFTiIsICJlbmFibGVkIjogdHJ1ZSwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6
ICI4NTFhODQxMS0zOWMwLTQxOWQtODQ1MC1jOGM2MTdiOWVhNmIiLCAiaGlkZGVuIjogZmFsc2Us
ICJkZWZhdWx0IjogZmFsc2V9LCB7InZhbHVlIjogMjE1LCAibGFiZWwiOiAiTVNSIiwgImVuYWJs
ZWQiOiB0cnVlLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjJjYzJmZmI4LTY4NWMtNDI0
MC1hMzM4LTdkNTViYWZiZmE5OSIsICJoaWRkZW4iOiBmYWxzZSwgImRlZmF1bHQiOiBmYWxzZX0s
IHsidmFsdWUiOiAyMTYsICJsYWJlbCI6ICJBVVRIQkwiLCAiZW5hYmxlZCI6IHRydWUsICJwcm9w
ZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiODM4ZjM0NjEtZDYxYS00ZDk2LThiZTItYTA2N2JlYTIz
YjU5IiwgImhpZGRlbiI6IGZhbHNlLCAiZGVmYXVsdCI6IGZhbHNlfV0sICJyZWFkX29ubHkiOiBm
YWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5
IjogImFjdGlvbmludm9jYXRpb24vc3BhbWhhdXNfaXBfcmVzb3VyY2UiLCAidGVtcGxhdGVzIjog
W10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMzAwLCAibmFtZSI6ICJzcGFtaGF1c19k
b21haW5fbmFtZV9yZXNvdXJjZSIsICJ0ZXh0IjogIlNwYW1IYXVzIERvbWFpbiBOYW1lIFJlc291
cmNlIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwgInR5cGVfaWQiOiA2LCAidG9vbHRpcCI6ICJy
ZXNvdXJjZS1uYW1lIGlzIGEgcmVxdWlyZWQgZW51bWVyYXRlZCBmaWVsZCB0aGF0IHJlcHJlc2Vu
dHMgd2hpY2ggYmxvY2tsaXN0IHNob3VsZCBiZSBxdWVyaWVkIiwgInBsYWNlaG9sZGVyIjogIiIs
ICJpbnB1dF90eXBlIjogInNlbGVjdCIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2Vy
dmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1
dWlkIjogIjJjZmVhMjhiLThmOGYtNGY3ZC1hN2QyLTE0ZmQ1YjgyMGFkZiIsICJvcGVyYXRpb25z
IjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFt7InZhbHVlIjogMjE3LCAi
bGFiZWwiOiAiWlJEIiwgImVuYWJsZWQiOiB0cnVlLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlk
IjogIjE4MmY3NGQ2LWFhNzUtNGJjMS05NDgxLWI2NjcwMTZlZDc2ZCIsICJoaWRkZW4iOiBmYWxz
ZSwgImRlZmF1bHQiOiB0cnVlfSwgeyJ2YWx1ZSI6IDIxOCwgImxhYmVsIjogIkRCTCIsICJlbmFi
bGVkIjogdHJ1ZSwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICI0OGEwNDdlNS1kYjNmLTRh
MGUtOWU1My00ZWJhMGMwZTBlZDgiLCAiaGlkZGVuIjogZmFsc2UsICJkZWZhdWx0IjogZmFsc2V9
XSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBm
YWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9zcGFtaGF1c19kb21haW5fbmFt
ZV9yZXNvdXJjZSIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQi
OiAzMDIsICJuYW1lIjogInNwYW1oYXVzZV9zZWFyY2hfcmVzb3VyY2UiLCAidGV4dCI6ICJzcGFt
aGF1c2Vfc2VhcmNoX3Jlc291cmNlIiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0
b29sdGlwIjogInJlc291cmNlLW5hbWUgaXMgYSByZXF1aXJlZCBlbnVtZXJhdGVkIGZpZWxkIHRo
YXQgcmVwcmVzZW50cyB3aGljaCBibG9ja2xpc3Qgc2hvdWxkIGJlIHF1ZXJpZWQuIiwgInBsYWNl
aG9sZGVyIjogIlNCTCxYQkwsUEJMLFNCTC1YQkwsWkVOLE1TUixBVVRIQkwsWlJEIChkb21haW5z
IG9ubHkpLERCTCAoZG9tYWlucyBvbmx5KS4iLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInJlcXVp
cmVkIjogImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFs
c2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiNjgxZTRkMzYtZjlkMy00NmIzLThlNWUt
MjZmOTk3MDgxYzA5IiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAi
dmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmlj
aF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vc3BhbWhhdXNlX3NlYXJj
aF9yZXNvdXJjZSIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQi
OiAzMDEsICJuYW1lIjogInNwYW1oYXVzX3F1ZXJ5X3N0cmluZyIsICJ0ZXh0IjogInNwYW1oYXVz
X3F1ZXJ5X3N0cmluZyIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6
ICJJUCBBZHJlc3Mgb3IgRG9tYWluIE5hbWUgdG8gYmUgY2hlY2tlZCBhZ2FpbnN0IFNwYW1oYXVz
IGRhdGFiYXNlLiIsICJwbGFjZWhvbGRlciI6ICJJUCBBZGRyZXNzL0RvbWFpbiBOYW1lIiwgImlu
cHV0X3R5cGUiOiAidGV4dCIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjog
IjEyYTExYjY0LTE2YjMtNDUwOS05MzMyLTU5OTA5NmI5OWQ5OSIsICJvcGVyYXRpb25zIjogW10s
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2Us
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJf
X2Z1bmN0aW9uL3NwYW1oYXVzX3F1ZXJ5X3N0cmluZyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJl
Y2F0ZWQiOiBmYWxzZX1dLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1NTcz
MzkyODEwNzAsICJjcmVhdGVfZGF0ZSI6IDE1NTczMzkyODEwNzAsICJ1dWlkIjogImJmZWVjMmQ0
LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0
aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBh
Y2thZ2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRl
cm5hbCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBu
dWxsLCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgInBoYXNlcyI6IFtdLCAiYXV0b21hdGlj
X3Rhc2tzIjogW10sICJvdmVycmlkZXMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3si
bmFtZSI6ICJmbl9zcGFtaGF1c19xdWVyeSIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl9zcGFt
aGF1c19xdWVyeSIsICJkZXN0aW5hdGlvbl90eXBlIjogMCwgImV4cGVjdF9hY2siOiB0cnVlLCAi
dXNlcnMiOiBbIm5rYW5kaGExQGluLmlibS5jb20iXSwgInV1aWQiOiAiNmIzMDEyZDItMzdlMS00
ZGUwLWI1OTAtNzRiOWRiZTFkNGViIiwgImV4cG9ydF9rZXkiOiAiZm5fc3BhbWhhdXNfcXVlcnki
fV0sICJhY3Rpb25zIjogW3siaWQiOiAxMDgsICJuYW1lIjogIkV4YW1wbGU6IFNwYW1IYXVzOiBT
dWJtaXQgRG9tYWluIE5hbWUiLCAidHlwZSI6IDEsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIs
ICJjb25kaXRpb25zIjogW3sibWV0aG9kIjogImVxdWFscyIsICJmaWVsZF9uYW1lIjogImFydGlm
YWN0LnR5cGUiLCAidmFsdWUiOiAiRE5TIE5hbWUiLCAidHlwZSI6IG51bGwsICJldmFsdWF0aW9u
X2lkIjogbnVsbH1dLCAiYXV0b21hdGlvbnMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjog
W10sICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfc3BhbWhhdXNfc3VibWl0X2RvbWFpbl9uYW1lIl0s
ICJ2aWV3X2l0ZW1zIjogW3sic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVs
ZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAi
Y29udGVudCI6ICIyY2ZlYTI4Yi04ZjhmLTRmN2QtYTdkMi0xNGZkNWI4MjBhZGYiLCAic2hvd19s
aW5rX2hlYWRlciI6IGZhbHNlfV0sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAi
NDNkOWQwY2UtZDQxMS00OTYzLTlmZDgtYjIyNTg5NzY1MDcyIiwgImV4cG9ydF9rZXkiOiAiRXhh
bXBsZTogU3BhbUhhdXM6IFN1Ym1pdCBEb21haW4gTmFtZSIsICJsb2dpY190eXBlIjogImFsbCJ9
LCB7ImlkIjogMTA3LCAibmFtZSI6ICJFeGFtcGxlOiBTcGFtSGF1czogU3VibWl0IElQIEFkZHJl
c3MiLCAidHlwZSI6IDEsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJjb25kaXRpb25zIjog
W3sibWV0aG9kIjogImVxdWFscyIsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5cGUiLCAidmFs
dWUiOiAiSVAgQWRkcmVzcyIsICJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiBudWxsfV0s
ICJhdXRvbWF0aW9ucyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgIndvcmtmbG93
cyI6IFsiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRfaXBfYWRkcmVzcyJdLCAidmlld19pdGVtcyI6
IFt7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxk
X3V1aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgImNvbnRlbnQiOiAiMGI0
Y2Q4ZjMtOTdkYy00ZWNkLTk1MjktOTI2M2FiNmQwZTZmIiwgInNob3dfbGlua19oZWFkZXIiOiBm
YWxzZX1dLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImE4M2Q0YTljLTMyMDct
NGVhMi04MjNjLWExODJiZjZjODE2NSIsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFNwYW1IYXVz
OiBTdWJtaXQgSVAgQWRkcmVzcyIsICJsb2dpY190eXBlIjogImFsbCJ9XSwgImxheW91dHMiOiBb
XSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAidGltZWZyYW1lcyI6IG51bGwsICJsb2NhbGUiOiBu
dWxsLCAiaW5kdXN0cmllcyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwgImdlb3MiOiBudWxs
LCAidGFza19vcmRlciI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJ0eXBlcyI6IFtdLCAic2Ny
aXB0cyI6IFtdLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7
IndvcmtmbG93X2lkIjogOTMsICJuYW1lIjogIkV4YW1wbGU6IFNwYW1IYXVzOiBTdWJtaXQgRG9t
YWluIE5hbWUiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRf
ZG9tYWluX25hbWUiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiZGVzY3JpcHRpb24iOiAi
Q2hlY2sgRG9tYWluIE5hbWUgYWdhaW5zdCBTcGFtaGF1cyBEYXRhYmFzZSB0byBzZWUgd2hldGhl
ciBEb21haW4gTmFtZSBpcyBpbiBibG9jayBsaXN0IHJlY29yZHMgb3Igbm90LmlmIGdpdmVuIGFy
dGlmYWN0IGFwcGVhcnMgaW4gb25lIG9mIHRoZSBibG9jayBsaXN0IHJlY29yZCwgdGhlbiBhcnRp
ZmFjdHMgZGVzY3JpcHRpb24gZmlsZWQgd2lsbCBiZSB1cGRhdGVkIHdpdGggYWRkaXRpb25hbCBp
bmZvcm1hdGlvbi4iLCAiY3JlYXRvcl9pZCI6ICJua2FuZGhhMUBpbi5pYm0uY29tIiwgImxhc3Rf
bW9kaWZpZWRfYnkiOiAibmthbmRoYTFAaW4uaWJtLmNvbSIsICJsYXN0X21vZGlmaWVkX3RpbWUi
OiAxNTU3MzM0MDMwMTc2LCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX3NwYW1oYXVzX3N1Ym1pdF9k
b21haW5fbmFtZSIsICJ1dWlkIjogImU4ZTZhNGU5LWFhZmUtNGZmNC1iMzVmLTUwMjhiNjYyNmIz
NSIsICJjb250ZW50IjogeyJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX3NwYW1oYXVzX3N1Ym1pdF9k
b21haW5fbmFtZSIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRG
LThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8y
MDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQ
TU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RE
LzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8y
MDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9i
cG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxu
czp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdl
dE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwi
ZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRfZG9tYWluX25hbWVcIiBpc0V4ZWN1dGFibGU9XCJ0cnVl
XCIgbmFtZT1cIkV4YW1wbGU6IFNwYW1IYXVzOiBTdWJtaXQgRG9tYWluIE5hbWVcIj48ZG9jdW1l
bnRhdGlvbj5DaGVjayBEb21haW4gTmFtZSBhZ2FpbnN0IFNwYW1oYXVzIERhdGFiYXNlIHRvIHNl
ZSB3aGV0aGVyIERvbWFpbiBOYW1lIGlzIGluIGJsb2NrIGxpc3QgcmVjb3JkcyBvciBub3QuaWYg
Z2l2ZW4gYXJ0aWZhY3QgYXBwZWFycyBpbiBvbmUgb2YgdGhlIGJsb2NrIGxpc3QgcmVjb3JkLCB0
aGVuIGFydGlmYWN0cyBkZXNjcmlwdGlvbiBmaWxlZCB3aWxsIGJlIHVwZGF0ZWQgd2l0aCBhZGRp
dGlvbmFsIGluZm9ybWF0aW9uLjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0
RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMXg4cGVtMzwvb3V0Z29pbmc+
PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzFraGZ1ZHFcIiBuYW1l
PVwiU3BhbWhhdXMgUXVlcnkgU3VibWl0IEFydGlmYWN0XCIgcmVzaWxpZW50OnR5cGU9XCJmdW5j
dGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCJhY2Iy
YTA3Yy04MTVjLTQ1NDAtODA2YS1lMTEwMDJiOGEyYzZcIj57XCJpbnB1dHNcIjp7fSxcInBvc3Rf
cHJvY2Vzc2luZ19zY3JpcHRcIjpcInJlc3VsdHNfZGF0YSA9IHJlc3VsdHMuZ2V0KCdjb250ZW50
JylcXG50bXBfdGV4dCA9IFxcXCJcXFwiXFxudG1wX2Rlc2MgPSBhcnRpZmFjdC5kZXNjcmlwdGlv
blxcbmlmIHJlc3VsdHNfZGF0YS5nZXQoJ2lzX2luX2Jsb2NrbGlzdCcpOlxcbiAgICAgdG1wX3Rl
eHQgPSBcXFwiJmx0O2JyJmd0OyZsdDticiZndDsmbHQ7YiZndDtUaGlzIGFydGlmYWN0IGNoZWNr
ZWQgYWdhaW5zdCBTcGFtaGF1cyBhbmQgaXQgaXMgaW4gYmxvY2sgbGlzdC4mbHQ7L2ImZ3Q7XFxc
IlxcbiAgICAgcmVzcF9saXN0ID0gcmVzdWx0c19kYXRhLmdldCgncmVzcCcpXFxuICAgICBmb3Ig
Y29kZSBpbiByZXNwX2xpc3Q6XFxuICAgICAgICAgIGNvZGUgPSBzdHIoY29kZSlcXG4gICAgICAg
ICAgdG1wX3RleHQgKz0gXFxcIiZsdDticiZndDsmbHQ7YiZndDtjb2RlIDombHQ7L2ImZ3Q7IHt9
Jmx0Oy9iciZndDtcXFwiLmZvcm1hdChjb2RlKVxcbiAgICAgICAgICB0bXBfdGV4dCArPSBcXFwi
Jmx0O2JyJmd0OyZsdDtiJmd0O2RhdGFzZXQgOiZsdDsvYiZndDsge30mbHQ7L2JyJmd0O1xcXCIu
Zm9ybWF0KHJlc3VsdHNfZGF0YS5nZXQoY29kZSkuZ2V0KCdkYXRhc2V0JykpXFxuICAgICAgICAg
IHRtcF90ZXh0ICs9IFxcXCImbHQ7YnImZ3Q7Jmx0O2ImZ3Q7ZXhwbGFuYXRpb24gOiZsdDsvYiZn
dDsge30mbHQ7L2JyJmd0O1xcXCIuZm9ybWF0KHJlc3VsdHNfZGF0YS5nZXQoY29kZSkuZ2V0KCdl
eHBsYW5hdGlvbicpKVxcbiAgICAgICAgICB0bXBfdGV4dCArPSBcXFwiJmx0O2JyJmd0OyZsdDti
Jmd0O1VSTCA6Jmx0Oy9iJmd0OyAmbHQ7L2JyJmd0O3t9Jmx0Oy9iciZndDtcXFwiLmZvcm1hdChy
ZXN1bHRzX2RhdGEuZ2V0KGNvZGUpLmdldCgnVVJMJykpXFxuZWxzZTpcXG4gICAgIHRtcF90ZXh0
ID0gXFxcIiZsdDticiZndDsmbHQ7YnImZ3Q7Jmx0O2ImZ3Q7VGhpcyBhcnRpZmFjdCBjaGVja2Vk
IGFnYWluc3QgU3BhbWhhdXMgYW5kIGl0IGlzIG5vdCBpbiBibG9jayBsaXN0LiZsdDsvYiZndDsm
bHQ7L2JyJmd0OyZsdDsvYnImZ3Q7XFxcIlxcbmlmIHRtcF9kZXNjOlxcbiAgICAgdG1wX2Rlc2Mg
PSB0bXBfZGVzYy5nZXQoJ2NvbnRlbnQnKVxcbmVsc2U6XFxuICAgICB0bXBfZGVzYyA9IFxcXCJc
XFwiIFxcbmNvbXBsZXRlX3RtcF90ZXh0ID0gdG1wX2Rlc2MrdG1wX3RleHRcXG5yaWNoX3RleHQg
PSBoZWxwZXIuY3JlYXRlUmljaFRleHQoY29tcGxldGVfdG1wX3RleHQpXFxuYXJ0aWZhY3QuZGVz
Y3JpcHRpb24gPSByaWNoX3RleHRcIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRz
LnNwYW1oYXVzX3F1ZXJ5X3N0cmluZyA9IGFydGlmYWN0LnZhbHVlXFxuaW5wdXRzLnNwYW1oYXVz
ZV9zZWFyY2hfcmVzb3VyY2UgPSBydWxlLnByb3BlcnRpZXMuc3BhbWhhdXNfZG9tYWluX25hbWVf
cmVzb3VyY2VcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNv
bWluZz5TZXF1ZW5jZUZsb3dfMXg4cGVtMzwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxv
d18xM2w3NWY1PC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1
ZW5jZUZsb3dfMXg4cGVtM1wiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdl
dFJlZj1cIlNlcnZpY2VUYXNrXzFraGZ1ZHFcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMTRq
ZGYzNlwiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMTNsNzVmNTwvaW5jb21pbmc+PC9lbmRFdmVu
dD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzEzbDc1ZjVcIiBzb3VyY2VSZWY9XCJT
ZXJ2aWNlVGFza18xa2hmdWRxXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMTRqZGYzNlwiLz48dGV4
dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91
ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwi
QXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRh
cmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwi
VGV4dEFubm90YXRpb25fMWMzYjNwb1wiPjx0ZXh0PjwhW0NEQVRBW0Egd29ya2Zsb3cgdG8gY2hl
Y2sgRG9tYWluIG5hbWVzIGFnYWluc3QgU3BhbWhhdXMgZGF0YWJhc2UgdG8gc2VlIHdoZXRoZXIg
ZG9tYWluIGlzIGluIFNwYW1oYXVzIGJsb2NrIGxpc3Qgb3Igbm90LlxuXV0+PC90ZXh0PjwvdGV4
dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMGRyYXJ5bVwiIHNvdXJj
ZVJlZj1cIlNlcnZpY2VUYXNrXzFraGZ1ZHFcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8x
YzNiM3BvXCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1f
MVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1O
UGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVh
c3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVs
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIy
M1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNo
YXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90
YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEw
MFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVk
Z2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8x
c2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMWtoZnVkcVwiIGlkPVwiU2VydmljZVRhc2tfMWto
ZnVkcV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCI0
MjVcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5F
bGVtZW50PVwiU2VxdWVuY2VGbG93XzF4OHBlbTNcIiBpZD1cIlNlcXVlbmNlRmxvd18xeDhwZW0z
X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQyNVwiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MTNcIiB3aWR0aD1cIjBcIiB4PVwiMzExLjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJl
bD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2
ZW50XzE0amRmMzZcIiBpZD1cIkVuZEV2ZW50XzE0amRmMzZfZGlcIj48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI3NjlcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBN
TkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNzg3XCIg
eT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6
QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMTNsNzVmNVwiIGlkPVwiU2VxdWVu
Y2VGbG93XzEzbDc1ZjVfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjUyNVwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNzY5XCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI2NDdcIiB5PVwiMTg0XCIvPjwvYnBt
bmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIlRleHRBbm5vdGF0aW9uXzFjM2IzcG9cIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFjM2Iz
cG9fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjUzXCIgd2lkdGg9XCI0NjZcIiB4PVwiNDk2
XCIgeT1cIjYyXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVt
ZW50PVwiQXNzb2NpYXRpb25fMGRyYXJ5bVwiIGlkPVwiQXNzb2NpYXRpb25fMGRyYXJ5bV9kaVwi
PjxvbWdkaTp3YXlwb2ludCB4PVwiNTI1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIx
ODNcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2NzNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjExNVwiLz48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6
QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAidmVyc2lvbiI6IDMwfSwgImFjdGlvbnMiOiBb
XX0sIHsid29ya2Zsb3dfaWQiOiA5MiwgIm5hbWUiOiAiRXhhbXBsZTogU3BhbUhhdXM6IFN1Ym1p
dCBJUCBBZGRyZXNzIiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfc3BhbWhhdXNfc3Vi
bWl0X2lwX2FkZHJlc3MiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiZGVzY3JpcHRpb24i
OiAiQ2hlY2sgSVAgQWRkcmVzcyBhZ2FpbnN0IFNwYW1oYXVzIERhdGFiYXNlIHRvIHNlZSB3aGV0
aGVyIElQIEFkZHJlc3MgaXMgaW4gYmxvY2sgbGlzdCByZWNvcmRzIG9yIG5vdC5pZiBnaXZlbiBh
cnRpZmFjdCBhcHBlYXJzIGluIG9uZSBvZiB0aGUgYmxvY2sgbGlzdCByZWNvcmQsIHRoZW4gYXJ0
aWZhY3RzIGRlc2NyaXB0aW9uIGZpbGVkIHdpbGwgYmUgdXBkYXRlZCB3aXRoIGFkZGl0aW9uYWwg
aW5mb3JtYXRpb24uIiwgImNyZWF0b3JfaWQiOiAibmthbmRoYTFAaW4uaWJtLmNvbSIsICJsYXN0
X21vZGlmaWVkX2J5IjogIm5rYW5kaGExQGluLmlibS5jb20iLCAibGFzdF9tb2RpZmllZF90aW1l
IjogMTU1NzMzNDA1NjE5OCwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRf
aXBfYWRkcmVzcyIsICJ1dWlkIjogIjQ0NTQ5ZWJhLWE4NDUtNGM4ZS1hNTY3LWQ3MGNkZDc0MGYy
ZSIsICJjb250ZW50IjogeyJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX3NwYW1oYXVzX3N1Ym1pdF9p
cF9hZGRyZXNzIiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYt
OFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIw
MTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBN
Ti8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQv
MjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIw
MTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2Jw
bW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5z
OnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0
TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJl
eGFtcGxlX3NwYW1oYXVzX3N1Ym1pdF9pcF9hZGRyZXNzXCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwi
IG5hbWU9XCJFeGFtcGxlOiBTcGFtSGF1czogU3VibWl0IElQIEFkZHJlc3NcIj48ZG9jdW1lbnRh
dGlvbj5DaGVjayBJUCBBZGRyZXNzIGFnYWluc3QgU3BhbWhhdXMgRGF0YWJhc2UgdG8gc2VlIHdo
ZXRoZXIgSVAgQWRkcmVzcyBpcyBpbiBibG9jayBsaXN0IHJlY29yZHMgb3Igbm90LmlmIGdpdmVu
IGFydGlmYWN0IGFwcGVhcnMgaW4gb25lIG9mIHRoZSBibG9jayBsaXN0IHJlY29yZCwgdGhlbiBh
cnRpZmFjdHMgZGVzY3JpcHRpb24gZmlsZWQgd2lsbCBiZSB1cGRhdGVkIHdpdGggYWRkaXRpb25h
bCBpbmZvcm1hdGlvbi48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzBuZ2k4OTg8L291dGdvaW5nPjwvc3Rh
cnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xMW8ycGdyXCIgbmFtZT1cIlNw
YW1oYXVzIFF1ZXJ5IFN1Ym1pdCBBcnRpZmFjdFwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25c
Ij48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiYWNiMmEwN2Mt
ODE1Yy00NTQwLTgwNmEtZTExMDAyYjhhMmM2XCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0X3Byb2Nl
c3Npbmdfc2NyaXB0XCI6XCJyZXN1bHRzX2RhdGEgPSByZXN1bHRzLmdldCgnY29udGVudCcpXFxu
dG1wX3RleHQgPSBcXFwiXFxcIlxcbnRtcF9kZXNjID0gYXJ0aWZhY3QuZGVzY3JpcHRpb25cXG5p
ZiByZXN1bHRzX2RhdGEuZ2V0KCdpc19pbl9ibG9ja2xpc3QnKTpcXG4gICAgIHRtcF90ZXh0ID0g
XFxcIiZsdDticiZndDsmbHQ7YnImZ3Q7Jmx0O2ImZ3Q7VGhpcyBhcnRpZmFjdCBjaGVja2VkIGFn
YWluc3QgU3BhbWhhdXMgYW5kIGl0IGlzIGluIGJsb2NrIGxpc3QuJmx0Oy9iJmd0O1xcXCJcXG4g
ICAgIHJlc3BfbGlzdCA9IHJlc3VsdHNfZGF0YS5nZXQoJ3Jlc3AnKVxcbiAgICAgZm9yIGNvZGUg
aW4gcmVzcF9saXN0OlxcbiAgICAgICAgICBjb2RlID0gc3RyKGNvZGUpXFxuICAgICAgICAgIHRt
cF90ZXh0ICs9IFxcXCImbHQ7YnImZ3Q7Jmx0O2ImZ3Q7Y29kZSA6Jmx0Oy9iJmd0OyB7fSZsdDsv
YnImZ3Q7XFxcIi5mb3JtYXQoY29kZSlcXG4gICAgICAgICAgdG1wX3RleHQgKz0gXFxcIiZsdDti
ciZndDsmbHQ7YiZndDtkYXRhc2V0IDombHQ7L2ImZ3Q7IHt9Jmx0Oy9iciZndDtcXFwiLmZvcm1h
dChyZXN1bHRzX2RhdGEuZ2V0KGNvZGUpLmdldCgnZGF0YXNldCcpKVxcbiAgICAgICAgICB0bXBf
dGV4dCArPSBcXFwiJmx0O2JyJmd0OyZsdDtiJmd0O2V4cGxhbmF0aW9uIDombHQ7L2ImZ3Q7IHt9
Jmx0Oy9iciZndDtcXFwiLmZvcm1hdChyZXN1bHRzX2RhdGEuZ2V0KGNvZGUpLmdldCgnZXhwbGFu
YXRpb24nKSlcXG4gICAgICAgICAgdG1wX3RleHQgKz0gXFxcIiZsdDticiZndDsmbHQ7YiZndDtV
UkwgOiZsdDsvYiZndDsgJmx0Oy9iciZndDt7fSZsdDsvYnImZ3Q7XFxcIi5mb3JtYXQocmVzdWx0
c19kYXRhLmdldChjb2RlKS5nZXQoJ1VSTCcpKVxcbmVsc2U6XFxuICAgICB0bXBfdGV4dCA9IFxc
XCImbHQ7YnImZ3Q7Jmx0O2JyJmd0OyZsdDtiJmd0O1RoaXMgYXJ0aWZhY3QgY2hlY2tlZCBhZ2Fp
bnN0IFNwYW1oYXVzIGFuZCBpdCBpcyBub3QgaW4gYmxvY2sgbGlzdC4mbHQ7L2ImZ3Q7Jmx0Oy9i
ciZndDsmbHQ7L2JyJmd0O1xcXCJcXG5pZiB0bXBfZGVzYzpcXG4gICAgIHRtcF9kZXNjID0gdG1w
X2Rlc2MuZ2V0KCdjb250ZW50JylcXG5lbHNlOlxcbiAgICAgdG1wX2Rlc2MgPSBcXFwiXFxcIiBc
XG5jb21wbGV0ZV90bXBfdGV4dCA9IHRtcF9kZXNjK3RtcF90ZXh0XFxucmljaF90ZXh0ID0gaGVs
cGVyLmNyZWF0ZVJpY2hUZXh0KGNvbXBsZXRlX3RtcF90ZXh0KVxcbmFydGlmYWN0LmRlc2NyaXB0
aW9uID0gcmljaF90ZXh0XCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5zcGFt
aGF1c19xdWVyeV9zdHJpbmcgPSBhcnRpZmFjdC52YWx1ZVxcbmlucHV0cy5zcGFtaGF1c2Vfc2Vh
cmNoX3Jlc291cmNlID0gcnVsZS5wcm9wZXJ0aWVzLnNwYW1oYXVzX2lwX3Jlc291cmNlXCJ9PC9y
ZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VG
bG93XzBuZ2k4OTg8L2luY29taW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMHh4MTlveTwvb3V0
Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBuZ2k4
OThcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNl
VGFza18xMW8ycGdyXCIvPjxlbmRFdmVudCBpZD1cIkVuZEV2ZW50XzFkYzF1eHBcIj48aW5jb21p
bmc+U2VxdWVuY2VGbG93XzB4eDE5b3k8L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxv
dyBpZD1cIlNlcXVlbmNlRmxvd18weHgxOW95XCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMTFv
MnBnclwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzFkYzF1eHBcIi8+PHRleHRBbm5vdGF0aW9uIGlk
PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVy
ZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFz
ZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9u
XzF2amZ4cXVcIj48dGV4dD5BIHdvcmtmbG93IHRvIGNoZWNrIElQIEFkZHJlc3MgYWdhaW5zdCBT
cGFtaGF1cyBkYXRhYmFzZSB0byBzZWUgd2hldGhlciBkb21haW4gaXMgaW4gU3BhbWhhdXMgYmxv
Y2sgbGlzdCBvciBub3QuPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwi
QXNzb2NpYXRpb25fMHQ2NnpyY1wiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzExbzJwZ3JcIiB0
YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xdmpmeHF1XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQ
TU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVt
ZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6QlBNTlNoYXBlIGJw
bW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1f
ZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5
PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdp
ZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1u
ZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRp
b25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwiPjxvbWdkYzpCb3Vu
ZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1u
ZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8x
c2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9
XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48b21nZGk6d2F5cG9p
bnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRp
OkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMTFv
MnBnclwiIGlkPVwiU2VydmljZVRhc2tfMTFvMnBncl9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIzNTVcIiB5PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5T
aGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzBuZ2k4OThc
IiBpZD1cIlNlcXVlbmNlRmxvd18wbmdpODk4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxOThc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1c
IjI3NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2lu
dCB4PVwiMjc2XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndh
eXBvaW50IHg9XCIzNTVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBt
bmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1c
IjI5MVwiIHk9XCIxOTkuNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+
PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8xZGMxdXhwXCIgaWQ9XCJF
bmRFdmVudF8xZGMxdXhwX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwi
MzZcIiB4PVwiNjU4XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjY3NlwiIHk9XCIyMjdcIi8+PC9icG1uZGk6
QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50
PVwiU2VxdWVuY2VGbG93XzB4eDE5b3lcIiBpZD1cIlNlcXVlbmNlRmxvd18weHgxOW95X2RpXCI+
PG9tZ2RpOndheXBvaW50IHg9XCI0NTVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIw
NlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjY1OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3
aWR0aD1cIjBcIiB4PVwiNTU2LjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2Jw
bW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0
aW9uXzF2amZ4cXVcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzF2amZ4cXVfZGlcIj48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjUzXCIgd2lkdGg9XCI0MDBcIiB4PVwiNDUzXCIgeT1cIjY5XCIvPjwvYnBt
bmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25f
MHQ2NnpyY1wiIGlkPVwiQXNzb2NpYXRpb25fMHQ2NnpyY19kaVwiPjxvbWdkaTp3YXlwb2ludCB4
PVwiNDU1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxODRcIi8+PG9tZ2RpOndheXBv
aW50IHg9XCI1OTRcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjEyMlwiLz48L2JwbW5k
aTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9kZWZp
bml0aW9ucz4iLCAidmVyc2lvbiI6IDd9LCAiYWN0aW9ucyI6IFtdfV0sICJyb2xlcyI6IFtdLCAi
d29ya3NwYWNlcyI6IFtdLCAiZnVuY3Rpb25zIjogW3siaWQiOiA1MSwgIm5hbWUiOiAiZm5fc3Bh
bWhhdXNfcXVlcnlfc3VibWl0X2FydGlmYWN0IiwgImRpc3BsYXlfbmFtZSI6ICJTcGFtaGF1cyBR
dWVyeSBTdWJtaXQgQXJ0aWZhY3QiLCAiZGVzY3JpcHRpb24iOiB7ImZvcm1hdCI6ICJ0ZXh0Iiwg
ImNvbnRlbnQiOiAiRnVuY3Rpb24gdG8gY2hlY2sgSVAgQWRkcmVzcyAmIERvbWFpbiBOYW1lcyBh
Z2FpbnN0IFNwYW1oYXVzIERhdGFiYXNlIHRvIHNlZSB3aGV0aGVyIElQIEFkZHJlc3Mgb3IgRG9t
YWluIE5hbWVzIGFwcGVhcnMgaW4gU3BhbWhhdXMgYmxvY2sgbGlzdCByZWNvcmRzIG9yIG5vdC4i
fSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJmbl9zcGFtaGF1c19xdWVyeSIsICJleHBvcnRfa2V5
IjogImZuX3NwYW1oYXVzX3F1ZXJ5X3N1Ym1pdF9hcnRpZmFjdCIsICJ1dWlkIjogImFjYjJhMDdj
LTgxNWMtNDU0MC04MDZhLWUxMTAwMmI4YTJjNiIsICJ2ZXJzaW9uIjogMywgImNyZWF0b3IiOiB7
ImlkIjogNiwgInR5cGUiOiAidXNlciIsICJuYW1lIjogIm5rYW5kaGExQGluLmlibS5jb20iLCAi
ZGlzcGxheV9uYW1lIjogIk5pdGluIEthbmRoYXJlICJ9LCAibGFzdF9tb2RpZmllZF9ieSI6IHsi
aWQiOiA2LCAidHlwZSI6ICJ1c2VyIiwgIm5hbWUiOiAibmthbmRoYTFAaW4uaWJtLmNvbSIsICJk
aXNwbGF5X25hbWUiOiAiTml0aW4gS2FuZGhhcmUgIn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAx
NTU2NjE5NDE1MTUzLCAidmlld19pdGVtcyI6IFt7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19p
ZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0
aW9uIiwgImNvbnRlbnQiOiAiMTJhMTFiNjQtMTZiMy00NTA5LTkzMzItNTk5MDk2Yjk5ZDk5Iiwg
InNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0sIHsic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lm
IjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rp
b24iLCAiY29udGVudCI6ICI2ODFlNGQzNi1mOWQzLTQ2YjMtOGU1ZS0yNmY5OTcwODFjMDkiLCAi
c2hvd19saW5rX2hlYWRlciI6IGZhbHNlfV0sICJ3b3JrZmxvd3MiOiBbeyJ3b3JrZmxvd19pZCI6
IDkzLCAibmFtZSI6ICJFeGFtcGxlOiBTcGFtSGF1czogU3VibWl0IERvbWFpbiBOYW1lIiwgInBy
b2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfc3BhbWhhdXNfc3VibWl0X2RvbWFpbl9uYW1lIiwg
Im9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImRlc2NyaXB0aW9uIjogbnVsbCwgInV1aWQiOiBu
dWxsLCAiYWN0aW9ucyI6IFtdfSwgeyJ3b3JrZmxvd19pZCI6IDkyLCAibmFtZSI6ICJFeGFtcGxl
OiBTcGFtSGF1czogU3VibWl0IElQIEFkZHJlc3MiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhh
bXBsZV9zcGFtaGF1c19zdWJtaXRfaXBfYWRkcmVzcyIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFj
dCIsICJkZXNjcmlwdGlvbiI6IG51bGwsICJ1dWlkIjogbnVsbCwgImFjdGlvbnMiOiBbXX1dfV19
"""
    )