# (c) Copyright IBM Corp. 2010, 2019. All Rights Reserved.
# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_spamhaus_query"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_spamhaus_query package"""
    reload_params = {"package": u"fn_spamhaus_query",
                    "incident_fields": [], 
                    "action_fields": [u"spamhaus_domain_name_resource", u"spamhaus_ip_resource"], 
                    "function_params": [u"spamhaus_query_string", u"spamhause_search_resource"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_spamhaus_query"], 
                    "functions": [u"fn_spamhaus_query_submit_artifact"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_spamhaus_submit_domain_name", u"example_spamhaus_submit_ip_address"], 
                    "actions": [u"Example: SpamHaus: Submit Domain Name", u"Example: SpamHaus: Submit IP Address"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     spamhaus_domain_name_resource
    #     spamhaus_ip_resource
    #   Function inputs:
    #     spamhaus_query_string
    #     spamhause_search_resource
    #   Message Destinations:
    #     fn_spamhaus_query
    #   Functions:
    #     fn_spamhaus_query_submit_artifact
    #   Workflows:
    #     example_spamhaus_submit_domain_name
    #     example_spamhaus_submit_ip_address
    #   Rules:
    #     Example: SpamHaus: Submit Domain Name
    #     Example: SpamHaus: Submit IP Address


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMSwgImJ1aWxkX251bWJl
ciI6IDc2LCAidmVyc2lvbiI6ICIzMS4xLjc2In0sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAy
LCAiaWQiOiAxMDYsICJleHBvcnRfZGF0ZSI6IDE1NTY2MjM1NDk2NDQsICJmaWVsZHMiOiBbeyJp
ZCI6IDUxLCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAidGV4dCI6ICJTaW11bGF0aW9uIiwgInBy
ZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMCwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRl
bnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQgaXMg
cmVhZC1vbmx5LiIsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogImMz
ZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIsICJvcGVyYXRpb25zIjogW10sICJv
cGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogdHJ1ZSwgImNo
YW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImluY2lk
ZW50L2luY190cmFpbmluZyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0s
IHsiaWQiOiAzMDAsICJuYW1lIjogInNwYW1oYXVzX2RvbWFpbl9uYW1lX3Jlc291cmNlIiwgInRl
eHQiOiAiU3BhbUhhdXMgRG9tYWluIE5hbWUgUmVzb3VyY2UiLCAicHJlZml4IjogInByb3BlcnRp
ZXMiLCAidHlwZV9pZCI6IDYsICJ0b29sdGlwIjogInJlc291cmNlLW5hbWUgaXMgYSByZXF1aXJl
ZCBlbnVtZXJhdGVkIGZpZWxkIHRoYXQgcmVwcmVzZW50cyB3aGljaCBibG9ja2xpc3Qgc2hvdWxk
IGJlIHF1ZXJpZWQiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAic2VsZWN0Iiwg
InJlcXVpcmVkIjogImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2Vu
IjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlv
biI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiMmNmZWEyOGItOGY4Zi00Zjdk
LWE3ZDItMTRmZDViODIwYWRmIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6
IHt9LCAidmFsdWVzIjogW3sidmFsdWUiOiAyMTcsICJsYWJlbCI6ICJaUkQiLCAiZW5hYmxlZCI6
IHRydWUsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiMTgyZjc0ZDYtYWE3NS00YmMxLTk0
ODEtYjY2NzAxNmVkNzZkIiwgImhpZGRlbiI6IGZhbHNlLCAiZGVmYXVsdCI6IHRydWV9LCB7InZh
bHVlIjogMjE4LCAibGFiZWwiOiAiREJMIiwgImVuYWJsZWQiOiB0cnVlLCAicHJvcGVydGllcyI6
IG51bGwsICJ1dWlkIjogIjQ4YTA0N2U1LWRiM2YtNGEwZS05ZTUzLTRlYmEwYzBlMGVkOCIsICJo
aWRkZW4iOiBmYWxzZSwgImRlZmF1bHQiOiBmYWxzZX1dLCAicmVhZF9vbmx5IjogZmFsc2UsICJj
aGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rp
b25pbnZvY2F0aW9uL3NwYW1oYXVzX2RvbWFpbl9uYW1lX3Jlc291cmNlIiwgInRlbXBsYXRlcyI6
IFtdLCAiZGVwcmVjYXRlZCI6IGZhbHNlfSwgeyJpZCI6IDI5OSwgIm5hbWUiOiAic3BhbWhhdXNf
aXBfcmVzb3VyY2UiLCAidGV4dCI6ICJTcGFtSGF1cyBJUCBSZXNvdXJjZSIsICJwcmVmaXgiOiAi
cHJvcGVydGllcyIsICJ0eXBlX2lkIjogNiwgInRvb2x0aXAiOiAicmVzb3VyY2UtbmFtZSBpcyBh
IHJlcXVpcmVkIGVudW1lcmF0ZWQgZmllbGQgdGhhdCByZXByZXNlbnRzIHdoaWNoIGJsb2NrbGlz
dCBzaG91bGQgYmUgcXVlcmllZCIsICJwbGFjZWhvbGRlciI6ICIiLCAiaW5wdXRfdHlwZSI6ICJz
ZWxlY3QiLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2Us
ICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiYmxh
bmtfb3B0aW9uIjogZmFsc2UsICJpbnRlcm5hbCI6IGZhbHNlLCAidXVpZCI6ICIwYjRjZDhmMy05
N2RjLTRlY2QtOTUyOS05MjYzYWI2ZDBlNmYiLCAib3BlcmF0aW9ucyI6IFtdLCAib3BlcmF0aW9u
X3Blcm1zIjoge30sICJ2YWx1ZXMiOiBbeyJ2YWx1ZSI6IDIxMCwgImxhYmVsIjogIlNCTCIsICJl
bmFibGVkIjogdHJ1ZSwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICI3MzEzOWI3YS1hOWUx
LTRmMzktOGFlOC00MThlOTYzNThmMzgiLCAiaGlkZGVuIjogZmFsc2UsICJkZWZhdWx0IjogdHJ1
ZX0sIHsidmFsdWUiOiAyMTEsICJsYWJlbCI6ICJYQkwiLCAiZW5hYmxlZCI6IHRydWUsICJwcm9w
ZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiYTc4OGQ4ODItYTlkOC00NmIxLWE3ZjAtMWRiZmJjNWUy
NzJjIiwgImhpZGRlbiI6IGZhbHNlLCAiZGVmYXVsdCI6IGZhbHNlfSwgeyJ2YWx1ZSI6IDIxMiwg
ImxhYmVsIjogIlBCTCIsICJlbmFibGVkIjogdHJ1ZSwgInByb3BlcnRpZXMiOiBudWxsLCAidXVp
ZCI6ICJkZTQ0MWQxYS1jNDg0LTRhYmMtODY0Yy04Y2U0Nzk2ZTcyMTEiLCAiaGlkZGVuIjogZmFs
c2UsICJkZWZhdWx0IjogZmFsc2V9LCB7InZhbHVlIjogMjEzLCAibGFiZWwiOiAiU0JMLVhCTCIs
ICJlbmFibGVkIjogdHJ1ZSwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICI2NTVkMjNiMC1k
NzAwLTQyNDUtYjNkNS1iNmMzMmNiZjU4NGMiLCAiaGlkZGVuIjogZmFsc2UsICJkZWZhdWx0Ijog
ZmFsc2V9LCB7InZhbHVlIjogMjE0LCAibGFiZWwiOiAiWkVOIiwgImVuYWJsZWQiOiB0cnVlLCAi
cHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjg1MWE4NDExLTM5YzAtNDE5ZC04NDUwLWM4YzYx
N2I5ZWE2YiIsICJoaWRkZW4iOiBmYWxzZSwgImRlZmF1bHQiOiBmYWxzZX0sIHsidmFsdWUiOiAy
MTUsICJsYWJlbCI6ICJNU1IiLCAiZW5hYmxlZCI6IHRydWUsICJwcm9wZXJ0aWVzIjogbnVsbCwg
InV1aWQiOiAiMmNjMmZmYjgtNjg1Yy00MjQwLWEzMzgtN2Q1NWJhZmJmYTk5IiwgImhpZGRlbiI6
IGZhbHNlLCAiZGVmYXVsdCI6IGZhbHNlfSwgeyJ2YWx1ZSI6IDIxNiwgImxhYmVsIjogIkFVVEhC
TCIsICJlbmFibGVkIjogdHJ1ZSwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICI4MzhmMzQ2
MS1kNjFhLTRkOTYtOGJlMi1hMDY3YmVhMjNiNTkiLCAiaGlkZGVuIjogZmFsc2UsICJkZWZhdWx0
IjogZmFsc2V9XSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNo
X3RleHQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9zcGFtaGF1c19p
cF9yZXNvdXJjZSIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQi
OiAzMDIsICJuYW1lIjogInNwYW1oYXVzZV9zZWFyY2hfcmVzb3VyY2UiLCAidGV4dCI6ICJzcGFt
aGF1c2Vfc2VhcmNoX3Jlc291cmNlIiwgInByZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMTEsICJ0
b29sdGlwIjogInJlc291cmNlLW5hbWUgaXMgYSByZXF1aXJlZCBlbnVtZXJhdGVkIGZpZWxkIHRo
YXQgcmVwcmVzZW50cyB3aGljaCBibG9ja2xpc3Qgc2hvdWxkIGJlIHF1ZXJpZWQuIiwgInBsYWNl
aG9sZGVyIjogIlNCTCxYQkwsUEJMLFNCTC1YQkwsWkVOLE1TUixBVVRIQkwsWlJEIChkb21haW5z
IG9ubHkpLERCTCAoZG9tYWlucyBvbmx5KS4iLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInJlcXVp
cmVkIjogImFsd2F5cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFs
c2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZh
bHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiNjgxZTRkMzYtZjlkMy00NmIzLThlNWUt
MjZmOTk3MDgxYzA5IiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAi
dmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmlj
aF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vc3BhbWhhdXNlX3NlYXJj
aF9yZXNvdXJjZSIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQi
OiAzMDEsICJuYW1lIjogInNwYW1oYXVzX3F1ZXJ5X3N0cmluZyIsICJ0ZXh0IjogInNwYW1oYXVz
X3F1ZXJ5X3N0cmluZyIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6
ICJJUCBBZHJlc3Mgb3IgRG9tYWluIE5hbWUgdG8gYmUgY2hlY2tlZCBhZ2FpbnN0IFNwYW1oYXVz
IGRhdGFiYXNlLiIsICJwbGFjZWhvbGRlciI6ICJJUCBBZGRyZXNzL0RvbWFpbiBOYW1lIiwgImlu
cHV0X3R5cGUiOiAidGV4dCIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjog
IjEyYTExYjY0LTE2YjMtNDUwOS05MzMyLTU5OTA5NmI5OWQ5OSIsICJvcGVyYXRpb25zIjogW10s
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2Us
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJf
X2Z1bmN0aW9uL3NwYW1oYXVzX3F1ZXJ5X3N0cmluZyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJl
Y2F0ZWQiOiBmYWxzZX1dLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1NTY2
MjM2ODgzODYsICJjcmVhdGVfZGF0ZSI6IDE1NTY2MjM2ODgzODYsICJ1dWlkIjogImJmZWVjMmQ0
LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0
aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBh
Y2thZ2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRl
cm5hbCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBu
dWxsLCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgInBoYXNlcyI6IFtdLCAiYXV0b21hdGlj
X3Rhc2tzIjogW10sICJvdmVycmlkZXMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3si
bmFtZSI6ICJmbl9zcGFtaGF1c19xdWVyeSIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl9zcGFt
aGF1c19xdWVyeSIsICJkZXN0aW5hdGlvbl90eXBlIjogMCwgImV4cGVjdF9hY2siOiB0cnVlLCAi
dXNlcnMiOiBbIm5rYW5kaGExQGluLmlibS5jb20iXSwgInV1aWQiOiAiNmIzMDEyZDItMzdlMS00
ZGUwLWI1OTAtNzRiOWRiZTFkNGViIiwgImV4cG9ydF9rZXkiOiAiZm5fc3BhbWhhdXNfcXVlcnki
fV0sICJhY3Rpb25zIjogW3siaWQiOiAxMDgsICJuYW1lIjogIkV4YW1wbGU6IFNwYW1IYXVzOiBT
dWJtaXQgRG9tYWluIE5hbWUiLCAidHlwZSI6IDEsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIs
ICJjb25kaXRpb25zIjogW3sibWV0aG9kIjogImVxdWFscyIsICJmaWVsZF9uYW1lIjogImFydGlm
YWN0LnR5cGUiLCAidmFsdWUiOiAiRE5TIE5hbWUiLCAidHlwZSI6IG51bGwsICJldmFsdWF0aW9u
X2lkIjogbnVsbH1dLCAiYXV0b21hdGlvbnMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjog
W10sICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfc3BhbWhhdXNfc3VibWl0X2RvbWFpbl9uYW1lIl0s
ICJ2aWV3X2l0ZW1zIjogW3sic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVs
ZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAi
Y29udGVudCI6ICIyY2ZlYTI4Yi04ZjhmLTRmN2QtYTdkMi0xNGZkNWI4MjBhZGYiLCAic2hvd19s
aW5rX2hlYWRlciI6IGZhbHNlfV0sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAi
NDNkOWQwY2UtZDQxMS00OTYzLTlmZDgtYjIyNTg5NzY1MDcyIiwgImV4cG9ydF9rZXkiOiAiRXhh
bXBsZTogU3BhbUhhdXM6IFN1Ym1pdCBEb21haW4gTmFtZSIsICJsb2dpY190eXBlIjogImFsbCJ9
LCB7ImlkIjogMTA3LCAibmFtZSI6ICJFeGFtcGxlOiBTcGFtSGF1czogU3VibWl0IElQIEFkZHJl
c3MiLCAidHlwZSI6IDEsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJjb25kaXRpb25zIjog
W3sibWV0aG9kIjogImVxdWFscyIsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5cGUiLCAidmFs
dWUiOiAiSVAgQWRkcmVzcyIsICJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiBudWxsfV0s
ICJhdXRvbWF0aW9ucyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgIndvcmtmbG93
cyI6IFsiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRfaXBfYWRkcmVzcyJdLCAidmlld19pdGVtcyI6
IFt7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxk
X3V1aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgImNvbnRlbnQiOiAiMGI0
Y2Q4ZjMtOTdkYy00ZWNkLTk1MjktOTI2M2FiNmQwZTZmIiwgInNob3dfbGlua19oZWFkZXIiOiBm
YWxzZX1dLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImE4M2Q0YTljLTMyMDct
NGVhMi04MjNjLWExODJiZjZjODE2NSIsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFNwYW1IYXVz
OiBTdWJtaXQgSVAgQWRkcmVzcyIsICJsb2dpY190eXBlIjogImFsbCJ9XSwgImxheW91dHMiOiBb
XSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAidGltZWZyYW1lcyI6IG51bGwsICJsb2NhbGUiOiBu
dWxsLCAiaW5kdXN0cmllcyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwgImdlb3MiOiBudWxs
LCAidGFza19vcmRlciI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJ0eXBlcyI6IFtdLCAic2Ny
aXB0cyI6IFtdLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7
IndvcmtmbG93X2lkIjogOTIsICJuYW1lIjogIkV4YW1wbGU6IFNwYW1IYXVzOiBTdWJtaXQgSVAg
QWRkcmVzcyIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3NwYW1oYXVzX3N1Ym1pdF9p
cF9hZGRyZXNzIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgImRlc2NyaXB0aW9uIjogIkNo
ZWNrIElQIEFkZHJlc3MgYWdhaW5zdCBTcGFtaGF1cyBEYXRhYmFzZSB0byBzZWUgd2hldGhlciBJ
UCBBZGRyZXNzIGlzIGluIGJsb2NrIGxpc3QgcmVjb3JkcyBvciBub3QuaWYgZ2l2ZW4gYXJ0aWZh
Y3QgYXBwZWFycyBpbiBvbmUgb2YgdGhlIGJsb2NrIGxpc3QgcmVjb3JkLCB0aGVuIGFydGlmYWN0
cyBkZXNjcmlwdGlvbiBmaWxlZCB3aWxsIGJlIHVwZGF0ZWQgd2l0aCBhZGRpdGlvbmFsIGluZm9y
bWF0aW9uLiIsICJjcmVhdG9yX2lkIjogIm5rYW5kaGExQGluLmlibS5jb20iLCAibGFzdF9tb2Rp
ZmllZF9ieSI6ICJua2FuZGhhMUBpbi5pYm0uY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1
NTY2MTk1MjQzNjAsICJleHBvcnRfa2V5IjogImV4YW1wbGVfc3BhbWhhdXNfc3VibWl0X2lwX2Fk
ZHJlc3MiLCAidXVpZCI6ICI0NDU0OWViYS1hODQ1LTRjOGUtYTU2Ny1kNzBjZGQ3NDBmMmUiLCAi
Y29udGVudCI6IHsid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRfaXBfYWRk
cmVzcyIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+
PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUy
NC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAx
MDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAw
NTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUy
NC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIg
eG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9
XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVz
cGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBs
ZV9zcGFtaGF1c19zdWJtaXRfaXBfYWRkcmVzc1wiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBuYW1l
PVwiRXhhbXBsZTogU3BhbUhhdXM6IFN1Ym1pdCBJUCBBZGRyZXNzXCI+PGRvY3VtZW50YXRpb24+
Q2hlY2sgSVAgQWRkcmVzcyBhZ2FpbnN0IFNwYW1oYXVzIERhdGFiYXNlIHRvIHNlZSB3aGV0aGVy
IElQIEFkZHJlc3MgaXMgaW4gYmxvY2sgbGlzdCByZWNvcmRzIG9yIG5vdC5pZiBnaXZlbiBhcnRp
ZmFjdCBhcHBlYXJzIGluIG9uZSBvZiB0aGUgYmxvY2sgbGlzdCByZWNvcmQsIHRoZW4gYXJ0aWZh
Y3RzIGRlc2NyaXB0aW9uIGZpbGVkIHdpbGwgYmUgdXBkYXRlZCB3aXRoIGFkZGl0aW9uYWwgaW5m
b3JtYXRpb24uPC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVh
c3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wbmdpODk4PC9vdXRnb2luZz48L3N0YXJ0RXZl
bnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMTFvMnBnclwiIG5hbWU9XCJTcGFtaGF1
cyBRdWVyeSBTdWJtaXQgQXJ0aWZhY3RcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4
dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cImFjYjJhMDdjLTgxNWMt
NDU0MC04MDZhLWUxMTAwMmI4YTJjNlwiPntcImlucHV0c1wiOnt9LFwicHJlX3Byb2Nlc3Npbmdf
c2NyaXB0XCI6XCJpbnB1dHMuc3BhbWhhdXNfcXVlcnlfc3RyaW5nID0gYXJ0aWZhY3QudmFsdWVc
XG5pbnB1dHMuc3BhbWhhdXNlX3NlYXJjaF9yZXNvdXJjZSA9IHJ1bGUucHJvcGVydGllcy5zcGFt
aGF1c19pcF9yZXNvdXJjZVwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwvZXh0ZW5zaW9uRWxlbWVu
dHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18wbmdpODk4PC9pbmNvbWluZz48b3V0Z29pbmc+U2Vx
dWVuY2VGbG93XzB4eDE5b3k8L291dGdvaW5nPjwvc2VydmljZVRhc2s+PHNlcXVlbmNlRmxvdyBp
ZD1cIlNlcXVlbmNlRmxvd18wbmdpODk4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVhc3ht
XCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMTFvMnBnclwiLz48ZW5kRXZlbnQgaWQ9XCJFbmRF
dmVudF8xZGMxdXhwXCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18weHgxOW95PC9pbmNvbWluZz48
L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMHh4MTlveVwiIHNvdXJj
ZVJlZj1cIlNlcnZpY2VUYXNrXzExbzJwZ3JcIiB0YXJnZXRSZWY9XCJFbmRFdmVudF8xZGMxdXhw
XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIj48dGV4dD5T
dGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3RhdGlvbj48YXNzb2NpYXRp
b24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwiU3RhcnRFdmVudF8xNTVh
c3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiLz48L3Byb2Nlc3M+PGJw
bW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBi
cG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5T
aGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8x
NTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwi
MTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVs
PjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRB
bm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIv
PjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2Np
YXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlw
b2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2Rp
OndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48
L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VU
YXNrXzExbzJwZ3JcIiBpZD1cIlNlcnZpY2VUYXNrXzExbzJwZ3JfZGlcIj48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMzU1XCIgeT1cIjE2NlwiLz48L2JwbW5k
aTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18w
bmdpODk4XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMG5naTg5OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4
PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBv
aW50IHg9XCIyNzZcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6
d2F5cG9pbnQgeD1cIjI3NlwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiMzU1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZc
Ii8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwi
MFwiIHg9XCIyOTFcIiB5PVwiMTk5LjVcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQ
TU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiRW5kRXZlbnRfMWRjMXV4cFwi
IGlkPVwiRW5kRXZlbnRfMWRjMXV4cF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3
aWR0aD1cIjM2XCIgeD1cIjY1OFwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2Rj
OkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI2NzZcIiB5PVwiMjI3XCIvPjwv
YnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1u
RWxlbWVudD1cIlNlcXVlbmNlRmxvd18weHgxOW95XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMHh4MTlv
eV9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNDU1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwi
IHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI2NThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1c
IjEzXCIgd2lkdGg9XCIwXCIgeD1cIjU1Ni41XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFi
ZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFn
cmFtPjwvZGVmaW5pdGlvbnM+IiwgInZlcnNpb24iOiA0fSwgImFjdGlvbnMiOiBbXX0sIHsid29y
a2Zsb3dfaWQiOiA5MywgIm5hbWUiOiAiRXhhbXBsZTogU3BhbUhhdXM6IFN1Ym1pdCBEb21haW4g
TmFtZSIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3NwYW1oYXVzX3N1Ym1pdF9kb21h
aW5fbmFtZSIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJkZXNjcmlwdGlvbiI6ICJDaGVj
ayBEb21haW4gTmFtZSBhZ2FpbnN0IFNwYW1oYXVzIERhdGFiYXNlIHRvIHNlZSB3aGV0aGVyIERv
bWFpbiBOYW1lIGlzIGluIGJsb2NrIGxpc3QgcmVjb3JkcyBvciBub3QuaWYgZ2l2ZW4gYXJ0aWZh
Y3QgYXBwZWFycyBpbiBvbmUgb2YgdGhlIGJsb2NrIGxpc3QgcmVjb3JkLCB0aGVuIGFydGlmYWN0
cyBkZXNjcmlwdGlvbiBmaWxlZCB3aWxsIGJlIHVwZGF0ZWQgd2l0aCBhZGRpdGlvbmFsIGluZm9y
bWF0aW9uLiIsICJjcmVhdG9yX2lkIjogIm5rYW5kaGExQGluLmlibS5jb20iLCAibGFzdF9tb2Rp
ZmllZF9ieSI6ICJua2FuZGhhMUBpbi5pYm0uY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1
NTY2MTk2MjMxOTgsICJleHBvcnRfa2V5IjogImV4YW1wbGVfc3BhbWhhdXNfc3VibWl0X2RvbWFp
bl9uYW1lIiwgInV1aWQiOiAiZThlNmE0ZTktYWFmZS00ZmY0LWIzNWYtNTAyOGI2NjI2YjM1Iiwg
ImNvbnRlbnQiOiB7IndvcmtmbG93X2lkIjogImV4YW1wbGVfc3BhbWhhdXNfc3VibWl0X2RvbWFp
bl9uYW1lIiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwi
Pz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAw
NTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8y
MDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAx
MDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAw
NTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5c
IiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhz
aT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFt
ZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFt
cGxlX3NwYW1oYXVzX3N1Ym1pdF9kb21haW5fbmFtZVwiIGlzRXhlY3V0YWJsZT1cInRydWVcIiBu
YW1lPVwiRXhhbXBsZTogU3BhbUhhdXM6IFN1Ym1pdCBEb21haW4gTmFtZVwiPjxkb2N1bWVudGF0
aW9uPkNoZWNrIERvbWFpbiBOYW1lIGFnYWluc3QgU3BhbWhhdXMgRGF0YWJhc2UgdG8gc2VlIHdo
ZXRoZXIgRG9tYWluIE5hbWUgaXMgaW4gYmxvY2sgbGlzdCByZWNvcmRzIG9yIG5vdC5pZiBnaXZl
biBhcnRpZmFjdCBhcHBlYXJzIGluIG9uZSBvZiB0aGUgYmxvY2sgbGlzdCByZWNvcmQsIHRoZW4g
YXJ0aWZhY3RzIGRlc2NyaXB0aW9uIGZpbGVkIHdpbGwgYmUgdXBkYXRlZCB3aXRoIGFkZGl0aW9u
YWwgaW5mb3JtYXRpb24uPC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVu
dF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xeDhwZW0zPC9vdXRnb2luZz48L3N0
YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMWtoZnVkcVwiIG5hbWU9XCJT
cGFtaGF1cyBRdWVyeSBTdWJtaXQgQXJ0aWZhY3RcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9u
XCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cImFjYjJhMDdj
LTgxNWMtNDU0MC04MDZhLWUxMTAwMmI4YTJjNlwiPntcImlucHV0c1wiOnt9LFwicHJlX3Byb2Nl
c3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuc3BhbWhhdXNfcXVlcnlfc3RyaW5nID0gYXJ0aWZhY3Qu
dmFsdWVcXG5pbnB1dHMuc3BhbWhhdXNlX3NlYXJjaF9yZXNvdXJjZSA9IHJ1bGUucHJvcGVydGll
cy5zcGFtaGF1c19kb21haW5fbmFtZV9yZXNvdXJjZVwifTwvcmVzaWxpZW50OmZ1bmN0aW9uPjwv
ZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18xeDhwZW0zPC9pbmNvbWlu
Zz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzEzbDc1ZjU8L291dGdvaW5nPjwvc2VydmljZVRhc2s+
PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xeDhwZW0zXCIgc291cmNlUmVmPVwiU3Rh
cnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMWtoZnVkcVwiLz48ZW5k
RXZlbnQgaWQ9XCJFbmRFdmVudF8xNGpkZjM2XCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18xM2w3
NWY1PC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3df
MTNsNzVmNVwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzFraGZ1ZHFcIiB0YXJnZXRSZWY9XCJF
bmRFdmVudF8xNGpkZjM2XCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFr
eHhpeXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5ub3Rh
dGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVmPVwi
U3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwi
Lz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48YnBt
bmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5lXzFc
Ij48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIGlk
PVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdp
ZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+PC9i
cG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBicG1u
RWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9uXzFr
eHhpeXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4PVwi
OTlcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5F
bGVtZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OF9k
aVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIyMjBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50
XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxl
bWVudD1cIlNlcnZpY2VUYXNrXzFraGZ1ZHFcIiBpZD1cIlNlcnZpY2VUYXNrXzFraGZ1ZHFfZGlc
Ij48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiNDI1XCIgeT1c
IjE2NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1c
IlNlcXVlbmNlRmxvd18xeDhwZW0zXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMXg4cGVtM19kaVwiPjxv
bWdkaTp3YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZc
Ii8+PG9tZ2RpOndheXBvaW50IHg9XCI0MjVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lk
dGg9XCIwXCIgeD1cIjMxMS41XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1u
ZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8xNGpk
ZjM2XCIgaWQ9XCJFbmRFdmVudF8xNGpkZjM2X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIz
NlwiIHdpZHRoPVwiMzZcIiB4PVwiNzY5XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjc4N1wiIHk9XCIyMjdc
Ii8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdl
IGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzEzbDc1ZjVcIiBpZD1cIlNlcXVlbmNlRmxvd18x
M2w3NWY1X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI1MjVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjc2OVwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNjQ3XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1O
TGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5E
aWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgInZlcnNpb24iOiA0fSwgImFjdGlvbnMiOiBbXX1dLCAi
cm9sZXMiOiBbXSwgIndvcmtzcGFjZXMiOiBbXSwgImZ1bmN0aW9ucyI6IFt7ImlkIjogNTEsICJu
YW1lIjogImZuX3NwYW1oYXVzX3F1ZXJ5X3N1Ym1pdF9hcnRpZmFjdCIsICJkaXNwbGF5X25hbWUi
OiAiU3BhbWhhdXMgUXVlcnkgU3VibWl0IEFydGlmYWN0IiwgImRlc2NyaXB0aW9uIjogeyJmb3Jt
YXQiOiAidGV4dCIsICJjb250ZW50IjogIkZ1bmN0aW9uIHRvIGNoZWNrIElQIEFkZHJlc3MgJiBE
b21haW4gTmFtZXMgYWdhaW5zdCBTcGFtaGF1cyBEYXRhYmFzZSB0byBzZWUgd2hldGhlciBJUCBB
ZGRyZXNzIG9yIERvbWFpbiBOYW1lcyBhcHBlYXJzIGluIFNwYW1oYXVzIGJsb2NrIGxpc3QgcmVj
b3JkcyBvciBub3QuIn0sICJkZXN0aW5hdGlvbl9oYW5kbGUiOiAiZm5fc3BhbWhhdXNfcXVlcnki
LCAiZXhwb3J0X2tleSI6ICJmbl9zcGFtaGF1c19xdWVyeV9zdWJtaXRfYXJ0aWZhY3QiLCAidXVp
ZCI6ICJhY2IyYTA3Yy04MTVjLTQ1NDAtODA2YS1lMTEwMDJiOGEyYzYiLCAidmVyc2lvbiI6IDMs
ICJjcmVhdG9yIjogeyJpZCI6IDYsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6ICJua2FuZGhhMUBp
bi5pYm0uY29tIiwgImRpc3BsYXlfbmFtZSI6ICJOaXRpbiBLYW5kaGFyZSAifSwgImxhc3RfbW9k
aWZpZWRfYnkiOiB7ImlkIjogNiwgInR5cGUiOiAidXNlciIsICJuYW1lIjogIm5rYW5kaGExQGlu
LmlibS5jb20iLCAiZGlzcGxheV9uYW1lIjogIk5pdGluIEthbmRoYXJlICJ9LCAibGFzdF9tb2Rp
ZmllZF90aW1lIjogMTU1NjYxOTQxNTE1MywgInZpZXdfaXRlbXMiOiBbeyJzdGVwX2xhYmVsIjog
bnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5
cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogIjEyYTExYjY0LTE2YjMtNDUwOS05MzMyLTU5
OTA5NmI5OWQ5OSIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9LCB7InN0ZXBfbGFiZWwiOiBu
dWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlw
ZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiNjgxZTRkMzYtZjlkMy00NmIzLThlNWUtMjZm
OTk3MDgxYzA5IiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX1dLCAid29ya2Zsb3dzIjogW3si
d29ya2Zsb3dfaWQiOiA5MywgIm5hbWUiOiAiRXhhbXBsZTogU3BhbUhhdXM6IFN1Ym1pdCBEb21h
aW4gTmFtZSIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3NwYW1oYXVzX3N1Ym1pdF9k
b21haW5fbmFtZSIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJkZXNjcmlwdGlvbiI6IG51
bGwsICJ1dWlkIjogbnVsbCwgImFjdGlvbnMiOiBbXX0sIHsid29ya2Zsb3dfaWQiOiA5MiwgIm5h
bWUiOiAiRXhhbXBsZTogU3BhbUhhdXM6IFN1Ym1pdCBJUCBBZGRyZXNzIiwgInByb2dyYW1tYXRp
Y19uYW1lIjogImV4YW1wbGVfc3BhbWhhdXNfc3VibWl0X2lwX2FkZHJlc3MiLCAib2JqZWN0X3R5
cGUiOiAiYXJ0aWZhY3QiLCAiZGVzY3JpcHRpb24iOiBudWxsLCAidXVpZCI6IG51bGwsICJhY3Rp
b25zIjogW119XX1dfQ==
"""
    )