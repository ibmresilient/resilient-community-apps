# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_spamhaus_query"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_spamhaus_query package"""
    reload_params = {"package": u"fn_spamhaus_query",
                    "incident_fields": [], 
                    "action_fields": [u"spamhaus_domain_name_resource", u"spamhaus_ip_resource"], 
                    "function_params": [u"spamhaus_query_string", u"spamhaus_search_resource"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_spamhaus_query"], 
                    "functions": [u"fn_spamhaus_query_submit_artifact"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_spamhaus_submit_domain_name", u"example_spamhaus_submit_ip_address"], 
                    "actions": [u"Example: SpamHaus: Submit Domain Name", u"Example: SpamHaus: Submit IP Address"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     spamhaus_domain_name_resource
    #     spamhaus_ip_resource
    #   Function inputs:
    #     spamhaus_query_string
    #     spamhaus_search_resource
    #   Message Destinations:
    #     fn_spamhaus_query
    #   Functions:
    #     fn_spamhaus_query_submit_artifact
    #   Workflows:
    #     example_spamhaus_submit_domain_name
    #     example_spamhaus_submit_ip_address
    #   Rules:
    #     Example: SpamHaus: Submit Domain Name
    #     Example: SpamHaus: Submit IP Address


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMSwgImJ1aWxkX251bWJl
ciI6IDc2LCAidmVyc2lvbiI6ICIzMS4xLjc2In0sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAy
LCAiaWQiOiAxMTYsICJleHBvcnRfZGF0ZSI6IDE1NTg1MjM1NjY1MTAsICJmaWVsZHMiOiBbeyJp
ZCI6IDUxLCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAidGV4dCI6ICJTaW11bGF0aW9uIiwgInBy
ZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMCwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRl
bnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQgaXMg
cmVhZC1vbmx5LiIsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogImMz
ZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIsICJvcGVyYXRpb25zIjogW10sICJv
cGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogdHJ1ZSwgImNo
YW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImluY2lk
ZW50L2luY190cmFpbmluZyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0s
IHsiaWQiOiAyOTksICJuYW1lIjogInNwYW1oYXVzX2lwX3Jlc291cmNlIiwgInRleHQiOiAiU3Bh
bUhhdXMgSVAgUmVzb3VyY2UiLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAidHlwZV9pZCI6IDYs
ICJ0b29sdGlwIjogInJlc291cmNlLW5hbWUgaXMgYSByZXF1aXJlZCBlbnVtZXJhdGVkIGZpZWxk
IHRoYXQgcmVwcmVzZW50cyB3aGljaCBibG9ja2xpc3Qgc2hvdWxkIGJlIHF1ZXJpZWQiLCAicGxh
Y2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAic2VsZWN0IiwgInJlcXVpcmVkIjogImFsd2F5
cyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0
X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJu
YWwiOiBmYWxzZSwgInV1aWQiOiAiMGI0Y2Q4ZjMtOTdkYy00ZWNkLTk1MjktOTI2M2FiNmQwZTZm
IiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW3si
dmFsdWUiOiAyMTAsICJsYWJlbCI6ICJTQkwiLCAiZW5hYmxlZCI6IHRydWUsICJwcm9wZXJ0aWVz
IjogbnVsbCwgInV1aWQiOiAiNzMxMzliN2EtYTllMS00ZjM5LThhZTgtNDE4ZTk2MzU4ZjM4Iiwg
ImhpZGRlbiI6IGZhbHNlLCAiZGVmYXVsdCI6IHRydWV9LCB7InZhbHVlIjogMjExLCAibGFiZWwi
OiAiWEJMIiwgImVuYWJsZWQiOiB0cnVlLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogImE3
ODhkODgyLWE5ZDgtNDZiMS1hN2YwLTFkYmZiYzVlMjcyYyIsICJoaWRkZW4iOiBmYWxzZSwgImRl
ZmF1bHQiOiBmYWxzZX0sIHsidmFsdWUiOiAyMTIsICJsYWJlbCI6ICJQQkwiLCAiZW5hYmxlZCI6
IHRydWUsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiZGU0NDFkMWEtYzQ4NC00YWJjLTg2
NGMtOGNlNDc5NmU3MjExIiwgImhpZGRlbiI6IGZhbHNlLCAiZGVmYXVsdCI6IGZhbHNlfSwgeyJ2
YWx1ZSI6IDIxMywgImxhYmVsIjogIlNCTC1YQkwiLCAiZW5hYmxlZCI6IHRydWUsICJwcm9wZXJ0
aWVzIjogbnVsbCwgInV1aWQiOiAiNjU1ZDIzYjAtZDcwMC00MjQ1LWIzZDUtYjZjMzJjYmY1ODRj
IiwgImhpZGRlbiI6IGZhbHNlLCAiZGVmYXVsdCI6IGZhbHNlfSwgeyJ2YWx1ZSI6IDIxNCwgImxh
YmVsIjogIlpFTiIsICJlbmFibGVkIjogdHJ1ZSwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6
ICI4NTFhODQxMS0zOWMwLTQxOWQtODQ1MC1jOGM2MTdiOWVhNmIiLCAiaGlkZGVuIjogZmFsc2Us
ICJkZWZhdWx0IjogZmFsc2V9LCB7InZhbHVlIjogMjE1LCAibGFiZWwiOiAiTVNSIiwgImVuYWJs
ZWQiOiB0cnVlLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjJjYzJmZmI4LTY4NWMtNDI0
MC1hMzM4LTdkNTViYWZiZmE5OSIsICJoaWRkZW4iOiBmYWxzZSwgImRlZmF1bHQiOiBmYWxzZX0s
IHsidmFsdWUiOiAyMTYsICJsYWJlbCI6ICJBVVRIQkwiLCAiZW5hYmxlZCI6IHRydWUsICJwcm9w
ZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiODM4ZjM0NjEtZDYxYS00ZDk2LThiZTItYTA2N2JlYTIz
YjU5IiwgImhpZGRlbiI6IGZhbHNlLCAiZGVmYXVsdCI6IGZhbHNlfV0sICJyZWFkX29ubHkiOiBm
YWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5
IjogImFjdGlvbmludm9jYXRpb24vc3BhbWhhdXNfaXBfcmVzb3VyY2UiLCAidGVtcGxhdGVzIjog
W10sICJkZXByZWNhdGVkIjogZmFsc2V9LCB7ImlkIjogMzAwLCAibmFtZSI6ICJzcGFtaGF1c19k
b21haW5fbmFtZV9yZXNvdXJjZSIsICJ0ZXh0IjogIlNwYW1IYXVzIERvbWFpbiBOYW1lIFJlc291
cmNlIiwgInByZWZpeCI6ICJwcm9wZXJ0aWVzIiwgInR5cGVfaWQiOiA2LCAidG9vbHRpcCI6ICJy
ZXNvdXJjZS1uYW1lIGlzIGEgcmVxdWlyZWQgZW51bWVyYXRlZCBmaWVsZCB0aGF0IHJlcHJlc2Vu
dHMgd2hpY2ggYmxvY2tsaXN0IHNob3VsZCBiZSBxdWVyaWVkIiwgInBsYWNlaG9sZGVyIjogIiIs
ICJpbnB1dF90eXBlIjogInNlbGVjdCIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2Vy
dmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1
dWlkIjogIjJjZmVhMjhiLThmOGYtNGY3ZC1hN2QyLTE0ZmQ1YjgyMGFkZiIsICJvcGVyYXRpb25z
IjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFt7InZhbHVlIjogMjE3LCAi
bGFiZWwiOiAiWlJEIiwgImVuYWJsZWQiOiB0cnVlLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlk
IjogIjE4MmY3NGQ2LWFhNzUtNGJjMS05NDgxLWI2NjcwMTZlZDc2ZCIsICJoaWRkZW4iOiBmYWxz
ZSwgImRlZmF1bHQiOiB0cnVlfSwgeyJ2YWx1ZSI6IDIxOCwgImxhYmVsIjogIkRCTCIsICJlbmFi
bGVkIjogdHJ1ZSwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICI0OGEwNDdlNS1kYjNmLTRh
MGUtOWU1My00ZWJhMGMwZTBlZDgiLCAiaGlkZGVuIjogZmFsc2UsICJkZWZhdWx0IjogZmFsc2V9
XSwgInJlYWRfb25seSI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJyaWNoX3RleHQiOiBm
YWxzZSwgImV4cG9ydF9rZXkiOiAiYWN0aW9uaW52b2NhdGlvbi9zcGFtaGF1c19kb21haW5fbmFt
ZV9yZXNvdXJjZSIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0sIHsiaWQi
OiAzMDEsICJuYW1lIjogInNwYW1oYXVzX3F1ZXJ5X3N0cmluZyIsICJ0ZXh0IjogInNwYW1oYXVz
X3F1ZXJ5X3N0cmluZyIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6
ICJJUCBBZHJlc3Mgb3IgRG9tYWluIE5hbWUgdG8gYmUgY2hlY2tlZCBhZ2FpbnN0IFNwYW1oYXVz
IGRhdGFiYXNlLiIsICJwbGFjZWhvbGRlciI6ICJJUCBBZGRyZXNzL0RvbWFpbiBOYW1lIiwgImlu
cHV0X3R5cGUiOiAidGV4dCIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3RpZmljYXRp
b24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjog
IjEyYTExYjY0LTE2YjMtNDUwOS05MzMyLTU5OTA5NmI5OWQ5OSIsICJvcGVyYXRpb25zIjogW10s
ICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2Us
ICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJf
X2Z1bmN0aW9uL3NwYW1oYXVzX3F1ZXJ5X3N0cmluZyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJl
Y2F0ZWQiOiBmYWxzZX0sIHsiaWQiOiAzMDIsICJuYW1lIjogInNwYW1oYXVzX3NlYXJjaF9yZXNv
dXJjZSIsICJ0ZXh0IjogInNwYW1oYXVzX3NlYXJjaF9yZXNvdXJjZSIsICJwcmVmaXgiOiBudWxs
LCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6ICJyZXNvdXJjZS1uYW1lIGlzIGEgcmVxdWlyZWQg
ZW51bWVyYXRlZCBmaWVsZCB0aGF0IHJlcHJlc2VudHMgd2hpY2ggYmxvY2tsaXN0IHNob3VsZCBi
ZSBxdWVyaWVkLiIsICJwbGFjZWhvbGRlciI6ICJTQkwsWEJMLFBCTCxTQkwtWEJMLFpFTixNU1Is
QVVUSEJMLFpSRCAoZG9tYWlucyBvbmx5KSxEQkwgKGRvbWFpbnMgb25seSkuIiwgImlucHV0X3R5
cGUiOiAidGV4dCIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBm
YWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2Us
ICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogIjY4MWU0
ZDM2LWY5ZDMtNDZiMy04ZTVlLTI2Zjk5NzA4MWMwOSIsICJvcGVyYXRpb25zIjogW10sICJvcGVy
YXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogZmFsc2UsICJjaGFu
Z2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJfX2Z1bmN0
aW9uL3NwYW1oYXVzX3NlYXJjaF9yZXNvdXJjZSIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0
ZWQiOiBmYWxzZX1dLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1NTg1MjM5
NDgxNjEsICJjcmVhdGVfZGF0ZSI6IDE1NTg1MjM5NDgxNjEsICJ1dWlkIjogImJmZWVjMmQ0LTM3
NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9u
IFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2th
Z2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5h
bCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxs
LCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgInBoYXNlcyI6IFtdLCAiYXV0b21hdGljX3Rh
c2tzIjogW10sICJvdmVycmlkZXMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3sibmFt
ZSI6ICJmbl9zcGFtaGF1c19xdWVyeSIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl9zcGFtaGF1
c19xdWVyeSIsICJkZXN0aW5hdGlvbl90eXBlIjogMCwgImV4cGVjdF9hY2siOiB0cnVlLCAidXNl
cnMiOiBbIm5rYW5kaGExQGluLmlibS5jb20iXSwgInV1aWQiOiAiNmIzMDEyZDItMzdlMS00ZGUw
LWI1OTAtNzRiOWRiZTFkNGViIiwgImV4cG9ydF9rZXkiOiAiZm5fc3BhbWhhdXNfcXVlcnkifV0s
ICJhY3Rpb25zIjogW3siaWQiOiAxMDgsICJuYW1lIjogIkV4YW1wbGU6IFNwYW1IYXVzOiBTdWJt
aXQgRG9tYWluIE5hbWUiLCAidHlwZSI6IDEsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJj
b25kaXRpb25zIjogW3sibWV0aG9kIjogImVxdWFscyIsICJmaWVsZF9uYW1lIjogImFydGlmYWN0
LnR5cGUiLCAidmFsdWUiOiAiRE5TIE5hbWUiLCAidHlwZSI6IG51bGwsICJldmFsdWF0aW9uX2lk
IjogbnVsbH1dLCAiYXV0b21hdGlvbnMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW10s
ICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfc3BhbWhhdXNfc3VibWl0X2RvbWFpbl9uYW1lIl0sICJ2
aWV3X2l0ZW1zIjogW3sic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1l
bnQiOiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogImFjdGlvbmludm9jYXRpb24iLCAiY29u
dGVudCI6ICIyY2ZlYTI4Yi04ZjhmLTRmN2QtYTdkMi0xNGZkNWI4MjBhZGYiLCAic2hvd19saW5r
X2hlYWRlciI6IGZhbHNlfV0sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAiNDNk
OWQwY2UtZDQxMS00OTYzLTlmZDgtYjIyNTg5NzY1MDcyIiwgImV4cG9ydF9rZXkiOiAiRXhhbXBs
ZTogU3BhbUhhdXM6IFN1Ym1pdCBEb21haW4gTmFtZSIsICJsb2dpY190eXBlIjogImFsbCJ9LCB7
ImlkIjogMTA3LCAibmFtZSI6ICJFeGFtcGxlOiBTcGFtSGF1czogU3VibWl0IElQIEFkZHJlc3Mi
LCAidHlwZSI6IDEsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJjb25kaXRpb25zIjogW3si
bWV0aG9kIjogImVxdWFscyIsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5cGUiLCAidmFsdWUi
OiAiSVAgQWRkcmVzcyIsICJ0eXBlIjogbnVsbCwgImV2YWx1YXRpb25faWQiOiBudWxsfV0sICJh
dXRvbWF0aW9ucyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXSwgIndvcmtmbG93cyI6
IFsiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRfaXBfYWRkcmVzcyJdLCAidmlld19pdGVtcyI6IFt7
InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1
aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0aW9uIiwgImNvbnRlbnQiOiAiMGI0Y2Q4
ZjMtOTdkYy00ZWNkLTk1MjktOTI2M2FiNmQwZTZmIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxz
ZX1dLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogImE4M2Q0YTljLTMyMDctNGVh
Mi04MjNjLWExODJiZjZjODE2NSIsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFNwYW1IYXVzOiBT
dWJtaXQgSVAgQWRkcmVzcyIsICJsb2dpY190eXBlIjogImFsbCJ9XSwgImxheW91dHMiOiBbXSwg
Im5vdGlmaWNhdGlvbnMiOiBudWxsLCAidGltZWZyYW1lcyI6IG51bGwsICJsb2NhbGUiOiBudWxs
LCAiaW5kdXN0cmllcyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwgImdlb3MiOiBudWxsLCAi
dGFza19vcmRlciI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJ0eXBlcyI6IFtdLCAic2NyaXB0
cyI6IFtdLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgIndvcmtmbG93cyI6IFt7Indv
cmtmbG93X2lkIjogOTMsICJuYW1lIjogIkV4YW1wbGU6IFNwYW1IYXVzOiBTdWJtaXQgRG9tYWlu
IE5hbWUiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRfZG9t
YWluX25hbWUiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiZGVzY3JpcHRpb24iOiAiQ2hl
Y2sgRG9tYWluIE5hbWUgYWdhaW5zdCBTcGFtaGF1cyBEYXRhYmFzZSB0byBzZWUgd2hldGhlciBE
b21haW4gTmFtZSBpcyBpbiBibG9jayBsaXN0IHJlY29yZHMgb3Igbm90LmlmIGdpdmVuIGFydGlm
YWN0IGFwcGVhcnMgaW4gb25lIG9mIHRoZSBibG9jayBsaXN0IHJlY29yZCwgdGhlbiBhcnRpZmFj
dHMgZGVzY3JpcHRpb24gZmlsZWQgd2lsbCBiZSB1cGRhdGVkIHdpdGggYWRkaXRpb25hbCBpbmZv
cm1hdGlvbi4iLCAiY3JlYXRvcl9pZCI6ICJua2FuZGhhMUBpbi5pYm0uY29tIiwgImxhc3RfbW9k
aWZpZWRfYnkiOiAibmthbmRoYTFAaW4uaWJtLmNvbSIsICJsYXN0X21vZGlmaWVkX3RpbWUiOiAx
NTU4NTIzMjIwNTEyLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX3NwYW1oYXVzX3N1Ym1pdF9kb21h
aW5fbmFtZSIsICJ1dWlkIjogImU4ZTZhNGU5LWFhZmUtNGZmNC1iMzVmLTUwMjhiNjYyNmIzNSIs
ICJjb250ZW50IjogeyJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX3NwYW1oYXVzX3N1Ym1pdF9kb21h
aW5fbmFtZSIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThc
Ij8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEw
MDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4v
MjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIw
MTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEw
MDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1u
XCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4
c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5h
bWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhh
bXBsZV9zcGFtaGF1c19zdWJtaXRfZG9tYWluX25hbWVcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIg
bmFtZT1cIkV4YW1wbGU6IFNwYW1IYXVzOiBTdWJtaXQgRG9tYWluIE5hbWVcIj48ZG9jdW1lbnRh
dGlvbj5DaGVjayBEb21haW4gTmFtZSBhZ2FpbnN0IFNwYW1oYXVzIERhdGFiYXNlIHRvIHNlZSB3
aGV0aGVyIERvbWFpbiBOYW1lIGlzIGluIGJsb2NrIGxpc3QgcmVjb3JkcyBvciBub3QuaWYgZ2l2
ZW4gYXJ0aWZhY3QgYXBwZWFycyBpbiBvbmUgb2YgdGhlIGJsb2NrIGxpc3QgcmVjb3JkLCB0aGVu
IGFydGlmYWN0cyBkZXNjcmlwdGlvbiBmaWxlZCB3aWxsIGJlIHVwZGF0ZWQgd2l0aCBhZGRpdGlv
bmFsIGluZm9ybWF0aW9uLjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZl
bnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMXg4cGVtMzwvb3V0Z29pbmc+PC9z
dGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzFraGZ1ZHFcIiBuYW1lPVwi
U3BhbWhhdXMgUXVlcnkgU3VibWl0IEFydGlmYWN0XCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlv
blwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCJhY2IyYTA3
Yy04MTVjLTQ1NDAtODA2YS1lMTEwMDJiOGEyYzZcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJv
Y2Vzc2luZ19zY3JpcHRcIjpcInJlc3VsdHNfZGF0YSA9IHJlc3VsdHMuZ2V0KCdjb250ZW50Jylc
XG50bXBfdGV4dCA9IFxcXCJcXFwiXFxudG1wX2Rlc2MgPSBhcnRpZmFjdC5kZXNjcmlwdGlvblxc
bmlmIHJlc3VsdHNfZGF0YS5nZXQoJ2lzX2luX2Jsb2NrbGlzdCcpOlxcbiAgICAgdG1wX3RleHQg
PSBcXFwiJmx0O2JyJmd0OyZsdDticiZndDsmbHQ7YiZndDtUaGlzIGFydGlmYWN0IGNoZWNrZWQg
YWdhaW5zdCBTcGFtaGF1cyBhbmQgaXQgaXMgaW4gYmxvY2sgbGlzdC4mbHQ7L2ImZ3Q7XFxcIlxc
biAgICAgcmVzcF9saXN0ID0gcmVzdWx0c19kYXRhLmdldCgncmVzcCcpXFxuICAgICBmb3IgY29k
ZSBpbiByZXNwX2xpc3Q6XFxuICAgICAgICAgIGNvZGUgPSBzdHIoY29kZSlcXG4gICAgICAgICAg
dG1wX3RleHQgKz0gXFxcIiZsdDticiZndDsmbHQ7YiZndDtjb2RlIDombHQ7L2ImZ3Q7IHt9Jmx0
Oy9iciZndDtcXFwiLmZvcm1hdChjb2RlKVxcbiAgICAgICAgICB0bXBfdGV4dCArPSBcXFwiJmx0
O2JyJmd0OyZsdDtiJmd0O2RhdGFzZXQgOiZsdDsvYiZndDsge30mbHQ7L2JyJmd0O1xcXCIuZm9y
bWF0KHJlc3VsdHNfZGF0YS5nZXQoY29kZSkuZ2V0KCdkYXRhc2V0JykpXFxuICAgICAgICAgIHRt
cF90ZXh0ICs9IFxcXCImbHQ7YnImZ3Q7Jmx0O2ImZ3Q7ZXhwbGFuYXRpb24gOiZsdDsvYiZndDsg
e30mbHQ7L2JyJmd0O1xcXCIuZm9ybWF0KHJlc3VsdHNfZGF0YS5nZXQoY29kZSkuZ2V0KCdleHBs
YW5hdGlvbicpKVxcbiAgICAgICAgICB0bXBfdGV4dCArPSBcXFwiJmx0O2JyJmd0OyZsdDtiJmd0
O1VSTCA6Jmx0Oy9iJmd0OyAmbHQ7L2JyJmd0O3t9Jmx0Oy9iciZndDtcXFwiLmZvcm1hdChyZXN1
bHRzX2RhdGEuZ2V0KGNvZGUpLmdldCgnVVJMJykpXFxuZWxzZTpcXG4gICAgIHRtcF90ZXh0ID0g
XFxcIiZsdDticiZndDsmbHQ7YnImZ3Q7Jmx0O2ImZ3Q7VGhpcyBhcnRpZmFjdCBjaGVja2VkIGFn
YWluc3QgU3BhbWhhdXMgRGF0YXNldDoge30gYW5kIGl0IGlzIG5vdCBpbiBibG9jayBsaXN0LiZs
dDsvYiZndDsmbHQ7L2JyJmd0OyZsdDsvYnImZ3Q7XFxcIi5mb3JtYXQocmVzdWx0cy5nZXQoJ2lu
cHV0cycpLmdldCgnc3BhbWhhdXNfc2VhcmNoX3Jlc291cmNlJykpXFxuaWYgdG1wX2Rlc2M6XFxu
ICAgICB0bXBfZGVzYyA9IHRtcF9kZXNjLmdldCgnY29udGVudCcpXFxuZWxzZTpcXG4gICAgIHRt
cF9kZXNjID0gXFxcIlxcXCIgXFxuY29tcGxldGVfdG1wX3RleHQgPSB0bXBfZGVzYyt0bXBfdGV4
dFxcbnJpY2hfdGV4dCA9IGhlbHBlci5jcmVhdGVSaWNoVGV4dChjb21wbGV0ZV90bXBfdGV4dClc
XG5hcnRpZmFjdC5kZXNjcmlwdGlvbiA9IHJpY2hfdGV4dFwiLFwicHJlX3Byb2Nlc3Npbmdfc2Ny
aXB0XCI6XCJpbnB1dHMuc3BhbWhhdXNfcXVlcnlfc3RyaW5nID0gYXJ0aWZhY3QudmFsdWVcXG5p
bnB1dHMuc3BhbWhhdXNfc2VhcmNoX3Jlc291cmNlID0gcnVsZS5wcm9wZXJ0aWVzLnNwYW1oYXVz
X2RvbWFpbl9uYW1lX3Jlc291cmNlXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25F
bGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzF4OHBlbTM8L2luY29taW5nPjxvdXRnb2lu
Zz5TZXF1ZW5jZUZsb3dfMTNsNzVmNTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VG
bG93IGlkPVwiU2VxdWVuY2VGbG93XzF4OHBlbTNcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1
NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18xa2hmdWRxXCIvPjxlbmRFdmVudCBpZD1c
IkVuZEV2ZW50XzE0amRmMzZcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzEzbDc1ZjU8L2luY29t
aW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xM2w3NWY1XCIg
c291cmNlUmVmPVwiU2VydmljZVRhc2tfMWtoZnVkcVwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzE0
amRmMzZcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0
ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3Nv
Y2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjx0ZXh0QW5u
b3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9uXzFjM2IzcG9cIj48dGV4dD48IVtDREFUQVtBIHdv
cmtmbG93IHRvIGNoZWNrIERvbWFpbiBuYW1lcyBhZ2FpbnN0IFNwYW1oYXVzIGRhdGFiYXNlIHRv
IHNlZSB3aGV0aGVyIGRvbWFpbiBpcyBpbiBTcGFtaGF1cyBibG9jayBsaXN0IG9yIG5vdC5cbl1d
PjwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzBk
cmFyeW1cIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xa2hmdWRxXCIgdGFyZ2V0UmVmPVwiVGV4
dEFubm90YXRpb25fMWMzYjNwb1wiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1c
IkJQTU5EaWFncmFtXzFcIj48YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5l
ZFwiIGlkPVwiQlBNTlBsYW5lXzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0
YXJ0RXZlbnRfMTU1YXN4bVwiIGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBt
bmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1c
IjE1N1wiIHk9XCIyMjNcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48
YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBp
ZD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMw
XCIgd2lkdGg9XCIxMDBcIiB4PVwiOTlcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48
YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwi
QXNzb2NpYXRpb25fMXNldWo0OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMjBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4
c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBt
bmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlNlcnZpY2VUYXNrXzFraGZ1ZHFcIiBpZD1cIlNl
cnZpY2VUYXNrXzFraGZ1ZHFfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9
XCIxMDBcIiB4PVwiNDI1XCIgeT1cIjE2NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18xeDhwZW0zXCIgaWQ9XCJTZXF1ZW5j
ZUZsb3dfMXg4cGVtM19kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI0MjVcIiB4c2k6dHlw
ZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91
bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjMxMS41XCIgeT1cIjE4NFwiLz48L2Jw
bW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVs
ZW1lbnQ9XCJFbmRFdmVudF8xNGpkZjM2XCIgaWQ9XCJFbmRFdmVudF8xNGpkZjM2X2RpXCI+PG9t
Z2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNzY5XCIgeT1cIjE4OFwi
Lz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIw
XCIgeD1cIjc4N1wiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5T
aGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzEzbDc1ZjVc
IiBpZD1cIlNlcXVlbmNlRmxvd18xM2w3NWY1X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI1MjVc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1c
Ijc2OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxh
YmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNjQ3XCIgeT1c
IjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xYzNiM3BvXCIgaWQ9XCJUZXh0QW5u
b3RhdGlvbl8xYzNiM3BvX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI1M1wiIHdpZHRoPVwi
NDY2XCIgeD1cIjQ5NlwiIHk9XCI2MlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1O
RWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzBkcmFyeW1cIiBpZD1cIkFzc29jaWF0aW9u
XzBkcmFyeW1fZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjUyNVwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMTgzXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNjczXCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIxMTVcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBs
YW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgInZlcnNpb24iOiAzMn0s
ICJhY3Rpb25zIjogW119LCB7IndvcmtmbG93X2lkIjogOTIsICJuYW1lIjogIkV4YW1wbGU6IFNw
YW1IYXVzOiBTdWJtaXQgSVAgQWRkcmVzcyIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxl
X3NwYW1oYXVzX3N1Ym1pdF9pcF9hZGRyZXNzIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0Iiwg
ImRlc2NyaXB0aW9uIjogIkNoZWNrIElQIEFkZHJlc3MgYWdhaW5zdCBTcGFtaGF1cyBEYXRhYmFz
ZSB0byBzZWUgd2hldGhlciBJUCBBZGRyZXNzIGlzIGluIGJsb2NrIGxpc3QgcmVjb3JkcyBvciBu
b3QuaWYgZ2l2ZW4gYXJ0aWZhY3QgYXBwZWFycyBpbiBvbmUgb2YgdGhlIGJsb2NrIGxpc3QgcmVj
b3JkLCB0aGVuIGFydGlmYWN0cyBkZXNjcmlwdGlvbiBmaWxlZCB3aWxsIGJlIHVwZGF0ZWQgd2l0
aCBhZGRpdGlvbmFsIGluZm9ybWF0aW9uLiIsICJjcmVhdG9yX2lkIjogIm5rYW5kaGExQGluLmli
bS5jb20iLCAibGFzdF9tb2RpZmllZF9ieSI6ICJua2FuZGhhMUBpbi5pYm0uY29tIiwgImxhc3Rf
bW9kaWZpZWRfdGltZSI6IDE1NTg1MjM0MDUwODMsICJleHBvcnRfa2V5IjogImV4YW1wbGVfc3Bh
bWhhdXNfc3VibWl0X2lwX2FkZHJlc3MiLCAidXVpZCI6ICI0NDU0OWViYS1hODQ1LTRjOGUtYTU2
Ny1kNzBjZGQ3NDBmMmUiLCAiY29udGVudCI6IHsid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9zcGFt
aGF1c19zdWJtaXRfaXBfYWRkcmVzcyIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVu
Y29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3Jn
L3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21n
Lm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21n
Lm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5v
cmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGll
bnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxT
Y2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0
YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxw
cm9jZXNzIGlkPVwiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRfaXBfYWRkcmVzc1wiIGlzRXhlY3V0
YWJsZT1cInRydWVcIiBuYW1lPVwiRXhhbXBsZTogU3BhbUhhdXM6IFN1Ym1pdCBJUCBBZGRyZXNz
XCI+PGRvY3VtZW50YXRpb24+Q2hlY2sgSVAgQWRkcmVzcyBhZ2FpbnN0IFNwYW1oYXVzIERhdGFi
YXNlIHRvIHNlZSB3aGV0aGVyIElQIEFkZHJlc3MgaXMgaW4gYmxvY2sgbGlzdCByZWNvcmRzIG9y
IG5vdC5pZiBnaXZlbiBhcnRpZmFjdCBhcHBlYXJzIGluIG9uZSBvZiB0aGUgYmxvY2sgbGlzdCBy
ZWNvcmQsIHRoZW4gYXJ0aWZhY3RzIGRlc2NyaXB0aW9uIGZpbGVkIHdpbGwgYmUgdXBkYXRlZCB3
aXRoIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24uPC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50IGlk
PVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wbmdpODk4PC9v
dXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMTFvMnBn
clwiIG5hbWU9XCJTcGFtaGF1cyBRdWVyeSBTdWJtaXQgQXJ0aWZhY3RcIiByZXNpbGllbnQ6dHlw
ZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVp
ZD1cImFjYjJhMDdjLTgxNWMtNDU0MC04MDZhLWUxMTAwMmI4YTJjNlwiPntcImlucHV0c1wiOnt9
LFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwicmVzdWx0c19kYXRhID0gcmVzdWx0cy5nZXQo
J2NvbnRlbnQnKVxcbnRtcF90ZXh0ID0gXFxcIlxcXCJcXG50bXBfZGVzYyA9IGFydGlmYWN0LmRl
c2NyaXB0aW9uXFxuaWYgcmVzdWx0c19kYXRhLmdldCgnaXNfaW5fYmxvY2tsaXN0Jyk6XFxuICAg
ICB0bXBfdGV4dCA9IFxcXCImbHQ7YnImZ3Q7Jmx0O2JyJmd0OyZsdDtiJmd0O1RoaXMgYXJ0aWZh
Y3QgY2hlY2tlZCBhZ2FpbnN0IFNwYW1oYXVzIGFuZCBpdCBpcyBpbiBibG9jayBsaXN0LiZsdDsv
YiZndDtcXFwiXFxuICAgICByZXNwX2xpc3QgPSByZXN1bHRzX2RhdGEuZ2V0KCdyZXNwJylcXG4g
ICAgIGZvciBjb2RlIGluIHJlc3BfbGlzdDpcXG4gICAgICAgICAgY29kZSA9IHN0cihjb2RlKVxc
biAgICAgICAgICB0bXBfdGV4dCArPSBcXFwiJmx0O2JyJmd0OyZsdDtiJmd0O2NvZGUgOiZsdDsv
YiZndDsge30mbHQ7L2JyJmd0O1xcXCIuZm9ybWF0KGNvZGUpXFxuICAgICAgICAgIHRtcF90ZXh0
ICs9IFxcXCImbHQ7YnImZ3Q7Jmx0O2ImZ3Q7ZGF0YXNldCA6Jmx0Oy9iJmd0OyB7fSZsdDsvYnIm
Z3Q7XFxcIi5mb3JtYXQocmVzdWx0c19kYXRhLmdldChjb2RlKS5nZXQoJ2RhdGFzZXQnKSlcXG4g
ICAgICAgICAgdG1wX3RleHQgKz0gXFxcIiZsdDticiZndDsmbHQ7YiZndDtleHBsYW5hdGlvbiA6
Jmx0Oy9iJmd0OyB7fSZsdDsvYnImZ3Q7XFxcIi5mb3JtYXQocmVzdWx0c19kYXRhLmdldChjb2Rl
KS5nZXQoJ2V4cGxhbmF0aW9uJykpXFxuICAgICAgICAgIHRtcF90ZXh0ICs9IFxcXCImbHQ7YnIm
Z3Q7Jmx0O2ImZ3Q7VVJMIDombHQ7L2ImZ3Q7ICZsdDsvYnImZ3Q7e30mbHQ7L2JyJmd0O1xcXCIu
Zm9ybWF0KHJlc3VsdHNfZGF0YS5nZXQoY29kZSkuZ2V0KCdVUkwnKSlcXG5lbHNlOlxcbiAgICAg
dG1wX3RleHQgPSBcXFwiJmx0O2JyJmd0OyZsdDticiZndDsmbHQ7YiZndDtUaGlzIGFydGlmYWN0
IGNoZWNrZWQgYWdhaW5zdCBTcGFtaGF1cyBEYXRhc2V0OiB7fSBhbmQgaXQgaXMgbm90IGluIGJs
b2NrIGxpc3QuJmx0Oy9iJmd0OyZsdDsvYnImZ3Q7Jmx0Oy9iciZndDtcXFwiLmZvcm1hdChyZXN1
bHRzLmdldCgnaW5wdXRzJykuZ2V0KCdzcGFtaGF1c19zZWFyY2hfcmVzb3VyY2UnKSlcXG5pZiB0
bXBfZGVzYzpcXG4gICAgIHRtcF9kZXNjID0gdG1wX2Rlc2MuZ2V0KCdjb250ZW50JylcXG5lbHNl
OlxcbiAgICAgdG1wX2Rlc2MgPSBcXFwiXFxcIiBcXG5jb21wbGV0ZV90bXBfdGV4dCA9IHRtcF9k
ZXNjK3RtcF90ZXh0XFxucmljaF90ZXh0ID0gaGVscGVyLmNyZWF0ZVJpY2hUZXh0KGNvbXBsZXRl
X3RtcF90ZXh0KVxcbmFydGlmYWN0LmRlc2NyaXB0aW9uID0gcmljaF90ZXh0XCIsXCJwcmVfcHJv
Y2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5zcGFtaGF1c19xdWVyeV9zdHJpbmcgPSBhcnRpZmFj
dC52YWx1ZVxcbmlucHV0cy5zcGFtaGF1c19zZWFyY2hfcmVzb3VyY2UgPSBydWxlLnByb3BlcnRp
ZXMuc3BhbWhhdXNfaXBfcmVzb3VyY2VcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVuc2lv
bkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMG5naTg5ODwvaW5jb21pbmc+PG91dGdv
aW5nPlNlcXVlbmNlRmxvd18weHgxOW95PC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5j
ZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMG5naTg5OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRf
MTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzExbzJwZ3JcIi8+PGVuZEV2ZW50IGlk
PVwiRW5kRXZlbnRfMWRjMXV4cFwiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMHh4MTlveTwvaW5j
b21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzB4eDE5b3lc
IiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xMW8ycGdyXCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRf
MWRjMXV4cFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+
PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+PGFz
c29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZl
bnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PHRleHRB
bm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMXZqZnhxdVwiPjx0ZXh0PkEgd29ya2Zsb3cg
dG8gY2hlY2sgSVAgQWRkcmVzcyBhZ2FpbnN0IFNwYW1oYXVzIGRhdGFiYXNlIHRvIHNlZSB3aGV0
aGVyIGRvbWFpbiBpcyBpbiBTcGFtaGF1cyBibG9jayBsaXN0IG9yIG5vdC48L3RleHQ+PC90ZXh0
QW5ub3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8wdDY2enJjXCIgc291cmNl
UmVmPVwiU2VydmljZVRhc2tfMTFvMnBnclwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzF2
amZ4cXVcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8x
XCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5Q
bGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFz
eG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdcIiB5PVwiMjIz
XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hh
cGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3Rh
dGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAw
XCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRn
ZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9uXzFz
ZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2OVwiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUg
YnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18xMW8ycGdyXCIgaWQ9XCJTZXJ2aWNlVGFza18xMW8y
cGdyX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjM1
NVwiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVs
ZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMG5naTg5OFwiIGlkPVwiU2VxdWVuY2VGbG93XzBuZ2k4OThf
ZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjc2XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2lu
dFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIyNzZcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjM1NVwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiMjkxXCIgeT1cIjE5OS41XCIvPjwvYnBtbmRp
OkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVu
dD1cIkVuZEV2ZW50XzFkYzF1eHBcIiBpZD1cIkVuZEV2ZW50XzFkYzF1eHBfZGlcIj48b21nZGM6
Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI2NThcIiB5PVwiMTg4XCIvPjxi
cG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4
PVwiNjc2XCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBl
PjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHh4MTlveVwiIGlk
PVwiU2VxdWVuY2VGbG93XzB4eDE5b3lfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQ1NVwiIHhz
aTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNjU4
XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI1NTYuNVwiIHk9XCIx
ODRcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNo
YXBlIGJwbW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMXZqZnhxdVwiIGlkPVwiVGV4dEFubm90
YXRpb25fMXZqZnhxdV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiNTNcIiB3aWR0aD1cIjQw
MFwiIHg9XCI0NTNcIiB5PVwiNjlcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVk
Z2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8wdDY2enJjXCIgaWQ9XCJBc3NvY2lhdGlvbl8w
dDY2enJjX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0NTVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjE4NFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjU5NFwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMTIyXCIvPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFu
ZT48L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ2ZXJzaW9uIjogMTh9LCAi
YWN0aW9ucyI6IFtdfV0sICJyb2xlcyI6IFtdLCAid29ya3NwYWNlcyI6IFtdLCAiZnVuY3Rpb25z
IjogW3siaWQiOiA1MSwgIm5hbWUiOiAiZm5fc3BhbWhhdXNfcXVlcnlfc3VibWl0X2FydGlmYWN0
IiwgImRpc3BsYXlfbmFtZSI6ICJTcGFtaGF1cyBRdWVyeSBTdWJtaXQgQXJ0aWZhY3QiLCAiZGVz
Y3JpcHRpb24iOiB7ImZvcm1hdCI6ICJ0ZXh0IiwgImNvbnRlbnQiOiAiRnVuY3Rpb24gdG8gY2hl
Y2sgSVAgQWRkcmVzcyAmIERvbWFpbiBOYW1lcyBhZ2FpbnN0IFNwYW1oYXVzIERhdGFiYXNlIHRv
IHNlZSB3aGV0aGVyIElQIEFkZHJlc3Mgb3IgRG9tYWluIE5hbWVzIGFwcGVhcnMgaW4gU3BhbWhh
dXMgYmxvY2sgbGlzdCByZWNvcmRzIG9yIG5vdC4ifSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJm
bl9zcGFtaGF1c19xdWVyeSIsICJleHBvcnRfa2V5IjogImZuX3NwYW1oYXVzX3F1ZXJ5X3N1Ym1p
dF9hcnRpZmFjdCIsICJ1dWlkIjogImFjYjJhMDdjLTgxNWMtNDU0MC04MDZhLWUxMTAwMmI4YTJj
NiIsICJ2ZXJzaW9uIjogNCwgImNyZWF0b3IiOiB7ImlkIjogNiwgInR5cGUiOiAidXNlciIsICJu
YW1lIjogIm5rYW5kaGExQGluLmlibS5jb20iLCAiZGlzcGxheV9uYW1lIjogIk5pdGluIEthbmRo
YXJlICJ9LCAibGFzdF9tb2RpZmllZF9ieSI6IHsiaWQiOiA2LCAidHlwZSI6ICJ1c2VyIiwgIm5h
bWUiOiAibmthbmRoYTFAaW4uaWJtLmNvbSIsICJkaXNwbGF5X25hbWUiOiAiTml0aW4gS2FuZGhh
cmUgIn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTU3ODI2MTIwMzA3LCAidmlld19pdGVtcyI6
IFt7InN0ZXBfbGFiZWwiOiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxk
X3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiMTJhMTFiNjQt
MTZiMy00NTA5LTkzMzItNTk5MDk2Yjk5ZDk5IiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX0s
IHsic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRf
dXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICI2ODFlNGQzNi1m
OWQzLTQ2YjMtOGU1ZS0yNmY5OTcwODFjMDkiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfV0s
ICJ3b3JrZmxvd3MiOiBbeyJ3b3JrZmxvd19pZCI6IDkzLCAibmFtZSI6ICJFeGFtcGxlOiBTcGFt
SGF1czogU3VibWl0IERvbWFpbiBOYW1lIiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVf
c3BhbWhhdXNfc3VibWl0X2RvbWFpbl9uYW1lIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0Iiwg
ImRlc2NyaXB0aW9uIjogbnVsbCwgInV1aWQiOiBudWxsLCAiYWN0aW9ucyI6IFtdfSwgeyJ3b3Jr
Zmxvd19pZCI6IDkyLCAibmFtZSI6ICJFeGFtcGxlOiBTcGFtSGF1czogU3VibWl0IElQIEFkZHJl
c3MiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9zcGFtaGF1c19zdWJtaXRfaXBfYWRk
cmVzcyIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJkZXNjcmlwdGlvbiI6IG51bGwsICJ1
dWlkIjogbnVsbCwgImFjdGlvbnMiOiBbXX1dfV19
"""
    )