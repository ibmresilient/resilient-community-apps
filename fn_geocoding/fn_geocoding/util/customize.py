# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_geocoding"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_geocoding package"""
    reload_params = {"package": u"fn_geocoding",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"geocoding_data", u"geocoding_source"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_geocoding"], 
                    "functions": [u"geocoding"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_geocoding_get_address", u"example_geocoding_get_coordinates"], 
                    "actions": [u"Example: Geocode Get Address", u"Example: Geocoding Get Coordinates"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     geocoding_data
    #     geocoding_source
    #   Message Destinations:
    #     fn_geocoding
    #   Functions:
    #     geocoding
    #   Workflows:
    #     example_geocoding_get_address
    #     example_geocoding_get_coordinates
    #   Rules:
    #     Example: Geocode Get Address
    #     Example: Geocoding Get Coordinates


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogIjg2MzQ0YmQ4LThlY2Mt
NGM2MC1iNzkwLTMxNTEwNGRjY2QyNSIsICJkZXNjcmlwdGlvbiI6ICIiLCAib2JqZWN0X3R5cGUi
OiAiYXJ0aWZhY3QiLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX2dlb2NvZGluZ19nZXRfYWRkcmVz
cyIsICJ3b3JrZmxvd19pZCI6IDY0LCAibGFzdF9tb2RpZmllZF9ieSI6ICJsMkBhYmxlLmNvbSIs
ICJjb250ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRG
LThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8y
MDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQ
TU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RE
LzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8y
MDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9i
cG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxu
czp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdl
dE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwi
ZXhhbXBsZV9nZW9jb2RpbmdfZ2V0X2FkZHJlc3NcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFt
ZT1cIkV4YW1wbGU6IEdlb2NvZGluZyBHZXQgQWRkcmVzc1wiPjxkb2N1bWVudGF0aW9uLz48c3Rh
cnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3df
MDh0emJudzwvb3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VU
YXNrXzFnbG5sODNcIiBuYW1lPVwiR2VvY29kaW5nXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlv
blwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI0MDExZmU5
Zi0zMzRlLTQ3YzMtYTk2YS1mOTk0ODRmNzhiOWJcIj57XCJpbnB1dHNcIjp7XCI2OTZhZmU1My1i
ZmNmLTQ3ZmItOGI2Ni1lZDQ4MDc4MjI4MThcIjp7XCJpbnB1dF90eXBlXCI6XCJzdGF0aWNcIixc
InN0YXRpY19pbnB1dFwiOntcIm11bHRpc2VsZWN0X3ZhbHVlXCI6W10sXCJzZWxlY3RfdmFsdWVc
IjpcIjdhNjA0ODQwLWQ3MzItNDY2Zi1hOWI5LTE1MTBjYjIxM2RhY1wifX19LFwicG9zdF9wcm9j
ZXNzaW5nX3NjcmlwdFwiOlwiaW5jaWRlbnQuYWRkTm90ZShoZWxwZXIuY3JlYXRlUmljaFRleHQo
XFxcIiZsdDtkaXYmZ3Q7QXJ0aWZhY3Q6IHt9Jmx0Oy9kaXYmZ3Q7Jmx0O2RpdiZndDt7fSZsdDsv
ZGl2Jmd0O1xcXCIuZm9ybWF0KGFydGlmYWN0LnZhbHVlLCByZXN1bHRzLnJlc3BvbnNlWydyZXN1
bHRzJ11bMF1bJ2Zvcm1hdHRlZF9hZGRyZXNzJ10pKSlcIixcInByZV9wcm9jZXNzaW5nX3Njcmlw
dFwiOlwiaW5wdXRzLmdlb2NvZGluZ19kYXRhID0gYXJ0aWZhY3QudmFsdWVcIn08L3Jlc2lsaWVu
dDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMDh0
emJudzwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wcjBqYTJwPC9vdXRnb2luZz48
L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMDh0emJud1wiIHNv
dXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzFn
bG5sODNcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMHNjODJtbVwiPjxpbmNvbWluZz5TZXF1
ZW5jZUZsb3dfMHIwamEycDwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwi
U2VxdWVuY2VGbG93XzByMGphMnBcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xZ2xubDgzXCIg
dGFyZ2V0UmVmPVwiRW5kRXZlbnRfMHNjODJtbVwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0
PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwi
IHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0
aW9uXzFreHhpeXRcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlh
Z3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1c
IkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1O
TGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdcIiB5
PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0
QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRo
PVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpC
UE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0
aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2OVwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9
XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18xZ2xubDgzXCIgaWQ9XCJTZXJ2aWNlVGFz
a18xZ2xubDgzX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIg
eD1cIjI1MFwiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2Ug
YnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMDh0emJud1wiIGlkPVwiU2VxdWVuY2VGbG93XzA4
dHpibndfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMjUwXCIgeHNpOnR5cGU9XCJvbWdk
YzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWln
aHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIyMjRcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5M
YWJlbD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVu
ZEV2ZW50XzBzYzgybW1cIiBpZD1cIkVuZEV2ZW50XzBzYzgybW1fZGlcIj48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI0MjNcIiB5PVwiMTg4XCIvPjxicG1uZGk6
QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNDQx
XCIgeT1cIjIyN1wiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1u
ZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMHIwamEycFwiIGlkPVwiU2Vx
dWVuY2VGbG93XzByMGphMnBfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjM1MFwiIHhzaTp0eXBl
PVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDIzXCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2Rj
OkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIzODYuNVwiIHk9XCIxODRcIi8+
PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48
L2JwbW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ3b3JrZmxvd19pZCI6ICJleGFt
cGxlX2dlb2NvZGluZ19nZXRfYWRkcmVzcyIsICJ2ZXJzaW9uIjogOX0sICJsYXN0X21vZGlmaWVk
X3RpbWUiOiAxNTM5Mzc3MDU4NjU5LCAiY3JlYXRvcl9pZCI6ICJsMkBhYmxlLmNvbSIsICJhY3Rp
b25zIjogW10sICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX2dlb2NvZGluZ19nZXRfYWRk
cmVzcyIsICJuYW1lIjogIkV4YW1wbGU6IEdlb2NvZGluZyBHZXQgQWRkcmVzcyJ9LCB7InV1aWQi
OiAiOTM5ZjAxMjItNTA5Yy00MjEwLWI0N2UtZjgyY2FjZWY0ZGUxIiwgImRlc2NyaXB0aW9uIjog
IiIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJleHBvcnRfa2V5IjogImV4YW1wbGVfZ2Vv
Y29kaW5nX2dldF9jb29yZGluYXRlcyIsICJ3b3JrZmxvd19pZCI6IDY1LCAibGFzdF9tb2RpZmll
ZF9ieSI6ICJsMkBhYmxlLmNvbSIsICJjb250ZW50IjogeyJ4bWwiOiAiPD94bWwgdmVyc2lvbj1c
IjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3
dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8v
d3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6
Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1uXCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcv
MjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNj
aGVtYS1pbnN0YW5jZVwiIHRhcmdldE5hbWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcv
dGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhhbXBsZV9nZW9jb2RpbmdfZ2V0X2Nvb3JkaW5hdGVzXCIg
aXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBHZW9jb2RpbmcgR2V0IENvb3Jk
aW5hdGVzXCI+PGRvY3VtZW50YXRpb24vPjxzdGFydEV2ZW50IGlkPVwiU3RhcnRFdmVudF8xNTVh
c3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wY25vbnhzPC9vdXRnb2luZz48L3N0YXJ0RXZl
bnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMDhmbGRrMlwiIG5hbWU9XCJHZW9jb2Rp
bmdcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4dGVuc2lvbkVsZW1lbnRzPjxyZXNp
bGllbnQ6ZnVuY3Rpb24gdXVpZD1cIjQwMTFmZTlmLTMzNGUtNDdjMy1hOTZhLWY5OTQ4NGY3OGI5
YlwiPntcImlucHV0c1wiOntcIjY5NmFmZTUzLWJmY2YtNDdmYi04YjY2LWVkNDgwNzgyMjgxOFwi
OntcImlucHV0X3R5cGVcIjpcInN0YXRpY1wiLFwic3RhdGljX2lucHV0XCI6e1wibXVsdGlzZWxl
Y3RfdmFsdWVcIjpbXSxcInNlbGVjdF92YWx1ZVwiOlwiN2E2MDQ4NDAtZDczMi00NjZmLWE5Yjkt
MTUxMGNiMjEzZGFjXCJ9fX0sXCJwb3N0X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJsYXRsbmcgPSBc
XFwiLFxcXCIuam9pbigoc3RyKHJlc3VsdHMucmVzcG9uc2VbJ3Jlc3VsdHMnXVswXVsnZ2VvbWV0
cnknXVsnbG9jYXRpb24nXVsnbGF0J10pLCBzdHIocmVzdWx0cy5yZXNwb25zZVsncmVzdWx0cydd
WzBdWydnZW9tZXRyeSddWydsb2NhdGlvbiddWydsbmcnXSkpKVxcbmluY2lkZW50LmFkZE5vdGUo
aGVscGVyLmNyZWF0ZVJpY2hUZXh0KFxcXCImbHQ7ZGl2Jmd0O0FydGlmYWN0OiB7fSZsdDsvZGl2
Jmd0OyZsdDtkaXYmZ3Q7e30mbHQ7L2RpdiZndDtcXFwiLmZvcm1hdChhcnRpZmFjdC52YWx1ZSwg
bGF0bG5nKSkpXCIsXCJwcmVfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImlucHV0cy5nZW9jb2Rpbmdf
ZGF0YSA9IGFydGlmYWN0LnZhbHVlXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+PC9leHRlbnNpb25F
bGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBjbm9ueHM8L2luY29taW5nPjxvdXRnb2lu
Zz5TZXF1ZW5jZUZsb3dfMHRoN2J1dTwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFzaz48c2VxdWVuY2VG
bG93IGlkPVwiU2VxdWVuY2VGbG93XzBjbm9ueHNcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50XzE1
NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wOGZsZGsyXCIvPjxlbmRFdmVudCBpZD1c
IkVuZEV2ZW50XzFzdXE4MXZcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzB0aDdidXU8L2luY29t
aW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18wdGg3YnV1XCIg
c291cmNlUmVmPVwiU2VydmljZVRhc2tfMDhmbGRrMlwiIHRhcmdldFJlZj1cIkVuZEV2ZW50XzFz
dXE4MXZcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiPjx0
ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5vdGF0aW9uPjxhc3Nv
Y2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9XCJTdGFydEV2ZW50
XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIvPjwvcHJvY2Vz
cz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1uZGk6QlBNTlBs
YW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwiPjxicG1uZGk6
QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9XCJTdGFydEV2
ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lkdGg9XCIzNlwi
IHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2JwbW5kaTpCUE1O
TGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwi
VGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4eGl5dF9kaVwi
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5OVwiIHk9XCIy
NTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJB
c3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2RpXCI+PG9tZ2Rp
OndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIyMFwiLz48
b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjU0
XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU2Vy
dmljZVRhc2tfMDhmbGRrMlwiIGlkPVwiU2VydmljZVRhc2tfMDhmbGRrMl9kaVwiPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIyNDhcIiB5PVwiMTY2XCIvPjwv
YnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VG
bG93XzBjbm9ueHNcIiBpZD1cIlNlcXVlbmNlRmxvd18wY25vbnhzX2RpXCI+PG9tZ2RpOndheXBv
aW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6
d2F5cG9pbnQgeD1cIjI0OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxi
cG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4
PVwiMjIzXCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+
PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8xc3VxODF2XCIgaWQ9XCJF
bmRFdmVudF8xc3VxODF2X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwi
MzZcIiB4PVwiNDE5XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRz
IGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjQzN1wiIHk9XCIyMjdcIi8+PC9icG1uZGk6
QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50
PVwiU2VxdWVuY2VGbG93XzB0aDdidXVcIiBpZD1cIlNlcXVlbmNlRmxvd18wdGg3YnV1X2RpXCI+
PG9tZ2RpOndheXBvaW50IHg9XCIzNDhcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIw
NlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQxOVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3
aWR0aD1cIjBcIiB4PVwiMzgzLjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2Jw
bW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+PC9k
ZWZpbml0aW9ucz4iLCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9nZW9jb2RpbmdfZ2V0X2Nvb3Jk
aW5hdGVzIiwgInZlcnNpb24iOiA4fSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1Mzk1NjE3NjIy
OTMsICJjcmVhdG9yX2lkIjogImwyQGFibGUuY29tIiwgImFjdGlvbnMiOiBbXSwgInByb2dyYW1t
YXRpY19uYW1lIjogImV4YW1wbGVfZ2VvY29kaW5nX2dldF9jb29yZGluYXRlcyIsICJuYW1lIjog
IkV4YW1wbGU6IEdlb2NvZGluZyBHZXQgQ29vcmRpbmF0ZXMifV0sICJhY3Rpb25zIjogW3sibG9n
aWNfdHlwZSI6ICJhbGwiLCAibmFtZSI6ICJFeGFtcGxlOiBHZW9jb2RlIEdldCBBZGRyZXNzIiwg
InZpZXdfaXRlbXMiOiBbXSwgInR5cGUiOiAxLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX2dlb2Nv
ZGluZ19nZXRfYWRkcmVzcyJdLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAidGltZW91dF9z
ZWNvbmRzIjogODY0MDAsICJ1dWlkIjogIjhkNzVjMzY4LThkMzMtNDJlMy1iZTBlLTExMWVmNWY5
MTQzNSIsICJhdXRvbWF0aW9ucyI6IFtdLCAiZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBHZW9jb2Rl
IEdldCBBZGRyZXNzIiwgImNvbmRpdGlvbnMiOiBbXSwgImlkIjogODUsICJtZXNzYWdlX2Rlc3Rp
bmF0aW9ucyI6IFtdfSwgeyJsb2dpY190eXBlIjogImFsbCIsICJuYW1lIjogIkV4YW1wbGU6IEdl
b2NvZGluZyBHZXQgQ29vcmRpbmF0ZXMiLCAidmlld19pdGVtcyI6IFtdLCAidHlwZSI6IDEsICJ3
b3JrZmxvd3MiOiBbImV4YW1wbGVfZ2VvY29kaW5nX2dldF9jb29yZGluYXRlcyJdLCAib2JqZWN0
X3R5cGUiOiAiYXJ0aWZhY3QiLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1dWlkIjogIjEz
YjQxN2U5LTZkMzAtNDc3OC05NTNhLTIwNWZjZDJiNDU3OCIsICJhdXRvbWF0aW9ucyI6IFtdLCAi
ZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBHZW9jb2RpbmcgR2V0IENvb3JkaW5hdGVzIiwgImNvbmRp
dGlvbnMiOiBbXSwgImlkIjogODYsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdfV0sICJsYXlv
dXRzIjogW10sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAyLCAiaWQiOiAyOCwgImluZHVzdHJp
ZXMiOiBudWxsLCAicGhhc2VzIjogW10sICJhY3Rpb25fb3JkZXIiOiBbXSwgImdlb3MiOiBudWxs
LCAibG9jYWxlIjogbnVsbCwgInNlcnZlcl92ZXJzaW9uIjogeyJtYWpvciI6IDMxLCAidmVyc2lv
biI6ICIzMS4wLjAiLCAiYnVpbGRfbnVtYmVyIjogMCwgIm1pbm9yIjogMH0sICJ0aW1lZnJhbWVz
IjogbnVsbCwgIndvcmtzcGFjZXMiOiBbXSwgImF1dG9tYXRpY190YXNrcyI6IFtdLCAiZnVuY3Rp
b25zIjogW3siZGlzcGxheV9uYW1lIjogIkdlb2NvZGluZyIsICJkZXNjcmlwdGlvbiI6IHsiY29u
dGVudCI6ICJQcm92aWRlIGNvbnZlcnNpb24gb2YgYWRkcmVzc2VzIGFuZCB3b3JsZCBjb29yZGlu
YXRlcyIsICJmb3JtYXQiOiAidGV4dCJ9LCAiY3JlYXRvciI6IHsiZGlzcGxheV9uYW1lIjogIkwy
IEFkbWluIiwgInR5cGUiOiAidXNlciIsICJpZCI6IDQsICJuYW1lIjogImwyQGFibGUuY29tIn0s
ICJ2aWV3X2l0ZW1zIjogW3sic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rp
b24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwg
ImNvbnRlbnQiOiAiNjk2YWZlNTMtYmZjZi00N2ZiLThiNjYtZWQ0ODA3ODIyODE4IiwgInN0ZXBf
bGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlv
biIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAi
Y29udGVudCI6ICJkMzZlMTUxYy1lMTdhLTRkMjQtODMyYS0xYTJkNzM4NjJhYmIiLCAic3RlcF9s
YWJlbCI6IG51bGx9XSwgImV4cG9ydF9rZXkiOiAiZ2VvY29kaW5nIiwgInV1aWQiOiAiNDAxMWZl
OWYtMzM0ZS00N2MzLWE5NmEtZjk5NDg0Zjc4YjliIiwgImxhc3RfbW9kaWZpZWRfYnkiOiB7ImRp
c3BsYXlfbmFtZSI6ICJMMiBBZG1pbiIsICJ0eXBlIjogInVzZXIiLCAiaWQiOiA0LCAibmFtZSI6
ICJsMkBhYmxlLmNvbSJ9LCAidmVyc2lvbiI6IDEsICJ3b3JrZmxvd3MiOiBbeyJkZXNjcmlwdGlv
biI6IG51bGwsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJhY3Rpb25zIjogW10sICJuYW1l
IjogIkV4YW1wbGU6IEdlb2NvZGluZyBHZXQgQWRkcmVzcyIsICJ3b3JrZmxvd19pZCI6IDY0LCAi
cHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9nZW9jb2RpbmdfZ2V0X2FkZHJlc3MiLCAidXVp
ZCI6IG51bGx9LCB7ImRlc2NyaXB0aW9uIjogbnVsbCwgIm9iamVjdF90eXBlIjogImFydGlmYWN0
IiwgImFjdGlvbnMiOiBbXSwgIm5hbWUiOiAiRXhhbXBsZTogR2VvY29kaW5nIEdldCBDb29yZGlu
YXRlcyIsICJ3b3JrZmxvd19pZCI6IDY1LCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9n
ZW9jb2RpbmdfZ2V0X2Nvb3JkaW5hdGVzIiwgInV1aWQiOiBudWxsfV0sICJsYXN0X21vZGlmaWVk
X3RpbWUiOiAxNTM5Mzc2NTg2Mjk0LCAiZGVzdGluYXRpb25faGFuZGxlIjogImZuX2dlb2NvZGlu
ZyIsICJpZCI6IDg3LCAibmFtZSI6ICJnZW9jb2RpbmcifV0sICJub3RpZmljYXRpb25zIjogbnVs
bCwgInJlZ3VsYXRvcnMiOiBudWxsLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJjcmVhdGVfZGF0ZSI6
IDE1NDAxNDUwMDg1NTUsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChp
bnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5h
bCkiLCAiaWQiOiAwLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCki
LCAidXBkYXRlX2RhdGUiOiAxNTQwMTQ1MDA4NTU1LCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTEx
ZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2Us
ICJwYXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFsc2V9XSwgInNjcmlwdHMiOiBbXSwgInR5
cGVzIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7InV1aWQiOiAiYWY4NTlhNDYtMjll
Ni00NGViLTg3OTItNzVlMTlmNTE3NmIxIiwgImV4cG9ydF9rZXkiOiAiZm5fZ2VvY29kaW5nIiwg
Im5hbWUiOiAiZm5fZ2VvY29kaW5nIiwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAicHJvZ3JhbW1h
dGljX25hbWUiOiAiZm5fZ2VvY29kaW5nIiwgImV4cGVjdF9hY2siOiB0cnVlLCAidXNlcnMiOiBb
ImJAYS5jb20iXX1dLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgInJvbGVzIjogW10s
ICJmaWVsZHMiOiBbeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMCwgIm9wZXJhdGlvbl9w
ZXJtcyI6IHt9LCAidGV4dCI6ICJTaW11bGF0aW9uIiwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAi
cHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiA1MSwgInJlYWRfb25seSI6
IHRydWUsICJ1dWlkIjogImMzZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIsICJj
aG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAiYm9vbGVhbiIsICJ0b29sdGlwIjogIldoZXRo
ZXIgdGhlIGluY2lkZW50IGlzIGEgc2ltdWxhdGlvbiBvciBhIHJlZ3VsYXIgaW5jaWRlbnQuICBU
aGlzIGZpZWxkIGlzIHJlYWQtb25seS4iLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6
IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRfa2V5IjogImluY2lkZW50L2luY190cmFp
bmluZyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAibmFtZSI6ICJpbmNfdHJhaW5pbmci
LCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2Us
ICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0
aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImdlb2NvZGluZ19kYXRhIiwgImJsYW5rX29wdGlvbiI6
IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAzMDYsICJy
ZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiZDM2ZTE1MWMtZTE3YS00ZDI0LTgzMmEtMWEyZDcz
ODYyYWJiIiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJ0ZXh0IiwgInRvb2x0aXAi
OiAidmFsdWUgd2lsbCBiZSBzcGVjaWZpYyB0byB0aGUgc291cmNlIGZpZWxkIiwgImludGVybmFs
IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tl
eSI6ICJfX2Z1bmN0aW9uL2dlb2NvZGluZ19kYXRhIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFs
c2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJnZW9jb2RpbmdfZGF0YSIsICJkZXByZWNh
dGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInJlcXVpcmVk
IjogImFsd2F5cyIsICJ2YWx1ZXMiOiBbXX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6
IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImdlb2NvZGluZ19zb3VyY2UiLCAi
Ymxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUs
ICJpZCI6IDMwNywgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICI2OTZhZmU1My1iZmNmLTQ3
ZmItOGI2Ni1lZDQ4MDc4MjI4MTgiLCAiY2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInNl
bGVjdCIsICJ0b29sdGlwIjogIiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFs
c2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9nZW9jb2Rpbmdf
c291cmNlIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhvbGRlciI6ICIiLCAi
bmFtZSI6ICJnZW9jb2Rpbmdfc291cmNlIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRf
Y2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInZhbHVlcyI6
IFt7InV1aWQiOiAiN2E2MDQ4NDAtZDczMi00NjZmLWE5YjktMTUxMGNiMjEzZGFjIiwgImRlZmF1
bHQiOiB0cnVlLCAiZW5hYmxlZCI6IHRydWUsICJ2YWx1ZSI6IDI1MCwgImxhYmVsIjogImFkZHJl
c3MiLCAiaGlkZGVuIjogZmFsc2UsICJwcm9wZXJ0aWVzIjogbnVsbH0sIHsidXVpZCI6ICJhYTQy
ZDhmMi0wNjUyLTQwOTAtYTdiMS05NDg5ODlmODk3Y2EiLCAiZGVmYXVsdCI6IGZhbHNlLCAiZW5h
YmxlZCI6IHRydWUsICJ2YWx1ZSI6IDI1MSwgImxhYmVsIjogImxhdGxuZyIsICJoaWRkZW4iOiBm
YWxzZSwgInByb3BlcnRpZXMiOiBudWxsfV19XSwgIm92ZXJyaWRlcyI6IFtdLCAiZXhwb3J0X2Rh
dGUiOiAxNTM5NjEzMTk1MTc5fQ==
"""
    )