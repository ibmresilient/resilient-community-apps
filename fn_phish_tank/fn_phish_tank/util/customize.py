# (c) Copyright IBM Corp. 2010, 2019. All Rights Reserved.
# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_phish_tank"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_phish_tank package"""
    reload_params = {"package": u"fn_phish_tank",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"phish_tank_check_url"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_phish_tank"], 
                    "functions": [u"fn_phish_tank_submitt_url"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_phishtank_submit_url"], 
                    "actions": [u"Example: PhishTank: Submit URL"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     phish_tank_check_url
    #   Message Destinations:
    #     fn_phish_tank
    #   Functions:
    #     fn_phish_tank_submitt_url
    #   Workflows:
    #     example_phishtank_submit_url
    #   Rules:
    #     Example: PhishTank: Submit URL


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMSwgIm1pbm9yIjogMSwgImJ1aWxkX251bWJl
ciI6IDc2LCAidmVyc2lvbiI6ICIzMS4xLjc2In0sICJleHBvcnRfZm9ybWF0X3ZlcnNpb24iOiAy
LCAiaWQiOiAxMDEsICJleHBvcnRfZGF0ZSI6IDE1NTU1MTEzNDk0OTgsICJmaWVsZHMiOiBbeyJp
ZCI6IDUxLCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAidGV4dCI6ICJTaW11bGF0aW9uIiwgInBy
ZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMCwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRl
bnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQgaXMg
cmVhZC1vbmx5LiIsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogImMz
ZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIsICJvcGVyYXRpb25zIjogW10sICJv
cGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogdHJ1ZSwgImNo
YW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImluY2lk
ZW50L2luY190cmFpbmluZyIsICJ0ZW1wbGF0ZXMiOiBbXSwgImRlcHJlY2F0ZWQiOiBmYWxzZX0s
IHsiaWQiOiAyODksICJuYW1lIjogInBoaXNoX3RhbmtfY2hlY2tfdXJsIiwgInRleHQiOiAicGhp
c2hfdGFua19jaGVja191cmwiLCAicHJlZml4IjogbnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0
aXAiOiAiVVJMIHRvIGJlIGNoZWNrZWQgZm9yIHBoaXNoaW5nIHN0YXR1cy4iLCAicGxhY2Vob2xk
ZXIiOiAiIiwgImlucHV0X3R5cGUiOiAidGV4dCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNl
LCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJs
YW5rX29wdGlvbiI6IGZhbHNlLCAiaW50ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiZTNjOWU0NDYt
OTM1Yy00ZDdkLTliYzAtOTlhZGQ2OTMyMDk5IiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlv
bl9wZXJtcyI6IHt9LCAidmFsdWVzIjogW10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFi
bGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24v
cGhpc2hfdGFua19jaGVja191cmwiLCAidGVtcGxhdGVzIjogW10sICJkZXByZWNhdGVkIjogZmFs
c2V9XSwgImluY2lkZW50X3R5cGVzIjogW3sidXBkYXRlX2RhdGUiOiAxNTU1NTE4MDE0OTczLCAi
Y3JlYXRlX2RhdGUiOiAxNTU1NTE4MDE0OTczLCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgt
YWQzOS00YTAwMDQwNDRhYTAiLCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdl
cyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50
ZXJuYWwpIiwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImVu
YWJsZWQiOiBmYWxzZSwgInN5c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVsbCwgImhpZGRl
biI6IGZhbHNlLCAiaWQiOiAwfV0sICJwaGFzZXMiOiBbXSwgImF1dG9tYXRpY190YXNrcyI6IFtd
LCAib3ZlcnJpZGVzIjogW10sICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7Im5hbWUiOiAiZm5f
cGhpc2hfdGFuayIsICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJmbl9waGlzaF90YW5rIiwgImRlc3Rp
bmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJ1c2VycyI6IFsibmthbmRoYTFA
aW4uaWJtLmNvbSJdLCAidXVpZCI6ICJkOWNiNTk2Mi1lNTQyLTQ3MjMtOGJmMi04ZmQ3NTE5ZmUz
OTgiLCAiZXhwb3J0X2tleSI6ICJmbl9waGlzaF90YW5rIn1dLCAiYWN0aW9ucyI6IFt7ImlkIjog
MTA0LCAibmFtZSI6ICJFeGFtcGxlOiBQaGlzaFRhbms6IFN1Ym1pdCBVUkwiLCAidHlwZSI6IDEs
ICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJjb25kaXRpb25zIjogW3sibWV0aG9kIjogImVx
dWFscyIsICJmaWVsZF9uYW1lIjogImFydGlmYWN0LnR5cGUiLCAidmFsdWUiOiAiVVJMIiwgInR5
cGUiOiBudWxsLCAiZXZhbHVhdGlvbl9pZCI6IG51bGx9XSwgImF1dG9tYXRpb25zIjogW10sICJt
ZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAid29ya2Zsb3dzIjogWyJleGFtcGxlX3BoaXNodGFu
a19zdWJtaXRfdXJsIl0sICJ2aWV3X2l0ZW1zIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQw
MCwgInV1aWQiOiAiZTg0NWU1MTUtMDNmZC00NmRjLTgxNTAtNjg1MWQxOWY0NjhhIiwgImV4cG9y
dF9rZXkiOiAiRXhhbXBsZTogUGhpc2hUYW5rOiBTdWJtaXQgVVJMIiwgImxvZ2ljX3R5cGUiOiAi
YWxsIn1dLCAibGF5b3V0cyI6IFtdLCAibm90aWZpY2F0aW9ucyI6IG51bGwsICJ0aW1lZnJhbWVz
IjogbnVsbCwgImxvY2FsZSI6IG51bGwsICJpbmR1c3RyaWVzIjogbnVsbCwgInJlZ3VsYXRvcnMi
OiBudWxsLCAiZ2VvcyI6IG51bGwsICJ0YXNrX29yZGVyIjogW10sICJhY3Rpb25fb3JkZXIiOiBb
XSwgInR5cGVzIjogW10sICJzY3JpcHRzIjogW10sICJpbmNpZGVudF9hcnRpZmFjdF90eXBlcyI6
IFtdLCAid29ya2Zsb3dzIjogW3sid29ya2Zsb3dfaWQiOiA4OSwgIm5hbWUiOiAiRXhhbXBsZTog
UGhpc2hUYW5rOiBTdWJtaXQgVVJMIiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfcGhp
c2h0YW5rX3N1Ym1pdF91cmwiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAiZGVzY3JpcHRp
b24iOiAiQ2hlY2sgVVJMJ3MgYWdhaW5zdCBQaGlzaFRhbmtzKGh0dHBzOi8vd3d3LnBoaXNodGFu
ay5jb20vKSBEYXRhIGJhc2UgdG8gc2VlIFVSTCBpcyBmbGFnZ2VkIGFzIHBoaXNoaW5nIG9yIG5v
dCBwaGlzaGluZy4gYW5kIHRoZW4gdXBkYXRlIHRoZSBwaGlzaGluZyBzdGF0dXMgb24gYXJ0aWZh
Y3QgZGVzY3JpcHRpb24gZmllbGQuIiwgImNyZWF0b3JfaWQiOiAibmthbmRoYTFAaW4uaWJtLmNv
bSIsICJsYXN0X21vZGlmaWVkX2J5IjogIm5rYW5kaGExQGluLmlibS5jb20iLCAibGFzdF9tb2Rp
ZmllZF90aW1lIjogMTU1NTUxMTA1NzA2MywgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9waGlzaHRh
bmtfc3VibWl0X3VybCIsICJ1dWlkIjogIjMxMGVkMmZiLWRkYzEtNDk3OS1iNjJlLTRjNjQzNWZj
OWJjNSIsICJjb250ZW50IjogeyJ3b3JrZmxvd19pZCI6ICJleGFtcGxlX3BoaXNodGFua19zdWJt
aXRfdXJsIiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwi
Pz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAw
NTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8y
MDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAx
MDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAw
NTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5c
IiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhz
aT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFt
ZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFt
cGxlX3BoaXNodGFua19zdWJtaXRfdXJsXCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5hbWU9XCJF
eGFtcGxlOiBQaGlzaFRhbms6IFN1Ym1pdCBVUkxcIj48ZG9jdW1lbnRhdGlvbj48IVtDREFUQVtD
aGVjayBVUkwncyBhZ2FpbnN0IFBoaXNoVGFua3MoaHR0cHM6Ly93d3cucGhpc2h0YW5rLmNvbS8p
IERhdGEgYmFzZSB0byBzZWUgVVJMIGlzIGZsYWdnZWQgYXMgcGhpc2hpbmcgb3Igbm90IHBoaXNo
aW5nLiBhbmQgdGhlbiB1cGRhdGUgdGhlIHBoaXNoaW5nIHN0YXR1cyBvbiBhcnRpZmFjdCBkZXNj
cmlwdGlvbiBmaWVsZC5dXT48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFtaW43bzM8L291dGdvaW5nPjwv
c3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xNXRlNHdqXCIgbmFtZT1c
IlBoaXNoIFRhbmsgU3VibWl0dCBVUkxcIiByZXNpbGllbnQ6dHlwZT1cImZ1bmN0aW9uXCI+PGV4
dGVuc2lvbkVsZW1lbnRzPjxyZXNpbGllbnQ6ZnVuY3Rpb24gdXVpZD1cIjViOWU2NzE3LThjOWQt
NGZkMy1iZWYzLTQ2ZmFlMDg5ZjFiMVwiPntcImlucHV0c1wiOnt9LFwicG9zdF9wcm9jZXNzaW5n
X3NjcmlwdFwiOlwiIyBQYXJzaW5nIHRoZSByZXN1bHQgcmV0dXJuZWQgZnJvbSBmdW5jdGlvbiBm
bl9waGlzaF90YW5rXFxuY29udGVudF9kaWN0aW9uYXJ5ID0gcmVzdWx0cy5nZXQoJ2NvbnRlbnQn
KVxcbnJlc3VsdF9kaWN0aW9uYXJ5ID0gY29udGVudF9kaWN0aW9uYXJ5LmdldCgncmVzdWx0cycp
XFxuVVJMID0gcmVzdWx0X2RpY3Rpb25hcnkuZ2V0KCd1cmwnKVxcbnJpY2hfdGV4dF90bXAgPSBc
XFwiJmx0O2ImZ3Q7VVJMOiB7fSZsdDsvYiZndDtcXFwiLmZvcm1hdChVUkwpXFxuaWYgcmVzdWx0
X2RpY3Rpb25hcnkuZ2V0KCdpbl9kYXRhYmFzZScpOlxcbiAgICAgaWYgcmVzdWx0X2RpY3Rpb25h
cnkuZ2V0KCd2YWxpZCcpOlxcbiAgICAgICAgICByaWNoX3RleHRfdG1wICs9IFxcXCImbHQ7cCBz
dHlsZT0nY29sb3I6cmVkOycmZ3Q7Jmx0O2ImZ3Q7VkFMSUQgUEhJU0gmbHQ7L2ImZ3Q7XFxcIlxc
biAgICAgICAgICBwaGlzaF9pZCA9IHJlc3VsdF9kaWN0aW9uYXJ5LmdldCgncGhpc2hfaWQnKVxc
biAgICAgICAgICBkZXRhaWxzX3BhZ2UgPSByZXN1bHRfZGljdGlvbmFyeS5nZXQoJ3BoaXNoX2Rl
dGFpbF9wYWdlJylcXG4gICAgICAgICAgdmVyaWZpZWRfYXQgPSByZXN1bHRfZGljdGlvbmFyeS5n
ZXQoJ3ZlcmlmaWVkX2F0JylcXG4gICAgICAgICAgcmljaF90ZXh0X3RtcCArPSBcXFwiJmx0O2Jy
Jmd0O1BoaXNoIElEOiB7MH0mbHQ7L2JyJmd0OyZsdDticiZndDtQaGlzaCBEZXRhaWwgUGFnZTog
Jmx0O2EgaHJlZj0nezF9JyZndDt7MX0mbHQ7L2EmZ3Q7Jmx0Oy9iciZndDsmbHQ7YnImZ3Q7IFZl
cmlmaWVkIGF0OiB7Mn0mbHQ7YnIvJmd0OyZsdDsvcCZndDtcXFwiLmZvcm1hdChwaGlzaF9pZCwg
ZGV0YWlsc19wYWdlLCBzdHIodmVyaWZpZWRfYXQpKVxcbiAgICAgZWxzZTpcXG4gICAgICAgICAg
cmljaF90ZXh0X3RtcCArPSBcXFwiJmx0O3Agc3R5bGU9J2NvbG9yOmdyZWVuOycmZ3Q7Jmx0O2Im
Z3Q7Tk9UIFBISVNIJmx0Oy9iJmd0OyZsdDsvcCZndDtcXFwiXFxuZWxzZTpcXG4gICAgIHJpY2hf
dGV4dF90bXAgKz0gXFxcIiZsdDtwIHN0eWxlPSdjb2xvcjpncmVlbjsnJmd0OyZsdDtiJmd0O05v
dCBmb3VuZCBpbiBwaGlzaFRhbmsgRGF0YWJhc2UuJmx0Oy9iJmd0OyZsdDsvcCZndDtcXFwiXFxu
cmljaF90ZXh0ID0gaGVscGVyLmNyZWF0ZVJpY2hUZXh0KHJpY2hfdGV4dF90bXApXFxuaW5jaWRl
bnQuYWRkTm90ZShyaWNoX3RleHQpXFxuYXJ0aWZhY3QuZGVzY3JpcHRpb24gPSByaWNoX3RleHRc
XG5cXG5cXG5cXG5cIixcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLnBoaXNoX3Rh
bmtfY2hlY2tfdXJsID0gYXJ0aWZhY3QudmFsdWVcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4
dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMW1pbjdvMzwvaW5jb21pbmc+
PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wd3R6OThpPC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxz
ZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMW1pbjdvM1wiIHNvdXJjZVJlZj1cIlN0YXJ0
RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzE1dGU0d2pcIi8+PGVuZEV2
ZW50IGlkPVwiRW5kRXZlbnRfMDZ4ajVkbFwiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMHd0ejk4
aTwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzB3
dHo5OGlcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xNXRlNHdqXCIgdGFyZ2V0UmVmPVwiRW5k
RXZlbnRfMDZ4ajVkbFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4
aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRp
b24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0
YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+
PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25fMG93bzJhdFwiPjx0ZXh0PjwhW0NE
QVRBW0NoZWNrIFVSTCdzIFBoaXNoaW5nIHN0YXR1cyBmcm9tIFBoaXNoVGFuayhodHRwczovL3d3
dy5waGlzaHRhbmsuY29tLykgZGF0YSBiYXNlLCBhbmQgdXBkYXRlIHRoZSBwaGlzaGluZyBzdGF0
dXMgb24gYXJ0aWZhY3QgZGVzY3JpcHRpb24gZmllbGQuXV0+PC90ZXh0PjwvdGV4dEFubm90YXRp
b24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMTUyaHVkaFwiIHNvdXJjZVJlZj1cIlNl
cnZpY2VUYXNrXzE1dGU0d2pcIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8wb3dvMmF0XCIv
PjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxicG1u
ZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVfMVwi
PjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgaWQ9
XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lk
dGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48L2Jw
bW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5F
bGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25fMWt4
eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9XCI5
OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVs
ZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4X2Rp
XCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1c
IjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVt
ZW50PVwiU2VydmljZVRhc2tfMTV0ZTR3alwiIGlkPVwiU2VydmljZVRhc2tfMTV0ZTR3al9kaVwi
PjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCIzMTlcIiB5PVwi
MTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwi
U2VxdWVuY2VGbG93XzFtaW43bzNcIiBpZD1cIlNlcXVlbmNlRmxvd18xbWluN28zX2RpXCI+PG9t
Z2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwi
Lz48b21nZGk6d2F5cG9pbnQgeD1cIjMxOVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwi
MjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0
aD1cIjBcIiB4PVwiMjU4LjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5k
aTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzA2eGo1
ZGxcIiBpZD1cIkVuZEV2ZW50XzA2eGo1ZGxfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2
XCIgd2lkdGg9XCIzNlwiIHg9XCI1OTguNzYzMjY1MzA2MTIyNFwiIHk9XCIxODhcIi8+PGJwbW5k
aTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCI2
MTYuNzYzMjY1MzA2MTIyNFwiIHk9XCIyMjdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRp
OkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzB3
dHo5OGlcIiBpZD1cIlNlcXVlbmNlRmxvd18wd3R6OThpX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9
XCI0MTlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9p
bnQgeD1cIjU5OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6
QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNTA5
XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5k
aTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8wb3dvMmF0XCIgaWQ9XCJU
ZXh0QW5ub3RhdGlvbl8wb3dvMmF0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI2MlwiIHdp
ZHRoPVwiNDMxXCIgeD1cIjQ2MFwiIHk9XCI1OVwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5k
aTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzE1Mmh1ZGhcIiBpZD1cIkFzc29j
aWF0aW9uXzE1Mmh1ZGhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjQxOVwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMTg3XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNTk2XCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxMjFcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6
QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgInZlcnNpb24i
OiA3OX0sICJhY3Rpb25zIjogW119XSwgInJvbGVzIjogW10sICJ3b3Jrc3BhY2VzIjogW10sICJm
dW5jdGlvbnMiOiBbeyJpZCI6IDQ4LCAibmFtZSI6ICJmbl9waGlzaF90YW5rX3N1Ym1pdHRfdXJs
IiwgImRpc3BsYXlfbmFtZSI6ICJQaGlzaCBUYW5rIFN1Ym1pdHQgVVJMIiwgImRlc2NyaXB0aW9u
IjogeyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50IjogIkZ1bmN0aW9uIHRvIGNoZWNrIFVSTHMg
YWdhaW5zdCBQaGlzaFRhbmtzKGh0dHBzOi8vd3d3LnBoaXNodGFuay5jb20vKSBEYXRhYmFzZSB0
byBzZWUgVVJMIGlzIGZsYWdnZWQgYXMgcGhpc2hpbmcgb3Igbm90IHBoaXNoaW5nLiJ9LCAiZGVz
dGluYXRpb25faGFuZGxlIjogImZuX3BoaXNoX3RhbmsiLCAiZXhwb3J0X2tleSI6ICJmbl9waGlz
aF90YW5rX3N1Ym1pdHRfdXJsIiwgInV1aWQiOiAiNWI5ZTY3MTctOGM5ZC00ZmQzLWJlZjMtNDZm
YWUwODlmMWIxIiwgInZlcnNpb24iOiA1LCAiY3JlYXRvciI6IHsiaWQiOiA2LCAidHlwZSI6ICJ1
c2VyIiwgIm5hbWUiOiAibmthbmRoYTFAaW4uaWJtLmNvbSIsICJkaXNwbGF5X25hbWUiOiAiTml0
aW4gS2FuZGhhcmUgIn0sICJsYXN0X21vZGlmaWVkX2J5IjogeyJpZCI6IDYsICJ0eXBlIjogInVz
ZXIiLCAibmFtZSI6ICJua2FuZGhhMUBpbi5pYm0uY29tIiwgImRpc3BsYXlfbmFtZSI6ICJOaXRp
biBLYW5kaGFyZSAifSwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NTU1MDEwNTUxNTcsICJ2aWV3
X2l0ZW1zIjogW3sic3RlcF9sYWJlbCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQi
OiAiZmllbGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICJl
M2M5ZTQ0Ni05MzVjLTRkN2QtOWJjMC05OWFkZDY5MzIwOTkiLCAic2hvd19saW5rX2hlYWRlciI6
IGZhbHNlfV0sICJ3b3JrZmxvd3MiOiBbeyJ3b3JrZmxvd19pZCI6IDg5LCAibmFtZSI6ICJFeGFt
cGxlOiBQaGlzaFRhbms6IFN1Ym1pdCBVUkwiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBs
ZV9waGlzaHRhbmtfc3VibWl0X3VybCIsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJkZXNj
cmlwdGlvbiI6IG51bGwsICJ1dWlkIjogbnVsbCwgImFjdGlvbnMiOiBbXX1dfV19
"""
    )