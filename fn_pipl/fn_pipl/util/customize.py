# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_pipl"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_pipl package"""
    reload_params = {"package": u"fn_pipl",
                    "incident_fields": [], 
                    "action_fields": [u"pipl_artifact_type"], 
                    "function_params": [u"pipl_artifact_type", u"pipl_artifact_value"], 
                    "datatables": [u"pipl_person_data"], 
                    "message_destinations": [u"fn_pipl"], 
                    "functions": [u"pipl_search_function"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [u"Create Artifact from Pipl Data"], 
                    "workflows": [u"example_pipl_search_function"], 
                    "actions": [u"Example: Create an Artifact from Pipl data", u"Example: Pipl search function"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     pipl_artifact_type
    #   Function inputs:
    #     pipl_artifact_type
    #     pipl_artifact_value
    #   DataTables:
    #     pipl_person_data
    #   Message Destinations:
    #     fn_pipl
    #   Functions:
    #     pipl_search_function
    #   Scripts:
    #     Create Artifact from Pipl Data
    #   Workflows:
    #     example_pipl_search_function
    #   Rules:
    #     Example: Create an Artifact from Pipl data
    #     Example: Pipl search function


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogIjA2MzY0NDk2LWZmMjgt
NGU0OS1iOTc1LTgyNTYyMzc4ZjRjNSIsICJkZXNjcmlwdGlvbiI6ICJFbnJpY2hlcyB5b3VyIGxl
YWRzIChuYW1lLCBlbWFpbCBhZGRyZXNzLCBwaG9uZSBudW1iZXIsIG9yIHNvY2lhbCBtZWRpYSB1
c2VybmFtZSkgd2l0aCBQaXBsIGFuZCBnZXRzIHRoZWlyIHBlcnNvbmFsLCBwcm9mZXNzaW9uYWws
IGRlbW9ncmFwaGljLCBhbmQgY29udGFjdCBpbmZvcm1hdGlvbi4iLCAib2JqZWN0X3R5cGUiOiAi
YXJ0aWZhY3QiLCAiZXhwb3J0X2tleSI6ICJleGFtcGxlX3BpcGxfc2VhcmNoX2Z1bmN0aW9uIiwg
IndvcmtmbG93X2lkIjogNDIsICJsYXN0X21vZGlmaWVkX2J5IjogImFAYS5jb20iLCAiY29udGVu
dCI6IHsieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/Pjxk
ZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQv
TU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAw
NTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUy
NC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQv
RElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHht
bG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwi
aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3Bh
Y2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVf
cGlwbF9zZWFyY2hfZnVuY3Rpb25cIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1w
bGU6IFBpcGwgc2VhcmNoXCI+PGRvY3VtZW50YXRpb24+RW5yaWNoZXMgeW91ciBsZWFkcyAobmFt
ZSwgZW1haWwgYWRkcmVzcywgcGhvbmUgbnVtYmVyLCBvciBzb2NpYWwgbWVkaWEgdXNlcm5hbWUp
IHdpdGggUGlwbCBhbmQgZ2V0cyB0aGVpciBwZXJzb25hbCwgcHJvZmVzc2lvbmFsLCBkZW1vZ3Jh
cGhpYywgYW5kIGNvbnRhY3QgaW5mb3JtYXRpb24uPC9kb2N1bWVudGF0aW9uPjxzdGFydEV2ZW50
IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htXCI+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xZzV2NXRn
PC9vdXRnb2luZz48L3N0YXJ0RXZlbnQ+PHNlcnZpY2VUYXNrIGlkPVwiU2VydmljZVRhc2tfMHBq
ZWc5aFwiIG5hbWU9XCJQaXBsIHNlYXJjaCBmdW5jdGlvblwiIHJlc2lsaWVudDp0eXBlPVwiZnVu
Y3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlvbiB1dWlkPVwiODAz
ZGY0NzQtMmRmMC00Y2YyLTg4ODItY2YyYzUxOWNjYTc2XCI+e1wiaW5wdXRzXCI6e30sXCJwb3N0
X3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJmcm9tIGphdmEudXRpbCBpbXBvcnQgRGF0ZVxcblxcbmRl
ZiBhZGRfcm93X3RvX3BpcGxfZGF0YXRhYmxlKGRiX3RpbWVzdGFtcCwgZGJfYXJ0aWZhY3RfdmFs
dWUsIGRiX21hdGNoX25vLCBkYl9wcm9wZXJ0eSwgZGJfdmFsdWUsIGRiX21hdGNoLCBkYl9pbmZl
cnJlZCk6XFxuICBwaXBsX3BlcnNvbl9kYXRhID0gaW5jaWRlbnQuYWRkUm93KFxcXCJwaXBsX3Bl
cnNvbl9kYXRhXFxcIilcXG4gIHBpcGxfcGVyc29uX2RhdGEucGlwbF90aW1lc3RhbXAgPSBkYl90
aW1lc3RhbXBcXG4gIHBpcGxfcGVyc29uX2RhdGEucGlwbF9hcnRpZmFjdF92YWx1ZSA9IGRiX2Fy
dGlmYWN0X3ZhbHVlXFxuICBwaXBsX3BlcnNvbl9kYXRhLnBpcGxfcG9zc2libGVfbWF0Y2hfbm8g
PSBkYl9tYXRjaF9ub1xcbiAgcGlwbF9wZXJzb25fZGF0YS5waXBsX3Byb3BlcnR5ID0gZGJfcHJv
cGVydHlcXG4gIHBpcGxfcGVyc29uX2RhdGEucGlwbF92YWx1ZSA9IGRiX3ZhbHVlXFxuICBwaXBs
X3BlcnNvbl9kYXRhLnBpcGxfbWF0Y2ggPSBkYl9tYXRjaFxcbiAgcGlwbF9wZXJzb25fZGF0YS5w
aXBsX2luZmVycmVkID0gZGJfaW5mZXJyZWRcXG5cXG5pZiByZXN1bHRzLnN1Y2Nlc3M6XFxuICAj
IFNhdmUgdGhlIGpzb24gcmVzdWx0IGFzIGFuIE5vdGVcXG4gIG5vdGVUZXh0ID0gXFxcIlxcXCJc
XFwiUGlwbCBEYXRhIEFQSSByZXNwb25zZSBmb3IgYXJ0aWZhY3RfdmFsdWUge30gcmV0dXJuZWQg
e306IFxcXFxue31cXFwiXFxcIlxcXCIuZm9ybWF0KGFydGlmYWN0LnZhbHVlLCByZXN1bHRzLnBp
cGxfcmVzcG9uc2UsIHJlc3VsdHMucmF3X2RhdGEpXFxuICBpbmNpZGVudC5hZGROb3RlKG5vdGVU
ZXh0KVxcbiAgXFxuICAjIENyZWF0ZSBhIGRhdGF0YWJsZSBmcm9tIHBpcGwgcmVzcG9uc2VcXG4g
IHBvc3NpYmxlX3BlcnNvbl9jb3VudGVyID0gMFxcbiAgZm9yIHBlcnNvbiBpbiByZXN1bHRzLnBl
cnNvbl9saXN0OlxcbiAgICBcXG4gICAgIyBnZW5lcmF0ZSByZXN1bHRfaWQgYW5kIHRpbWVzdGFt
cFxcbiAgICBwb3NzaWJsZV9wZXJzb25fY291bnRlciArPSAxXFxuICAgIG5vdyA9IERhdGUoKVxc
biAgICBcXG4gICAgIyAwLTEuIFRoZSBsZXZlbCBvZiBjb25maWRlbmNlIHdlIGhhdmUgdGhhdCB0
aGlzIGlzIHRoZSBwZXJzb24geW91XHUyMDE5cmUgbG9va2luZyBmb3IuXFxuICAgIG1hdGNoID0g
c3RyKHBlcnNvbi5nZXQoXFxcIkBtYXRjaFxcXCIsIFxcXCJcXFwiKSlcXG4gICAgXFxuICAgICMg
V2hldGhlciB0aGlzIHBlcnNvbiBpcyBtYWRlIHVwIHNvbGVseSBmcm9tIGRhdGEgaW5mZXJyZWQg
Ynkgc3RhdGlzdGljYWwgYW5hbHlzaXMgZnJvbSB5b3VyIHNlYXJjaCBxdWVyeS4gXFxuICAgICMg
WW91IGNhbiBjb250cm9sIGluZmVyZW5jZSB1c2luZyB0aGUgbWluaW11bV9wcm9iYWJpbGl0eSBw
YXJhbWV0ZXIsIGFuZCBpbmZlcmVuY2Ugb2YgcGVyc29ucyB1c2luZyB0aGUgaW5mZXJfcGVyc29u
cyBwYXJhbWV0ZXIuXFxuICAgIGluZmVycmVkID0gc3RyKHBlcnNvbi5nZXQoXFxcIkBpbmZlcnJl
ZFxcXCIsIFxcXCJcXFwiKSlcXG4gICAgXFxuICAgICMgUGVyc29uIGRhdGFcXG4gICAgbmFtZXMg
PSBwZXJzb24uZ2V0KFxcXCJuYW1lc1xcXCIsIFtdKVxcbiAgICBmb3IgbmFtZSBpbiBuYW1lczpc
XG4gICAgICBhZGRfcm93X3RvX3BpcGxfZGF0YXRhYmxlKG5vdywgYXJ0aWZhY3QudmFsdWUsIHBv
c3NpYmxlX3BlcnNvbl9jb3VudGVyLCBcXFwibmFtZVxcXCIsIG5hbWUuZ2V0KFxcXCJkaXNwbGF5
XFxcIiwgXFxcIlxcXCIpLCBtYXRjaCwgaW5mZXJyZWQpXFxuICAgIFxcbiAgICBlbWFpbHMgPSBw
ZXJzb24uZ2V0KFxcXCJlbWFpbHNcXFwiLCBbXSlcXG4gICAgZm9yIGVtYWlsIGluIGVtYWlsczpc
XG4gICAgICBhZGRfcm93X3RvX3BpcGxfZGF0YXRhYmxlKG5vdywgYXJ0aWZhY3QudmFsdWUsIHBv
c3NpYmxlX3BlcnNvbl9jb3VudGVyLCBcXFwiZW1haWwgYWRkcmVzc1xcXCIsIGVtYWlsLmdldChc
XFwiYWRkcmVzc1xcXCIsIFxcXCJcXFwiKSwgbWF0Y2gsIGluZmVycmVkKVxcbiAgICAgIGFkZF9y
b3dfdG9fcGlwbF9kYXRhdGFibGUobm93LCBhcnRpZmFjdC52YWx1ZSwgcG9zc2libGVfcGVyc29u
X2NvdW50ZXIsIFxcXCJhZGRyZXNzX21kNVxcXCIsIGVtYWlsLmdldChcXFwiYWRkcmVzc19tZDVc
XFwiLCBcXFwiXFxcIiksIG1hdGNoLCBpbmZlcnJlZClcXG4gICAgXFxuICAgIHVzZXJuYW1lcyA9
IHBlcnNvbi5nZXQoXFxcInVzZXJuYW1lc1xcXCIsIFtdKVxcbiAgICBmb3IgdXNybmFtZSBpbiB1
c2VybmFtZXM6XFxuICAgICAgYWRkX3Jvd190b19waXBsX2RhdGF0YWJsZShub3csIGFydGlmYWN0
LnZhbHVlLCBwb3NzaWJsZV9wZXJzb25fY291bnRlciwgXFxcInVzZXJuYW1lXFxcIiwgdXNybmFt
ZS5nZXQoXFxcImNvbnRlbnRcXFwiLCBcXFwiXFxcIiksIG1hdGNoLCBpbmZlcnJlZClcXG4gICAg
ICBcXG4gICAgcGhvbmVzID0gcGVyc29uLmdldChcXFwicGhvbmVzXFxcIiwgW10pXFxuICAgIGZv
ciBwaG9uZSBpbiBwaG9uZXM6XFxuICAgICAgYWRkX3Jvd190b19waXBsX2RhdGF0YWJsZShub3cs
IGFydGlmYWN0LnZhbHVlLCBwb3NzaWJsZV9wZXJzb25fY291bnRlciwgXFxcInBob25lXFxcIiwg
cGhvbmUuZ2V0KFxcXCJkaXNwbGF5X2ludGVybmF0aW9uYWxcXFwiLCBcXFwiXFxcIiksIG1hdGNo
LCBpbmZlcnJlZClcXG4gICAgICBcXG4gICAgZ2VuZGVyID0gcGVyc29uLmdldChcXFwiZ2VuZGVy
XFxcIilcXG4gICAgaWYgZ2VuZGVyOlxcbiAgICAgIGFkZF9yb3dfdG9fcGlwbF9kYXRhdGFibGUo
bm93LCBhcnRpZmFjdC52YWx1ZSwgcG9zc2libGVfcGVyc29uX2NvdW50ZXIsIFxcXCJnZW5kZXJc
XFwiLCBnZW5kZXIuZ2V0KFxcXCJjb250ZW50XFxcIiwgXFxcIlxcXCIpLCBtYXRjaCwgaW5mZXJy
ZWQpXFxuICAgIFxcbiAgICBkb2IgPSBwZXJzb24uZ2V0KFxcXCJkb2JcXFwiKVxcbiAgICBpZiBk
b2I6XFxuICAgICAgYWRkX3Jvd190b19waXBsX2RhdGF0YWJsZShub3csIGFydGlmYWN0LnZhbHVl
LCBwb3NzaWJsZV9wZXJzb25fY291bnRlciwgXFxcImRvYlxcXCIsIGRvYi5nZXQoXFxcImRpc3Bs
YXlcXFwiLCBcXFwiXFxcIiksIG1hdGNoLCBpbmZlcnJlZClcXG4gICAgXFxuICAgIGFkZHJlc3Nl
cyA9IHBlcnNvbi5nZXQoXFxcImFkZHJlc3Nlc1xcXCIsIFtdKVxcbiAgICBmb3IgYWRkcmVzcyBp
biBhZGRyZXNzZXM6XFxuICAgICAgYWRkX3Jvd190b19waXBsX2RhdGF0YWJsZShub3csIGFydGlm
YWN0LnZhbHVlLCBwb3NzaWJsZV9wZXJzb25fY291bnRlciwgXFxcImFkZHJlc3NcXFwiLCBhZGRy
ZXNzLmdldChcXFwiZGlzcGxheVxcXCIsIFxcXCJcXFwiKSwgbWF0Y2gsIGluZmVycmVkKVxcbiAg
ICAgIFxcbiAgICBqb2JzID0gcGVyc29uLmdldChcXFwiam9ic1xcXCIsIFtdKVxcbiAgICBmb3Ig
am9iIGluIGpvYnM6XFxuICAgICAgYWRkX3Jvd190b19waXBsX2RhdGF0YWJsZShub3csIGFydGlm
YWN0LnZhbHVlLCBwb3NzaWJsZV9wZXJzb25fY291bnRlciwgXFxcImpvYlxcXCIsIGpvYi5nZXQo
XFxcImRpc3BsYXlcXFwiLCBcXFwiXFxcIiksIG1hdGNoLCBpbmZlcnJlZClcXG4gICAgXFxuICAg
IGVkdWNhdGlvbnMgPSBwZXJzb24uZ2V0KFxcXCJlZHVjYXRpb25zXFxcIiwgW10pXFxuICAgIGZv
ciBlZHUgaW4gZWR1Y2F0aW9uczpcXG4gICAgICBhZGRfcm93X3RvX3BpcGxfZGF0YXRhYmxlKG5v
dywgYXJ0aWZhY3QudmFsdWUsIHBvc3NpYmxlX3BlcnNvbl9jb3VudGVyLCBcXFwiZWR1Y2F0aW9u
XFxcIiwgZWR1LmdldChcXFwiZGlzcGxheVxcXCIsIFxcXCJcXFwiKSwgbWF0Y2gsIGluZmVycmVk
KVxcbiAgICAgIFxcbiAgICB1c2VyX2lkcyA9IHBlcnNvbi5nZXQoXFxcInVzZXJfaWRzXFxcIiwg
W10pXFxuICAgIGZvciB1c3JfaWQgaW4gdXNlcl9pZHM6XFxuICAgICAgYWRkX3Jvd190b19waXBs
X2RhdGF0YWJsZShub3csIGFydGlmYWN0LnZhbHVlLCBwb3NzaWJsZV9wZXJzb25fY291bnRlciwg
XFxcInVzZXJfaWRcXFwiLCB1c3JfaWQuZ2V0KFxcXCJjb250ZW50XFxcIiwgXFxcIlxcXCIpLCBt
YXRjaCwgaW5mZXJyZWQpXFxuICAgICAgXFxuICAgIGltYWdlcyA9IHBlcnNvbi5nZXQoXFxcImlt
YWdlc1xcXCIsIFtdKVxcbiAgICBmb3IgaW1hZ2UgaW4gaW1hZ2VzOlxcbiAgICAgIGltYWdlX3Vy
bCA9IFxcXCJcXFwiXFxcIiZsdDthIGhyZWY9J3swfScmZ3Q7ezB9Jmx0Oy9hJmd0O1xcXCJcXFwi
XFxcIi5mb3JtYXQoaW1hZ2UuZ2V0KFxcXCJ1cmxcXFwiLCBcXFwiXFxcIikpIGlmIGltYWdlLmdl
dChcXFwidXJsXFxcIiwgXFxcIlxcXCIpIGVsc2UgXFxcIlxcXCJcXG4gICAgICBhZGRfcm93X3Rv
X3BpcGxfZGF0YXRhYmxlKG5vdywgYXJ0aWZhY3QudmFsdWUsIHBvc3NpYmxlX3BlcnNvbl9jb3Vu
dGVyLCBcXFwiaW1hZ2VcXFwiLCBpbWFnZV91cmwsIG1hdGNoLCBpbmZlcnJlZClcXG4gICAgICBc
XG4gICAgdXJscyA9IHBlcnNvbi5nZXQoXFxcInVybHNcXFwiLCBbXSlcXG4gICAgZm9yIHVybCBp
biB1cmxzOlxcbiAgICAgIHVybF91cmwgPSBcXFwiXFxcIlxcXCImbHQ7YSBocmVmPSd7MH0nJmd0
O3swfSZsdDsvYSZndDtcXFwiXFxcIlxcXCIuZm9ybWF0KHVybC5nZXQoXFxcInVybFxcXCIsIFxc
XCJcXFwiKSkgaWYgdXJsLmdldChcXFwidXJsXFxcIiwgXFxcIlxcXCIpIGVsc2UgXFxcIlxcXCJc
XG4gICAgICBhZGRfcm93X3RvX3BpcGxfZGF0YXRhYmxlKG5vdywgYXJ0aWZhY3QudmFsdWUsIHBv
c3NpYmxlX3BlcnNvbl9jb3VudGVyLCBcXFwidXJsXFxcIiwgdXJsX3VybCwgbWF0Y2gsIGluZmVy
cmVkKVwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCIjIFJlcXVpcmVkIGlucHV0cyBhcmU6
IHRoZSBhcnRpZmFjdF90eXBlIGFuZCBhcnRpZmFjdF92YWx1ZVxcbmlucHV0cy5waXBsX2FydGlm
YWN0X3R5cGUgPSBhcnRpZmFjdC50eXBlXFxuaW5wdXRzLnBpcGxfYXJ0aWZhY3RfdmFsdWUgPSBh
cnRpZmFjdC52YWx1ZVwiLFwicmVzdWx0X25hbWVcIjpcIlwifTwvcmVzaWxpZW50OmZ1bmN0aW9u
PjwvZXh0ZW5zaW9uRWxlbWVudHM+PGluY29taW5nPlNlcXVlbmNlRmxvd18xZzV2NXRnPC9pbmNv
bWluZz48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzExM2EwYm48L291dGdvaW5nPjwvc2VydmljZVRh
c2s+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxvd18xZzV2NXRnXCIgc291cmNlUmVmPVwi
U3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiU2VydmljZVRhc2tfMHBqZWc5aFwiLz48
ZW5kRXZlbnQgaWQ9XCJFbmRFdmVudF8wNnpseHFhXCI+PGluY29taW5nPlNlcXVlbmNlRmxvd18x
MTNhMGJuPC9pbmNvbWluZz48L2VuZEV2ZW50PjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZs
b3dfMTEzYTBiblwiIHNvdXJjZVJlZj1cIlNlcnZpY2VUYXNrXzBwamVnOWhcIiB0YXJnZXRSZWY9
XCJFbmRFdmVudF8wNnpseHFhXCIvPjx0ZXh0QW5ub3RhdGlvbiBpZD1cIlRleHRBbm5vdGF0aW9u
XzFreHhpeXRcIj48dGV4dD5TdGFydCB5b3VyIHdvcmtmbG93IGhlcmU8L3RleHQ+PC90ZXh0QW5u
b3RhdGlvbj48YXNzb2NpYXRpb24gaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgc291cmNlUmVm
PVwiU3RhcnRFdmVudF8xNTVhc3htXCIgdGFyZ2V0UmVmPVwiVGV4dEFubm90YXRpb25fMWt4eGl5
dFwiLz48L3Byb2Nlc3M+PGJwbW5kaTpCUE1ORGlhZ3JhbSBpZD1cIkJQTU5EaWFncmFtXzFcIj48
YnBtbmRpOkJQTU5QbGFuZSBicG1uRWxlbWVudD1cInVuZGVmaW5lZFwiIGlkPVwiQlBNTlBsYW5l
XzFcIj48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwi
IGlkPVwiU3RhcnRFdmVudF8xNTVhc3htX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzNlwi
IHdpZHRoPVwiMzZcIiB4PVwiMTYyXCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21n
ZGM6Qm91bmRzIGhlaWdodD1cIjBcIiB3aWR0aD1cIjkwXCIgeD1cIjE1N1wiIHk9XCIyMjNcIi8+
PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5TaGFwZSBi
cG1uRWxlbWVudD1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIiBpZD1cIlRleHRBbm5vdGF0aW9u
XzFreHhpeXRfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjMwXCIgd2lkdGg9XCIxMDBcIiB4
PVwiOTlcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJw
bW5FbGVtZW50PVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0
OF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiMTY5XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwi
IHk9XCIyMjBcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIxNTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1u
RWxlbWVudD1cIlNlcnZpY2VUYXNrXzBwamVnOWhcIiBpZD1cIlNlcnZpY2VUYXNrXzBwamVnOWhf
ZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjgwXCIgd2lkdGg9XCIxMDBcIiB4PVwiMzEzXCIg
eT1cIjE2NlwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVu
dD1cIlNlcXVlbmNlRmxvd18xZzV2NXRnXCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMWc1djV0Z19kaVwi
PjxvbWdkaTp3YXlwb2ludCB4PVwiMTk4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIy
MDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCIzMTNcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIg
d2lkdGg9XCIwXCIgeD1cIjI1NS41XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9i
cG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8w
NnpseHFhXCIgaWQ9XCJFbmRFdmVudF8wNnpseHFhX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9
XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNTI2XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJl
bD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjU0NFwiIHk9XCIy
MjdcIi8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5F
ZGdlIGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzExM2EwYm5cIiBpZD1cIlNlcXVlbmNlRmxv
d18xMTNhMGJuX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI0MTNcIiB4c2k6dHlwZT1cIm9tZ2Rj
OlBvaW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjUyNlwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNDY5LjVcIiB5PVwiMTg0XCIvPjwvYnBtbmRp
OkJQTU5MYWJlbD48L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6
QlBNTkRpYWdyYW0+PC9kZWZpbml0aW9ucz4iLCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9waXBs
X3NlYXJjaF9mdW5jdGlvbiIsICJ2ZXJzaW9uIjogNDJ9LCAibGFzdF9tb2RpZmllZF90aW1lIjog
MTU0MTY1OTY3NDE0OSwgImNyZWF0b3JfaWQiOiAiYUBhLmNvbSIsICJhY3Rpb25zIjogW10sICJw
cm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3BpcGxfc2VhcmNoX2Z1bmN0aW9uIiwgIm5hbWUi
OiAiRXhhbXBsZTogUGlwbCBzZWFyY2gifV0sICJhY3Rpb25zIjogW3sibG9naWNfdHlwZSI6ICJh
bGwiLCAibmFtZSI6ICJFeGFtcGxlOiBDcmVhdGUgYW4gQXJ0aWZhY3QgZnJvbSBQaXBsIGRhdGEi
LCAidmlld19pdGVtcyI6IFt7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25p
bnZvY2F0aW9uIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRf
dXVpZCIsICJjb250ZW50IjogImM3NmM3YzY0LTU2YmQtNGFjZi04ZTk3LTJjOGFlYzE5ZmFkYiIs
ICJzdGVwX2xhYmVsIjogbnVsbH1dLCAidHlwZSI6IDEsICJ3b3JrZmxvd3MiOiBbXSwgIm9iamVj
dF90eXBlIjogInBpcGxfcGVyc29uX2RhdGEiLCAidGltZW91dF9zZWNvbmRzIjogODY0MDAsICJ1
dWlkIjogIjY5MWE3MGQyLTQwNzEtNDJjYy04NDA1LThmMjliOTdhNmYzMiIsICJhdXRvbWF0aW9u
cyI6IFt7InNjcmlwdHNfdG9fcnVuIjogIkNyZWF0ZSBBcnRpZmFjdCBmcm9tIFBpcGwgRGF0YSIs
ICJ0eXBlIjogInJ1bl9zY3JpcHQiLCAidmFsdWUiOiBudWxsfV0sICJleHBvcnRfa2V5IjogIkV4
YW1wbGU6IENyZWF0ZSBhbiBBcnRpZmFjdCBmcm9tIFBpcGwgZGF0YSIsICJjb25kaXRpb25zIjog
W10sICJpZCI6IDY0LCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXX0sIHsibG9naWNfdHlwZSI6
ICJhbGwiLCAibmFtZSI6ICJFeGFtcGxlOiBQaXBsIHNlYXJjaCBmdW5jdGlvbiIsICJ2aWV3X2l0
ZW1zIjogW10sICJ0eXBlIjogMSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV9waXBsX3NlYXJjaF9m
dW5jdGlvbiJdLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAidGltZW91dF9zZWNvbmRzIjog
ODY0MDAsICJ1dWlkIjogIjI2N2IxMmM3LThkY2QtNDk2NS05NGNhLTQ4M2Y2NGExYTUwYiIsICJh
dXRvbWF0aW9ucyI6IFtdLCAiZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBQaXBsIHNlYXJjaCBmdW5j
dGlvbiIsICJjb25kaXRpb25zIjogW3sidHlwZSI6IG51bGwsICJldmFsdWF0aW9uX2lkIjogbnVs
bCwgImZpZWxkX25hbWUiOiAiYXJ0aWZhY3QudHlwZSIsICJtZXRob2QiOiAiaW4iLCAidmFsdWUi
OiBbIkVtYWlsIFNlbmRlciIsICJFbWFpbCBTZW5kZXIgTmFtZSIsICJFbWFpbCBSZWNpcGllbnQi
LCAiVXNlciBBY2NvdW50IiwgIlN0cmluZyJdfV0sICJpZCI6IDU4LCAibWVzc2FnZV9kZXN0aW5h
dGlvbnMiOiBbXX1dLCAibGF5b3V0cyI6IFtdLCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjogMiwg
ImlkIjogMTYsICJpbmR1c3RyaWVzIjogbnVsbCwgInBoYXNlcyI6IFtdLCAiYWN0aW9uX29yZGVy
IjogW10sICJnZW9zIjogbnVsbCwgImxvY2FsZSI6IG51bGwsICJzZXJ2ZXJfdmVyc2lvbiI6IHsi
bWFqb3IiOiAzMSwgInZlcnNpb24iOiAiMzEuMC40MjU0IiwgImJ1aWxkX251bWJlciI6IDQyNTQs
ICJtaW5vciI6IDB9LCAidGltZWZyYW1lcyI6IG51bGwsICJ3b3Jrc3BhY2VzIjogW10sICJhdXRv
bWF0aWNfdGFza3MiOiBbXSwgImZ1bmN0aW9ucyI6IFt7ImRpc3BsYXlfbmFtZSI6ICJQaXBsIHNl
YXJjaCBmdW5jdGlvbiIsICJkZXNjcmlwdGlvbiI6IHsiY29udGVudCI6ICJGdW5jdGlvbiBlbnJp
Y2hlcyB5b3VyIGxlYWRzIChuYW1lLCBlbWFpbCBhZGRyZXNzLCBwaG9uZSBudW1iZXIsIG9yIHNv
Y2lhbCBtZWRpYSB1c2VybmFtZSkgd2l0aCBQaXBsIGFuZCBnZXRzIHRoZWlyIHBlcnNvbmFsLCBw
cm9mZXNzaW9uYWwsIGRlbW9ncmFwaGljLCBhbmQgY29udGFjdCBpbmZvcm1hdGlvbi4iLCAiZm9y
bWF0IjogInRleHQifSwgImNyZWF0b3IiOiB7ImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQgU3lz
YWRtaW4iLCAidHlwZSI6ICJ1c2VyIiwgImlkIjogMywgIm5hbWUiOiAiYUBhLmNvbSJ9LCAidmll
d19pdGVtcyI6IFt7InNob3dfaWYiOiBudWxsLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwg
InNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJjb250
ZW50IjogImU5YzAxNmU4LTQxZjYtNDc5MS1hOGEyLTRiNjVlY2QwYmQ4YiIsICJzdGVwX2xhYmVs
IjogbnVsbH0sIHsic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAi
c2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRl
bnQiOiAiOTkzZWIyZTMtNjVmMy00MjRkLTlhM2EtOWEzODkyMTgwZjcwIiwgInN0ZXBfbGFiZWwi
OiBudWxsfV0sICJleHBvcnRfa2V5IjogInBpcGxfc2VhcmNoX2Z1bmN0aW9uIiwgInV1aWQiOiAi
ODAzZGY0NzQtMmRmMC00Y2YyLTg4ODItY2YyYzUxOWNjYTc2IiwgImxhc3RfbW9kaWZpZWRfYnki
OiB7ImRpc3BsYXlfbmFtZSI6ICJSZXNpbGllbnQgU3lzYWRtaW4iLCAidHlwZSI6ICJ1c2VyIiwg
ImlkIjogMywgIm5hbWUiOiAiYUBhLmNvbSJ9LCAidmVyc2lvbiI6IDUsICJ3b3JrZmxvd3MiOiBb
eyJkZXNjcmlwdGlvbiI6IG51bGwsICJvYmplY3RfdHlwZSI6ICJhcnRpZmFjdCIsICJhY3Rpb25z
IjogW10sICJuYW1lIjogIkV4YW1wbGU6IFBpcGwgc2VhcmNoIiwgIndvcmtmbG93X2lkIjogNDIs
ICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3BpcGxfc2VhcmNoX2Z1bmN0aW9uIiwgInV1
aWQiOiBudWxsfV0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTQxNjQwMjU3MzMyLCAiZGVzdGlu
YXRpb25faGFuZGxlIjogImZuX3BpcGwiLCAiaWQiOiAzNSwgIm5hbWUiOiAicGlwbF9zZWFyY2hf
ZnVuY3Rpb24ifV0sICJub3RpZmljYXRpb25zIjogbnVsbCwgInJlZ3VsYXRvcnMiOiBudWxsLCAi
aW5jaWRlbnRfdHlwZXMiOiBbeyJjcmVhdGVfZGF0ZSI6IDE1NDIwNDc3NTI3MTEsICJkZXNjcmlw
dGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6
ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiaWQiOiAwLCAibmFtZSI6ICJD
dXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAidXBkYXRlX2RhdGUiOiAxNTQyMDQ3
NzUyNzExLCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAiLCAi
ZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlk
ZGVuIjogZmFsc2V9XSwgInNjcmlwdHMiOiBbeyJ1dWlkIjogIjBmZTRjYzI2LWE0MjgtNDEwMy04
NTU0LTdkMzE2NTZkNjBkZiIsICJsYW5ndWFnZSI6ICJweXRob24iLCAib2JqZWN0X3R5cGUiOiAi
cGlwbF9wZXJzb25fZGF0YSIsICJleHBvcnRfa2V5IjogIkNyZWF0ZSBBcnRpZmFjdCBmcm9tIFBp
cGwgRGF0YSIsICJhY3Rpb25zIjogW10sICJuYW1lIjogIkNyZWF0ZSBBcnRpZmFjdCBmcm9tIFBp
cGwgRGF0YSIsICJjcmVhdG9yX2lkIjogImFAYS5jb20iLCAibGFzdF9tb2RpZmllZF9ieSI6ICJh
QGEuY29tIiwgImxhc3RfbW9kaWZpZWRfdGltZSI6IDE1NDE2NDg1MTEzOTcsICJzY3JpcHRfdGV4
dCI6ICIjIENyZWF0ZSBhbiBhcnRpZmFjdCBiYXNlZCBmcm9tIGEgc2VsZWN0ZWQgcm93IGluIFBp
cGwgcG9zc2libGUgcGVyc29uIGRhdGEuXG5cbiMgYXJ0aWZhY3QgZGVzY3JpcHRpb25cbmFydGlm
YWN0X2Rlc2NyaXB0aW9uID0gXCJcIlwiQ3JlYXRlZCBieSBQaXBsIERhdGEgcmVzdWx0cyBnZW5l
cmF0ZWQgZm9yIGFydGlmYWN0X3ZhbHVlIHt9XCJcIlwiLmZvcm1hdChyb3cucGlwbF9hcnRpZmFj
dF92YWx1ZSlcblxuIyBhcnRpZmFjdCB0eXBlIC0gcmVhZCBpdCBmcm9tIHRoZSBtZW51IGl0ZW0n
cyBhY3Rpdml0eSBmaWVsZFxuYXJ0aWZhY3RfdHlwZSA9IHJ1bGUucHJvcGVydGllcy5waXBsX2Fy
dGlmYWN0X3R5cGVcblxuIyBhcnRpZmFjdCB2YWx1ZVxuIyBwaXBsX3ZhbHVlIGNvbHVtbiBpbiBQ
aXAgcG9zc2libGUgcGVyc29uIGRhdGEgaXMgaW4gdGhpcyBmb3JtYXQge3UnZm9ybWF0JzogdSdo
dG1sJywgdSdjb250ZW50JzogdSd5b3VyIGFwaSBkYXRhJ30gXG5yaWNoX3RleHRfcGlwbF92YWx1
ZSA9IHJvdy5waXBsX3ZhbHVlXG5hcnRpZmFjdF92YWx1ZSA9IHJpY2hfdGV4dF9waXBsX3ZhbHVl
LmdldChcImNvbnRlbnRcIilcblxuIyBjcmVhdGUgYW4gYXJ0aWZhY3RcbmlmIGFydGlmYWN0X3Zh
bHVlOlxuICBpbmNpZGVudC5hZGRBcnRpZmFjdChhcnRpZmFjdF90eXBlLCBhcnRpZmFjdF92YWx1
ZSwgYXJ0aWZhY3RfZGVzY3JpcHRpb24pIiwgImlkIjogMiwgImRlc2NyaXB0aW9uIjogIlNjcmlw
dCBjcmVhdGVzIGFuIGFydGlmYWN0IGJhc2VkIGZyb20gYSBzZWxlY3RlZCByb3cgaW4gUGlwbCBw
b3NzaWJsZSBwZXJzb24gZGF0YS4ifV0sICJ0eXBlcyI6IFt7ImRpc3BsYXlfbmFtZSI6ICJQaXBs
IHBlcnNvbiBkYXRhIiwgInV1aWQiOiAiNWEzZTU2MGQtZjllMC00ZWQ5LWJmMzItMzM3ZWFiOGU4
MzRkIiwgInR5cGVfaWQiOiA4LCAiZmllbGRzIjogeyJwaXBsX2luZmVycmVkIjogeyJvcGVyYXRp
b25zIjogW10sICJ0eXBlX2lkIjogMTAwNCwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6
ICJJbmZlcnJlZCIsICJibGFua19vcHRpb24iOiB0cnVlLCAicHJlZml4IjogbnVsbCwgImNoYW5n
ZWFibGUiOiB0cnVlLCAiaWQiOiAyODEsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiMDE4
MmM4YTEtYTYxOC00YzI0LTliNjItNTI2ZWM1NTBjMDNhIiwgImNob3NlbiI6IHRydWUsICJpbnB1
dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICIiLCAid2lkdGgiOiA0MSwgImludGVybmFsIjog
ZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6
ICJwaXBsX3BlcnNvbl9kYXRhL3BpcGxfaW5mZXJyZWQiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBm
YWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogInBpcGxfaW5mZXJyZWQiLCAiZGVwcmVj
YXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMi
OiBbXSwgIm9yZGVyIjogNn0sICJwaXBsX3RpbWVzdGFtcCI6IHsib3BlcmF0aW9ucyI6IFtdLCAi
dHlwZV9pZCI6IDEwMDQsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInRleHQiOiAiVGltZXN0YW1w
IiwgImJsYW5rX29wdGlvbiI6IHRydWUsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRy
dWUsICJpZCI6IDI4MiwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICJjMjRjZWMxMi1mNGM4
LTRmODUtOTMyNC0yNTk2N2UwNGU3ZGEiLCAiY2hvc2VuIjogdHJ1ZSwgImlucHV0X3R5cGUiOiAi
ZGF0ZXRpbWVwaWNrZXIiLCAidG9vbHRpcCI6ICIiLCAid2lkdGgiOiAxMTUsICJpbnRlcm5hbCI6
IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXki
OiAicGlwbF9wZXJzb25fZGF0YS9waXBsX3RpbWVzdGFtcCIsICJoaWRlX25vdGlmaWNhdGlvbiI6
IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAicGlwbF90aW1lc3RhbXAiLCAiZGVw
cmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1
ZXMiOiBbXSwgIm9yZGVyIjogMH0sICJwaXBsX3Bvc3NpYmxlX21hdGNoX25vIjogeyJvcGVyYXRp
b25zIjogW10sICJ0eXBlX2lkIjogMTAwNCwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6
ICJQb3NzaWJsZSBwZW9wbGUgbWF0Y2ggbm8uIiwgImJsYW5rX29wdGlvbiI6IHRydWUsICJwcmVm
aXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDI4MywgInJlYWRfb25seSI6IGZh
bHNlLCAidXVpZCI6ICI3ZmI1Y2M4YS1iYzQxLTQ2Y2MtYjY3NC0xZDA4MzU4ZThkYzkiLCAiY2hv
c2VuIjogdHJ1ZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIiIsICJ3aWR0aCI6
IDQ1LCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjog
W10sICJleHBvcnRfa2V5IjogInBpcGxfcGVyc29uX2RhdGEvcGlwbF9wb3NzaWJsZV9tYXRjaF9u
byIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUi
OiAicGlwbF9wb3NzaWJsZV9tYXRjaF9ubyIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0
X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdLCAib3JkZXIiOiA0fSwgInBp
cGxfcHJvcGVydHkiOiB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMDA0LCAib3BlcmF0
aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogIlByb3BlcnR5IiwgImJsYW5rX29wdGlvbiI6IHRydWUs
ICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDI3OCwgInJlYWRfb25s
eSI6IGZhbHNlLCAidXVpZCI6ICJhYTRjYjY4Ni1lNmEyLTQ1ZjktOGVhNi00NTk4OTJiNzI3NjMi
LCAiY2hvc2VuIjogdHJ1ZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIiIsICJ3
aWR0aCI6IDUwLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxh
dGVzIjogW10sICJleHBvcnRfa2V5IjogInBpcGxfcGVyc29uX2RhdGEvcGlwbF9wcm9wZXJ0eSIs
ICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAi
cGlwbF9wcm9wZXJ0eSIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9z
ZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtdLCAib3JkZXIiOiAyfSwgInBpcGxfbWF0Y2giOiB7
Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMDA0LCAib3BlcmF0aW9uX3Blcm1zIjoge30s
ICJ0ZXh0IjogIk1hdGNoIiwgImJsYW5rX29wdGlvbiI6IHRydWUsICJwcmVmaXgiOiBudWxsLCAi
Y2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDI4MCwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6
ICI2YWM5NWU2ZS1mYjM1LTQzMWYtYTU5OS1kZGU1YTM3NmY3OGUiLCAiY2hvc2VuIjogdHJ1ZSwg
ImlucHV0X3R5cGUiOiAidGV4dCIsICJ0b29sdGlwIjogIiIsICJ3aWR0aCI6IDMzLCAiaW50ZXJu
YWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBvcnRf
a2V5IjogInBpcGxfcGVyc29uX2RhdGEvcGlwbF9tYXRjaCIsICJoaWRlX25vdGlmaWNhdGlvbiI6
IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAicGlwbF9tYXRjaCIsICJkZXByZWNh
dGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6
IFtdLCAib3JkZXIiOiA1fSwgInBpcGxfdmFsdWUiOiB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVf
aWQiOiAxMDA0LCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogIlZhbHVlIiwgImJsYW5r
X29wdGlvbiI6IHRydWUsICJwcmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6
IDI3OSwgInJlYWRfb25seSI6IGZhbHNlLCAidXVpZCI6ICI5OWM4MDdjYi03ZjJlLTQyYjUtYWM0
NC0wMmJjZmQzYzhiNjkiLCAiY2hvc2VuIjogdHJ1ZSwgImlucHV0X3R5cGUiOiAidGV4dGFyZWEi
LCAidG9vbHRpcCI6ICIiLCAid2lkdGgiOiAxNjMsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90
ZXh0IjogdHJ1ZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJwaXBsX3BlcnNvbl9k
YXRhL3BpcGxfdmFsdWUiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVy
IjogIiIsICJuYW1lIjogInBpcGxfdmFsdWUiLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZGVmYXVs
dF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgIm9yZGVyIjogM30sICJw
aXBsX2FydGlmYWN0X3ZhbHVlIjogeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTAwNCwg
Im9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidGV4dCI6ICJBcnRpZmFjdCB2YWx1ZSIsICJibGFua19v
cHRpb24iOiB0cnVlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAiaWQiOiAy
ODQsICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiOWI0YmFjYzUtM2Q0MC00YjcwLTk0YTAt
OGNlY2Q4MTQwYmIyIiwgImNob3NlbiI6IHRydWUsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9v
bHRpcCI6ICIiLCAid2lkdGgiOiAxNDQsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0Ijog
ZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAicGlwbF9wZXJzb25fZGF0YS9w
aXBsX2FydGlmYWN0X3ZhbHVlIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJwbGFjZWhv
bGRlciI6ICIiLCAibmFtZSI6ICJwaXBsX2FydGlmYWN0X3ZhbHVlIiwgImRlcHJlY2F0ZWQiOiBm
YWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjogW10sICJv
cmRlciI6IDF9fSwgInBhcmVudF90eXBlcyI6IFsiaW5jaWRlbnQiXSwgInR5cGVfbmFtZSI6ICJw
aXBsX3BlcnNvbl9kYXRhIiwgImV4cG9ydF9rZXkiOiAicGlwbF9wZXJzb25fZGF0YSIsICJmb3Jf
Y3VzdG9tX2ZpZWxkcyI6IGZhbHNlLCAiYWN0aW9ucyI6IFtdLCAiaWQiOiBudWxsLCAiZm9yX2Fj
dGlvbnMiOiBmYWxzZSwgImZvcl9ub3RpZmljYXRpb25zIjogZmFsc2UsICJzY3JpcHRzIjogW10s
ICJwcm9wZXJ0aWVzIjogeyJmb3Jfd2hvIjogW10sICJjYW5fZGVzdHJveSI6IGZhbHNlLCAiY2Fu
X2NyZWF0ZSI6IGZhbHNlfX1dLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbeyJ1dWlkIjogImNj
NWM1YWQ4LWNkMjQtNDBlOC1hZDdhLTU0NmQzYWYzY2QyMSIsICJleHBvcnRfa2V5IjogImZuX3Bp
cGwiLCAibmFtZSI6ICJmbl9waXBsIiwgImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAicHJvZ3JhbW1h
dGljX25hbWUiOiAiZm5fcGlwbCIsICJleHBlY3RfYWNrIjogdHJ1ZSwgInVzZXJzIjogWyJhQGEu
Y29tIl19XSwgImluY2lkZW50X2FydGlmYWN0X3R5cGVzIjogW10sICJyb2xlcyI6IFtdLCAiZmll
bGRzIjogW3sib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDAsICJvcGVyYXRpb25fcGVybXMi
OiB7fSwgInRleHQiOiAiU2ltdWxhdGlvbiIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZp
eCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMzgsICJyZWFkX29ubHkiOiB0cnVl
LCAidXVpZCI6ICJjM2YwZTNlZC0yMWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAiY2hvc2Vu
IjogZmFsc2UsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRo
ZSBpbmNpZGVudCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBm
aWVsZCBpcyByZWFkLW9ubHkuIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxz
ZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5pbmci
LCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwgImRl
cHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFs
dWVzIjogW119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiA2LCAib3BlcmF0aW9uX3Bl
cm1zIjoge30sICJ0ZXh0IjogIkFydGlmYWN0IHR5cGUiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2Us
ICJwcmVmaXgiOiAicHJvcGVydGllcyIsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMjg1LCAi
cmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogImM3NmM3YzY0LTU2YmQtNGFjZi04ZTk3LTJjOGFl
YzE5ZmFkYiIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAic2VsZWN0IiwgInRvb2x0
aXAiOiAiIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRl
cyI6IFtdLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZvY2F0aW9uL3BpcGxfYXJ0aWZhY3RfdHlw
ZSIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUi
OiAicGlwbF9hcnRpZmFjdF90eXBlIiwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hv
c2VuX2J5X3NlcnZlciI6IGZhbHNlLCAicmVxdWlyZWQiOiAiYWx3YXlzIiwgInZhbHVlcyI6IFt7
InV1aWQiOiAiODllMzU5NDMtMjgxYS00OGY5LTkzOTgtOWNiOTZjY2EwZjVhIiwgImRlZmF1bHQi
OiB0cnVlLCAiZW5hYmxlZCI6IHRydWUsICJ2YWx1ZSI6IDI1MCwgImxhYmVsIjogIkVtYWlsIFJl
Y2lwaWVudCIsICJoaWRkZW4iOiBmYWxzZSwgInByb3BlcnRpZXMiOiBudWxsfSwgeyJ1dWlkIjog
ImM0ZTY5OTkwLTljNTItNDM1Yy04N2Y4LWY5ZDEwZTEzMTM5MSIsICJkZWZhdWx0IjogZmFsc2Us
ICJlbmFibGVkIjogdHJ1ZSwgInZhbHVlIjogMjUxLCAibGFiZWwiOiAiRW1haWwgU2VuZGVyIiwg
ImhpZGRlbiI6IGZhbHNlLCAicHJvcGVydGllcyI6IG51bGx9LCB7InV1aWQiOiAiODIxZWE5ZGYt
YzY5MC00YWYyLThmMjItZDMyYTk4MjE4YmNkIiwgImRlZmF1bHQiOiBmYWxzZSwgImVuYWJsZWQi
OiB0cnVlLCAidmFsdWUiOiAyNTIsICJsYWJlbCI6ICJFbWFpbCBTZW5kZXIgTmFtZSIsICJoaWRk
ZW4iOiBmYWxzZSwgInByb3BlcnRpZXMiOiBudWxsfSwgeyJ1dWlkIjogIjQ4ODIxY2JiLThhZDgt
NDNkZS1iOWQ2LTkzZjdiMDVjYzJjYyIsICJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1
ZSwgInZhbHVlIjogMjUzLCAibGFiZWwiOiAiVXNlciBBY2NvdW50IiwgImhpZGRlbiI6IGZhbHNl
LCAicHJvcGVydGllcyI6IG51bGx9LCB7InV1aWQiOiAiYzU1M2UzMTMtYWUwZC00ZGE2LTg2YWMt
MzNiMTFlMTIyZDU1IiwgImRlZmF1bHQiOiBmYWxzZSwgImVuYWJsZWQiOiB0cnVlLCAidmFsdWUi
OiAyNTcsICJsYWJlbCI6ICJNYWx3YXJlIE1ENSBIYXNoIiwgImhpZGRlbiI6IGZhbHNlLCAicHJv
cGVydGllcyI6IG51bGx9XX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3Bl
cmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogInBpcGxfYXJ0aWZhY3RfdHlwZSIsICJibGFua19v
cHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjog
MzAxLCAicmVhZF9vbmx5IjogZmFsc2UsICJ1dWlkIjogImU5YzAxNmU4LTQxZjYtNDc5MS1hOGEy
LTRiNjVlY2QwYmQ4YiIsICJjaG9zZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJ0
b29sdGlwIjogIiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1w
bGF0ZXMiOiBbXSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9waXBsX2FydGlmYWN0X3R5cGUi
LCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjog
InBpcGxfYXJ0aWZhY3RfdHlwZSIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nl
bl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInJlcXVpcmVkIjogImFsd2F5cyIsICJ2YWx1ZXMiOiBbXX0s
IHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30s
ICJ0ZXh0IjogInBpcGxfYXJ0aWZhY3RfdmFsdWUiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJw
cmVmaXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDMwMiwgInJlYWRfb25seSI6
IGZhbHNlLCAidXVpZCI6ICI5OTNlYjJlMy02NWYzLTQyNGQtOWEzYS05YTM4OTIxODBmNzAiLCAi
Y2hvc2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogInRleHQiLCAidG9vbHRpcCI6ICIiLCAiaW50
ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAidGVtcGxhdGVzIjogW10sICJleHBv
cnRfa2V5IjogIl9fZnVuY3Rpb24vcGlwbF9hcnRpZmFjdF92YWx1ZSIsICJoaWRlX25vdGlmaWNh
dGlvbiI6IGZhbHNlLCAicGxhY2Vob2xkZXIiOiAiIiwgIm5hbWUiOiAicGlwbF9hcnRpZmFjdF92
YWx1ZSIsICJkZXByZWNhdGVkIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZSwgInJlcXVpcmVkIjogImFsd2F5cyIsICJ2YWx1ZXMiOiBbXX1dLCAib3ZlcnJpZGVzIjog
W10sICJleHBvcnRfZGF0ZSI6IDE1NDE2NTk5ODExNTZ9
"""
    )